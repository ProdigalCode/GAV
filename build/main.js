(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
!function() {
  var d3 = {
    version: "3.4.8"
  };
  if (!Date.now) Date.now = function() {
    return +new Date();
  };
  var d3_arraySlice = [].slice, d3_array = function(list) {
    return d3_arraySlice.call(list);
  };
  var d3_document = document, d3_documentElement = d3_document.documentElement, d3_window = window;
  try {
    d3_array(d3_documentElement.childNodes)[0].nodeType;
  } catch (e) {
    d3_array = function(list) {
      var i = list.length, array = new Array(i);
      while (i--) array[i] = list[i];
      return array;
    };
  }
  try {
    d3_document.createElement("div").style.setProperty("opacity", 0, "");
  } catch (error) {
    var d3_element_prototype = d3_window.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = d3_window.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;
    d3_element_prototype.setAttribute = function(name, value) {
      d3_element_setAttribute.call(this, name, value + "");
    };
    d3_element_prototype.setAttributeNS = function(space, local, value) {
      d3_element_setAttributeNS.call(this, space, local, value + "");
    };
    d3_style_prototype.setProperty = function(name, value, priority) {
      d3_style_setProperty.call(this, name, value + "", priority);
    };
  }
  d3.ascending = d3_ascending;
  function d3_ascending(a, b) {
    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
  }
  d3.descending = function(a, b) {
    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
  };
  d3.min = function(array, f) {
    var i = -1, n = array.length, a, b;
    if (arguments.length === 1) {
      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;
      while (++i < n) if ((b = array[i]) != null && a > b) a = b;
    } else {
      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;
    }
    return a;
  };
  d3.max = function(array, f) {
    var i = -1, n = array.length, a, b;
    if (arguments.length === 1) {
      while (++i < n && !((a = array[i]) != null && a <= a)) a = undefined;
      while (++i < n) if ((b = array[i]) != null && b > a) a = b;
    } else {
      while (++i < n && !((a = f.call(array, array[i], i)) != null && a <= a)) a = undefined;
      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;
    }
    return a;
  };
  d3.extent = function(array, f) {
    var i = -1, n = array.length, a, b, c;
    if (arguments.length === 1) {
      while (++i < n && !((a = c = array[i]) != null && a <= a)) a = c = undefined;
      while (++i < n) if ((b = array[i]) != null) {
        if (a > b) a = b;
        if (c < b) c = b;
      }
    } else {
      while (++i < n && !((a = c = f.call(array, array[i], i)) != null && a <= a)) a = undefined;
      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {
        if (a > b) a = b;
        if (c < b) c = b;
      }
    }
    return [ a, c ];
  };
  d3.sum = function(array, f) {
    var s = 0, n = array.length, a, i = -1;
    if (arguments.length === 1) {
      while (++i < n) if (!isNaN(a = +array[i])) s += a;
    } else {
      while (++i < n) if (!isNaN(a = +f.call(array, array[i], i))) s += a;
    }
    return s;
  };
  function d3_number(x) {
    return x != null && !isNaN(x);
  }
  d3.mean = function(array, f) {
    var s = 0, n = array.length, a, i = -1, j = n;
    if (arguments.length === 1) {
      while (++i < n) if (d3_number(a = array[i])) s += a; else --j;
    } else {
      while (++i < n) if (d3_number(a = f.call(array, array[i], i))) s += a; else --j;
    }
    return j ? s / j : undefined;
  };
  d3.quantile = function(values, p) {
    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;
    return e ? v + e * (values[h] - v) : v;
  };
  d3.median = function(array, f) {
    if (arguments.length > 1) array = array.map(f);
    array = array.filter(d3_number);
    return array.length ? d3.quantile(array.sort(d3_ascending), .5) : undefined;
  };
  function d3_bisector(compare) {
    return {
      left: function(a, x, lo, hi) {
        if (arguments.length < 3) lo = 0;
        if (arguments.length < 4) hi = a.length;
        while (lo < hi) {
          var mid = lo + hi >>> 1;
          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;
        }
        return lo;
      },
      right: function(a, x, lo, hi) {
        if (arguments.length < 3) lo = 0;
        if (arguments.length < 4) hi = a.length;
        while (lo < hi) {
          var mid = lo + hi >>> 1;
          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;
        }
        return lo;
      }
    };
  }
  var d3_bisect = d3_bisector(d3_ascending);
  d3.bisectLeft = d3_bisect.left;
  d3.bisect = d3.bisectRight = d3_bisect.right;
  d3.bisector = function(f) {
    return d3_bisector(f.length === 1 ? function(d, x) {
      return d3_ascending(f(d), x);
    } : f);
  };
  d3.shuffle = function(array) {
    var m = array.length, t, i;
    while (m) {
      i = Math.random() * m-- | 0;
      t = array[m], array[m] = array[i], array[i] = t;
    }
    return array;
  };
  d3.permute = function(array, indexes) {
    var i = indexes.length, permutes = new Array(i);
    while (i--) permutes[i] = array[indexes[i]];
    return permutes;
  };
  d3.pairs = function(array) {
    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);
    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];
    return pairs;
  };
  d3.zip = function() {
    if (!(n = arguments.length)) return [];
    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {
      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {
        zip[j] = arguments[j][i];
      }
    }
    return zips;
  };
  function d3_zipLength(d) {
    return d.length;
  }
  d3.transpose = function(matrix) {
    return d3.zip.apply(d3, matrix);
  };
  d3.keys = function(map) {
    var keys = [];
    for (var key in map) keys.push(key);
    return keys;
  };
  d3.values = function(map) {
    var values = [];
    for (var key in map) values.push(map[key]);
    return values;
  };
  d3.entries = function(map) {
    var entries = [];
    for (var key in map) entries.push({
      key: key,
      value: map[key]
    });
    return entries;
  };
  d3.merge = function(arrays) {
    var n = arrays.length, m, i = -1, j = 0, merged, array;
    while (++i < n) j += arrays[i].length;
    merged = new Array(j);
    while (--n >= 0) {
      array = arrays[n];
      m = array.length;
      while (--m >= 0) {
        merged[--j] = array[m];
      }
    }
    return merged;
  };
  var abs = Math.abs;
  d3.range = function(start, stop, step) {
    if (arguments.length < 3) {
      step = 1;
      if (arguments.length < 2) {
        stop = start;
        start = 0;
      }
    }
    if ((stop - start) / step === Infinity) throw new Error("infinite range");
    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;
    start *= k, stop *= k, step *= k;
    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);
    return range;
  };
  function d3_range_integerScale(x) {
    var k = 1;
    while (x * k % 1) k *= 10;
    return k;
  }
  function d3_class(ctor, properties) {
    try {
      for (var key in properties) {
        Object.defineProperty(ctor.prototype, key, {
          value: properties[key],
          enumerable: false
        });
      }
    } catch (e) {
      ctor.prototype = properties;
    }
  }
  d3.map = function(object) {
    var map = new d3_Map();
    if (object instanceof d3_Map) object.forEach(function(key, value) {
      map.set(key, value);
    }); else for (var key in object) map.set(key, object[key]);
    return map;
  };
  function d3_Map() {}
  d3_class(d3_Map, {
    has: d3_map_has,
    get: function(key) {
      return this[d3_map_prefix + key];
    },
    set: function(key, value) {
      return this[d3_map_prefix + key] = value;
    },
    remove: d3_map_remove,
    keys: d3_map_keys,
    values: function() {
      var values = [];
      this.forEach(function(key, value) {
        values.push(value);
      });
      return values;
    },
    entries: function() {
      var entries = [];
      this.forEach(function(key, value) {
        entries.push({
          key: key,
          value: value
        });
      });
      return entries;
    },
    size: d3_map_size,
    empty: d3_map_empty,
    forEach: function(f) {
      for (var key in this) if (key.charCodeAt(0) === d3_map_prefixCode) f.call(this, key.substring(1), this[key]);
    }
  });
  var d3_map_prefix = "\x00", d3_map_prefixCode = d3_map_prefix.charCodeAt(0);
  function d3_map_has(key) {
    return d3_map_prefix + key in this;
  }
  function d3_map_remove(key) {
    key = d3_map_prefix + key;
    return key in this && delete this[key];
  }
  function d3_map_keys() {
    var keys = [];
    this.forEach(function(key) {
      keys.push(key);
    });
    return keys;
  }
  function d3_map_size() {
    var size = 0;
    for (var key in this) if (key.charCodeAt(0) === d3_map_prefixCode) ++size;
    return size;
  }
  function d3_map_empty() {
    for (var key in this) if (key.charCodeAt(0) === d3_map_prefixCode) return false;
    return true;
  }
  d3.nest = function() {
    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;
    function map(mapType, array, depth) {
      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;
      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;
      while (++i < n) {
        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {
          values.push(object);
        } else {
          valuesByKey.set(keyValue, [ object ]);
        }
      }
      if (mapType) {
        object = mapType();
        setter = function(keyValue, values) {
          object.set(keyValue, map(mapType, values, depth));
        };
      } else {
        object = {};
        setter = function(keyValue, values) {
          object[keyValue] = map(mapType, values, depth);
        };
      }
      valuesByKey.forEach(setter);
      return object;
    }
    function entries(map, depth) {
      if (depth >= keys.length) return map;
      var array = [], sortKey = sortKeys[depth++];
      map.forEach(function(key, keyMap) {
        array.push({
          key: key,
          values: entries(keyMap, depth)
        });
      });
      return sortKey ? array.sort(function(a, b) {
        return sortKey(a.key, b.key);
      }) : array;
    }
    nest.map = function(array, mapType) {
      return map(mapType, array, 0);
    };
    nest.entries = function(array) {
      return entries(map(d3.map, array, 0), 0);
    };
    nest.key = function(d) {
      keys.push(d);
      return nest;
    };
    nest.sortKeys = function(order) {
      sortKeys[keys.length - 1] = order;
      return nest;
    };
    nest.sortValues = function(order) {
      sortValues = order;
      return nest;
    };
    nest.rollup = function(f) {
      rollup = f;
      return nest;
    };
    return nest;
  };
  d3.set = function(array) {
    var set = new d3_Set();
    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);
    return set;
  };
  function d3_Set() {}
  d3_class(d3_Set, {
    has: d3_map_has,
    add: function(value) {
      this[d3_map_prefix + value] = true;
      return value;
    },
    remove: function(value) {
      value = d3_map_prefix + value;
      return value in this && delete this[value];
    },
    values: d3_map_keys,
    size: d3_map_size,
    empty: d3_map_empty,
    forEach: function(f) {
      for (var value in this) if (value.charCodeAt(0) === d3_map_prefixCode) f.call(this, value.substring(1));
    }
  });
  d3.behavior = {};
  d3.rebind = function(target, source) {
    var i = 1, n = arguments.length, method;
    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);
    return target;
  };
  function d3_rebind(target, source, method) {
    return function() {
      var value = method.apply(source, arguments);
      return value === source ? target : value;
    };
  }
  function d3_vendorSymbol(object, name) {
    if (name in object) return name;
    name = name.charAt(0).toUpperCase() + name.substring(1);
    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {
      var prefixName = d3_vendorPrefixes[i] + name;
      if (prefixName in object) return prefixName;
    }
  }
  var d3_vendorPrefixes = [ "webkit", "ms", "moz", "Moz", "o", "O" ];
  function d3_noop() {}
  d3.dispatch = function() {
    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;
    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
    return dispatch;
  };
  function d3_dispatch() {}
  d3_dispatch.prototype.on = function(type, listener) {
    var i = type.indexOf("."), name = "";
    if (i >= 0) {
      name = type.substring(i + 1);
      type = type.substring(0, i);
    }
    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);
    if (arguments.length === 2) {
      if (listener == null) for (type in this) {
        if (this.hasOwnProperty(type)) this[type].on(name, null);
      }
      return this;
    }
  };
  function d3_dispatch_event(dispatch) {
    var listeners = [], listenerByName = new d3_Map();
    function event() {
      var z = listeners, i = -1, n = z.length, l;
      while (++i < n) if (l = z[i].on) l.apply(this, arguments);
      return dispatch;
    }
    event.on = function(name, listener) {
      var l = listenerByName.get(name), i;
      if (arguments.length < 2) return l && l.on;
      if (l) {
        l.on = null;
        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));
        listenerByName.remove(name);
      }
      if (listener) listeners.push(listenerByName.set(name, {
        on: listener
      }));
      return dispatch;
    };
    return event;
  }
  d3.event = null;
  function d3_eventPreventDefault() {
    d3.event.preventDefault();
  }
  function d3_eventSource() {
    var e = d3.event, s;
    while (s = e.sourceEvent) e = s;
    return e;
  }
  function d3_eventDispatch(target) {
    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;
    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);
    dispatch.of = function(thiz, argumentz) {
      return function(e1) {
        try {
          var e0 = e1.sourceEvent = d3.event;
          e1.target = target;
          d3.event = e1;
          dispatch[e1.type].apply(thiz, argumentz);
        } finally {
          d3.event = e0;
        }
      };
    };
    return dispatch;
  }
  d3.requote = function(s) {
    return s.replace(d3_requote_re, "\\$&");
  };
  var d3_requote_re = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
  var d3_subclass = {}.__proto__ ? function(object, prototype) {
    object.__proto__ = prototype;
  } : function(object, prototype) {
    for (var property in prototype) object[property] = prototype[property];
  };
  function d3_selection(groups) {
    d3_subclass(groups, d3_selectionPrototype);
    return groups;
  }
  var d3_select = function(s, n) {
    return n.querySelector(s);
  }, d3_selectAll = function(s, n) {
    return n.querySelectorAll(s);
  }, d3_selectMatcher = d3_documentElement[d3_vendorSymbol(d3_documentElement, "matchesSelector")], d3_selectMatches = function(n, s) {
    return d3_selectMatcher.call(n, s);
  };
  if (typeof Sizzle === "function") {
    d3_select = function(s, n) {
      return Sizzle(s, n)[0] || null;
    };
    d3_selectAll = Sizzle;
    d3_selectMatches = Sizzle.matchesSelector;
  }
  d3.selection = function() {
    return d3_selectionRoot;
  };
  var d3_selectionPrototype = d3.selection.prototype = [];
  d3_selectionPrototype.select = function(selector) {
    var subgroups = [], subgroup, subnode, group, node;
    selector = d3_selection_selector(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      subgroups.push(subgroup = []);
      subgroup.parentNode = (group = this[j]).parentNode;
      for (var i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          subgroup.push(subnode = selector.call(node, node.__data__, i, j));
          if (subnode && "__data__" in node) subnode.__data__ = node.__data__;
        } else {
          subgroup.push(null);
        }
      }
    }
    return d3_selection(subgroups);
  };
  function d3_selection_selector(selector) {
    return typeof selector === "function" ? selector : function() {
      return d3_select(selector, this);
    };
  }
  d3_selectionPrototype.selectAll = function(selector) {
    var subgroups = [], subgroup, node;
    selector = d3_selection_selectorAll(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));
          subgroup.parentNode = node;
        }
      }
    }
    return d3_selection(subgroups);
  };
  function d3_selection_selectorAll(selector) {
    return typeof selector === "function" ? selector : function() {
      return d3_selectAll(selector, this);
    };
  }
  var d3_nsPrefix = {
    svg: "http://www.w3.org/2000/svg",
    xhtml: "http://www.w3.org/1999/xhtml",
    xlink: "http://www.w3.org/1999/xlink",
    xml: "http://www.w3.org/XML/1998/namespace",
    xmlns: "http://www.w3.org/2000/xmlns/"
  };
  d3.ns = {
    prefix: d3_nsPrefix,
    qualify: function(name) {
      var i = name.indexOf(":"), prefix = name;
      if (i >= 0) {
        prefix = name.substring(0, i);
        name = name.substring(i + 1);
      }
      return d3_nsPrefix.hasOwnProperty(prefix) ? {
        space: d3_nsPrefix[prefix],
        local: name
      } : name;
    }
  };
  d3_selectionPrototype.attr = function(name, value) {
    if (arguments.length < 2) {
      if (typeof name === "string") {
        var node = this.node();
        name = d3.ns.qualify(name);
        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);
      }
      for (value in name) this.each(d3_selection_attr(value, name[value]));
      return this;
    }
    return this.each(d3_selection_attr(name, value));
  };
  function d3_selection_attr(name, value) {
    name = d3.ns.qualify(name);
    function attrNull() {
      this.removeAttribute(name);
    }
    function attrNullNS() {
      this.removeAttributeNS(name.space, name.local);
    }
    function attrConstant() {
      this.setAttribute(name, value);
    }
    function attrConstantNS() {
      this.setAttributeNS(name.space, name.local, value);
    }
    function attrFunction() {
      var x = value.apply(this, arguments);
      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);
    }
    function attrFunctionNS() {
      var x = value.apply(this, arguments);
      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);
    }
    return value == null ? name.local ? attrNullNS : attrNull : typeof value === "function" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;
  }
  function d3_collapse(s) {
    return s.trim().replace(/\s+/g, " ");
  }
  d3_selectionPrototype.classed = function(name, value) {
    if (arguments.length < 2) {
      if (typeof name === "string") {
        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;
        if (value = node.classList) {
          while (++i < n) if (!value.contains(name[i])) return false;
        } else {
          value = node.getAttribute("class");
          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;
        }
        return true;
      }
      for (value in name) this.each(d3_selection_classed(value, name[value]));
      return this;
    }
    return this.each(d3_selection_classed(name, value));
  };
  function d3_selection_classedRe(name) {
    return new RegExp("(?:^|\\s+)" + d3.requote(name) + "(?:\\s+|$)", "g");
  }
  function d3_selection_classes(name) {
    return name.trim().split(/^|\s+/);
  }
  function d3_selection_classed(name, value) {
    name = d3_selection_classes(name).map(d3_selection_classedName);
    var n = name.length;
    function classedConstant() {
      var i = -1;
      while (++i < n) name[i](this, value);
    }
    function classedFunction() {
      var i = -1, x = value.apply(this, arguments);
      while (++i < n) name[i](this, x);
    }
    return typeof value === "function" ? classedFunction : classedConstant;
  }
  function d3_selection_classedName(name) {
    var re = d3_selection_classedRe(name);
    return function(node, value) {
      if (c = node.classList) return value ? c.add(name) : c.remove(name);
      var c = node.getAttribute("class") || "";
      if (value) {
        re.lastIndex = 0;
        if (!re.test(c)) node.setAttribute("class", d3_collapse(c + " " + name));
      } else {
        node.setAttribute("class", d3_collapse(c.replace(re, " ")));
      }
    };
  }
  d3_selectionPrototype.style = function(name, value, priority) {
    var n = arguments.length;
    if (n < 3) {
      if (typeof name !== "string") {
        if (n < 2) value = "";
        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));
        return this;
      }
      if (n < 2) return d3_window.getComputedStyle(this.node(), null).getPropertyValue(name);
      priority = "";
    }
    return this.each(d3_selection_style(name, value, priority));
  };
  function d3_selection_style(name, value, priority) {
    function styleNull() {
      this.style.removeProperty(name);
    }
    function styleConstant() {
      this.style.setProperty(name, value, priority);
    }
    function styleFunction() {
      var x = value.apply(this, arguments);
      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);
    }
    return value == null ? styleNull : typeof value === "function" ? styleFunction : styleConstant;
  }
  d3_selectionPrototype.property = function(name, value) {
    if (arguments.length < 2) {
      if (typeof name === "string") return this.node()[name];
      for (value in name) this.each(d3_selection_property(value, name[value]));
      return this;
    }
    return this.each(d3_selection_property(name, value));
  };
  function d3_selection_property(name, value) {
    function propertyNull() {
      delete this[name];
    }
    function propertyConstant() {
      this[name] = value;
    }
    function propertyFunction() {
      var x = value.apply(this, arguments);
      if (x == null) delete this[name]; else this[name] = x;
    }
    return value == null ? propertyNull : typeof value === "function" ? propertyFunction : propertyConstant;
  }
  d3_selectionPrototype.text = function(value) {
    return arguments.length ? this.each(typeof value === "function" ? function() {
      var v = value.apply(this, arguments);
      this.textContent = v == null ? "" : v;
    } : value == null ? function() {
      this.textContent = "";
    } : function() {
      this.textContent = value;
    }) : this.node().textContent;
  };
  d3_selectionPrototype.html = function(value) {
    return arguments.length ? this.each(typeof value === "function" ? function() {
      var v = value.apply(this, arguments);
      this.innerHTML = v == null ? "" : v;
    } : value == null ? function() {
      this.innerHTML = "";
    } : function() {
      this.innerHTML = value;
    }) : this.node().innerHTML;
  };
  d3_selectionPrototype.append = function(name) {
    name = d3_selection_creator(name);
    return this.select(function() {
      return this.appendChild(name.apply(this, arguments));
    });
  };
  function d3_selection_creator(name) {
    return typeof name === "function" ? name : (name = d3.ns.qualify(name)).local ? function() {
      return this.ownerDocument.createElementNS(name.space, name.local);
    } : function() {
      return this.ownerDocument.createElementNS(this.namespaceURI, name);
    };
  }
  d3_selectionPrototype.insert = function(name, before) {
    name = d3_selection_creator(name);
    before = d3_selection_selector(before);
    return this.select(function() {
      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);
    });
  };
  d3_selectionPrototype.remove = function() {
    return this.each(function() {
      var parent = this.parentNode;
      if (parent) parent.removeChild(this);
    });
  };
  d3_selectionPrototype.data = function(value, key) {
    var i = -1, n = this.length, group, node;
    if (!arguments.length) {
      value = new Array(n = (group = this[0]).length);
      while (++i < n) {
        if (node = group[i]) {
          value[i] = node.__data__;
        }
      }
      return value;
    }
    function bind(group, groupData) {
      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;
      if (key) {
        var nodeByKeyValue = new d3_Map(), dataByKeyValue = new d3_Map(), keyValues = [], keyValue;
        for (i = -1; ++i < n; ) {
          keyValue = key.call(node = group[i], node.__data__, i);
          if (nodeByKeyValue.has(keyValue)) {
            exitNodes[i] = node;
          } else {
            nodeByKeyValue.set(keyValue, node);
          }
          keyValues.push(keyValue);
        }
        for (i = -1; ++i < m; ) {
          keyValue = key.call(groupData, nodeData = groupData[i], i);
          if (node = nodeByKeyValue.get(keyValue)) {
            updateNodes[i] = node;
            node.__data__ = nodeData;
          } else if (!dataByKeyValue.has(keyValue)) {
            enterNodes[i] = d3_selection_dataNode(nodeData);
          }
          dataByKeyValue.set(keyValue, nodeData);
          nodeByKeyValue.remove(keyValue);
        }
        for (i = -1; ++i < n; ) {
          if (nodeByKeyValue.has(keyValues[i])) {
            exitNodes[i] = group[i];
          }
        }
      } else {
        for (i = -1; ++i < n0; ) {
          node = group[i];
          nodeData = groupData[i];
          if (node) {
            node.__data__ = nodeData;
            updateNodes[i] = node;
          } else {
            enterNodes[i] = d3_selection_dataNode(nodeData);
          }
        }
        for (;i < m; ++i) {
          enterNodes[i] = d3_selection_dataNode(groupData[i]);
        }
        for (;i < n; ++i) {
          exitNodes[i] = group[i];
        }
      }
      enterNodes.update = updateNodes;
      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;
      enter.push(enterNodes);
      update.push(updateNodes);
      exit.push(exitNodes);
    }
    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);
    if (typeof value === "function") {
      while (++i < n) {
        bind(group = this[i], value.call(group, group.parentNode.__data__, i));
      }
    } else {
      while (++i < n) {
        bind(group = this[i], value);
      }
    }
    update.enter = function() {
      return enter;
    };
    update.exit = function() {
      return exit;
    };
    return update;
  };
  function d3_selection_dataNode(data) {
    return {
      __data__: data
    };
  }
  d3_selectionPrototype.datum = function(value) {
    return arguments.length ? this.property("__data__", value) : this.property("__data__");
  };
  d3_selectionPrototype.filter = function(filter) {
    var subgroups = [], subgroup, group, node;
    if (typeof filter !== "function") filter = d3_selection_filter(filter);
    for (var j = 0, m = this.length; j < m; j++) {
      subgroups.push(subgroup = []);
      subgroup.parentNode = (group = this[j]).parentNode;
      for (var i = 0, n = group.length; i < n; i++) {
        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
          subgroup.push(node);
        }
      }
    }
    return d3_selection(subgroups);
  };
  function d3_selection_filter(selector) {
    return function() {
      return d3_selectMatches(this, selector);
    };
  }
  d3_selectionPrototype.order = function() {
    for (var j = -1, m = this.length; ++j < m; ) {
      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {
        if (node = group[i]) {
          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);
          next = node;
        }
      }
    }
    return this;
  };
  d3_selectionPrototype.sort = function(comparator) {
    comparator = d3_selection_sortComparator.apply(this, arguments);
    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);
    return this.order();
  };
  function d3_selection_sortComparator(comparator) {
    if (!arguments.length) comparator = d3_ascending;
    return function(a, b) {
      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;
    };
  }
  d3_selectionPrototype.each = function(callback) {
    return d3_selection_each(this, function(node, i, j) {
      callback.call(node, node.__data__, i, j);
    });
  };
  function d3_selection_each(groups, callback) {
    for (var j = 0, m = groups.length; j < m; j++) {
      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {
        if (node = group[i]) callback(node, i, j);
      }
    }
    return groups;
  }
  d3_selectionPrototype.call = function(callback) {
    var args = d3_array(arguments);
    callback.apply(args[0] = this, args);
    return this;
  };
  d3_selectionPrototype.empty = function() {
    return !this.node();
  };
  d3_selectionPrototype.node = function() {
    for (var j = 0, m = this.length; j < m; j++) {
      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
        var node = group[i];
        if (node) return node;
      }
    }
    return null;
  };
  d3_selectionPrototype.size = function() {
    var n = 0;
    this.each(function() {
      ++n;
    });
    return n;
  };
  function d3_selection_enter(selection) {
    d3_subclass(selection, d3_selection_enterPrototype);
    return selection;
  }
  var d3_selection_enterPrototype = [];
  d3.selection.enter = d3_selection_enter;
  d3.selection.enter.prototype = d3_selection_enterPrototype;
  d3_selection_enterPrototype.append = d3_selectionPrototype.append;
  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;
  d3_selection_enterPrototype.node = d3_selectionPrototype.node;
  d3_selection_enterPrototype.call = d3_selectionPrototype.call;
  d3_selection_enterPrototype.size = d3_selectionPrototype.size;
  d3_selection_enterPrototype.select = function(selector) {
    var subgroups = [], subgroup, subnode, upgroup, group, node;
    for (var j = -1, m = this.length; ++j < m; ) {
      upgroup = (group = this[j]).update;
      subgroups.push(subgroup = []);
      subgroup.parentNode = group.parentNode;
      for (var i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));
          subnode.__data__ = node.__data__;
        } else {
          subgroup.push(null);
        }
      }
    }
    return d3_selection(subgroups);
  };
  d3_selection_enterPrototype.insert = function(name, before) {
    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);
    return d3_selectionPrototype.insert.call(this, name, before);
  };
  function d3_selection_enterInsertBefore(enter) {
    var i0, j0;
    return function(d, i, j) {
      var group = enter[j].update, n = group.length, node;
      if (j != j0) j0 = j, i0 = 0;
      if (i >= i0) i0 = i + 1;
      while (!(node = group[i0]) && ++i0 < n) ;
      return node;
    };
  }
  d3_selectionPrototype.transition = function() {
    var id = d3_transitionInheritId || ++d3_transitionId, subgroups = [], subgroup, node, transition = d3_transitionInherit || {
      time: Date.now(),
      ease: d3_ease_cubicInOut,
      delay: 0,
      duration: 250
    };
    for (var j = -1, m = this.length; ++j < m; ) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) d3_transitionNode(node, i, id, transition);
        subgroup.push(node);
      }
    }
    return d3_transition(subgroups, id);
  };
  d3_selectionPrototype.interrupt = function() {
    return this.each(d3_selection_interrupt);
  };
  function d3_selection_interrupt() {
    var lock = this.__transition__;
    if (lock) ++lock.active;
  }
  d3.select = function(node) {
    var group = [ typeof node === "string" ? d3_select(node, d3_document) : node ];
    group.parentNode = d3_documentElement;
    return d3_selection([ group ]);
  };
  d3.selectAll = function(nodes) {
    var group = d3_array(typeof nodes === "string" ? d3_selectAll(nodes, d3_document) : nodes);
    group.parentNode = d3_documentElement;
    return d3_selection([ group ]);
  };
  var d3_selectionRoot = d3.select(d3_documentElement);
  d3_selectionPrototype.on = function(type, listener, capture) {
    var n = arguments.length;
    if (n < 3) {
      if (typeof type !== "string") {
        if (n < 2) listener = false;
        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));
        return this;
      }
      if (n < 2) return (n = this.node()["__on" + type]) && n._;
      capture = false;
    }
    return this.each(d3_selection_on(type, listener, capture));
  };
  function d3_selection_on(type, listener, capture) {
    var name = "__on" + type, i = type.indexOf("."), wrap = d3_selection_onListener;
    if (i > 0) type = type.substring(0, i);
    var filter = d3_selection_onFilters.get(type);
    if (filter) type = filter, wrap = d3_selection_onFilter;
    function onRemove() {
      var l = this[name];
      if (l) {
        this.removeEventListener(type, l, l.$);
        delete this[name];
      }
    }
    function onAdd() {
      var l = wrap(listener, d3_array(arguments));
      onRemove.call(this);
      this.addEventListener(type, this[name] = l, l.$ = capture);
      l._ = listener;
    }
    function removeAll() {
      var re = new RegExp("^__on([^.]+)" + d3.requote(type) + "$"), match;
      for (var name in this) {
        if (match = name.match(re)) {
          var l = this[name];
          this.removeEventListener(match[1], l, l.$);
          delete this[name];
        }
      }
    }
    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;
  }
  var d3_selection_onFilters = d3.map({
    mouseenter: "mouseover",
    mouseleave: "mouseout"
  });
  d3_selection_onFilters.forEach(function(k) {
    if ("on" + k in d3_document) d3_selection_onFilters.remove(k);
  });
  function d3_selection_onListener(listener, argumentz) {
    return function(e) {
      var o = d3.event;
      d3.event = e;
      argumentz[0] = this.__data__;
      try {
        listener.apply(this, argumentz);
      } finally {
        d3.event = o;
      }
    };
  }
  function d3_selection_onFilter(listener, argumentz) {
    var l = d3_selection_onListener(listener, argumentz);
    return function(e) {
      var target = this, related = e.relatedTarget;
      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {
        l.call(target, e);
      }
    };
  }
  var d3_event_dragSelect = "onselectstart" in d3_document ? null : d3_vendorSymbol(d3_documentElement.style, "userSelect"), d3_event_dragId = 0;
  function d3_event_dragSuppress() {
    var name = ".dragsuppress-" + ++d3_event_dragId, click = "click" + name, w = d3.select(d3_window).on("touchmove" + name, d3_eventPreventDefault).on("dragstart" + name, d3_eventPreventDefault).on("selectstart" + name, d3_eventPreventDefault);
    if (d3_event_dragSelect) {
      var style = d3_documentElement.style, select = style[d3_event_dragSelect];
      style[d3_event_dragSelect] = "none";
    }
    return function(suppressClick) {
      w.on(name, null);
      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;
      if (suppressClick) {
        function off() {
          w.on(click, null);
        }
        w.on(click, function() {
          d3_eventPreventDefault();
          off();
        }, true);
        setTimeout(off, 0);
      }
    };
  }
  d3.mouse = function(container) {
    return d3_mousePoint(container, d3_eventSource());
  };
  function d3_mousePoint(container, e) {
    if (e.changedTouches) e = e.changedTouches[0];
    var svg = container.ownerSVGElement || container;
    if (svg.createSVGPoint) {
      var point = svg.createSVGPoint();
      point.x = e.clientX, point.y = e.clientY;
      point = point.matrixTransform(container.getScreenCTM().inverse());
      return [ point.x, point.y ];
    }
    var rect = container.getBoundingClientRect();
    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];
  }
  d3.touches = function(container, touches) {
    if (arguments.length < 2) touches = d3_eventSource().touches;
    return touches ? d3_array(touches).map(function(touch) {
      var point = d3_mousePoint(container, touch);
      point.identifier = touch.identifier;
      return point;
    }) : [];
  };
  d3.behavior.drag = function() {
    var event = d3_eventDispatch(drag, "drag", "dragstart", "dragend"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_behavior_dragMouseSubject, "mousemove", "mouseup"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_behavior_dragTouchSubject, "touchmove", "touchend");
    function drag() {
      this.on("mousedown.drag", mousedown).on("touchstart.drag", touchstart);
    }
    function dragstart(id, position, subject, move, end) {
      return function() {
        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = ".drag" + (dragId == null ? "" : "-" + dragId), dragOffset, dragSubject = d3.select(subject()).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(), position0 = position(parent, dragId);
        if (origin) {
          dragOffset = origin.apply(that, arguments);
          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];
        } else {
          dragOffset = [ 0, 0 ];
        }
        dispatch({
          type: "dragstart"
        });
        function moved() {
          var position1 = position(parent, dragId), dx, dy;
          if (!position1) return;
          dx = position1[0] - position0[0];
          dy = position1[1] - position0[1];
          dragged |= dx | dy;
          position0 = position1;
          dispatch({
            type: "drag",
            x: position1[0] + dragOffset[0],
            y: position1[1] + dragOffset[1],
            dx: dx,
            dy: dy
          });
        }
        function ended() {
          if (!position(parent, dragId)) return;
          dragSubject.on(move + dragName, null).on(end + dragName, null);
          dragRestore(dragged && d3.event.target === target);
          dispatch({
            type: "dragend"
          });
        }
      };
    }
    drag.origin = function(x) {
      if (!arguments.length) return origin;
      origin = x;
      return drag;
    };
    return d3.rebind(drag, event, "on");
  };
  function d3_behavior_dragTouchId() {
    return d3.event.changedTouches[0].identifier;
  }
  function d3_behavior_dragTouchSubject() {
    return d3.event.target;
  }
  function d3_behavior_dragMouseSubject() {
    return d3_window;
  }
  var π = Math.PI, τ = 2 * π, halfπ = π / 2, ε = 1e-6, ε2 = ε * ε, d3_radians = π / 180, d3_degrees = 180 / π;
  function d3_sgn(x) {
    return x > 0 ? 1 : x < 0 ? -1 : 0;
  }
  function d3_cross2d(a, b, c) {
    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
  }
  function d3_acos(x) {
    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);
  }
  function d3_asin(x) {
    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);
  }
  function d3_sinh(x) {
    return ((x = Math.exp(x)) - 1 / x) / 2;
  }
  function d3_cosh(x) {
    return ((x = Math.exp(x)) + 1 / x) / 2;
  }
  function d3_tanh(x) {
    return ((x = Math.exp(2 * x)) - 1) / (x + 1);
  }
  function d3_haversin(x) {
    return (x = Math.sin(x / 2)) * x;
  }
  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;
  d3.interpolateZoom = function(p0, p1) {
    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];
    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;
    function interpolate(t) {
      var s = t * S;
      if (dr) {
        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));
        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];
      }
      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];
    }
    interpolate.duration = S * 1e3;
    return interpolate;
  };
  d3.behavior.zoom = function() {
    var view = {
      x: 0,
      y: 0,
      k: 1
    }, translate0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, mousedown = "mousedown.zoom", mousemove = "mousemove.zoom", mouseup = "mouseup.zoom", mousewheelTimer, touchstart = "touchstart.zoom", touchtime, event = d3_eventDispatch(zoom, "zoomstart", "zoom", "zoomend"), x0, x1, y0, y1;
    function zoom(g) {
      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + ".zoom", mousewheeled).on(mousemove, mousewheelreset).on("dblclick.zoom", dblclicked).on(touchstart, touchstarted);
    }
    zoom.event = function(g) {
      g.each(function() {
        var dispatch = event.of(this, arguments), view1 = view;
        if (d3_transitionInheritId) {
          d3.select(this).transition().each("start.zoom", function() {
            view = this.__chart__ || {
              x: 0,
              y: 0,
              k: 1
            };
            zoomstarted(dispatch);
          }).tween("zoom:zoom", function() {
            var dx = size[0], dy = size[1], cx = dx / 2, cy = dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);
            return function(t) {
              var l = i(t), k = dx / l[2];
              this.__chart__ = view = {
                x: cx - l[0] * k,
                y: cy - l[1] * k,
                k: k
              };
              zoomed(dispatch);
            };
          }).each("end.zoom", function() {
            zoomended(dispatch);
          });
        } else {
          this.__chart__ = view;
          zoomstarted(dispatch);
          zoomed(dispatch);
          zoomended(dispatch);
        }
      });
    };
    zoom.translate = function(_) {
      if (!arguments.length) return [ view.x, view.y ];
      view = {
        x: +_[0],
        y: +_[1],
        k: view.k
      };
      rescale();
      return zoom;
    };
    zoom.scale = function(_) {
      if (!arguments.length) return view.k;
      view = {
        x: view.x,
        y: view.y,
        k: +_
      };
      rescale();
      return zoom;
    };
    zoom.scaleExtent = function(_) {
      if (!arguments.length) return scaleExtent;
      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];
      return zoom;
    };
    zoom.center = function(_) {
      if (!arguments.length) return center;
      center = _ && [ +_[0], +_[1] ];
      return zoom;
    };
    zoom.size = function(_) {
      if (!arguments.length) return size;
      size = _ && [ +_[0], +_[1] ];
      return zoom;
    };
    zoom.x = function(z) {
      if (!arguments.length) return x1;
      x1 = z;
      x0 = z.copy();
      view = {
        x: 0,
        y: 0,
        k: 1
      };
      return zoom;
    };
    zoom.y = function(z) {
      if (!arguments.length) return y1;
      y1 = z;
      y0 = z.copy();
      view = {
        x: 0,
        y: 0,
        k: 1
      };
      return zoom;
    };
    function location(p) {
      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];
    }
    function point(l) {
      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];
    }
    function scaleTo(s) {
      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));
    }
    function translateTo(p, l) {
      l = point(l);
      view.x += p[0] - l[0];
      view.y += p[1] - l[1];
    }
    function rescale() {
      if (x1) x1.domain(x0.range().map(function(x) {
        return (x - view.x) / view.k;
      }).map(x0.invert));
      if (y1) y1.domain(y0.range().map(function(y) {
        return (y - view.y) / view.k;
      }).map(y0.invert));
    }
    function zoomstarted(dispatch) {
      dispatch({
        type: "zoomstart"
      });
    }
    function zoomed(dispatch) {
      rescale();
      dispatch({
        type: "zoom",
        scale: view.k,
        translate: [ view.x, view.y ]
      });
    }
    function zoomended(dispatch) {
      dispatch({
        type: "zoomend"
      });
    }
    function mousedowned() {
      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress();
      d3_selection_interrupt.call(that);
      zoomstarted(dispatch);
      function moved() {
        dragged = 1;
        translateTo(d3.mouse(that), location0);
        zoomed(dispatch);
      }
      function ended() {
        subject.on(mousemove, d3_window === that ? mousewheelreset : null).on(mouseup, null);
        dragRestore(dragged && d3.event.target === target);
        zoomended(dispatch);
      }
    }
    function touchstarted() {
      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = ".zoom-" + d3.event.changedTouches[0].identifier, touchmove = "touchmove" + zoomName, touchend = "touchend" + zoomName, targets = [], subject = d3.select(that).on(mousedown, null).on(touchstart, started), dragRestore = d3_event_dragSuppress();
      d3_selection_interrupt.call(that);
      started();
      zoomstarted(dispatch);
      function relocate() {
        var touches = d3.touches(that);
        scale0 = view.k;
        touches.forEach(function(t) {
          if (t.identifier in locations0) locations0[t.identifier] = location(t);
        });
        return touches;
      }
      function started() {
        var target = d3.event.target;
        d3.select(target).on(touchmove, moved).on(touchend, ended);
        targets.push(target);
        var changed = d3.event.changedTouches;
        for (var i = 0, n = changed.length; i < n; ++i) {
          locations0[changed[i].identifier] = null;
        }
        var touches = relocate(), now = Date.now();
        if (touches.length === 1) {
          if (now - touchtime < 500) {
            var p = touches[0], l = locations0[p.identifier];
            scaleTo(view.k * 2);
            translateTo(p, l);
            d3_eventPreventDefault();
            zoomed(dispatch);
          }
          touchtime = now;
        } else if (touches.length > 1) {
          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];
          distance0 = dx * dx + dy * dy;
        }
      }
      function moved() {
        var touches = d3.touches(that), p0, l0, p1, l1;
        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {
          p1 = touches[i];
          if (l1 = locations0[p1.identifier]) {
            if (l0) break;
            p0 = p1, l0 = l1;
          }
        }
        if (l1) {
          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);
          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];
          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];
          scaleTo(scale1 * scale0);
        }
        touchtime = null;
        translateTo(p0, l0);
        zoomed(dispatch);
      }
      function ended() {
        if (d3.event.touches.length) {
          var changed = d3.event.changedTouches;
          for (var i = 0, n = changed.length; i < n; ++i) {
            delete locations0[changed[i].identifier];
          }
          for (var identifier in locations0) {
            return void relocate();
          }
        }
        d3.selectAll(targets).on(zoomName, null);
        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);
        dragRestore();
        zoomended(dispatch);
      }
    }
    function mousewheeled() {
      var dispatch = event.of(this, arguments);
      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), 
      zoomstarted(dispatch);
      mousewheelTimer = setTimeout(function() {
        mousewheelTimer = null;
        zoomended(dispatch);
      }, 50);
      d3_eventPreventDefault();
      var point = center || d3.mouse(this);
      if (!translate0) translate0 = location(point);
      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);
      translateTo(point, translate0);
      zoomed(dispatch);
    }
    function mousewheelreset() {
      translate0 = null;
    }
    function dblclicked() {
      var dispatch = event.of(this, arguments), p = d3.mouse(this), l = location(p), k = Math.log(view.k) / Math.LN2;
      zoomstarted(dispatch);
      scaleTo(Math.pow(2, d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1));
      translateTo(p, l);
      zoomed(dispatch);
      zoomended(dispatch);
    }
    return d3.rebind(zoom, event, "on");
  };
  var d3_behavior_zoomInfinity = [ 0, Infinity ];
  var d3_behavior_zoomDelta, d3_behavior_zoomWheel = "onwheel" in d3_document ? (d3_behavior_zoomDelta = function() {
    return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);
  }, "wheel") : "onmousewheel" in d3_document ? (d3_behavior_zoomDelta = function() {
    return d3.event.wheelDelta;
  }, "mousewheel") : (d3_behavior_zoomDelta = function() {
    return -d3.event.detail;
  }, "MozMousePixelScroll");
  function d3_Color() {}
  d3_Color.prototype.toString = function() {
    return this.rgb() + "";
  };
  d3.hsl = function(h, s, l) {
    return arguments.length === 1 ? h instanceof d3_Hsl ? d3_hsl(h.h, h.s, h.l) : d3_rgb_parse("" + h, d3_rgb_hsl, d3_hsl) : d3_hsl(+h, +s, +l);
  };
  function d3_hsl(h, s, l) {
    return new d3_Hsl(h, s, l);
  }
  function d3_Hsl(h, s, l) {
    this.h = h;
    this.s = s;
    this.l = l;
  }
  var d3_hslPrototype = d3_Hsl.prototype = new d3_Color();
  d3_hslPrototype.brighter = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    return d3_hsl(this.h, this.s, this.l / k);
  };
  d3_hslPrototype.darker = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    return d3_hsl(this.h, this.s, k * this.l);
  };
  d3_hslPrototype.rgb = function() {
    return d3_hsl_rgb(this.h, this.s, this.l);
  };
  function d3_hsl_rgb(h, s, l) {
    var m1, m2;
    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;
    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;
    l = l < 0 ? 0 : l > 1 ? 1 : l;
    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;
    m1 = 2 * l - m2;
    function v(h) {
      if (h > 360) h -= 360; else if (h < 0) h += 360;
      if (h < 60) return m1 + (m2 - m1) * h / 60;
      if (h < 180) return m2;
      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;
      return m1;
    }
    function vv(h) {
      return Math.round(v(h) * 255);
    }
    return d3_rgb(vv(h + 120), vv(h), vv(h - 120));
  }
  d3.hcl = function(h, c, l) {
    return arguments.length === 1 ? h instanceof d3_Hcl ? d3_hcl(h.h, h.c, h.l) : h instanceof d3_Lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : d3_hcl(+h, +c, +l);
  };
  function d3_hcl(h, c, l) {
    return new d3_Hcl(h, c, l);
  }
  function d3_Hcl(h, c, l) {
    this.h = h;
    this.c = c;
    this.l = l;
  }
  var d3_hclPrototype = d3_Hcl.prototype = new d3_Color();
  d3_hclPrototype.brighter = function(k) {
    return d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));
  };
  d3_hclPrototype.darker = function(k) {
    return d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));
  };
  d3_hclPrototype.rgb = function() {
    return d3_hcl_lab(this.h, this.c, this.l).rgb();
  };
  function d3_hcl_lab(h, c, l) {
    if (isNaN(h)) h = 0;
    if (isNaN(c)) c = 0;
    return d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);
  }
  d3.lab = function(l, a, b) {
    return arguments.length === 1 ? l instanceof d3_Lab ? d3_lab(l.l, l.a, l.b) : l instanceof d3_Hcl ? d3_hcl_lab(l.l, l.c, l.h) : d3_rgb_lab((l = d3.rgb(l)).r, l.g, l.b) : d3_lab(+l, +a, +b);
  };
  function d3_lab(l, a, b) {
    return new d3_Lab(l, a, b);
  }
  function d3_Lab(l, a, b) {
    this.l = l;
    this.a = a;
    this.b = b;
  }
  var d3_lab_K = 18;
  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;
  var d3_labPrototype = d3_Lab.prototype = new d3_Color();
  d3_labPrototype.brighter = function(k) {
    return d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
  };
  d3_labPrototype.darker = function(k) {
    return d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);
  };
  d3_labPrototype.rgb = function() {
    return d3_lab_rgb(this.l, this.a, this.b);
  };
  function d3_lab_rgb(l, a, b) {
    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;
    x = d3_lab_xyz(x) * d3_lab_X;
    y = d3_lab_xyz(y) * d3_lab_Y;
    z = d3_lab_xyz(z) * d3_lab_Z;
    return d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));
  }
  function d3_lab_hcl(l, a, b) {
    return l > 0 ? d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : d3_hcl(NaN, NaN, l);
  }
  function d3_lab_xyz(x) {
    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;
  }
  function d3_xyz_lab(x) {
    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;
  }
  function d3_xyz_rgb(r) {
    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));
  }
  d3.rgb = function(r, g, b) {
    return arguments.length === 1 ? r instanceof d3_Rgb ? d3_rgb(r.r, r.g, r.b) : d3_rgb_parse("" + r, d3_rgb, d3_hsl_rgb) : d3_rgb(~~r, ~~g, ~~b);
  };
  function d3_rgbNumber(value) {
    return d3_rgb(value >> 16, value >> 8 & 255, value & 255);
  }
  function d3_rgbString(value) {
    return d3_rgbNumber(value) + "";
  }
  function d3_rgb(r, g, b) {
    return new d3_Rgb(r, g, b);
  }
  function d3_Rgb(r, g, b) {
    this.r = r;
    this.g = g;
    this.b = b;
  }
  var d3_rgbPrototype = d3_Rgb.prototype = new d3_Color();
  d3_rgbPrototype.brighter = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    var r = this.r, g = this.g, b = this.b, i = 30;
    if (!r && !g && !b) return d3_rgb(i, i, i);
    if (r && r < i) r = i;
    if (g && g < i) g = i;
    if (b && b < i) b = i;
    return d3_rgb(Math.min(255, ~~(r / k)), Math.min(255, ~~(g / k)), Math.min(255, ~~(b / k)));
  };
  d3_rgbPrototype.darker = function(k) {
    k = Math.pow(.7, arguments.length ? k : 1);
    return d3_rgb(~~(k * this.r), ~~(k * this.g), ~~(k * this.b));
  };
  d3_rgbPrototype.hsl = function() {
    return d3_rgb_hsl(this.r, this.g, this.b);
  };
  d3_rgbPrototype.toString = function() {
    return "#" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);
  };
  function d3_rgb_hex(v) {
    return v < 16 ? "0" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);
  }
  function d3_rgb_parse(format, rgb, hsl) {
    var r = 0, g = 0, b = 0, m1, m2, color;
    m1 = /([a-z]+)\((.*)\)/i.exec(format);
    if (m1) {
      m2 = m1[2].split(",");
      switch (m1[1]) {
       case "hsl":
        {
          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);
        }

       case "rgb":
        {
          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));
        }
      }
    }
    if (color = d3_rgb_names.get(format)) return rgb(color.r, color.g, color.b);
    if (format != null && format.charAt(0) === "#" && !isNaN(color = parseInt(format.substring(1), 16))) {
      if (format.length === 4) {
        r = (color & 3840) >> 4;
        r = r >> 4 | r;
        g = color & 240;
        g = g >> 4 | g;
        b = color & 15;
        b = b << 4 | b;
      } else if (format.length === 7) {
        r = (color & 16711680) >> 16;
        g = (color & 65280) >> 8;
        b = color & 255;
      }
    }
    return rgb(r, g, b);
  }
  function d3_rgb_hsl(r, g, b) {
    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;
    if (d) {
      s = l < .5 ? d / (max + min) : d / (2 - max - min);
      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;
      h *= 60;
    } else {
      h = NaN;
      s = l > 0 && l < 1 ? 0 : h;
    }
    return d3_hsl(h, s, l);
  }
  function d3_rgb_lab(r, g, b) {
    r = d3_rgb_xyz(r);
    g = d3_rgb_xyz(g);
    b = d3_rgb_xyz(b);
    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);
    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));
  }
  function d3_rgb_xyz(r) {
    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);
  }
  function d3_rgb_parseNumber(c) {
    var f = parseFloat(c);
    return c.charAt(c.length - 1) === "%" ? Math.round(f * 2.55) : f;
  }
  var d3_rgb_names = d3.map({
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
  });
  d3_rgb_names.forEach(function(key, value) {
    d3_rgb_names.set(key, d3_rgbNumber(value));
  });
  function d3_functor(v) {
    return typeof v === "function" ? v : function() {
      return v;
    };
  }
  d3.functor = d3_functor;
  function d3_identity(d) {
    return d;
  }
  d3.xhr = d3_xhrType(d3_identity);
  function d3_xhrType(response) {
    return function(url, mimeType, callback) {
      if (arguments.length === 2 && typeof mimeType === "function") callback = mimeType, 
      mimeType = null;
      return d3_xhr(url, mimeType, response, callback);
    };
  }
  function d3_xhr(url, mimeType, response, callback) {
    var xhr = {}, dispatch = d3.dispatch("beforesend", "progress", "load", "error"), headers = {}, request = new XMLHttpRequest(), responseType = null;
    if (d3_window.XDomainRequest && !("withCredentials" in request) && /^(http(s)?:)?\/\//.test(url)) request = new XDomainRequest();
    "onload" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {
      request.readyState > 3 && respond();
    };
    function respond() {
      var status = request.status, result;
      if (!status && request.responseText || status >= 200 && status < 300 || status === 304) {
        try {
          result = response.call(xhr, request);
        } catch (e) {
          dispatch.error.call(xhr, e);
          return;
        }
        dispatch.load.call(xhr, result);
      } else {
        dispatch.error.call(xhr, request);
      }
    }
    request.onprogress = function(event) {
      var o = d3.event;
      d3.event = event;
      try {
        dispatch.progress.call(xhr, request);
      } finally {
        d3.event = o;
      }
    };
    xhr.header = function(name, value) {
      name = (name + "").toLowerCase();
      if (arguments.length < 2) return headers[name];
      if (value == null) delete headers[name]; else headers[name] = value + "";
      return xhr;
    };
    xhr.mimeType = function(value) {
      if (!arguments.length) return mimeType;
      mimeType = value == null ? null : value + "";
      return xhr;
    };
    xhr.responseType = function(value) {
      if (!arguments.length) return responseType;
      responseType = value;
      return xhr;
    };
    xhr.response = function(value) {
      response = value;
      return xhr;
    };
    [ "get", "post" ].forEach(function(method) {
      xhr[method] = function() {
        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));
      };
    });
    xhr.send = function(method, data, callback) {
      if (arguments.length === 2 && typeof data === "function") callback = data, data = null;
      request.open(method, url, true);
      if (mimeType != null && !("accept" in headers)) headers["accept"] = mimeType + ",*/*";
      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);
      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);
      if (responseType != null) request.responseType = responseType;
      if (callback != null) xhr.on("error", callback).on("load", function(request) {
        callback(null, request);
      });
      dispatch.beforesend.call(xhr, request);
      request.send(data == null ? null : data);
      return xhr;
    };
    xhr.abort = function() {
      request.abort();
      return xhr;
    };
    d3.rebind(xhr, dispatch, "on");
    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));
  }
  function d3_xhr_fixCallback(callback) {
    return callback.length === 1 ? function(error, request) {
      callback(error == null ? request : null);
    } : callback;
  }
  d3.dsv = function(delimiter, mimeType) {
    var reFormat = new RegExp('["' + delimiter + "\n]"), delimiterCode = delimiter.charCodeAt(0);
    function dsv(url, row, callback) {
      if (arguments.length < 3) callback = row, row = null;
      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);
      xhr.row = function(_) {
        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;
      };
      return xhr;
    }
    function response(request) {
      return dsv.parse(request.responseText);
    }
    function typedResponse(f) {
      return function(request) {
        return dsv.parse(request.responseText, f);
      };
    }
    dsv.parse = function(text, f) {
      var o;
      return dsv.parseRows(text, function(row, i) {
        if (o) return o(row, i - 1);
        var a = new Function("d", "return {" + row.map(function(name, i) {
          return JSON.stringify(name) + ": d[" + i + "]";
        }).join(",") + "}");
        o = f ? function(row, i) {
          return f(a(row), i);
        } : a;
      });
    };
    dsv.parseRows = function(text, f) {
      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;
      function token() {
        if (I >= N) return EOF;
        if (eol) return eol = false, EOL;
        var j = I;
        if (text.charCodeAt(j) === 34) {
          var i = j;
          while (i++ < N) {
            if (text.charCodeAt(i) === 34) {
              if (text.charCodeAt(i + 1) !== 34) break;
              ++i;
            }
          }
          I = i + 2;
          var c = text.charCodeAt(i + 1);
          if (c === 13) {
            eol = true;
            if (text.charCodeAt(i + 2) === 10) ++I;
          } else if (c === 10) {
            eol = true;
          }
          return text.substring(j + 1, i).replace(/""/g, '"');
        }
        while (I < N) {
          var c = text.charCodeAt(I++), k = 1;
          if (c === 10) eol = true; else if (c === 13) {
            eol = true;
            if (text.charCodeAt(I) === 10) ++I, ++k;
          } else if (c !== delimiterCode) continue;
          return text.substring(j, I - k);
        }
        return text.substring(j);
      }
      while ((t = token()) !== EOF) {
        var a = [];
        while (t !== EOL && t !== EOF) {
          a.push(t);
          t = token();
        }
        if (f && !(a = f(a, n++))) continue;
        rows.push(a);
      }
      return rows;
    };
    dsv.format = function(rows) {
      if (Array.isArray(rows[0])) return dsv.formatRows(rows);
      var fieldSet = new d3_Set(), fields = [];
      rows.forEach(function(row) {
        for (var field in row) {
          if (!fieldSet.has(field)) {
            fields.push(fieldSet.add(field));
          }
        }
      });
      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {
        return fields.map(function(field) {
          return formatValue(row[field]);
        }).join(delimiter);
      })).join("\n");
    };
    dsv.formatRows = function(rows) {
      return rows.map(formatRow).join("\n");
    };
    function formatRow(row) {
      return row.map(formatValue).join(delimiter);
    }
    function formatValue(text) {
      return reFormat.test(text) ? '"' + text.replace(/\"/g, '""') + '"' : text;
    }
    return dsv;
  };
  d3.csv = d3.dsv(",", "text/csv");
  d3.tsv = d3.dsv("	", "text/tab-separated-values");
  d3.touch = function(container, touches, identifier) {
    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;
    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {
      if ((touch = touches[i]).identifier === identifier) {
        return d3_mousePoint(container, touch);
      }
    }
  };
  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = d3_window[d3_vendorSymbol(d3_window, "requestAnimationFrame")] || function(callback) {
    setTimeout(callback, 17);
  };
  d3.timer = function(callback, delay, then) {
    var n = arguments.length;
    if (n < 2) delay = 0;
    if (n < 3) then = Date.now();
    var time = then + delay, timer = {
      c: callback,
      t: time,
      f: false,
      n: null
    };
    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;
    d3_timer_queueTail = timer;
    if (!d3_timer_interval) {
      d3_timer_timeout = clearTimeout(d3_timer_timeout);
      d3_timer_interval = 1;
      d3_timer_frame(d3_timer_step);
    }
  };
  function d3_timer_step() {
    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;
    if (delay > 24) {
      if (isFinite(delay)) {
        clearTimeout(d3_timer_timeout);
        d3_timer_timeout = setTimeout(d3_timer_step, delay);
      }
      d3_timer_interval = 0;
    } else {
      d3_timer_interval = 1;
      d3_timer_frame(d3_timer_step);
    }
  }
  d3.timer.flush = function() {
    d3_timer_mark();
    d3_timer_sweep();
  };
  function d3_timer_mark() {
    var now = Date.now();
    d3_timer_active = d3_timer_queueHead;
    while (d3_timer_active) {
      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);
      d3_timer_active = d3_timer_active.n;
    }
    return now;
  }
  function d3_timer_sweep() {
    var t0, t1 = d3_timer_queueHead, time = Infinity;
    while (t1) {
      if (t1.f) {
        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;
      } else {
        if (t1.t < time) time = t1.t;
        t1 = (t0 = t1).n;
      }
    }
    d3_timer_queueTail = t0;
    return time;
  }
  function d3_format_precision(x, p) {
    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);
  }
  d3.round = function(x, n) {
    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);
  };
  var d3_formatPrefixes = [ "y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y" ].map(d3_formatPrefix);
  d3.formatPrefix = function(value, precision) {
    var i = 0;
    if (value) {
      if (value < 0) value *= -1;
      if (precision) value = d3.round(value, d3_format_precision(value, precision));
      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);
      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));
    }
    return d3_formatPrefixes[8 + i / 3];
  };
  function d3_formatPrefix(d, i) {
    var k = Math.pow(10, abs(8 - i) * 3);
    return {
      scale: i > 8 ? function(d) {
        return d / k;
      } : function(d) {
        return d * k;
      },
      symbol: d
    };
  }
  function d3_locale_numberFormat(locale) {
    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping ? function(value) {
      var i = value.length, t = [], j = 0, g = locale_grouping[0];
      while (i > 0 && g > 0) {
        t.push(value.substring(i -= g, i + g));
        g = locale_grouping[j = (j + 1) % locale_grouping.length];
      }
      return t.reverse().join(locale_thousands);
    } : d3_identity;
    return function(specifier) {
      var match = d3_format_re.exec(specifier), fill = match[1] || " ", align = match[2] || ">", sign = match[3] || "", symbol = match[4] || "", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = "", suffix = "", integer = false;
      if (precision) precision = +precision.substring(1);
      if (zfill || fill === "0" && align === "=") {
        zfill = fill = "0";
        align = "=";
        if (comma) width -= Math.floor((width - 1) / 4);
      }
      switch (type) {
       case "n":
        comma = true;
        type = "g";
        break;

       case "%":
        scale = 100;
        suffix = "%";
        type = "f";
        break;

       case "p":
        scale = 100;
        suffix = "%";
        type = "r";
        break;

       case "b":
       case "o":
       case "x":
       case "X":
        if (symbol === "#") prefix = "0" + type.toLowerCase();

       case "c":
       case "d":
        integer = true;
        precision = 0;
        break;

       case "s":
        scale = -1;
        type = "r";
        break;
      }
      if (symbol === "$") prefix = locale_currency[0], suffix = locale_currency[1];
      if (type == "r" && !precision) type = "g";
      if (precision != null) {
        if (type == "g") precision = Math.max(1, Math.min(21, precision)); else if (type == "e" || type == "f") precision = Math.max(0, Math.min(20, precision));
      }
      type = d3_format_types.get(type) || d3_format_typeDefault;
      var zcomma = zfill && comma;
      return function(value) {
        var fullSuffix = suffix;
        if (integer && value % 1) return "";
        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, "-") : sign;
        if (scale < 0) {
          var unit = d3.formatPrefix(value, precision);
          value = unit.scale(value);
          fullSuffix = unit.symbol + suffix;
        } else {
          value *= scale;
        }
        value = type(value, precision);
        var i = value.lastIndexOf("."), before = i < 0 ? value : value.substring(0, i), after = i < 0 ? "" : locale_decimal + value.substring(i + 1);
        if (!zfill && comma) before = formatGroup(before);
        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : "";
        if (zcomma) before = formatGroup(padding + before);
        negative += prefix;
        value = before + after;
        return (align === "<" ? negative + value + padding : align === ">" ? padding + negative + value : align === "^" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;
      };
    };
  }
  var d3_format_re = /(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i;
  var d3_format_types = d3.map({
    b: function(x) {
      return x.toString(2);
    },
    c: function(x) {
      return String.fromCharCode(x);
    },
    o: function(x) {
      return x.toString(8);
    },
    x: function(x) {
      return x.toString(16);
    },
    X: function(x) {
      return x.toString(16).toUpperCase();
    },
    g: function(x, p) {
      return x.toPrecision(p);
    },
    e: function(x, p) {
      return x.toExponential(p);
    },
    f: function(x, p) {
      return x.toFixed(p);
    },
    r: function(x, p) {
      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));
    }
  });
  function d3_format_typeDefault(x) {
    return x + "";
  }
  var d3_time = d3.time = {}, d3_date = Date;
  function d3_date_utc() {
    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);
  }
  d3_date_utc.prototype = {
    getDate: function() {
      return this._.getUTCDate();
    },
    getDay: function() {
      return this._.getUTCDay();
    },
    getFullYear: function() {
      return this._.getUTCFullYear();
    },
    getHours: function() {
      return this._.getUTCHours();
    },
    getMilliseconds: function() {
      return this._.getUTCMilliseconds();
    },
    getMinutes: function() {
      return this._.getUTCMinutes();
    },
    getMonth: function() {
      return this._.getUTCMonth();
    },
    getSeconds: function() {
      return this._.getUTCSeconds();
    },
    getTime: function() {
      return this._.getTime();
    },
    getTimezoneOffset: function() {
      return 0;
    },
    valueOf: function() {
      return this._.valueOf();
    },
    setDate: function() {
      d3_time_prototype.setUTCDate.apply(this._, arguments);
    },
    setDay: function() {
      d3_time_prototype.setUTCDay.apply(this._, arguments);
    },
    setFullYear: function() {
      d3_time_prototype.setUTCFullYear.apply(this._, arguments);
    },
    setHours: function() {
      d3_time_prototype.setUTCHours.apply(this._, arguments);
    },
    setMilliseconds: function() {
      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);
    },
    setMinutes: function() {
      d3_time_prototype.setUTCMinutes.apply(this._, arguments);
    },
    setMonth: function() {
      d3_time_prototype.setUTCMonth.apply(this._, arguments);
    },
    setSeconds: function() {
      d3_time_prototype.setUTCSeconds.apply(this._, arguments);
    },
    setTime: function() {
      d3_time_prototype.setTime.apply(this._, arguments);
    }
  };
  var d3_time_prototype = Date.prototype;
  function d3_time_interval(local, step, number) {
    function round(date) {
      var d0 = local(date), d1 = offset(d0, 1);
      return date - d0 < d1 - date ? d0 : d1;
    }
    function ceil(date) {
      step(date = local(new d3_date(date - 1)), 1);
      return date;
    }
    function offset(date, k) {
      step(date = new d3_date(+date), k);
      return date;
    }
    function range(t0, t1, dt) {
      var time = ceil(t0), times = [];
      if (dt > 1) {
        while (time < t1) {
          if (!(number(time) % dt)) times.push(new Date(+time));
          step(time, 1);
        }
      } else {
        while (time < t1) times.push(new Date(+time)), step(time, 1);
      }
      return times;
    }
    function range_utc(t0, t1, dt) {
      try {
        d3_date = d3_date_utc;
        var utc = new d3_date_utc();
        utc._ = t0;
        return range(utc, t1, dt);
      } finally {
        d3_date = Date;
      }
    }
    local.floor = local;
    local.round = round;
    local.ceil = ceil;
    local.offset = offset;
    local.range = range;
    var utc = local.utc = d3_time_interval_utc(local);
    utc.floor = utc;
    utc.round = d3_time_interval_utc(round);
    utc.ceil = d3_time_interval_utc(ceil);
    utc.offset = d3_time_interval_utc(offset);
    utc.range = range_utc;
    return local;
  }
  function d3_time_interval_utc(method) {
    return function(date, k) {
      try {
        d3_date = d3_date_utc;
        var utc = new d3_date_utc();
        utc._ = date;
        return method(utc, k)._;
      } finally {
        d3_date = Date;
      }
    };
  }
  d3_time.year = d3_time_interval(function(date) {
    date = d3_time.day(date);
    date.setMonth(0, 1);
    return date;
  }, function(date, offset) {
    date.setFullYear(date.getFullYear() + offset);
  }, function(date) {
    return date.getFullYear();
  });
  d3_time.years = d3_time.year.range;
  d3_time.years.utc = d3_time.year.utc.range;
  d3_time.day = d3_time_interval(function(date) {
    var day = new d3_date(2e3, 0);
    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());
    return day;
  }, function(date, offset) {
    date.setDate(date.getDate() + offset);
  }, function(date) {
    return date.getDate() - 1;
  });
  d3_time.days = d3_time.day.range;
  d3_time.days.utc = d3_time.day.utc.range;
  d3_time.dayOfYear = function(date) {
    var year = d3_time.year(date);
    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);
  };
  [ "sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday" ].forEach(function(day, i) {
    i = 7 - i;
    var interval = d3_time[day] = d3_time_interval(function(date) {
      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);
      return date;
    }, function(date, offset) {
      date.setDate(date.getDate() + Math.floor(offset) * 7);
    }, function(date) {
      var day = d3_time.year(date).getDay();
      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);
    });
    d3_time[day + "s"] = interval.range;
    d3_time[day + "s"].utc = interval.utc.range;
    d3_time[day + "OfYear"] = function(date) {
      var day = d3_time.year(date).getDay();
      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);
    };
  });
  d3_time.week = d3_time.sunday;
  d3_time.weeks = d3_time.sunday.range;
  d3_time.weeks.utc = d3_time.sunday.utc.range;
  d3_time.weekOfYear = d3_time.sundayOfYear;
  function d3_locale_timeFormat(locale) {
    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;
    function d3_time_format(template) {
      var n = template.length;
      function format(date) {
        var string = [], i = -1, j = 0, c, p, f;
        while (++i < n) {
          if (template.charCodeAt(i) === 37) {
            string.push(template.substring(j, i));
            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);
            if (f = d3_time_formats[c]) c = f(date, p == null ? c === "e" ? " " : "0" : p);
            string.push(c);
            j = i + 1;
          }
        }
        string.push(template.substring(j, i));
        return string.join("");
      }
      format.parse = function(string) {
        var d = {
          y: 1900,
          m: 0,
          d: 1,
          H: 0,
          M: 0,
          S: 0,
          L: 0,
          Z: null
        }, i = d3_time_parse(d, template, string, 0);
        if (i != string.length) return null;
        if ("p" in d) d.H = d.H % 12 + d.p * 12;
        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();
        if ("j" in d) date.setFullYear(d.y, 0, d.j); else if ("w" in d && ("W" in d || "U" in d)) {
          date.setFullYear(d.y, 0, 1);
          date.setFullYear(d.y, 0, "W" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);
        } else date.setFullYear(d.y, d.m, d.d);
        date.setHours(d.H + Math.floor(d.Z / 100), d.M + d.Z % 100, d.S, d.L);
        return localZ ? date._ : date;
      };
      format.toString = function() {
        return template;
      };
      return format;
    }
    function d3_time_parse(date, template, string, j) {
      var c, p, t, i = 0, n = template.length, m = string.length;
      while (i < n) {
        if (j >= m) return -1;
        c = template.charCodeAt(i++);
        if (c === 37) {
          t = template.charAt(i++);
          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];
          if (!p || (j = p(date, string, j)) < 0) return -1;
        } else if (c != string.charCodeAt(j++)) {
          return -1;
        }
      }
      return j;
    }
    d3_time_format.utc = function(template) {
      var local = d3_time_format(template);
      function format(date) {
        try {
          d3_date = d3_date_utc;
          var utc = new d3_date();
          utc._ = date;
          return local(utc);
        } finally {
          d3_date = Date;
        }
      }
      format.parse = function(string) {
        try {
          d3_date = d3_date_utc;
          var date = local.parse(string);
          return date && date._;
        } finally {
          d3_date = Date;
        }
      };
      format.toString = local.toString;
      return format;
    };
    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;
    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);
    locale_periods.forEach(function(p, i) {
      d3_time_periodLookup.set(p.toLowerCase(), i);
    });
    var d3_time_formats = {
      a: function(d) {
        return locale_shortDays[d.getDay()];
      },
      A: function(d) {
        return locale_days[d.getDay()];
      },
      b: function(d) {
        return locale_shortMonths[d.getMonth()];
      },
      B: function(d) {
        return locale_months[d.getMonth()];
      },
      c: d3_time_format(locale_dateTime),
      d: function(d, p) {
        return d3_time_formatPad(d.getDate(), p, 2);
      },
      e: function(d, p) {
        return d3_time_formatPad(d.getDate(), p, 2);
      },
      H: function(d, p) {
        return d3_time_formatPad(d.getHours(), p, 2);
      },
      I: function(d, p) {
        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);
      },
      j: function(d, p) {
        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);
      },
      L: function(d, p) {
        return d3_time_formatPad(d.getMilliseconds(), p, 3);
      },
      m: function(d, p) {
        return d3_time_formatPad(d.getMonth() + 1, p, 2);
      },
      M: function(d, p) {
        return d3_time_formatPad(d.getMinutes(), p, 2);
      },
      p: function(d) {
        return locale_periods[+(d.getHours() >= 12)];
      },
      S: function(d, p) {
        return d3_time_formatPad(d.getSeconds(), p, 2);
      },
      U: function(d, p) {
        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);
      },
      w: function(d) {
        return d.getDay();
      },
      W: function(d, p) {
        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);
      },
      x: d3_time_format(locale_date),
      X: d3_time_format(locale_time),
      y: function(d, p) {
        return d3_time_formatPad(d.getFullYear() % 100, p, 2);
      },
      Y: function(d, p) {
        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);
      },
      Z: d3_time_zone,
      "%": function() {
        return "%";
      }
    };
    var d3_time_parsers = {
      a: d3_time_parseWeekdayAbbrev,
      A: d3_time_parseWeekday,
      b: d3_time_parseMonthAbbrev,
      B: d3_time_parseMonth,
      c: d3_time_parseLocaleFull,
      d: d3_time_parseDay,
      e: d3_time_parseDay,
      H: d3_time_parseHour24,
      I: d3_time_parseHour24,
      j: d3_time_parseDayOfYear,
      L: d3_time_parseMilliseconds,
      m: d3_time_parseMonthNumber,
      M: d3_time_parseMinutes,
      p: d3_time_parseAmPm,
      S: d3_time_parseSeconds,
      U: d3_time_parseWeekNumberSunday,
      w: d3_time_parseWeekdayNumber,
      W: d3_time_parseWeekNumberMonday,
      x: d3_time_parseLocaleDate,
      X: d3_time_parseLocaleTime,
      y: d3_time_parseYear,
      Y: d3_time_parseFullYear,
      Z: d3_time_parseZone,
      "%": d3_time_parseLiteralPercent
    };
    function d3_time_parseWeekdayAbbrev(date, string, i) {
      d3_time_dayAbbrevRe.lastIndex = 0;
      var n = d3_time_dayAbbrevRe.exec(string.substring(i));
      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function d3_time_parseWeekday(date, string, i) {
      d3_time_dayRe.lastIndex = 0;
      var n = d3_time_dayRe.exec(string.substring(i));
      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function d3_time_parseMonthAbbrev(date, string, i) {
      d3_time_monthAbbrevRe.lastIndex = 0;
      var n = d3_time_monthAbbrevRe.exec(string.substring(i));
      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function d3_time_parseMonth(date, string, i) {
      d3_time_monthRe.lastIndex = 0;
      var n = d3_time_monthRe.exec(string.substring(i));
      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;
    }
    function d3_time_parseLocaleFull(date, string, i) {
      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);
    }
    function d3_time_parseLocaleDate(date, string, i) {
      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);
    }
    function d3_time_parseLocaleTime(date, string, i) {
      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);
    }
    function d3_time_parseAmPm(date, string, i) {
      var n = d3_time_periodLookup.get(string.substring(i, i += 2).toLowerCase());
      return n == null ? -1 : (date.p = n, i);
    }
    return d3_time_format;
  }
  var d3_time_formatPads = {
    "-": "",
    _: " ",
    "0": "0"
  }, d3_time_numberRe = /^\s*\d+/, d3_time_percentRe = /^%/;
  function d3_time_formatPad(value, fill, width) {
    var sign = value < 0 ? "-" : "", string = (sign ? -value : value) + "", length = string.length;
    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
  }
  function d3_time_formatRe(names) {
    return new RegExp("^(?:" + names.map(d3.requote).join("|") + ")", "i");
  }
  function d3_time_formatLookup(names) {
    var map = new d3_Map(), i = -1, n = names.length;
    while (++i < n) map.set(names[i].toLowerCase(), i);
    return map;
  }
  function d3_time_parseWeekdayNumber(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 1));
    return n ? (date.w = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseWeekNumberSunday(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i));
    return n ? (date.U = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseWeekNumberMonday(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i));
    return n ? (date.W = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseFullYear(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 4));
    return n ? (date.y = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseYear(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;
  }
  function d3_time_parseZone(date, string, i) {
    return /^[+-]\d{4}$/.test(string = string.substring(i, i + 5)) ? (date.Z = -string, 
    i + 5) : -1;
  }
  function d3_time_expandYear(d) {
    return d + (d > 68 ? 1900 : 2e3);
  }
  function d3_time_parseMonthNumber(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;
  }
  function d3_time_parseDay(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
    return n ? (date.d = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseDayOfYear(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 3));
    return n ? (date.j = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseHour24(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
    return n ? (date.H = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseMinutes(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
    return n ? (date.M = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseSeconds(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 2));
    return n ? (date.S = +n[0], i + n[0].length) : -1;
  }
  function d3_time_parseMilliseconds(date, string, i) {
    d3_time_numberRe.lastIndex = 0;
    var n = d3_time_numberRe.exec(string.substring(i, i + 3));
    return n ? (date.L = +n[0], i + n[0].length) : -1;
  }
  function d3_time_zone(d) {
    var z = d.getTimezoneOffset(), zs = z > 0 ? "-" : "+", zh = ~~(abs(z) / 60), zm = abs(z) % 60;
    return zs + d3_time_formatPad(zh, "0", 2) + d3_time_formatPad(zm, "0", 2);
  }
  function d3_time_parseLiteralPercent(date, string, i) {
    d3_time_percentRe.lastIndex = 0;
    var n = d3_time_percentRe.exec(string.substring(i, i + 1));
    return n ? i + n[0].length : -1;
  }
  function d3_time_formatMulti(formats) {
    var n = formats.length, i = -1;
    while (++i < n) formats[i][0] = this(formats[i][0]);
    return function(date) {
      var i = 0, f = formats[i];
      while (!f[1](date)) f = formats[++i];
      return f[0](date);
    };
  }
  d3.locale = function(locale) {
    return {
      numberFormat: d3_locale_numberFormat(locale),
      timeFormat: d3_locale_timeFormat(locale)
    };
  };
  var d3_locale_enUS = d3.locale({
    decimal: ".",
    thousands: ",",
    grouping: [ 3 ],
    currency: [ "$", "" ],
    dateTime: "%a %b %e %X %Y",
    date: "%m/%d/%Y",
    time: "%H:%M:%S",
    periods: [ "AM", "PM" ],
    days: [ "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" ],
    shortDays: [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ],
    months: [ "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" ],
    shortMonths: [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ]
  });
  d3.format = d3_locale_enUS.numberFormat;
  d3.geo = {};
  function d3_adder() {}
  d3_adder.prototype = {
    s: 0,
    t: 0,
    add: function(y) {
      d3_adderSum(y, this.t, d3_adderTemp);
      d3_adderSum(d3_adderTemp.s, this.s, this);
      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;
    },
    reset: function() {
      this.s = this.t = 0;
    },
    valueOf: function() {
      return this.s;
    }
  };
  var d3_adderTemp = new d3_adder();
  function d3_adderSum(a, b, o) {
    var x = o.s = a + b, bv = x - a, av = x - bv;
    o.t = a - av + (b - bv);
  }
  d3.geo.stream = function(object, listener) {
    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {
      d3_geo_streamObjectType[object.type](object, listener);
    } else {
      d3_geo_streamGeometry(object, listener);
    }
  };
  function d3_geo_streamGeometry(geometry, listener) {
    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {
      d3_geo_streamGeometryType[geometry.type](geometry, listener);
    }
  }
  var d3_geo_streamObjectType = {
    Feature: function(feature, listener) {
      d3_geo_streamGeometry(feature.geometry, listener);
    },
    FeatureCollection: function(object, listener) {
      var features = object.features, i = -1, n = features.length;
      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);
    }
  };
  var d3_geo_streamGeometryType = {
    Sphere: function(object, listener) {
      listener.sphere();
    },
    Point: function(object, listener) {
      object = object.coordinates;
      listener.point(object[0], object[1], object[2]);
    },
    MultiPoint: function(object, listener) {
      var coordinates = object.coordinates, i = -1, n = coordinates.length;
      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);
    },
    LineString: function(object, listener) {
      d3_geo_streamLine(object.coordinates, listener, 0);
    },
    MultiLineString: function(object, listener) {
      var coordinates = object.coordinates, i = -1, n = coordinates.length;
      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);
    },
    Polygon: function(object, listener) {
      d3_geo_streamPolygon(object.coordinates, listener);
    },
    MultiPolygon: function(object, listener) {
      var coordinates = object.coordinates, i = -1, n = coordinates.length;
      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);
    },
    GeometryCollection: function(object, listener) {
      var geometries = object.geometries, i = -1, n = geometries.length;
      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);
    }
  };
  function d3_geo_streamLine(coordinates, listener, closed) {
    var i = -1, n = coordinates.length - closed, coordinate;
    listener.lineStart();
    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);
    listener.lineEnd();
  }
  function d3_geo_streamPolygon(coordinates, listener) {
    var i = -1, n = coordinates.length;
    listener.polygonStart();
    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);
    listener.polygonEnd();
  }
  d3.geo.area = function(object) {
    d3_geo_areaSum = 0;
    d3.geo.stream(object, d3_geo_area);
    return d3_geo_areaSum;
  };
  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();
  var d3_geo_area = {
    sphere: function() {
      d3_geo_areaSum += 4 * π;
    },
    point: d3_noop,
    lineStart: d3_noop,
    lineEnd: d3_noop,
    polygonStart: function() {
      d3_geo_areaRingSum.reset();
      d3_geo_area.lineStart = d3_geo_areaRingStart;
    },
    polygonEnd: function() {
      var area = 2 * d3_geo_areaRingSum;
      d3_geo_areaSum += area < 0 ? 4 * π + area : area;
      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;
    }
  };
  function d3_geo_areaRingStart() {
    var λ00, φ00, λ0, cosφ0, sinφ0;
    d3_geo_area.point = function(λ, φ) {
      d3_geo_area.point = nextPoint;
      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), 
      sinφ0 = Math.sin(φ);
    };
    function nextPoint(λ, φ) {
      λ *= d3_radians;
      φ = φ * d3_radians / 2 + π / 4;
      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);
      d3_geo_areaRingSum.add(Math.atan2(v, u));
      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;
    }
    d3_geo_area.lineEnd = function() {
      nextPoint(λ00, φ00);
    };
  }
  function d3_geo_cartesian(spherical) {
    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);
    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];
  }
  function d3_geo_cartesianDot(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
  }
  function d3_geo_cartesianCross(a, b) {
    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];
  }
  function d3_geo_cartesianAdd(a, b) {
    a[0] += b[0];
    a[1] += b[1];
    a[2] += b[2];
  }
  function d3_geo_cartesianScale(vector, k) {
    return [ vector[0] * k, vector[1] * k, vector[2] * k ];
  }
  function d3_geo_cartesianNormalize(d) {
    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
    d[0] /= l;
    d[1] /= l;
    d[2] /= l;
  }
  function d3_geo_spherical(cartesian) {
    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];
  }
  function d3_geo_sphericalEqual(a, b) {
    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;
  }
  d3.geo.bounds = function() {
    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;
    var bound = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function() {
        bound.point = ringPoint;
        bound.lineStart = ringStart;
        bound.lineEnd = ringEnd;
        dλSum = 0;
        d3_geo_area.polygonStart();
      },
      polygonEnd: function() {
        d3_geo_area.polygonEnd();
        bound.point = point;
        bound.lineStart = lineStart;
        bound.lineEnd = lineEnd;
        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;
        range[0] = λ0, range[1] = λ1;
      }
    };
    function point(λ, φ) {
      ranges.push(range = [ λ0 = λ, λ1 = λ ]);
      if (φ < φ0) φ0 = φ;
      if (φ > φ1) φ1 = φ;
    }
    function linePoint(λ, φ) {
      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);
      if (p0) {
        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);
        d3_geo_cartesianNormalize(inflection);
        inflection = d3_geo_spherical(inflection);
        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;
        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
          var φi = inflection[1] * d3_degrees;
          if (φi > φ1) φ1 = φi;
        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {
          var φi = -inflection[1] * d3_degrees;
          if (φi < φ0) φ0 = φi;
        } else {
          if (φ < φ0) φ0 = φ;
          if (φ > φ1) φ1 = φ;
        }
        if (antimeridian) {
          if (λ < λ_) {
            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
          } else {
            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
          }
        } else {
          if (λ1 >= λ0) {
            if (λ < λ0) λ0 = λ;
            if (λ > λ1) λ1 = λ;
          } else {
            if (λ > λ_) {
              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;
            } else {
              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;
            }
          }
        }
      } else {
        point(λ, φ);
      }
      p0 = p, λ_ = λ;
    }
    function lineStart() {
      bound.point = linePoint;
    }
    function lineEnd() {
      range[0] = λ0, range[1] = λ1;
      bound.point = point;
      p0 = null;
    }
    function ringPoint(λ, φ) {
      if (p0) {
        var dλ = λ - λ_;
        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;
      } else λ__ = λ, φ__ = φ;
      d3_geo_area.point(λ, φ);
      linePoint(λ, φ);
    }
    function ringStart() {
      d3_geo_area.lineStart();
    }
    function ringEnd() {
      ringPoint(λ__, φ__);
      d3_geo_area.lineEnd();
      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);
      range[0] = λ0, range[1] = λ1;
      p0 = null;
    }
    function angle(λ0, λ1) {
      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;
    }
    function compareRanges(a, b) {
      return a[0] - b[0];
    }
    function withinRange(x, range) {
      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
    }
    return function(feature) {
      φ1 = λ1 = -(λ0 = φ0 = Infinity);
      ranges = [];
      d3.geo.stream(feature, bound);
      var n = ranges.length;
      if (n) {
        ranges.sort(compareRanges);
        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {
          b = ranges[i];
          if (withinRange(b[0], a) || withinRange(b[1], a)) {
            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
          } else {
            merged.push(a = b);
          }
        }
        var best = -Infinity, dλ;
        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {
          b = merged[i];
          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];
        }
      }
      ranges = range = null;
      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];
    };
  }();
  d3.geo.centroid = function(object) {
    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
    d3.geo.stream(object, d3_geo_centroid);
    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;
    if (m < ε2) {
      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;
      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;
      m = x * x + y * y + z * z;
      if (m < ε2) return [ NaN, NaN ];
    }
    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];
  };
  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;
  var d3_geo_centroid = {
    sphere: d3_noop,
    point: d3_geo_centroidPoint,
    lineStart: d3_geo_centroidLineStart,
    lineEnd: d3_geo_centroidLineEnd,
    polygonStart: function() {
      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;
    },
    polygonEnd: function() {
      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;
    }
  };
  function d3_geo_centroidPoint(λ, φ) {
    λ *= d3_radians;
    var cosφ = Math.cos(φ *= d3_radians);
    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));
  }
  function d3_geo_centroidPointXYZ(x, y, z) {
    ++d3_geo_centroidW0;
    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;
    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;
    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;
  }
  function d3_geo_centroidLineStart() {
    var x0, y0, z0;
    d3_geo_centroid.point = function(λ, φ) {
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians);
      x0 = cosφ * Math.cos(λ);
      y0 = cosφ * Math.sin(λ);
      z0 = Math.sin(φ);
      d3_geo_centroid.point = nextPoint;
      d3_geo_centroidPointXYZ(x0, y0, z0);
    };
    function nextPoint(λ, φ) {
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
      d3_geo_centroidW1 += w;
      d3_geo_centroidX1 += w * (x0 + (x0 = x));
      d3_geo_centroidY1 += w * (y0 + (y0 = y));
      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
      d3_geo_centroidPointXYZ(x0, y0, z0);
    }
  }
  function d3_geo_centroidLineEnd() {
    d3_geo_centroid.point = d3_geo_centroidPoint;
  }
  function d3_geo_centroidRingStart() {
    var λ00, φ00, x0, y0, z0;
    d3_geo_centroid.point = function(λ, φ) {
      λ00 = λ, φ00 = φ;
      d3_geo_centroid.point = nextPoint;
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians);
      x0 = cosφ * Math.cos(λ);
      y0 = cosφ * Math.sin(λ);
      z0 = Math.sin(φ);
      d3_geo_centroidPointXYZ(x0, y0, z0);
    };
    d3_geo_centroid.lineEnd = function() {
      nextPoint(λ00, φ00);
      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;
      d3_geo_centroid.point = d3_geo_centroidPoint;
    };
    function nextPoint(λ, φ) {
      λ *= d3_radians;
      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);
      d3_geo_centroidX2 += v * cx;
      d3_geo_centroidY2 += v * cy;
      d3_geo_centroidZ2 += v * cz;
      d3_geo_centroidW1 += w;
      d3_geo_centroidX1 += w * (x0 + (x0 = x));
      d3_geo_centroidY1 += w * (y0 + (y0 = y));
      d3_geo_centroidZ1 += w * (z0 + (z0 = z));
      d3_geo_centroidPointXYZ(x0, y0, z0);
    }
  }
  function d3_true() {
    return true;
  }
  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {
    var subject = [], clip = [];
    segments.forEach(function(segment) {
      if ((n = segment.length - 1) <= 0) return;
      var n, p0 = segment[0], p1 = segment[n];
      if (d3_geo_sphericalEqual(p0, p1)) {
        listener.lineStart();
        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);
        listener.lineEnd();
        return;
      }
      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);
      a.o = b;
      subject.push(a);
      clip.push(b);
      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);
      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);
      a.o = b;
      subject.push(a);
      clip.push(b);
    });
    clip.sort(compare);
    d3_geo_clipPolygonLinkCircular(subject);
    d3_geo_clipPolygonLinkCircular(clip);
    if (!subject.length) return;
    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {
      clip[i].e = entry = !entry;
    }
    var start = subject[0], points, point;
    while (1) {
      var current = start, isSubject = true;
      while (current.v) if ((current = current.n) === start) return;
      points = current.z;
      listener.lineStart();
      do {
        current.v = current.o.v = true;
        if (current.e) {
          if (isSubject) {
            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);
          } else {
            interpolate(current.x, current.n.x, 1, listener);
          }
          current = current.n;
        } else {
          if (isSubject) {
            points = current.p.z;
            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);
          } else {
            interpolate(current.x, current.p.x, -1, listener);
          }
          current = current.p;
        }
        current = current.o;
        points = current.z;
        isSubject = !isSubject;
      } while (!current.v);
      listener.lineEnd();
    }
  }
  function d3_geo_clipPolygonLinkCircular(array) {
    if (!(n = array.length)) return;
    var n, i = 0, a = array[0], b;
    while (++i < n) {
      a.n = b = array[i];
      b.p = a;
      a = b;
    }
    a.n = b = array[0];
    b.p = a;
  }
  function d3_geo_clipPolygonIntersection(point, points, other, entry) {
    this.x = point;
    this.z = points;
    this.o = other;
    this.e = entry;
    this.v = false;
    this.n = this.p = null;
  }
  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {
    return function(rotate, listener) {
      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);
      var clip = {
        point: point,
        lineStart: lineStart,
        lineEnd: lineEnd,
        polygonStart: function() {
          clip.point = pointRing;
          clip.lineStart = ringStart;
          clip.lineEnd = ringEnd;
          segments = [];
          polygon = [];
        },
        polygonEnd: function() {
          clip.point = point;
          clip.lineStart = lineStart;
          clip.lineEnd = lineEnd;
          segments = d3.merge(segments);
          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);
          if (segments.length) {
            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);
          } else if (clipStartInside) {
            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
            listener.lineStart();
            interpolate(null, null, 1, listener);
            listener.lineEnd();
          }
          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;
          segments = polygon = null;
        },
        sphere: function() {
          listener.polygonStart();
          listener.lineStart();
          interpolate(null, null, 1, listener);
          listener.lineEnd();
          listener.polygonEnd();
        }
      };
      function point(λ, φ) {
        var point = rotate(λ, φ);
        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);
      }
      function pointLine(λ, φ) {
        var point = rotate(λ, φ);
        line.point(point[0], point[1]);
      }
      function lineStart() {
        clip.point = pointLine;
        line.lineStart();
      }
      function lineEnd() {
        clip.point = point;
        line.lineEnd();
      }
      var segments;
      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;
      function pointRing(λ, φ) {
        ring.push([ λ, φ ]);
        var point = rotate(λ, φ);
        ringListener.point(point[0], point[1]);
      }
      function ringStart() {
        ringListener.lineStart();
        ring = [];
      }
      function ringEnd() {
        pointRing(ring[0][0], ring[0][1]);
        ringListener.lineEnd();
        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;
        ring.pop();
        polygon.push(ring);
        ring = null;
        if (!n) return;
        if (clean & 1) {
          segment = ringSegments[0];
          var n = segment.length - 1, i = -1, point;
          if (n > 0) {
            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;
            listener.lineStart();
            while (++i < n) listener.point((point = segment[i])[0], point[1]);
            listener.lineEnd();
          }
          return;
        }
        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));
      }
      return clip;
    };
  }
  function d3_geo_clipSegmentLength1(segment) {
    return segment.length > 1;
  }
  function d3_geo_clipBufferListener() {
    var lines = [], line;
    return {
      lineStart: function() {
        lines.push(line = []);
      },
      point: function(λ, φ) {
        line.push([ λ, φ ]);
      },
      lineEnd: d3_noop,
      buffer: function() {
        var buffer = lines;
        lines = [];
        line = null;
        return buffer;
      },
      rejoin: function() {
        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
      }
    };
  }
  function d3_geo_clipSort(a, b) {
    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);
  }
  function d3_geo_pointInPolygon(point, polygon) {
    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;
    d3_geo_areaRingSum.reset();
    for (var i = 0, n = polygon.length; i < n; ++i) {
      var ring = polygon[i], m = ring.length;
      if (!m) continue;
      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;
      while (true) {
        if (j === m) j = 0;
        point = ring[j];
        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;
        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));
        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;
        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {
          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));
          d3_geo_cartesianNormalize(arc);
          var intersection = d3_geo_cartesianCross(meridianNormal, arc);
          d3_geo_cartesianNormalize(intersection);
          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);
          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {
            winding += antimeridian ^ dλ >= 0 ? 1 : -1;
          }
        }
        if (!j++) break;
        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;
      }
    }
    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;
  }
  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);
  function d3_geo_clipAntimeridianLine(listener) {
    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;
    return {
      lineStart: function() {
        listener.lineStart();
        clean = 1;
      },
      point: function(λ1, φ1) {
        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);
        if (abs(dλ - π) < ε) {
          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);
          listener.point(sλ0, φ0);
          listener.lineEnd();
          listener.lineStart();
          listener.point(sλ1, φ0);
          listener.point(λ1, φ0);
          clean = 0;
        } else if (sλ0 !== sλ1 && dλ >= π) {
          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;
          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;
          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);
          listener.point(sλ0, φ0);
          listener.lineEnd();
          listener.lineStart();
          listener.point(sλ1, φ0);
          clean = 0;
        }
        listener.point(λ0 = λ1, φ0 = φ1);
        sλ0 = sλ1;
      },
      lineEnd: function() {
        listener.lineEnd();
        λ0 = φ0 = NaN;
      },
      clean: function() {
        return 2 - clean;
      }
    };
  }
  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {
    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);
    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;
  }
  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {
    var φ;
    if (from == null) {
      φ = direction * halfπ;
      listener.point(-π, φ);
      listener.point(0, φ);
      listener.point(π, φ);
      listener.point(π, 0);
      listener.point(π, -φ);
      listener.point(0, -φ);
      listener.point(-π, -φ);
      listener.point(-π, 0);
      listener.point(-π, φ);
    } else if (abs(from[0] - to[0]) > ε) {
      var s = from[0] < to[0] ? π : -π;
      φ = direction * s / 2;
      listener.point(-s, φ);
      listener.point(0, φ);
      listener.point(s, φ);
    } else {
      listener.point(to[0], to[1]);
    }
  }
  function d3_geo_clipCircle(radius) {
    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);
    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);
    function visible(λ, φ) {
      return Math.cos(λ) * Math.cos(φ) > cr;
    }
    function clipLine(listener) {
      var point0, c0, v0, v00, clean;
      return {
        lineStart: function() {
          v00 = v0 = false;
          clean = 1;
        },
        point: function(λ, φ) {
          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;
          if (!point0 && (v00 = v0 = v)) listener.lineStart();
          if (v !== v0) {
            point2 = intersect(point0, point1);
            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {
              point1[0] += ε;
              point1[1] += ε;
              v = visible(point1[0], point1[1]);
            }
          }
          if (v !== v0) {
            clean = 0;
            if (v) {
              listener.lineStart();
              point2 = intersect(point1, point0);
              listener.point(point2[0], point2[1]);
            } else {
              point2 = intersect(point0, point1);
              listener.point(point2[0], point2[1]);
              listener.lineEnd();
            }
            point0 = point2;
          } else if (notHemisphere && point0 && smallRadius ^ v) {
            var t;
            if (!(c & c0) && (t = intersect(point1, point0, true))) {
              clean = 0;
              if (smallRadius) {
                listener.lineStart();
                listener.point(t[0][0], t[0][1]);
                listener.point(t[1][0], t[1][1]);
                listener.lineEnd();
              } else {
                listener.point(t[1][0], t[1][1]);
                listener.lineEnd();
                listener.lineStart();
                listener.point(t[0][0], t[0][1]);
              }
            }
          }
          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {
            listener.point(point1[0], point1[1]);
          }
          point0 = point1, v0 = v, c0 = c;
        },
        lineEnd: function() {
          if (v0) listener.lineEnd();
          point0 = null;
        },
        clean: function() {
          return clean | (v00 && v0) << 1;
        }
      };
    }
    function intersect(a, b, two) {
      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);
      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;
      if (!determinant) return !two && a;
      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);
      d3_geo_cartesianAdd(A, B);
      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);
      if (t2 < 0) return;
      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);
      d3_geo_cartesianAdd(q, A);
      q = d3_geo_spherical(q);
      if (!two) return q;
      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;
      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;
      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;
      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;
      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {
        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);
        d3_geo_cartesianAdd(q1, A);
        return [ q, d3_geo_spherical(q1) ];
      }
    }
    function code(λ, φ) {
      var r = smallRadius ? radius : π - radius, code = 0;
      if (λ < -r) code |= 1; else if (λ > r) code |= 2;
      if (φ < -r) code |= 4; else if (φ > r) code |= 8;
      return code;
    }
  }
  function d3_geom_clipLine(x0, y0, x1, y1) {
    return function(line) {
      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;
      r = x0 - ax;
      if (!dx && r > 0) return;
      r /= dx;
      if (dx < 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      } else if (dx > 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      }
      r = x1 - ax;
      if (!dx && r < 0) return;
      r /= dx;
      if (dx < 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      } else if (dx > 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      }
      r = y0 - ay;
      if (!dy && r > 0) return;
      r /= dy;
      if (dy < 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      } else if (dy > 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      }
      r = y1 - ay;
      if (!dy && r < 0) return;
      r /= dy;
      if (dy < 0) {
        if (r > t1) return;
        if (r > t0) t0 = r;
      } else if (dy > 0) {
        if (r < t0) return;
        if (r < t1) t1 = r;
      }
      if (t0 > 0) line.a = {
        x: ax + t0 * dx,
        y: ay + t0 * dy
      };
      if (t1 < 1) line.b = {
        x: ax + t1 * dx,
        y: ay + t1 * dy
      };
      return line;
    };
  }
  var d3_geo_clipExtentMAX = 1e9;
  d3.geo.clipExtent = function() {
    var x0, y0, x1, y1, stream, clip, clipExtent = {
      stream: function(output) {
        if (stream) stream.valid = false;
        stream = clip(output);
        stream.valid = true;
        return stream;
      },
      extent: function(_) {
        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);
        if (stream) stream.valid = false, stream = null;
        return clipExtent;
      }
    };
    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);
  };
  function d3_geo_clipExtent(x0, y0, x1, y1) {
    return function(listener) {
      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;
      var clip = {
        point: point,
        lineStart: lineStart,
        lineEnd: lineEnd,
        polygonStart: function() {
          listener = bufferListener;
          segments = [];
          polygon = [];
          clean = true;
        },
        polygonEnd: function() {
          listener = listener_;
          segments = d3.merge(segments);
          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;
          if (inside || visible) {
            listener.polygonStart();
            if (inside) {
              listener.lineStart();
              interpolate(null, null, 1, listener);
              listener.lineEnd();
            }
            if (visible) {
              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);
            }
            listener.polygonEnd();
          }
          segments = polygon = ring = null;
        }
      };
      function insidePolygon(p) {
        var wn = 0, n = polygon.length, y = p[1];
        for (var i = 0; i < n; ++i) {
          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {
            b = v[j];
            if (a[1] <= y) {
              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;
            } else {
              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;
            }
            a = b;
          }
        }
        return wn !== 0;
      }
      function interpolate(from, to, direction, listener) {
        var a = 0, a1 = 0;
        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {
          do {
            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
          } while ((a = (a + direction + 4) % 4) !== a1);
        } else {
          listener.point(to[0], to[1]);
        }
      }
      function pointVisible(x, y) {
        return x0 <= x && x <= x1 && y0 <= y && y <= y1;
      }
      function point(x, y) {
        if (pointVisible(x, y)) listener.point(x, y);
      }
      var x__, y__, v__, x_, y_, v_, first, clean;
      function lineStart() {
        clip.point = linePoint;
        if (polygon) polygon.push(ring = []);
        first = true;
        v_ = false;
        x_ = y_ = NaN;
      }
      function lineEnd() {
        if (segments) {
          linePoint(x__, y__);
          if (v__ && v_) bufferListener.rejoin();
          segments.push(bufferListener.buffer());
        }
        clip.point = point;
        if (v_) listener.lineEnd();
      }
      function linePoint(x, y) {
        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));
        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));
        var v = pointVisible(x, y);
        if (polygon) ring.push([ x, y ]);
        if (first) {
          x__ = x, y__ = y, v__ = v;
          first = false;
          if (v) {
            listener.lineStart();
            listener.point(x, y);
          }
        } else {
          if (v && v_) listener.point(x, y); else {
            var l = {
              a: {
                x: x_,
                y: y_
              },
              b: {
                x: x,
                y: y
              }
            };
            if (clipLine(l)) {
              if (!v_) {
                listener.lineStart();
                listener.point(l.a.x, l.a.y);
              }
              listener.point(l.b.x, l.b.y);
              if (!v) listener.lineEnd();
              clean = false;
            } else if (v) {
              listener.lineStart();
              listener.point(x, y);
              clean = false;
            }
          }
        }
        x_ = x, y_ = y, v_ = v;
      }
      return clip;
    };
    function corner(p, direction) {
      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;
    }
    function compare(a, b) {
      return comparePoints(a.x, b.x);
    }
    function comparePoints(a, b) {
      var ca = corner(a, 1), cb = corner(b, 1);
      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
    }
  }
  function d3_geo_compose(a, b) {
    function compose(x, y) {
      return x = a(x, y), b(x[0], x[1]);
    }
    if (a.invert && b.invert) compose.invert = function(x, y) {
      return x = b.invert(x, y), x && a.invert(x[0], x[1]);
    };
    return compose;
  }
  function d3_geo_conic(projectAt) {
    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);
    p.parallels = function(_) {
      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];
      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);
    };
    return p;
  }
  function d3_geo_conicEqualArea(φ0, φ1) {
    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;
    function forward(λ, φ) {
      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;
      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];
    }
    forward.invert = function(x, y) {
      var ρ0_y = ρ0 - y;
      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];
    };
    return forward;
  }
  (d3.geo.conicEqualArea = function() {
    return d3_geo_conic(d3_geo_conicEqualArea);
  }).raw = d3_geo_conicEqualArea;
  d3.geo.albers = function() {
    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);
  };
  d3.geo.albersUsa = function() {
    var lower48 = d3.geo.albers();
    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);
    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);
    var point, pointStream = {
      point: function(x, y) {
        point = [ x, y ];
      }
    }, lower48Point, alaskaPoint, hawaiiPoint;
    function albersUsa(coordinates) {
      var x = coordinates[0], y = coordinates[1];
      point = null;
      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);
      return point;
    }
    albersUsa.invert = function(coordinates) {
      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;
      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);
    };
    albersUsa.stream = function(stream) {
      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);
      return {
        point: function(x, y) {
          lower48Stream.point(x, y);
          alaskaStream.point(x, y);
          hawaiiStream.point(x, y);
        },
        sphere: function() {
          lower48Stream.sphere();
          alaskaStream.sphere();
          hawaiiStream.sphere();
        },
        lineStart: function() {
          lower48Stream.lineStart();
          alaskaStream.lineStart();
          hawaiiStream.lineStart();
        },
        lineEnd: function() {
          lower48Stream.lineEnd();
          alaskaStream.lineEnd();
          hawaiiStream.lineEnd();
        },
        polygonStart: function() {
          lower48Stream.polygonStart();
          alaskaStream.polygonStart();
          hawaiiStream.polygonStart();
        },
        polygonEnd: function() {
          lower48Stream.polygonEnd();
          alaskaStream.polygonEnd();
          hawaiiStream.polygonEnd();
        }
      };
    };
    albersUsa.precision = function(_) {
      if (!arguments.length) return lower48.precision();
      lower48.precision(_);
      alaska.precision(_);
      hawaii.precision(_);
      return albersUsa;
    };
    albersUsa.scale = function(_) {
      if (!arguments.length) return lower48.scale();
      lower48.scale(_);
      alaska.scale(_ * .35);
      hawaii.scale(_);
      return albersUsa.translate(lower48.translate());
    };
    albersUsa.translate = function(_) {
      if (!arguments.length) return lower48.translate();
      var k = lower48.scale(), x = +_[0], y = +_[1];
      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;
      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;
      return albersUsa;
    };
    return albersUsa.scale(1070);
  };
  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {
    point: d3_noop,
    lineStart: d3_noop,
    lineEnd: d3_noop,
    polygonStart: function() {
      d3_geo_pathAreaPolygon = 0;
      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;
    },
    polygonEnd: function() {
      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;
      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);
    }
  };
  function d3_geo_pathAreaRingStart() {
    var x00, y00, x0, y0;
    d3_geo_pathArea.point = function(x, y) {
      d3_geo_pathArea.point = nextPoint;
      x00 = x0 = x, y00 = y0 = y;
    };
    function nextPoint(x, y) {
      d3_geo_pathAreaPolygon += y0 * x - x0 * y;
      x0 = x, y0 = y;
    }
    d3_geo_pathArea.lineEnd = function() {
      nextPoint(x00, y00);
    };
  }
  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;
  var d3_geo_pathBounds = {
    point: d3_geo_pathBoundsPoint,
    lineStart: d3_noop,
    lineEnd: d3_noop,
    polygonStart: d3_noop,
    polygonEnd: d3_noop
  };
  function d3_geo_pathBoundsPoint(x, y) {
    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;
    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;
    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;
    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;
  }
  function d3_geo_pathBuffer() {
    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];
    var stream = {
      point: point,
      lineStart: function() {
        stream.point = pointLineStart;
      },
      lineEnd: lineEnd,
      polygonStart: function() {
        stream.lineEnd = lineEndPolygon;
      },
      polygonEnd: function() {
        stream.lineEnd = lineEnd;
        stream.point = point;
      },
      pointRadius: function(_) {
        pointCircle = d3_geo_pathBufferCircle(_);
        return stream;
      },
      result: function() {
        if (buffer.length) {
          var result = buffer.join("");
          buffer = [];
          return result;
        }
      }
    };
    function point(x, y) {
      buffer.push("M", x, ",", y, pointCircle);
    }
    function pointLineStart(x, y) {
      buffer.push("M", x, ",", y);
      stream.point = pointLine;
    }
    function pointLine(x, y) {
      buffer.push("L", x, ",", y);
    }
    function lineEnd() {
      stream.point = point;
    }
    function lineEndPolygon() {
      buffer.push("Z");
    }
    return stream;
  }
  function d3_geo_pathBufferCircle(radius) {
    return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
  }
  var d3_geo_pathCentroid = {
    point: d3_geo_pathCentroidPoint,
    lineStart: d3_geo_pathCentroidLineStart,
    lineEnd: d3_geo_pathCentroidLineEnd,
    polygonStart: function() {
      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;
    },
    polygonEnd: function() {
      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;
      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;
    }
  };
  function d3_geo_pathCentroidPoint(x, y) {
    d3_geo_centroidX0 += x;
    d3_geo_centroidY0 += y;
    ++d3_geo_centroidZ0;
  }
  function d3_geo_pathCentroidLineStart() {
    var x0, y0;
    d3_geo_pathCentroid.point = function(x, y) {
      d3_geo_pathCentroid.point = nextPoint;
      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
    };
    function nextPoint(x, y) {
      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
      d3_geo_centroidX1 += z * (x0 + x) / 2;
      d3_geo_centroidY1 += z * (y0 + y) / 2;
      d3_geo_centroidZ1 += z;
      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
    }
  }
  function d3_geo_pathCentroidLineEnd() {
    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;
  }
  function d3_geo_pathCentroidRingStart() {
    var x00, y00, x0, y0;
    d3_geo_pathCentroid.point = function(x, y) {
      d3_geo_pathCentroid.point = nextPoint;
      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);
    };
    function nextPoint(x, y) {
      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);
      d3_geo_centroidX1 += z * (x0 + x) / 2;
      d3_geo_centroidY1 += z * (y0 + y) / 2;
      d3_geo_centroidZ1 += z;
      z = y0 * x - x0 * y;
      d3_geo_centroidX2 += z * (x0 + x);
      d3_geo_centroidY2 += z * (y0 + y);
      d3_geo_centroidZ2 += z * 3;
      d3_geo_pathCentroidPoint(x0 = x, y0 = y);
    }
    d3_geo_pathCentroid.lineEnd = function() {
      nextPoint(x00, y00);
    };
  }
  function d3_geo_pathContext(context) {
    var pointRadius = 4.5;
    var stream = {
      point: point,
      lineStart: function() {
        stream.point = pointLineStart;
      },
      lineEnd: lineEnd,
      polygonStart: function() {
        stream.lineEnd = lineEndPolygon;
      },
      polygonEnd: function() {
        stream.lineEnd = lineEnd;
        stream.point = point;
      },
      pointRadius: function(_) {
        pointRadius = _;
        return stream;
      },
      result: d3_noop
    };
    function point(x, y) {
      context.moveTo(x, y);
      context.arc(x, y, pointRadius, 0, τ);
    }
    function pointLineStart(x, y) {
      context.moveTo(x, y);
      stream.point = pointLine;
    }
    function pointLine(x, y) {
      context.lineTo(x, y);
    }
    function lineEnd() {
      stream.point = point;
    }
    function lineEndPolygon() {
      context.closePath();
    }
    return stream;
  }
  function d3_geo_resample(project) {
    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;
    function resample(stream) {
      return (maxDepth ? resampleRecursive : resampleNone)(stream);
    }
    function resampleNone(stream) {
      return d3_geo_transformPoint(stream, function(x, y) {
        x = project(x, y);
        stream.point(x[0], x[1]);
      });
    }
    function resampleRecursive(stream) {
      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;
      var resample = {
        point: point,
        lineStart: lineStart,
        lineEnd: lineEnd,
        polygonStart: function() {
          stream.polygonStart();
          resample.lineStart = ringStart;
        },
        polygonEnd: function() {
          stream.polygonEnd();
          resample.lineStart = lineStart;
        }
      };
      function point(x, y) {
        x = project(x, y);
        stream.point(x[0], x[1]);
      }
      function lineStart() {
        x0 = NaN;
        resample.point = linePoint;
        stream.lineStart();
      }
      function linePoint(λ, φ) {
        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);
        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
        stream.point(x0, y0);
      }
      function lineEnd() {
        resample.point = point;
        stream.lineEnd();
      }
      function ringStart() {
        lineStart();
        resample.point = ringPoint;
        resample.lineEnd = ringEnd;
      }
      function ringPoint(λ, φ) {
        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
        resample.point = linePoint;
      }
      function ringEnd() {
        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);
        resample.lineEnd = lineEnd;
        lineEnd();
      }
      return resample;
    }
    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {
      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;
      if (d2 > 4 * δ2 && depth--) {
        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;
        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);
          stream.point(x2, y2);
          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);
        }
      }
    }
    resample.precision = function(_) {
      if (!arguments.length) return Math.sqrt(δ2);
      maxDepth = (δ2 = _ * _) > 0 && 16;
      return resample;
    };
    return resample;
  }
  d3.geo.path = function() {
    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;
    function path(object) {
      if (object) {
        if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);
        d3.geo.stream(object, cacheStream);
      }
      return contextStream.result();
    }
    path.area = function(object) {
      d3_geo_pathAreaSum = 0;
      d3.geo.stream(object, projectStream(d3_geo_pathArea));
      return d3_geo_pathAreaSum;
    };
    path.centroid = function(object) {
      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;
      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));
      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];
    };
    path.bounds = function(object) {
      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);
      d3.geo.stream(object, projectStream(d3_geo_pathBounds));
      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];
    };
    path.projection = function(_) {
      if (!arguments.length) return projection;
      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;
      return reset();
    };
    path.context = function(_) {
      if (!arguments.length) return context;
      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);
      if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
      return reset();
    };
    path.pointRadius = function(_) {
      if (!arguments.length) return pointRadius;
      pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
      return path;
    };
    function reset() {
      cacheStream = null;
      return path;
    }
    return path.projection(d3.geo.albersUsa()).context(null);
  };
  function d3_geo_pathProjectStream(project) {
    var resample = d3_geo_resample(function(x, y) {
      return project([ x * d3_degrees, y * d3_degrees ]);
    });
    return function(stream) {
      return d3_geo_projectionRadians(resample(stream));
    };
  }
  d3.geo.transform = function(methods) {
    return {
      stream: function(stream) {
        var transform = new d3_geo_transform(stream);
        for (var k in methods) transform[k] = methods[k];
        return transform;
      }
    };
  };
  function d3_geo_transform(stream) {
    this.stream = stream;
  }
  d3_geo_transform.prototype = {
    point: function(x, y) {
      this.stream.point(x, y);
    },
    sphere: function() {
      this.stream.sphere();
    },
    lineStart: function() {
      this.stream.lineStart();
    },
    lineEnd: function() {
      this.stream.lineEnd();
    },
    polygonStart: function() {
      this.stream.polygonStart();
    },
    polygonEnd: function() {
      this.stream.polygonEnd();
    }
  };
  function d3_geo_transformPoint(stream, point) {
    return {
      point: point,
      sphere: function() {
        stream.sphere();
      },
      lineStart: function() {
        stream.lineStart();
      },
      lineEnd: function() {
        stream.lineEnd();
      },
      polygonStart: function() {
        stream.polygonStart();
      },
      polygonEnd: function() {
        stream.polygonEnd();
      }
    };
  }
  d3.geo.projection = d3_geo_projection;
  d3.geo.projectionMutator = d3_geo_projectionMutator;
  function d3_geo_projection(project) {
    return d3_geo_projectionMutator(function() {
      return project;
    })();
  }
  function d3_geo_projectionMutator(projectAt) {
    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {
      x = project(x, y);
      return [ x[0] * k + δx, δy - x[1] * k ];
    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;
    function projection(point) {
      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);
      return [ point[0] * k + δx, δy - point[1] * k ];
    }
    function invert(point) {
      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);
      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];
    }
    projection.stream = function(output) {
      if (stream) stream.valid = false;
      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));
      stream.valid = true;
      return stream;
    };
    projection.clipAngle = function(_) {
      if (!arguments.length) return clipAngle;
      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);
      return invalidate();
    };
    projection.clipExtent = function(_) {
      if (!arguments.length) return clipExtent;
      clipExtent = _;
      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;
      return invalidate();
    };
    projection.scale = function(_) {
      if (!arguments.length) return k;
      k = +_;
      return reset();
    };
    projection.translate = function(_) {
      if (!arguments.length) return [ x, y ];
      x = +_[0];
      y = +_[1];
      return reset();
    };
    projection.center = function(_) {
      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];
      λ = _[0] % 360 * d3_radians;
      φ = _[1] % 360 * d3_radians;
      return reset();
    };
    projection.rotate = function(_) {
      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];
      δλ = _[0] % 360 * d3_radians;
      δφ = _[1] % 360 * d3_radians;
      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;
      return reset();
    };
    d3.rebind(projection, projectResample, "precision");
    function reset() {
      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);
      var center = project(λ, φ);
      δx = x - center[0] * k;
      δy = y + center[1] * k;
      return invalidate();
    }
    function invalidate() {
      if (stream) stream.valid = false, stream = null;
      return projection;
    }
    return function() {
      project = projectAt.apply(this, arguments);
      projection.invert = project.invert && invert;
      return reset();
    };
  }
  function d3_geo_projectionRadians(stream) {
    return d3_geo_transformPoint(stream, function(x, y) {
      stream.point(x * d3_radians, y * d3_radians);
    });
  }
  function d3_geo_equirectangular(λ, φ) {
    return [ λ, φ ];
  }
  (d3.geo.equirectangular = function() {
    return d3_geo_projection(d3_geo_equirectangular);
  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;
  d3.geo.rotation = function(rotate) {
    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);
    function forward(coordinates) {
      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
    }
    forward.invert = function(coordinates) {
      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);
      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;
    };
    return forward;
  };
  function d3_geo_identityRotation(λ, φ) {
    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
  }
  d3_geo_identityRotation.invert = d3_geo_equirectangular;
  function d3_geo_rotation(δλ, δφ, δγ) {
    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;
  }
  function d3_geo_forwardRotationλ(δλ) {
    return function(λ, φ) {
      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];
    };
  }
  function d3_geo_rotationλ(δλ) {
    var rotation = d3_geo_forwardRotationλ(δλ);
    rotation.invert = d3_geo_forwardRotationλ(-δλ);
    return rotation;
  }
  function d3_geo_rotationφγ(δφ, δγ) {
    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);
    function rotation(λ, φ) {
      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;
      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];
    }
    rotation.invert = function(λ, φ) {
      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;
      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];
    };
    return rotation;
  }
  d3.geo.circle = function() {
    var origin = [ 0, 0 ], angle, precision = 6, interpolate;
    function circle() {
      var center = typeof origin === "function" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];
      interpolate(null, null, 1, {
        point: function(x, y) {
          ring.push(x = rotate(x, y));
          x[0] *= d3_degrees, x[1] *= d3_degrees;
        }
      });
      return {
        type: "Polygon",
        coordinates: [ ring ]
      };
    }
    circle.origin = function(x) {
      if (!arguments.length) return origin;
      origin = x;
      return circle;
    };
    circle.angle = function(x) {
      if (!arguments.length) return angle;
      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);
      return circle;
    };
    circle.precision = function(_) {
      if (!arguments.length) return precision;
      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);
      return circle;
    };
    return circle.angle(90);
  };
  function d3_geo_circleInterpolate(radius, precision) {
    var cr = Math.cos(radius), sr = Math.sin(radius);
    return function(from, to, direction, listener) {
      var step = direction * precision;
      if (from != null) {
        from = d3_geo_circleAngle(cr, from);
        to = d3_geo_circleAngle(cr, to);
        if (direction > 0 ? from < to : from > to) from += direction * τ;
      } else {
        from = radius + direction * τ;
        to = radius - .5 * step;
      }
      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {
        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);
      }
    };
  }
  function d3_geo_circleAngle(cr, point) {
    var a = d3_geo_cartesian(point);
    a[0] -= cr;
    d3_geo_cartesianNormalize(a);
    var angle = d3_acos(-a[1]);
    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);
  }
  d3.geo.distance = function(a, b) {
    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;
    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);
  };
  d3.geo.graticule = function() {
    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;
    function graticule() {
      return {
        type: "MultiLineString",
        coordinates: lines()
      };
    }
    function lines() {
      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {
        return abs(x % DX) > ε;
      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {
        return abs(y % DY) > ε;
      }).map(y));
    }
    graticule.lines = function() {
      return lines().map(function(coordinates) {
        return {
          type: "LineString",
          coordinates: coordinates
        };
      });
    };
    graticule.outline = function() {
      return {
        type: "Polygon",
        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]
      };
    };
    graticule.extent = function(_) {
      if (!arguments.length) return graticule.minorExtent();
      return graticule.majorExtent(_).minorExtent(_);
    };
    graticule.majorExtent = function(_) {
      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];
      X0 = +_[0][0], X1 = +_[1][0];
      Y0 = +_[0][1], Y1 = +_[1][1];
      if (X0 > X1) _ = X0, X0 = X1, X1 = _;
      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
      return graticule.precision(precision);
    };
    graticule.minorExtent = function(_) {
      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];
      x0 = +_[0][0], x1 = +_[1][0];
      y0 = +_[0][1], y1 = +_[1][1];
      if (x0 > x1) _ = x0, x0 = x1, x1 = _;
      if (y0 > y1) _ = y0, y0 = y1, y1 = _;
      return graticule.precision(precision);
    };
    graticule.step = function(_) {
      if (!arguments.length) return graticule.minorStep();
      return graticule.majorStep(_).minorStep(_);
    };
    graticule.majorStep = function(_) {
      if (!arguments.length) return [ DX, DY ];
      DX = +_[0], DY = +_[1];
      return graticule;
    };
    graticule.minorStep = function(_) {
      if (!arguments.length) return [ dx, dy ];
      dx = +_[0], dy = +_[1];
      return graticule;
    };
    graticule.precision = function(_) {
      if (!arguments.length) return precision;
      precision = +_;
      x = d3_geo_graticuleX(y0, y1, 90);
      y = d3_geo_graticuleY(x0, x1, precision);
      X = d3_geo_graticuleX(Y0, Y1, 90);
      Y = d3_geo_graticuleY(X0, X1, precision);
      return graticule;
    };
    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);
  };
  function d3_geo_graticuleX(y0, y1, dy) {
    var y = d3.range(y0, y1 - ε, dy).concat(y1);
    return function(x) {
      return y.map(function(y) {
        return [ x, y ];
      });
    };
  }
  function d3_geo_graticuleY(x0, x1, dx) {
    var x = d3.range(x0, x1 - ε, dx).concat(x1);
    return function(y) {
      return x.map(function(x) {
        return [ x, y ];
      });
    };
  }
  function d3_source(d) {
    return d.source;
  }
  function d3_target(d) {
    return d.target;
  }
  d3.geo.greatArc = function() {
    var source = d3_source, source_, target = d3_target, target_;
    function greatArc() {
      return {
        type: "LineString",
        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]
      };
    }
    greatArc.distance = function() {
      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));
    };
    greatArc.source = function(_) {
      if (!arguments.length) return source;
      source = _, source_ = typeof _ === "function" ? null : _;
      return greatArc;
    };
    greatArc.target = function(_) {
      if (!arguments.length) return target;
      target = _, target_ = typeof _ === "function" ? null : _;
      return greatArc;
    };
    greatArc.precision = function() {
      return arguments.length ? greatArc : 0;
    };
    return greatArc;
  };
  d3.geo.interpolate = function(source, target) {
    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);
  };
  function d3_geo_interpolate(x0, y0, x1, y1) {
    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);
    var interpolate = d ? function(t) {
      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;
      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];
    } : function() {
      return [ x0 * d3_degrees, y0 * d3_degrees ];
    };
    interpolate.distance = d;
    return interpolate;
  }
  d3.geo.length = function(object) {
    d3_geo_lengthSum = 0;
    d3.geo.stream(object, d3_geo_length);
    return d3_geo_lengthSum;
  };
  var d3_geo_lengthSum;
  var d3_geo_length = {
    sphere: d3_noop,
    point: d3_noop,
    lineStart: d3_geo_lengthLineStart,
    lineEnd: d3_noop,
    polygonStart: d3_noop,
    polygonEnd: d3_noop
  };
  function d3_geo_lengthLineStart() {
    var λ0, sinφ0, cosφ0;
    d3_geo_length.point = function(λ, φ) {
      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);
      d3_geo_length.point = nextPoint;
    };
    d3_geo_length.lineEnd = function() {
      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;
    };
    function nextPoint(λ, φ) {
      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);
      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);
      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;
    }
  }
  function d3_geo_azimuthal(scale, angle) {
    function azimuthal(λ, φ) {
      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);
      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];
    }
    azimuthal.invert = function(x, y) {
      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);
      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];
    };
    return azimuthal;
  }
  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {
    return Math.sqrt(2 / (1 + cosλcosφ));
  }, function(ρ) {
    return 2 * Math.asin(ρ / 2);
  });
  (d3.geo.azimuthalEqualArea = function() {
    return d3_geo_projection(d3_geo_azimuthalEqualArea);
  }).raw = d3_geo_azimuthalEqualArea;
  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {
    var c = Math.acos(cosλcosφ);
    return c && c / Math.sin(c);
  }, d3_identity);
  (d3.geo.azimuthalEquidistant = function() {
    return d3_geo_projection(d3_geo_azimuthalEquidistant);
  }).raw = d3_geo_azimuthalEquidistant;
  function d3_geo_conicConformal(φ0, φ1) {
    var cosφ0 = Math.cos(φ0), t = function(φ) {
      return Math.tan(π / 4 + φ / 2);
    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;
    if (!n) return d3_geo_mercator;
    function forward(λ, φ) {
      if (F > 0) {
        if (φ < -halfπ + ε) φ = -halfπ + ε;
      } else {
        if (φ > halfπ - ε) φ = halfπ - ε;
      }
      var ρ = F / Math.pow(t(φ), n);
      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];
    }
    forward.invert = function(x, y) {
      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);
      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];
    };
    return forward;
  }
  (d3.geo.conicConformal = function() {
    return d3_geo_conic(d3_geo_conicConformal);
  }).raw = d3_geo_conicConformal;
  function d3_geo_conicEquidistant(φ0, φ1) {
    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;
    if (abs(n) < ε) return d3_geo_equirectangular;
    function forward(λ, φ) {
      var ρ = G - φ;
      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];
    }
    forward.invert = function(x, y) {
      var ρ0_y = G - y;
      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];
    };
    return forward;
  }
  (d3.geo.conicEquidistant = function() {
    return d3_geo_conic(d3_geo_conicEquidistant);
  }).raw = d3_geo_conicEquidistant;
  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {
    return 1 / cosλcosφ;
  }, Math.atan);
  (d3.geo.gnomonic = function() {
    return d3_geo_projection(d3_geo_gnomonic);
  }).raw = d3_geo_gnomonic;
  function d3_geo_mercator(λ, φ) {
    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];
  }
  d3_geo_mercator.invert = function(x, y) {
    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];
  };
  function d3_geo_mercatorProjection(project) {
    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;
    m.scale = function() {
      var v = scale.apply(m, arguments);
      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
    };
    m.translate = function() {
      var v = translate.apply(m, arguments);
      return v === m ? clipAuto ? m.clipExtent(null) : m : v;
    };
    m.clipExtent = function(_) {
      var v = clipExtent.apply(m, arguments);
      if (v === m) {
        if (clipAuto = _ == null) {
          var k = π * scale(), t = translate();
          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);
        }
      } else if (clipAuto) {
        v = null;
      }
      return v;
    };
    return m.clipExtent(null);
  }
  (d3.geo.mercator = function() {
    return d3_geo_mercatorProjection(d3_geo_mercator);
  }).raw = d3_geo_mercator;
  var d3_geo_orthographic = d3_geo_azimuthal(function() {
    return 1;
  }, Math.asin);
  (d3.geo.orthographic = function() {
    return d3_geo_projection(d3_geo_orthographic);
  }).raw = d3_geo_orthographic;
  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {
    return 1 / (1 + cosλcosφ);
  }, function(ρ) {
    return 2 * Math.atan(ρ);
  });
  (d3.geo.stereographic = function() {
    return d3_geo_projection(d3_geo_stereographic);
  }).raw = d3_geo_stereographic;
  function d3_geo_transverseMercator(λ, φ) {
    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];
  }
  d3_geo_transverseMercator.invert = function(x, y) {
    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];
  };
  (d3.geo.transverseMercator = function() {
    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;
    projection.center = function(_) {
      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ -_[1], _[0] ]);
    };
    projection.rotate = function(_) {
      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), 
      [ _[0], _[1], _[2] - 90 ]);
    };
    return projection.rotate([ 0, 0 ]);
  }).raw = d3_geo_transverseMercator;
  d3.geom = {};
  function d3_geom_pointX(d) {
    return d[0];
  }
  function d3_geom_pointY(d) {
    return d[1];
  }
  d3.geom.hull = function(vertices) {
    var x = d3_geom_pointX, y = d3_geom_pointY;
    if (arguments.length) return hull(vertices);
    function hull(data) {
      if (data.length < 3) return [];
      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];
      for (i = 0; i < n; i++) {
        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);
      }
      points.sort(d3_geom_hullOrder);
      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);
      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);
      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];
      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);
      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);
      return polygon;
    }
    hull.x = function(_) {
      return arguments.length ? (x = _, hull) : x;
    };
    hull.y = function(_) {
      return arguments.length ? (y = _, hull) : y;
    };
    return hull;
  };
  function d3_geom_hullUpper(points) {
    var n = points.length, hull = [ 0, 1 ], hs = 2;
    for (var i = 2; i < n; i++) {
      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;
      hull[hs++] = i;
    }
    return hull.slice(0, hs);
  }
  function d3_geom_hullOrder(a, b) {
    return a[0] - b[0] || a[1] - b[1];
  }
  d3.geom.polygon = function(coordinates) {
    d3_subclass(coordinates, d3_geom_polygonPrototype);
    return coordinates;
  };
  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];
  d3_geom_polygonPrototype.area = function() {
    var i = -1, n = this.length, a, b = this[n - 1], area = 0;
    while (++i < n) {
      a = b;
      b = this[i];
      area += a[1] * b[0] - a[0] * b[1];
    }
    return area * .5;
  };
  d3_geom_polygonPrototype.centroid = function(k) {
    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;
    if (!arguments.length) k = -1 / (6 * this.area());
    while (++i < n) {
      a = b;
      b = this[i];
      c = a[0] * b[1] - b[0] * a[1];
      x += (a[0] + b[0]) * c;
      y += (a[1] + b[1]) * c;
    }
    return [ x * k, y * k ];
  };
  d3_geom_polygonPrototype.clip = function(subject) {
    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;
    while (++i < n) {
      input = subject.slice();
      subject.length = 0;
      b = this[i];
      c = input[(m = input.length - closed) - 1];
      j = -1;
      while (++j < m) {
        d = input[j];
        if (d3_geom_polygonInside(d, a, b)) {
          if (!d3_geom_polygonInside(c, a, b)) {
            subject.push(d3_geom_polygonIntersect(c, d, a, b));
          }
          subject.push(d);
        } else if (d3_geom_polygonInside(c, a, b)) {
          subject.push(d3_geom_polygonIntersect(c, d, a, b));
        }
        c = d;
      }
      if (closed) subject.push(subject[0]);
      a = b;
    }
    return subject;
  };
  function d3_geom_polygonInside(p, a, b) {
    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);
  }
  function d3_geom_polygonIntersect(c, d, a, b) {
    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);
    return [ x1 + ua * x21, y1 + ua * y21 ];
  }
  function d3_geom_polygonClosed(coordinates) {
    var a = coordinates[0], b = coordinates[coordinates.length - 1];
    return !(a[0] - b[0] || a[1] - b[1]);
  }
  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];
  function d3_geom_voronoiBeach() {
    d3_geom_voronoiRedBlackNode(this);
    this.edge = this.site = this.circle = null;
  }
  function d3_geom_voronoiCreateBeach(site) {
    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();
    beach.site = site;
    return beach;
  }
  function d3_geom_voronoiDetachBeach(beach) {
    d3_geom_voronoiDetachCircle(beach);
    d3_geom_voronoiBeaches.remove(beach);
    d3_geom_voronoiBeachPool.push(beach);
    d3_geom_voronoiRedBlackNode(beach);
  }
  function d3_geom_voronoiRemoveBeach(beach) {
    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {
      x: x,
      y: y
    }, previous = beach.P, next = beach.N, disappearing = [ beach ];
    d3_geom_voronoiDetachBeach(beach);
    var lArc = previous;
    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {
      previous = lArc.P;
      disappearing.unshift(lArc);
      d3_geom_voronoiDetachBeach(lArc);
      lArc = previous;
    }
    disappearing.unshift(lArc);
    d3_geom_voronoiDetachCircle(lArc);
    var rArc = next;
    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {
      next = rArc.N;
      disappearing.push(rArc);
      d3_geom_voronoiDetachBeach(rArc);
      rArc = next;
    }
    disappearing.push(rArc);
    d3_geom_voronoiDetachCircle(rArc);
    var nArcs = disappearing.length, iArc;
    for (iArc = 1; iArc < nArcs; ++iArc) {
      rArc = disappearing[iArc];
      lArc = disappearing[iArc - 1];
      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);
    }
    lArc = disappearing[0];
    rArc = disappearing[nArcs - 1];
    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);
    d3_geom_voronoiAttachCircle(lArc);
    d3_geom_voronoiAttachCircle(rArc);
  }
  function d3_geom_voronoiAddBeach(site) {
    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;
    while (node) {
      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;
      if (dxl > ε) node = node.L; else {
        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);
        if (dxr > ε) {
          if (!node.R) {
            lArc = node;
            break;
          }
          node = node.R;
        } else {
          if (dxl > -ε) {
            lArc = node.P;
            rArc = node;
          } else if (dxr > -ε) {
            lArc = node;
            rArc = node.N;
          } else {
            lArc = rArc = node;
          }
          break;
        }
      }
    }
    var newArc = d3_geom_voronoiCreateBeach(site);
    d3_geom_voronoiBeaches.insert(lArc, newArc);
    if (!lArc && !rArc) return;
    if (lArc === rArc) {
      d3_geom_voronoiDetachCircle(lArc);
      rArc = d3_geom_voronoiCreateBeach(lArc.site);
      d3_geom_voronoiBeaches.insert(newArc, rArc);
      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
      d3_geom_voronoiAttachCircle(lArc);
      d3_geom_voronoiAttachCircle(rArc);
      return;
    }
    if (!rArc) {
      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);
      return;
    }
    d3_geom_voronoiDetachCircle(lArc);
    d3_geom_voronoiDetachCircle(rArc);
    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {
      x: (cy * hb - by * hc) / d + ax,
      y: (bx * hc - cx * hb) / d + ay
    };
    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);
    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);
    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);
    d3_geom_voronoiAttachCircle(lArc);
    d3_geom_voronoiAttachCircle(rArc);
  }
  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {
    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;
    if (!pby2) return rfocx;
    var lArc = arc.P;
    if (!lArc) return -Infinity;
    site = lArc.site;
    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;
    if (!plby2) return lfocx;
    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;
    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
    return (rfocx + lfocx) / 2;
  }
  function d3_geom_voronoiRightBreakPoint(arc, directrix) {
    var rArc = arc.N;
    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);
    var site = arc.site;
    return site.y === directrix ? site.x : Infinity;
  }
  function d3_geom_voronoiCell(site) {
    this.site = site;
    this.edges = [];
  }
  d3_geom_voronoiCell.prototype.prepare = function() {
    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;
    while (iHalfEdge--) {
      edge = halfEdges[iHalfEdge].edge;
      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);
    }
    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);
    return halfEdges.length;
  };
  function d3_geom_voronoiCloseCells(extent) {
    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;
    while (iCell--) {
      cell = cells[iCell];
      if (!cell || !cell.prepare()) continue;
      halfEdges = cell.edges;
      nHalfEdges = halfEdges.length;
      iHalfEdge = 0;
      while (iHalfEdge < nHalfEdges) {
        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;
        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;
        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {
          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {
            x: x0,
            y: abs(x2 - x0) < ε ? y2 : y1
          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {
            x: abs(y2 - y1) < ε ? x2 : x1,
            y: y1
          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {
            x: x1,
            y: abs(x2 - x1) < ε ? y2 : y0
          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {
            x: abs(y2 - y0) < ε ? x2 : x0,
            y: y0
          } : null), cell.site, null));
          ++nHalfEdges;
        }
      }
    }
  }
  function d3_geom_voronoiHalfEdgeOrder(a, b) {
    return b.angle - a.angle;
  }
  function d3_geom_voronoiCircle() {
    d3_geom_voronoiRedBlackNode(this);
    this.x = this.y = this.arc = this.site = this.cy = null;
  }
  function d3_geom_voronoiAttachCircle(arc) {
    var lArc = arc.P, rArc = arc.N;
    if (!lArc || !rArc) return;
    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;
    if (lSite === rSite) return;
    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;
    var d = 2 * (ax * cy - ay * cx);
    if (d >= -ε2) return;
    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;
    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();
    circle.arc = arc;
    circle.site = cSite;
    circle.x = x + bx;
    circle.y = cy + Math.sqrt(x * x + y * y);
    circle.cy = cy;
    arc.circle = circle;
    var before = null, node = d3_geom_voronoiCircles._;
    while (node) {
      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
        if (node.L) node = node.L; else {
          before = node.P;
          break;
        }
      } else {
        if (node.R) node = node.R; else {
          before = node;
          break;
        }
      }
    }
    d3_geom_voronoiCircles.insert(before, circle);
    if (!before) d3_geom_voronoiFirstCircle = circle;
  }
  function d3_geom_voronoiDetachCircle(arc) {
    var circle = arc.circle;
    if (circle) {
      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;
      d3_geom_voronoiCircles.remove(circle);
      d3_geom_voronoiCirclePool.push(circle);
      d3_geom_voronoiRedBlackNode(circle);
      arc.circle = null;
    }
  }
  function d3_geom_voronoiClipEdges(extent) {
    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;
    while (i--) {
      e = edges[i];
      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {
        e.a = e.b = null;
        edges.splice(i, 1);
      }
    }
  }
  function d3_geom_voronoiConnectEdge(edge, extent) {
    var vb = edge.b;
    if (vb) return true;
    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;
    if (ry === ly) {
      if (fx < x0 || fx >= x1) return;
      if (lx > rx) {
        if (!va) va = {
          x: fx,
          y: y0
        }; else if (va.y >= y1) return;
        vb = {
          x: fx,
          y: y1
        };
      } else {
        if (!va) va = {
          x: fx,
          y: y1
        }; else if (va.y < y0) return;
        vb = {
          x: fx,
          y: y0
        };
      }
    } else {
      fm = (lx - rx) / (ry - ly);
      fb = fy - fm * fx;
      if (fm < -1 || fm > 1) {
        if (lx > rx) {
          if (!va) va = {
            x: (y0 - fb) / fm,
            y: y0
          }; else if (va.y >= y1) return;
          vb = {
            x: (y1 - fb) / fm,
            y: y1
          };
        } else {
          if (!va) va = {
            x: (y1 - fb) / fm,
            y: y1
          }; else if (va.y < y0) return;
          vb = {
            x: (y0 - fb) / fm,
            y: y0
          };
        }
      } else {
        if (ly < ry) {
          if (!va) va = {
            x: x0,
            y: fm * x0 + fb
          }; else if (va.x >= x1) return;
          vb = {
            x: x1,
            y: fm * x1 + fb
          };
        } else {
          if (!va) va = {
            x: x1,
            y: fm * x1 + fb
          }; else if (va.x < x0) return;
          vb = {
            x: x0,
            y: fm * x0 + fb
          };
        }
      }
    }
    edge.a = va;
    edge.b = vb;
    return true;
  }
  function d3_geom_voronoiEdge(lSite, rSite) {
    this.l = lSite;
    this.r = rSite;
    this.a = this.b = null;
  }
  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {
    var edge = new d3_geom_voronoiEdge(lSite, rSite);
    d3_geom_voronoiEdges.push(edge);
    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);
    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);
    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));
    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));
    return edge;
  }
  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {
    var edge = new d3_geom_voronoiEdge(lSite, null);
    edge.a = va;
    edge.b = vb;
    d3_geom_voronoiEdges.push(edge);
    return edge;
  }
  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {
    if (!edge.a && !edge.b) {
      edge.a = vertex;
      edge.l = lSite;
      edge.r = rSite;
    } else if (edge.l === rSite) {
      edge.b = vertex;
    } else {
      edge.a = vertex;
    }
  }
  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {
    var va = edge.a, vb = edge.b;
    this.edge = edge;
    this.site = lSite;
    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);
  }
  d3_geom_voronoiHalfEdge.prototype = {
    start: function() {
      return this.edge.l === this.site ? this.edge.a : this.edge.b;
    },
    end: function() {
      return this.edge.l === this.site ? this.edge.b : this.edge.a;
    }
  };
  function d3_geom_voronoiRedBlackTree() {
    this._ = null;
  }
  function d3_geom_voronoiRedBlackNode(node) {
    node.U = node.C = node.L = node.R = node.P = node.N = null;
  }
  d3_geom_voronoiRedBlackTree.prototype = {
    insert: function(after, node) {
      var parent, grandpa, uncle;
      if (after) {
        node.P = after;
        node.N = after.N;
        if (after.N) after.N.P = node;
        after.N = node;
        if (after.R) {
          after = after.R;
          while (after.L) after = after.L;
          after.L = node;
        } else {
          after.R = node;
        }
        parent = after;
      } else if (this._) {
        after = d3_geom_voronoiRedBlackFirst(this._);
        node.P = null;
        node.N = after;
        after.P = after.L = node;
        parent = after;
      } else {
        node.P = node.N = null;
        this._ = node;
        parent = null;
      }
      node.L = node.R = null;
      node.U = parent;
      node.C = true;
      after = node;
      while (parent && parent.C) {
        grandpa = parent.U;
        if (parent === grandpa.L) {
          uncle = grandpa.R;
          if (uncle && uncle.C) {
            parent.C = uncle.C = false;
            grandpa.C = true;
            after = grandpa;
          } else {
            if (after === parent.R) {
              d3_geom_voronoiRedBlackRotateLeft(this, parent);
              after = parent;
              parent = after.U;
            }
            parent.C = false;
            grandpa.C = true;
            d3_geom_voronoiRedBlackRotateRight(this, grandpa);
          }
        } else {
          uncle = grandpa.L;
          if (uncle && uncle.C) {
            parent.C = uncle.C = false;
            grandpa.C = true;
            after = grandpa;
          } else {
            if (after === parent.L) {
              d3_geom_voronoiRedBlackRotateRight(this, parent);
              after = parent;
              parent = after.U;
            }
            parent.C = false;
            grandpa.C = true;
            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);
          }
        }
        parent = after.U;
      }
      this._.C = false;
    },
    remove: function(node) {
      if (node.N) node.N.P = node.P;
      if (node.P) node.P.N = node.N;
      node.N = node.P = null;
      var parent = node.U, sibling, left = node.L, right = node.R, next, red;
      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);
      if (parent) {
        if (parent.L === node) parent.L = next; else parent.R = next;
      } else {
        this._ = next;
      }
      if (left && right) {
        red = next.C;
        next.C = node.C;
        next.L = left;
        left.U = next;
        if (next !== right) {
          parent = next.U;
          next.U = node.U;
          node = next.R;
          parent.L = node;
          next.R = right;
          right.U = next;
        } else {
          next.U = parent;
          parent = next;
          node = next.R;
        }
      } else {
        red = node.C;
        node = next;
      }
      if (node) node.U = parent;
      if (red) return;
      if (node && node.C) {
        node.C = false;
        return;
      }
      do {
        if (node === this._) break;
        if (node === parent.L) {
          sibling = parent.R;
          if (sibling.C) {
            sibling.C = false;
            parent.C = true;
            d3_geom_voronoiRedBlackRotateLeft(this, parent);
            sibling = parent.R;
          }
          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
            if (!sibling.R || !sibling.R.C) {
              sibling.L.C = false;
              sibling.C = true;
              d3_geom_voronoiRedBlackRotateRight(this, sibling);
              sibling = parent.R;
            }
            sibling.C = parent.C;
            parent.C = sibling.R.C = false;
            d3_geom_voronoiRedBlackRotateLeft(this, parent);
            node = this._;
            break;
          }
        } else {
          sibling = parent.L;
          if (sibling.C) {
            sibling.C = false;
            parent.C = true;
            d3_geom_voronoiRedBlackRotateRight(this, parent);
            sibling = parent.L;
          }
          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
            if (!sibling.L || !sibling.L.C) {
              sibling.R.C = false;
              sibling.C = true;
              d3_geom_voronoiRedBlackRotateLeft(this, sibling);
              sibling = parent.L;
            }
            sibling.C = parent.C;
            parent.C = sibling.L.C = false;
            d3_geom_voronoiRedBlackRotateRight(this, parent);
            node = this._;
            break;
          }
        }
        sibling.C = true;
        node = parent;
        parent = parent.U;
      } while (!node.C);
      if (node) node.C = false;
    }
  };
  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {
    var p = node, q = node.R, parent = p.U;
    if (parent) {
      if (parent.L === p) parent.L = q; else parent.R = q;
    } else {
      tree._ = q;
    }
    q.U = parent;
    p.U = q;
    p.R = q.L;
    if (p.R) p.R.U = p;
    q.L = p;
  }
  function d3_geom_voronoiRedBlackRotateRight(tree, node) {
    var p = node, q = node.L, parent = p.U;
    if (parent) {
      if (parent.L === p) parent.L = q; else parent.R = q;
    } else {
      tree._ = q;
    }
    q.U = parent;
    p.U = q;
    p.L = q.R;
    if (p.L) p.L.U = p;
    q.R = p;
  }
  function d3_geom_voronoiRedBlackFirst(node) {
    while (node.L) node = node.L;
    return node;
  }
  function d3_geom_voronoi(sites, bbox) {
    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;
    d3_geom_voronoiEdges = [];
    d3_geom_voronoiCells = new Array(sites.length);
    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();
    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();
    while (true) {
      circle = d3_geom_voronoiFirstCircle;
      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {
        if (site.x !== x0 || site.y !== y0) {
          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);
          d3_geom_voronoiAddBeach(site);
          x0 = site.x, y0 = site.y;
        }
        site = sites.pop();
      } else if (circle) {
        d3_geom_voronoiRemoveBeach(circle.arc);
      } else {
        break;
      }
    }
    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);
    var diagram = {
      cells: d3_geom_voronoiCells,
      edges: d3_geom_voronoiEdges
    };
    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;
    return diagram;
  }
  function d3_geom_voronoiVertexOrder(a, b) {
    return b.y - a.y || b.x - a.x;
  }
  d3.geom.voronoi = function(points) {
    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;
    if (points) return voronoi(points);
    function voronoi(data) {
      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];
      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {
        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {
          var s = e.start();
          return [ s.x, s.y ];
        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];
        polygon.point = data[i];
      });
      return polygons;
    }
    function sites(data) {
      return data.map(function(d, i) {
        return {
          x: Math.round(fx(d, i) / ε) * ε,
          y: Math.round(fy(d, i) / ε) * ε,
          i: i
        };
      });
    }
    voronoi.links = function(data) {
      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {
        return edge.l && edge.r;
      }).map(function(edge) {
        return {
          source: data[edge.l.i],
          target: data[edge.r.i]
        };
      });
    };
    voronoi.triangles = function(data) {
      var triangles = [];
      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {
        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;
        while (++j < m) {
          e0 = e1;
          s0 = s1;
          e1 = edges[j].edge;
          s1 = e1.l === site ? e1.r : e1.l;
          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {
            triangles.push([ data[i], data[s0.i], data[s1.i] ]);
          }
        }
      });
      return triangles;
    };
    voronoi.x = function(_) {
      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;
    };
    voronoi.y = function(_) {
      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;
    };
    voronoi.clipExtent = function(_) {
      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;
      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;
      return voronoi;
    };
    voronoi.size = function(_) {
      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];
      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);
    };
    return voronoi;
  };
  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];
  function d3_geom_voronoiTriangleArea(a, b, c) {
    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);
  }
  d3.geom.delaunay = function(vertices) {
    return d3.geom.voronoi().triangles(vertices);
  };
  d3.geom.quadtree = function(points, x1, y1, x2, y2) {
    var x = d3_geom_pointX, y = d3_geom_pointY, compat;
    if (compat = arguments.length) {
      x = d3_geom_quadtreeCompatX;
      y = d3_geom_quadtreeCompatY;
      if (compat === 3) {
        y2 = y1;
        x2 = x1;
        y1 = x1 = 0;
      }
      return quadtree(points);
    }
    function quadtree(data) {
      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;
      if (x1 != null) {
        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;
      } else {
        x2_ = y2_ = -(x1_ = y1_ = Infinity);
        xs = [], ys = [];
        n = data.length;
        if (compat) for (i = 0; i < n; ++i) {
          d = data[i];
          if (d.x < x1_) x1_ = d.x;
          if (d.y < y1_) y1_ = d.y;
          if (d.x > x2_) x2_ = d.x;
          if (d.y > y2_) y2_ = d.y;
          xs.push(d.x);
          ys.push(d.y);
        } else for (i = 0; i < n; ++i) {
          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);
          if (x_ < x1_) x1_ = x_;
          if (y_ < y1_) y1_ = y_;
          if (x_ > x2_) x2_ = x_;
          if (y_ > y2_) y2_ = y_;
          xs.push(x_);
          ys.push(y_);
        }
      }
      var dx = x2_ - x1_, dy = y2_ - y1_;
      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;
      function insert(n, d, x, y, x1, y1, x2, y2) {
        if (isNaN(x) || isNaN(y)) return;
        if (n.leaf) {
          var nx = n.x, ny = n.y;
          if (nx != null) {
            if (abs(nx - x) + abs(ny - y) < .01) {
              insertChild(n, d, x, y, x1, y1, x2, y2);
            } else {
              var nPoint = n.point;
              n.x = n.y = n.point = null;
              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);
              insertChild(n, d, x, y, x1, y1, x2, y2);
            }
          } else {
            n.x = x, n.y = y, n.point = d;
          }
        } else {
          insertChild(n, d, x, y, x1, y1, x2, y2);
        }
      }
      function insertChild(n, d, x, y, x1, y1, x2, y2) {
        var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, right = x >= sx, bottom = y >= sy, i = (bottom << 1) + right;
        n.leaf = false;
        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());
        if (right) x1 = sx; else x2 = sx;
        if (bottom) y1 = sy; else y2 = sy;
        insert(n, d, x, y, x1, y1, x2, y2);
      }
      var root = d3_geom_quadtreeNode();
      root.add = function(d) {
        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);
      };
      root.visit = function(f) {
        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);
      };
      i = -1;
      if (x1 == null) {
        while (++i < n) {
          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);
        }
        --i;
      } else data.forEach(root.add);
      xs = ys = data = d = null;
      return root;
    }
    quadtree.x = function(_) {
      return arguments.length ? (x = _, quadtree) : x;
    };
    quadtree.y = function(_) {
      return arguments.length ? (y = _, quadtree) : y;
    };
    quadtree.extent = function(_) {
      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];
      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], 
      y2 = +_[1][1];
      return quadtree;
    };
    quadtree.size = function(_) {
      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];
      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];
      return quadtree;
    };
    return quadtree;
  };
  function d3_geom_quadtreeCompatX(d) {
    return d.x;
  }
  function d3_geom_quadtreeCompatY(d) {
    return d.y;
  }
  function d3_geom_quadtreeNode() {
    return {
      leaf: true,
      nodes: [],
      point: null,
      x: null,
      y: null
    };
  }
  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {
    if (!f(node, x1, y1, x2, y2)) {
      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;
      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);
      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);
      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);
      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);
    }
  }
  d3.interpolateRgb = d3_interpolateRgb;
  function d3_interpolateRgb(a, b) {
    a = d3.rgb(a);
    b = d3.rgb(b);
    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;
    return function(t) {
      return "#" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));
    };
  }
  d3.interpolateObject = d3_interpolateObject;
  function d3_interpolateObject(a, b) {
    var i = {}, c = {}, k;
    for (k in a) {
      if (k in b) {
        i[k] = d3_interpolate(a[k], b[k]);
      } else {
        c[k] = a[k];
      }
    }
    for (k in b) {
      if (!(k in a)) {
        c[k] = b[k];
      }
    }
    return function(t) {
      for (k in i) c[k] = i[k](t);
      return c;
    };
  }
  d3.interpolateNumber = d3_interpolateNumber;
  function d3_interpolateNumber(a, b) {
    b -= a = +a;
    return function(t) {
      return a + b * t;
    };
  }
  d3.interpolateString = d3_interpolateString;
  function d3_interpolateString(a, b) {
    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];
    a = a + "", b = b + "";
    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {
      if ((bs = bm.index) > bi) {
        bs = b.substring(bi, bs);
        if (s[i]) s[i] += bs; else s[++i] = bs;
      }
      if ((am = am[0]) === (bm = bm[0])) {
        if (s[i]) s[i] += bm; else s[++i] = bm;
      } else {
        s[++i] = null;
        q.push({
          i: i,
          x: d3_interpolateNumber(am, bm)
        });
      }
      bi = d3_interpolate_numberB.lastIndex;
    }
    if (bi < b.length) {
      bs = b.substring(bi);
      if (s[i]) s[i] += bs; else s[++i] = bs;
    }
    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {
      return b(t) + "";
    }) : function() {
      return b;
    } : (b = q.length, function(t) {
      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
      return s.join("");
    });
  }
  var d3_interpolate_numberA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, "g");
  d3.interpolate = d3_interpolate;
  function d3_interpolate(a, b) {
    var i = d3.interpolators.length, f;
    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;
    return f;
  }
  d3.interpolators = [ function(a, b) {
    var t = typeof b;
    return (t === "string" ? d3_rgb_names.has(b) || /^(#|rgb\(|hsl\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_Color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === "object" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);
  } ];
  d3.interpolateArray = d3_interpolateArray;
  function d3_interpolateArray(a, b) {
    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;
    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));
    for (;i < na; ++i) c[i] = a[i];
    for (;i < nb; ++i) c[i] = b[i];
    return function(t) {
      for (i = 0; i < n0; ++i) c[i] = x[i](t);
      return c;
    };
  }
  var d3_ease_default = function() {
    return d3_identity;
  };
  var d3_ease = d3.map({
    linear: d3_ease_default,
    poly: d3_ease_poly,
    quad: function() {
      return d3_ease_quad;
    },
    cubic: function() {
      return d3_ease_cubic;
    },
    sin: function() {
      return d3_ease_sin;
    },
    exp: function() {
      return d3_ease_exp;
    },
    circle: function() {
      return d3_ease_circle;
    },
    elastic: d3_ease_elastic,
    back: d3_ease_back,
    bounce: function() {
      return d3_ease_bounce;
    }
  });
  var d3_ease_mode = d3.map({
    "in": d3_identity,
    out: d3_ease_reverse,
    "in-out": d3_ease_reflect,
    "out-in": function(f) {
      return d3_ease_reflect(d3_ease_reverse(f));
    }
  });
  d3.ease = function(name) {
    var i = name.indexOf("-"), t = i >= 0 ? name.substring(0, i) : name, m = i >= 0 ? name.substring(i + 1) : "in";
    t = d3_ease.get(t) || d3_ease_default;
    m = d3_ease_mode.get(m) || d3_identity;
    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));
  };
  function d3_ease_clamp(f) {
    return function(t) {
      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);
    };
  }
  function d3_ease_reverse(f) {
    return function(t) {
      return 1 - f(1 - t);
    };
  }
  function d3_ease_reflect(f) {
    return function(t) {
      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));
    };
  }
  function d3_ease_quad(t) {
    return t * t;
  }
  function d3_ease_cubic(t) {
    return t * t * t;
  }
  function d3_ease_cubicInOut(t) {
    if (t <= 0) return 0;
    if (t >= 1) return 1;
    var t2 = t * t, t3 = t2 * t;
    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);
  }
  function d3_ease_poly(e) {
    return function(t) {
      return Math.pow(t, e);
    };
  }
  function d3_ease_sin(t) {
    return 1 - Math.cos(t * halfπ);
  }
  function d3_ease_exp(t) {
    return Math.pow(2, 10 * (t - 1));
  }
  function d3_ease_circle(t) {
    return 1 - Math.sqrt(1 - t * t);
  }
  function d3_ease_elastic(a, p) {
    var s;
    if (arguments.length < 2) p = .45;
    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;
    return function(t) {
      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);
    };
  }
  function d3_ease_back(s) {
    if (!s) s = 1.70158;
    return function(t) {
      return t * t * ((s + 1) * t - s);
    };
  }
  function d3_ease_bounce(t) {
    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
  }
  d3.interpolateHcl = d3_interpolateHcl;
  function d3_interpolateHcl(a, b) {
    a = d3.hcl(a);
    b = d3.hcl(b);
    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;
    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;
    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
    return function(t) {
      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + "";
    };
  }
  d3.interpolateHsl = d3_interpolateHsl;
  function d3_interpolateHsl(a, b) {
    a = d3.hsl(a);
    b = d3.hsl(b);
    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;
    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;
    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;
    return function(t) {
      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + "";
    };
  }
  d3.interpolateLab = d3_interpolateLab;
  function d3_interpolateLab(a, b) {
    a = d3.lab(a);
    b = d3.lab(b);
    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;
    return function(t) {
      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + "";
    };
  }
  d3.interpolateRound = d3_interpolateRound;
  function d3_interpolateRound(a, b) {
    b -= a;
    return function(t) {
      return Math.round(a + b * t);
    };
  }
  d3.transform = function(string) {
    var g = d3_document.createElementNS(d3.ns.prefix.svg, "g");
    return (d3.transform = function(string) {
      if (string != null) {
        g.setAttribute("transform", string);
        var t = g.transform.baseVal.consolidate();
      }
      return new d3_transform(t ? t.matrix : d3_transformIdentity);
    })(string);
  };
  function d3_transform(m) {
    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;
    if (r0[0] * r1[1] < r1[0] * r0[1]) {
      r0[0] *= -1;
      r0[1] *= -1;
      kx *= -1;
      kz *= -1;
    }
    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;
    this.translate = [ m.e, m.f ];
    this.scale = [ kx, ky ];
    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;
  }
  d3_transform.prototype.toString = function() {
    return "translate(" + this.translate + ")rotate(" + this.rotate + ")skewX(" + this.skew + ")scale(" + this.scale + ")";
  };
  function d3_transformDot(a, b) {
    return a[0] * b[0] + a[1] * b[1];
  }
  function d3_transformNormalize(a) {
    var k = Math.sqrt(d3_transformDot(a, a));
    if (k) {
      a[0] /= k;
      a[1] /= k;
    }
    return k;
  }
  function d3_transformCombine(a, b, k) {
    a[0] += k * b[0];
    a[1] += k * b[1];
    return a;
  }
  var d3_transformIdentity = {
    a: 1,
    b: 0,
    c: 0,
    d: 1,
    e: 0,
    f: 0
  };
  d3.interpolateTransform = d3_interpolateTransform;
  function d3_interpolateTransform(a, b) {
    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;
    if (ta[0] != tb[0] || ta[1] != tb[1]) {
      s.push("translate(", null, ",", null, ")");
      q.push({
        i: 1,
        x: d3_interpolateNumber(ta[0], tb[0])
      }, {
        i: 3,
        x: d3_interpolateNumber(ta[1], tb[1])
      });
    } else if (tb[0] || tb[1]) {
      s.push("translate(" + tb + ")");
    } else {
      s.push("");
    }
    if (ra != rb) {
      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;
      q.push({
        i: s.push(s.pop() + "rotate(", null, ")") - 2,
        x: d3_interpolateNumber(ra, rb)
      });
    } else if (rb) {
      s.push(s.pop() + "rotate(" + rb + ")");
    }
    if (wa != wb) {
      q.push({
        i: s.push(s.pop() + "skewX(", null, ")") - 2,
        x: d3_interpolateNumber(wa, wb)
      });
    } else if (wb) {
      s.push(s.pop() + "skewX(" + wb + ")");
    }
    if (ka[0] != kb[0] || ka[1] != kb[1]) {
      n = s.push(s.pop() + "scale(", null, ",", null, ")");
      q.push({
        i: n - 4,
        x: d3_interpolateNumber(ka[0], kb[0])
      }, {
        i: n - 2,
        x: d3_interpolateNumber(ka[1], kb[1])
      });
    } else if (kb[0] != 1 || kb[1] != 1) {
      s.push(s.pop() + "scale(" + kb + ")");
    }
    n = q.length;
    return function(t) {
      var i = -1, o;
      while (++i < n) s[(o = q[i]).i] = o.x(t);
      return s.join("");
    };
  }
  function d3_uninterpolateNumber(a, b) {
    b = b - (a = +a) ? 1 / (b - a) : 0;
    return function(x) {
      return (x - a) * b;
    };
  }
  function d3_uninterpolateClamp(a, b) {
    b = b - (a = +a) ? 1 / (b - a) : 0;
    return function(x) {
      return Math.max(0, Math.min(1, (x - a) * b));
    };
  }
  d3.layout = {};
  d3.layout.bundle = function() {
    return function(links) {
      var paths = [], i = -1, n = links.length;
      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));
      return paths;
    };
  };
  function d3_layout_bundlePath(link) {
    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];
    while (start !== lca) {
      start = start.parent;
      points.push(start);
    }
    var k = points.length;
    while (end !== lca) {
      points.splice(k, 0, end);
      end = end.parent;
    }
    return points;
  }
  function d3_layout_bundleAncestors(node) {
    var ancestors = [], parent = node.parent;
    while (parent != null) {
      ancestors.push(node);
      node = parent;
      parent = parent.parent;
    }
    ancestors.push(node);
    return ancestors;
  }
  function d3_layout_bundleLeastCommonAncestor(a, b) {
    if (a === b) return a;
    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;
    while (aNode === bNode) {
      sharedNode = aNode;
      aNode = aNodes.pop();
      bNode = bNodes.pop();
    }
    return sharedNode;
  }
  d3.layout.chord = function() {
    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;
    function relayout() {
      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;
      chords = [];
      groups = [];
      k = 0, i = -1;
      while (++i < n) {
        x = 0, j = -1;
        while (++j < n) {
          x += matrix[i][j];
        }
        groupSums.push(x);
        subgroupIndex.push(d3.range(n));
        k += x;
      }
      if (sortGroups) {
        groupIndex.sort(function(a, b) {
          return sortGroups(groupSums[a], groupSums[b]);
        });
      }
      if (sortSubgroups) {
        subgroupIndex.forEach(function(d, i) {
          d.sort(function(a, b) {
            return sortSubgroups(matrix[i][a], matrix[i][b]);
          });
        });
      }
      k = (τ - padding * n) / k;
      x = 0, i = -1;
      while (++i < n) {
        x0 = x, j = -1;
        while (++j < n) {
          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;
          subgroups[di + "-" + dj] = {
            index: di,
            subindex: dj,
            startAngle: a0,
            endAngle: a1,
            value: v
          };
        }
        groups[di] = {
          index: di,
          startAngle: x0,
          endAngle: x,
          value: (x - x0) / k
        };
        x += padding;
      }
      i = -1;
      while (++i < n) {
        j = i - 1;
        while (++j < n) {
          var source = subgroups[i + "-" + j], target = subgroups[j + "-" + i];
          if (source.value || target.value) {
            chords.push(source.value < target.value ? {
              source: target,
              target: source
            } : {
              source: source,
              target: target
            });
          }
        }
      }
      if (sortChords) resort();
    }
    function resort() {
      chords.sort(function(a, b) {
        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);
      });
    }
    chord.matrix = function(x) {
      if (!arguments.length) return matrix;
      n = (matrix = x) && matrix.length;
      chords = groups = null;
      return chord;
    };
    chord.padding = function(x) {
      if (!arguments.length) return padding;
      padding = x;
      chords = groups = null;
      return chord;
    };
    chord.sortGroups = function(x) {
      if (!arguments.length) return sortGroups;
      sortGroups = x;
      chords = groups = null;
      return chord;
    };
    chord.sortSubgroups = function(x) {
      if (!arguments.length) return sortSubgroups;
      sortSubgroups = x;
      chords = null;
      return chord;
    };
    chord.sortChords = function(x) {
      if (!arguments.length) return sortChords;
      sortChords = x;
      if (chords) resort();
      return chord;
    };
    chord.chords = function() {
      if (!chords) relayout();
      return chords;
    };
    chord.groups = function() {
      if (!groups) relayout();
      return groups;
    };
    return chord;
  };
  d3.layout.force = function() {
    var force = {}, event = d3.dispatch("start", "tick", "end"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;
    function repulse(node) {
      return function(quad, x1, _, x2) {
        if (quad.point !== node) {
          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;
          if (dw * dw / theta2 < dn) {
            if (dn < chargeDistance2) {
              var k = quad.charge / dn;
              node.px -= dx * k;
              node.py -= dy * k;
            }
            return true;
          }
          if (quad.point && dn && dn < chargeDistance2) {
            var k = quad.pointCharge / dn;
            node.px -= dx * k;
            node.py -= dy * k;
          }
        }
        return !quad.charge;
      };
    }
    force.tick = function() {
      if ((alpha *= .99) < .005) {
        event.end({
          type: "end",
          alpha: alpha = 0
        });
        return true;
      }
      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;
      for (i = 0; i < m; ++i) {
        o = links[i];
        s = o.source;
        t = o.target;
        x = t.x - s.x;
        y = t.y - s.y;
        if (l = x * x + y * y) {
          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;
          x *= l;
          y *= l;
          t.x -= x * (k = s.weight / (t.weight + s.weight));
          t.y -= y * k;
          s.x += x * (k = 1 - k);
          s.y += y * k;
        }
      }
      if (k = alpha * gravity) {
        x = size[0] / 2;
        y = size[1] / 2;
        i = -1;
        if (k) while (++i < n) {
          o = nodes[i];
          o.x += (x - o.x) * k;
          o.y += (y - o.y) * k;
        }
      }
      if (charge) {
        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);
        i = -1;
        while (++i < n) {
          if (!(o = nodes[i]).fixed) {
            q.visit(repulse(o));
          }
        }
      }
      i = -1;
      while (++i < n) {
        o = nodes[i];
        if (o.fixed) {
          o.x = o.px;
          o.y = o.py;
        } else {
          o.x -= (o.px - (o.px = o.x)) * friction;
          o.y -= (o.py - (o.py = o.y)) * friction;
        }
      }
      event.tick({
        type: "tick",
        alpha: alpha
      });
    };
    force.nodes = function(x) {
      if (!arguments.length) return nodes;
      nodes = x;
      return force;
    };
    force.links = function(x) {
      if (!arguments.length) return links;
      links = x;
      return force;
    };
    force.size = function(x) {
      if (!arguments.length) return size;
      size = x;
      return force;
    };
    force.linkDistance = function(x) {
      if (!arguments.length) return linkDistance;
      linkDistance = typeof x === "function" ? x : +x;
      return force;
    };
    force.distance = force.linkDistance;
    force.linkStrength = function(x) {
      if (!arguments.length) return linkStrength;
      linkStrength = typeof x === "function" ? x : +x;
      return force;
    };
    force.friction = function(x) {
      if (!arguments.length) return friction;
      friction = +x;
      return force;
    };
    force.charge = function(x) {
      if (!arguments.length) return charge;
      charge = typeof x === "function" ? x : +x;
      return force;
    };
    force.chargeDistance = function(x) {
      if (!arguments.length) return Math.sqrt(chargeDistance2);
      chargeDistance2 = x * x;
      return force;
    };
    force.gravity = function(x) {
      if (!arguments.length) return gravity;
      gravity = +x;
      return force;
    };
    force.theta = function(x) {
      if (!arguments.length) return Math.sqrt(theta2);
      theta2 = x * x;
      return force;
    };
    force.alpha = function(x) {
      if (!arguments.length) return alpha;
      x = +x;
      if (alpha) {
        if (x > 0) alpha = x; else alpha = 0;
      } else if (x > 0) {
        event.start({
          type: "start",
          alpha: alpha = x
        });
        d3.timer(force.tick);
      }
      return force;
    };
    force.start = function() {
      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;
      for (i = 0; i < n; ++i) {
        (o = nodes[i]).index = i;
        o.weight = 0;
      }
      for (i = 0; i < m; ++i) {
        o = links[i];
        if (typeof o.source == "number") o.source = nodes[o.source];
        if (typeof o.target == "number") o.target = nodes[o.target];
        ++o.source.weight;
        ++o.target.weight;
      }
      for (i = 0; i < n; ++i) {
        o = nodes[i];
        if (isNaN(o.x)) o.x = position("x", w);
        if (isNaN(o.y)) o.y = position("y", h);
        if (isNaN(o.px)) o.px = o.x;
        if (isNaN(o.py)) o.py = o.y;
      }
      distances = [];
      if (typeof linkDistance === "function") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;
      strengths = [];
      if (typeof linkStrength === "function") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;
      charges = [];
      if (typeof charge === "function") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;
      function position(dimension, size) {
        if (!neighbors) {
          neighbors = new Array(n);
          for (j = 0; j < n; ++j) {
            neighbors[j] = [];
          }
          for (j = 0; j < m; ++j) {
            var o = links[j];
            neighbors[o.source.index].push(o.target);
            neighbors[o.target.index].push(o.source);
          }
        }
        var candidates = neighbors[i], j = -1, m = candidates.length, x;
        while (++j < m) if (!isNaN(x = candidates[j][dimension])) return x;
        return Math.random() * size;
      }
      return force.resume();
    };
    force.resume = function() {
      return force.alpha(.1);
    };
    force.stop = function() {
      return force.alpha(0);
    };
    force.drag = function() {
      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on("dragstart.force", d3_layout_forceDragstart).on("drag.force", dragmove).on("dragend.force", d3_layout_forceDragend);
      if (!arguments.length) return drag;
      this.on("mouseover.force", d3_layout_forceMouseover).on("mouseout.force", d3_layout_forceMouseout).call(drag);
    };
    function dragmove(d) {
      d.px = d3.event.x, d.py = d3.event.y;
      force.resume();
    }
    return d3.rebind(force, event, "on");
  };
  function d3_layout_forceDragstart(d) {
    d.fixed |= 2;
  }
  function d3_layout_forceDragend(d) {
    d.fixed &= ~6;
  }
  function d3_layout_forceMouseover(d) {
    d.fixed |= 4;
    d.px = d.x, d.py = d.y;
  }
  function d3_layout_forceMouseout(d) {
    d.fixed &= ~4;
  }
  function d3_layout_forceAccumulate(quad, alpha, charges) {
    var cx = 0, cy = 0;
    quad.charge = 0;
    if (!quad.leaf) {
      var nodes = quad.nodes, n = nodes.length, i = -1, c;
      while (++i < n) {
        c = nodes[i];
        if (c == null) continue;
        d3_layout_forceAccumulate(c, alpha, charges);
        quad.charge += c.charge;
        cx += c.charge * c.cx;
        cy += c.charge * c.cy;
      }
    }
    if (quad.point) {
      if (!quad.leaf) {
        quad.point.x += Math.random() - .5;
        quad.point.y += Math.random() - .5;
      }
      var k = alpha * charges[quad.point.index];
      quad.charge += quad.pointCharge = k;
      cx += k * quad.point.x;
      cy += k * quad.point.y;
    }
    quad.cx = cx / quad.charge;
    quad.cy = cy / quad.charge;
  }
  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;
  d3.layout.hierarchy = function() {
    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;
    function hierarchy(root) {
      var stack = [ root ], nodes = [], node;
      root.depth = 0;
      while ((node = stack.pop()) != null) {
        nodes.push(node);
        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {
          var n, childs, child;
          while (--n >= 0) {
            stack.push(child = childs[n]);
            child.parent = node;
            child.depth = node.depth + 1;
          }
          if (value) node.value = 0;
          node.children = childs;
        } else {
          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;
          delete node.children;
        }
      }
      d3_layout_hierarchyVisitAfter(root, function(node) {
        var childs, parent;
        if (sort && (childs = node.children)) childs.sort(sort);
        if (value && (parent = node.parent)) parent.value += node.value;
      });
      return nodes;
    }
    hierarchy.sort = function(x) {
      if (!arguments.length) return sort;
      sort = x;
      return hierarchy;
    };
    hierarchy.children = function(x) {
      if (!arguments.length) return children;
      children = x;
      return hierarchy;
    };
    hierarchy.value = function(x) {
      if (!arguments.length) return value;
      value = x;
      return hierarchy;
    };
    hierarchy.revalue = function(root) {
      if (value) {
        d3_layout_hierarchyVisitBefore(root, function(node) {
          if (node.children) node.value = 0;
        });
        d3_layout_hierarchyVisitAfter(root, function(node) {
          var parent;
          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;
          if (parent = node.parent) parent.value += node.value;
        });
      }
      return root;
    };
    return hierarchy;
  };
  function d3_layout_hierarchyRebind(object, hierarchy) {
    d3.rebind(object, hierarchy, "sort", "children", "value");
    object.nodes = object;
    object.links = d3_layout_hierarchyLinks;
    return object;
  }
  function d3_layout_hierarchyVisitBefore(node, callback) {
    var nodes = [ node ];
    while ((node = nodes.pop()) != null) {
      callback(node);
      if ((children = node.children) && (n = children.length)) {
        var n, children;
        while (--n >= 0) nodes.push(children[n]);
      }
    }
  }
  function d3_layout_hierarchyVisitAfter(node, callback) {
    var nodes = [ node ], nodes2 = [];
    while ((node = nodes.pop()) != null) {
      nodes2.push(node);
      if ((children = node.children) && (n = children.length)) {
        var i = -1, n, children;
        while (++i < n) nodes.push(children[i]);
      }
    }
    while ((node = nodes2.pop()) != null) {
      callback(node);
    }
  }
  function d3_layout_hierarchyChildren(d) {
    return d.children;
  }
  function d3_layout_hierarchyValue(d) {
    return d.value;
  }
  function d3_layout_hierarchySort(a, b) {
    return b.value - a.value;
  }
  function d3_layout_hierarchyLinks(nodes) {
    return d3.merge(nodes.map(function(parent) {
      return (parent.children || []).map(function(child) {
        return {
          source: parent,
          target: child
        };
      });
    }));
  }
  d3.layout.partition = function() {
    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];
    function position(node, x, dx, dy) {
      var children = node.children;
      node.x = x;
      node.y = node.depth * dy;
      node.dx = dx;
      node.dy = dy;
      if (children && (n = children.length)) {
        var i = -1, n, c, d;
        dx = node.value ? dx / node.value : 0;
        while (++i < n) {
          position(c = children[i], x, d = c.value * dx, dy);
          x += d;
        }
      }
    }
    function depth(node) {
      var children = node.children, d = 0;
      if (children && (n = children.length)) {
        var i = -1, n;
        while (++i < n) d = Math.max(d, depth(children[i]));
      }
      return 1 + d;
    }
    function partition(d, i) {
      var nodes = hierarchy.call(this, d, i);
      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));
      return nodes;
    }
    partition.size = function(x) {
      if (!arguments.length) return size;
      size = x;
      return partition;
    };
    return d3_layout_hierarchyRebind(partition, hierarchy);
  };
  d3.layout.pie = function() {
    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ;
    function pie(data) {
      var values = data.map(function(d, i) {
        return +value.call(pie, d, i);
      });
      var a = +(typeof startAngle === "function" ? startAngle.apply(this, arguments) : startAngle);
      var k = ((typeof endAngle === "function" ? endAngle.apply(this, arguments) : endAngle) - a) / d3.sum(values);
      var index = d3.range(data.length);
      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {
        return values[j] - values[i];
      } : function(i, j) {
        return sort(data[i], data[j]);
      });
      var arcs = [];
      index.forEach(function(i) {
        var d;
        arcs[i] = {
          data: data[i],
          value: d = values[i],
          startAngle: a,
          endAngle: a += d * k
        };
      });
      return arcs;
    }
    pie.value = function(x) {
      if (!arguments.length) return value;
      value = x;
      return pie;
    };
    pie.sort = function(x) {
      if (!arguments.length) return sort;
      sort = x;
      return pie;
    };
    pie.startAngle = function(x) {
      if (!arguments.length) return startAngle;
      startAngle = x;
      return pie;
    };
    pie.endAngle = function(x) {
      if (!arguments.length) return endAngle;
      endAngle = x;
      return pie;
    };
    return pie;
  };
  var d3_layout_pieSortByValue = {};
  d3.layout.stack = function() {
    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;
    function stack(data, index) {
      var series = data.map(function(d, i) {
        return values.call(stack, d, i);
      });
      var points = series.map(function(d) {
        return d.map(function(v, i) {
          return [ x.call(stack, v, i), y.call(stack, v, i) ];
        });
      });
      var orders = order.call(stack, points, index);
      series = d3.permute(series, orders);
      points = d3.permute(points, orders);
      var offsets = offset.call(stack, points, index);
      var n = series.length, m = series[0].length, i, j, o;
      for (j = 0; j < m; ++j) {
        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);
        for (i = 1; i < n; ++i) {
          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);
        }
      }
      return data;
    }
    stack.values = function(x) {
      if (!arguments.length) return values;
      values = x;
      return stack;
    };
    stack.order = function(x) {
      if (!arguments.length) return order;
      order = typeof x === "function" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;
      return stack;
    };
    stack.offset = function(x) {
      if (!arguments.length) return offset;
      offset = typeof x === "function" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;
      return stack;
    };
    stack.x = function(z) {
      if (!arguments.length) return x;
      x = z;
      return stack;
    };
    stack.y = function(z) {
      if (!arguments.length) return y;
      y = z;
      return stack;
    };
    stack.out = function(z) {
      if (!arguments.length) return out;
      out = z;
      return stack;
    };
    return stack;
  };
  function d3_layout_stackX(d) {
    return d.x;
  }
  function d3_layout_stackY(d) {
    return d.y;
  }
  function d3_layout_stackOut(d, y0, y) {
    d.y0 = y0;
    d.y = y;
  }
  var d3_layout_stackOrders = d3.map({
    "inside-out": function(data) {
      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {
        return max[a] - max[b];
      }), top = 0, bottom = 0, tops = [], bottoms = [];
      for (i = 0; i < n; ++i) {
        j = index[i];
        if (top < bottom) {
          top += sums[j];
          tops.push(j);
        } else {
          bottom += sums[j];
          bottoms.push(j);
        }
      }
      return bottoms.reverse().concat(tops);
    },
    reverse: function(data) {
      return d3.range(data.length).reverse();
    },
    "default": d3_layout_stackOrderDefault
  });
  var d3_layout_stackOffsets = d3.map({
    silhouette: function(data) {
      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];
      for (j = 0; j < m; ++j) {
        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
        if (o > max) max = o;
        sums.push(o);
      }
      for (j = 0; j < m; ++j) {
        y0[j] = (max - sums[j]) / 2;
      }
      return y0;
    },
    wiggle: function(data) {
      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];
      y0[0] = o = o0 = 0;
      for (j = 1; j < m; ++j) {
        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];
        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {
          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {
            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;
          }
          s2 += s3 * data[i][j][1];
        }
        y0[j] = o -= s1 ? s2 / s1 * dx : 0;
        if (o < o0) o0 = o;
      }
      for (j = 0; j < m; ++j) y0[j] -= o0;
      return y0;
    },
    expand: function(data) {
      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];
      for (j = 0; j < m; ++j) {
        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];
        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;
      }
      for (j = 0; j < m; ++j) y0[j] = 0;
      return y0;
    },
    zero: d3_layout_stackOffsetZero
  });
  function d3_layout_stackOrderDefault(data) {
    return d3.range(data.length);
  }
  function d3_layout_stackOffsetZero(data) {
    var j = -1, m = data[0].length, y0 = [];
    while (++j < m) y0[j] = 0;
    return y0;
  }
  function d3_layout_stackMaxIndex(array) {
    var i = 1, j = 0, v = array[0][1], k, n = array.length;
    for (;i < n; ++i) {
      if ((k = array[i][1]) > v) {
        j = i;
        v = k;
      }
    }
    return j;
  }
  function d3_layout_stackReduceSum(d) {
    return d.reduce(d3_layout_stackSum, 0);
  }
  function d3_layout_stackSum(p, d) {
    return p + d[1];
  }
  d3.layout.histogram = function() {
    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;
    function histogram(data, i) {
      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;
      while (++i < m) {
        bin = bins[i] = [];
        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);
        bin.y = 0;
      }
      if (m > 0) {
        i = -1;
        while (++i < n) {
          x = values[i];
          if (x >= range[0] && x <= range[1]) {
            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];
            bin.y += k;
            bin.push(data[i]);
          }
        }
      }
      return bins;
    }
    histogram.value = function(x) {
      if (!arguments.length) return valuer;
      valuer = x;
      return histogram;
    };
    histogram.range = function(x) {
      if (!arguments.length) return ranger;
      ranger = d3_functor(x);
      return histogram;
    };
    histogram.bins = function(x) {
      if (!arguments.length) return binner;
      binner = typeof x === "number" ? function(range) {
        return d3_layout_histogramBinFixed(range, x);
      } : d3_functor(x);
      return histogram;
    };
    histogram.frequency = function(x) {
      if (!arguments.length) return frequency;
      frequency = !!x;
      return histogram;
    };
    return histogram;
  };
  function d3_layout_histogramBinSturges(range, values) {
    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));
  }
  function d3_layout_histogramBinFixed(range, n) {
    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];
    while (++x <= n) f[x] = m * x + b;
    return f;
  }
  function d3_layout_histogramRange(values) {
    return [ d3.min(values), d3.max(values) ];
  }
  d3.layout.pack = function() {
    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;
    function pack(d, i) {
      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === "function" ? radius : function() {
        return radius;
      };
      root.x = root.y = 0;
      d3_layout_hierarchyVisitAfter(root, function(d) {
        d.r = +r(d.value);
      });
      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
      if (padding) {
        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;
        d3_layout_hierarchyVisitAfter(root, function(d) {
          d.r += dr;
        });
        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);
        d3_layout_hierarchyVisitAfter(root, function(d) {
          d.r -= dr;
        });
      }
      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));
      return nodes;
    }
    pack.size = function(_) {
      if (!arguments.length) return size;
      size = _;
      return pack;
    };
    pack.radius = function(_) {
      if (!arguments.length) return radius;
      radius = _ == null || typeof _ === "function" ? _ : +_;
      return pack;
    };
    pack.padding = function(_) {
      if (!arguments.length) return padding;
      padding = +_;
      return pack;
    };
    return d3_layout_hierarchyRebind(pack, hierarchy);
  };
  function d3_layout_packSort(a, b) {
    return a.value - b.value;
  }
  function d3_layout_packInsert(a, b) {
    var c = a._pack_next;
    a._pack_next = b;
    b._pack_prev = a;
    b._pack_next = c;
    c._pack_prev = b;
  }
  function d3_layout_packSplice(a, b) {
    a._pack_next = b;
    b._pack_prev = a;
  }
  function d3_layout_packIntersects(a, b) {
    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;
    return .999 * dr * dr > dx * dx + dy * dy;
  }
  function d3_layout_packSiblings(node) {
    if (!(nodes = node.children) || !(n = nodes.length)) return;
    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;
    function bound(node) {
      xMin = Math.min(node.x - node.r, xMin);
      xMax = Math.max(node.x + node.r, xMax);
      yMin = Math.min(node.y - node.r, yMin);
      yMax = Math.max(node.y + node.r, yMax);
    }
    nodes.forEach(d3_layout_packLink);
    a = nodes[0];
    a.x = -a.r;
    a.y = 0;
    bound(a);
    if (n > 1) {
      b = nodes[1];
      b.x = b.r;
      b.y = 0;
      bound(b);
      if (n > 2) {
        c = nodes[2];
        d3_layout_packPlace(a, b, c);
        bound(c);
        d3_layout_packInsert(a, c);
        a._pack_prev = c;
        d3_layout_packInsert(c, b);
        b = a._pack_next;
        for (i = 3; i < n; i++) {
          d3_layout_packPlace(a, b, c = nodes[i]);
          var isect = 0, s1 = 1, s2 = 1;
          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {
            if (d3_layout_packIntersects(j, c)) {
              isect = 1;
              break;
            }
          }
          if (isect == 1) {
            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {
              if (d3_layout_packIntersects(k, c)) {
                break;
              }
            }
          }
          if (isect) {
            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);
            i--;
          } else {
            d3_layout_packInsert(a, c);
            b = c;
            bound(c);
          }
        }
      }
    }
    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;
    for (i = 0; i < n; i++) {
      c = nodes[i];
      c.x -= cx;
      c.y -= cy;
      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));
    }
    node.r = cr;
    nodes.forEach(d3_layout_packUnlink);
  }
  function d3_layout_packLink(node) {
    node._pack_next = node._pack_prev = node;
  }
  function d3_layout_packUnlink(node) {
    delete node._pack_next;
    delete node._pack_prev;
  }
  function d3_layout_packTransform(node, x, y, k) {
    var children = node.children;
    node.x = x += k * node.x;
    node.y = y += k * node.y;
    node.r *= k;
    if (children) {
      var i = -1, n = children.length;
      while (++i < n) d3_layout_packTransform(children[i], x, y, k);
    }
  }
  function d3_layout_packPlace(a, b, c) {
    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;
    if (db && (dx || dy)) {
      var da = b.r + c.r, dc = dx * dx + dy * dy;
      da *= da;
      db *= db;
      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);
      c.x = a.x + x * dx + y * dy;
      c.y = a.y + x * dy - y * dx;
    } else {
      c.x = a.x + db;
      c.y = a.y;
    }
  }
  d3.layout.tree = function() {
    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;
    function tree(d, i) {
      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);
      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;
      d3_layout_hierarchyVisitBefore(root1, secondWalk);
      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {
        var left = root0, right = root0, bottom = root0;
        d3_layout_hierarchyVisitBefore(root0, function(node) {
          if (node.x < left.x) left = node;
          if (node.x > right.x) right = node;
          if (node.depth > bottom.depth) bottom = node;
        });
        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);
        d3_layout_hierarchyVisitBefore(root0, function(node) {
          node.x = (node.x + tx) * kx;
          node.y = node.depth * ky;
        });
      }
      return nodes;
    }
    function wrapTree(root0) {
      var root1 = {
        A: null,
        children: [ root0 ]
      }, queue = [ root1 ], node1;
      while ((node1 = queue.pop()) != null) {
        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {
          queue.push((children[i] = child = {
            _: children[i],
            parent: node1,
            children: (child = children[i].children) && child.slice() || [],
            A: null,
            a: null,
            z: 0,
            m: 0,
            c: 0,
            s: 0,
            t: null,
            i: i
          }).a = child);
        }
      }
      return root1.children[0];
    }
    function firstWalk(v) {
      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;
      if (children.length) {
        d3_layout_treeShift(v);
        var midpoint = (children[0].z + children[children.length - 1].z) / 2;
        if (w) {
          v.z = w.z + separation(v._, w._);
          v.m = v.z - midpoint;
        } else {
          v.z = midpoint;
        }
      } else if (w) {
        v.z = w.z + separation(v._, w._);
      }
      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
    }
    function secondWalk(v) {
      v._.x = v.z + v.parent.m;
      v.m += v.parent.m;
    }
    function apportion(v, w, ancestor) {
      if (w) {
        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;
        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {
          vom = d3_layout_treeLeft(vom);
          vop = d3_layout_treeRight(vop);
          vop.a = v;
          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);
          if (shift > 0) {
            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);
            sip += shift;
            sop += shift;
          }
          sim += vim.m;
          sip += vip.m;
          som += vom.m;
          sop += vop.m;
        }
        if (vim && !d3_layout_treeRight(vop)) {
          vop.t = vim;
          vop.m += sim - sop;
        }
        if (vip && !d3_layout_treeLeft(vom)) {
          vom.t = vip;
          vom.m += sip - som;
          ancestor = v;
        }
      }
      return ancestor;
    }
    function sizeNode(node) {
      node.x *= size[0];
      node.y = node.depth * size[1];
    }
    tree.separation = function(x) {
      if (!arguments.length) return separation;
      separation = x;
      return tree;
    };
    tree.size = function(x) {
      if (!arguments.length) return nodeSize ? null : size;
      nodeSize = (size = x) == null ? sizeNode : null;
      return tree;
    };
    tree.nodeSize = function(x) {
      if (!arguments.length) return nodeSize ? size : null;
      nodeSize = (size = x) == null ? null : sizeNode;
      return tree;
    };
    return d3_layout_hierarchyRebind(tree, hierarchy);
  };
  function d3_layout_treeSeparation(a, b) {
    return a.parent == b.parent ? 1 : 2;
  }
  function d3_layout_treeLeft(v) {
    var children = v.children;
    return children.length ? children[0] : v.t;
  }
  function d3_layout_treeRight(v) {
    var children = v.children, n;
    return (n = children.length) ? children[n - 1] : v.t;
  }
  function d3_layout_treeMove(wm, wp, shift) {
    var change = shift / (wp.i - wm.i);
    wp.c -= change;
    wp.s += shift;
    wm.c += change;
    wp.z += shift;
    wp.m += shift;
  }
  function d3_layout_treeShift(v) {
    var shift = 0, change = 0, children = v.children, i = children.length, w;
    while (--i >= 0) {
      w = children[i];
      w.z += shift;
      w.m += shift;
      shift += w.s + (change += w.c);
    }
  }
  function d3_layout_treeAncestor(vim, v, ancestor) {
    return vim.a.parent === v.parent ? vim.a : ancestor;
  }
  d3.layout.cluster = function() {
    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;
    function cluster(d, i) {
      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;
      d3_layout_hierarchyVisitAfter(root, function(node) {
        var children = node.children;
        if (children && children.length) {
          node.x = d3_layout_clusterX(children);
          node.y = d3_layout_clusterY(children);
        } else {
          node.x = previousNode ? x += separation(node, previousNode) : 0;
          node.y = 0;
          previousNode = node;
        }
      });
      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;
      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {
        node.x = (node.x - root.x) * size[0];
        node.y = (root.y - node.y) * size[1];
      } : function(node) {
        node.x = (node.x - x0) / (x1 - x0) * size[0];
        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];
      });
      return nodes;
    }
    cluster.separation = function(x) {
      if (!arguments.length) return separation;
      separation = x;
      return cluster;
    };
    cluster.size = function(x) {
      if (!arguments.length) return nodeSize ? null : size;
      nodeSize = (size = x) == null;
      return cluster;
    };
    cluster.nodeSize = function(x) {
      if (!arguments.length) return nodeSize ? size : null;
      nodeSize = (size = x) != null;
      return cluster;
    };
    return d3_layout_hierarchyRebind(cluster, hierarchy);
  };
  function d3_layout_clusterY(children) {
    return 1 + d3.max(children, function(child) {
      return child.y;
    });
  }
  function d3_layout_clusterX(children) {
    return children.reduce(function(x, child) {
      return x + child.x;
    }, 0) / children.length;
  }
  function d3_layout_clusterLeft(node) {
    var children = node.children;
    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;
  }
  function d3_layout_clusterRight(node) {
    var children = node.children, n;
    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;
  }
  d3.layout.treemap = function() {
    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = "squarify", ratio = .5 * (1 + Math.sqrt(5));
    function scale(children, k) {
      var i = -1, n = children.length, child, area;
      while (++i < n) {
        area = (child = children[i]).value * (k < 0 ? 0 : k);
        child.area = isNaN(area) || area <= 0 ? 0 : area;
      }
    }
    function squarify(node) {
      var children = node.children;
      if (children && children.length) {
        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === "slice" ? rect.dx : mode === "dice" ? rect.dy : mode === "slice-dice" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;
        scale(remaining, rect.dx * rect.dy / node.value);
        row.area = 0;
        while ((n = remaining.length) > 0) {
          row.push(child = remaining[n - 1]);
          row.area += child.area;
          if (mode !== "squarify" || (score = worst(row, u)) <= best) {
            remaining.pop();
            best = score;
          } else {
            row.area -= row.pop().area;
            position(row, u, rect, false);
            u = Math.min(rect.dx, rect.dy);
            row.length = row.area = 0;
            best = Infinity;
          }
        }
        if (row.length) {
          position(row, u, rect, true);
          row.length = row.area = 0;
        }
        children.forEach(squarify);
      }
    }
    function stickify(node) {
      var children = node.children;
      if (children && children.length) {
        var rect = pad(node), remaining = children.slice(), child, row = [];
        scale(remaining, rect.dx * rect.dy / node.value);
        row.area = 0;
        while (child = remaining.pop()) {
          row.push(child);
          row.area += child.area;
          if (child.z != null) {
            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);
            row.length = row.area = 0;
          }
        }
        children.forEach(stickify);
      }
    }
    function worst(row, u) {
      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;
      while (++i < n) {
        if (!(r = row[i].area)) continue;
        if (r < rmin) rmin = r;
        if (r > rmax) rmax = r;
      }
      s *= s;
      u *= u;
      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;
    }
    function position(row, u, rect, flush) {
      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;
      if (u == rect.dx) {
        if (flush || v > rect.dy) v = rect.dy;
        while (++i < n) {
          o = row[i];
          o.x = x;
          o.y = y;
          o.dy = v;
          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);
        }
        o.z = true;
        o.dx += rect.x + rect.dx - x;
        rect.y += v;
        rect.dy -= v;
      } else {
        if (flush || v > rect.dx) v = rect.dx;
        while (++i < n) {
          o = row[i];
          o.x = x;
          o.y = y;
          o.dx = v;
          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);
        }
        o.z = false;
        o.dy += rect.y + rect.dy - y;
        rect.x += v;
        rect.dx -= v;
      }
    }
    function treemap(d) {
      var nodes = stickies || hierarchy(d), root = nodes[0];
      root.x = 0;
      root.y = 0;
      root.dx = size[0];
      root.dy = size[1];
      if (stickies) hierarchy.revalue(root);
      scale([ root ], root.dx * root.dy / root.value);
      (stickies ? stickify : squarify)(root);
      if (sticky) stickies = nodes;
      return nodes;
    }
    treemap.size = function(x) {
      if (!arguments.length) return size;
      size = x;
      return treemap;
    };
    treemap.padding = function(x) {
      if (!arguments.length) return padding;
      function padFunction(node) {
        var p = x.call(treemap, node, node.depth);
        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === "number" ? [ p, p, p, p ] : p);
      }
      function padConstant(node) {
        return d3_layout_treemapPad(node, x);
      }
      var type;
      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === "function" ? padFunction : type === "number" ? (x = [ x, x, x, x ], 
      padConstant) : padConstant;
      return treemap;
    };
    treemap.round = function(x) {
      if (!arguments.length) return round != Number;
      round = x ? Math.round : Number;
      return treemap;
    };
    treemap.sticky = function(x) {
      if (!arguments.length) return sticky;
      sticky = x;
      stickies = null;
      return treemap;
    };
    treemap.ratio = function(x) {
      if (!arguments.length) return ratio;
      ratio = x;
      return treemap;
    };
    treemap.mode = function(x) {
      if (!arguments.length) return mode;
      mode = x + "";
      return treemap;
    };
    return d3_layout_hierarchyRebind(treemap, hierarchy);
  };
  function d3_layout_treemapPadNull(node) {
    return {
      x: node.x,
      y: node.y,
      dx: node.dx,
      dy: node.dy
    };
  }
  function d3_layout_treemapPad(node, padding) {
    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];
    if (dx < 0) {
      x += dx / 2;
      dx = 0;
    }
    if (dy < 0) {
      y += dy / 2;
      dy = 0;
    }
    return {
      x: x,
      y: y,
      dx: dx,
      dy: dy
    };
  }
  d3.random = {
    normal: function(µ, σ) {
      var n = arguments.length;
      if (n < 2) σ = 1;
      if (n < 1) µ = 0;
      return function() {
        var x, y, r;
        do {
          x = Math.random() * 2 - 1;
          y = Math.random() * 2 - 1;
          r = x * x + y * y;
        } while (!r || r > 1);
        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);
      };
    },
    logNormal: function() {
      var random = d3.random.normal.apply(d3, arguments);
      return function() {
        return Math.exp(random());
      };
    },
    bates: function(m) {
      var random = d3.random.irwinHall(m);
      return function() {
        return random() / m;
      };
    },
    irwinHall: function(m) {
      return function() {
        for (var s = 0, j = 0; j < m; j++) s += Math.random();
        return s;
      };
    }
  };
  d3.scale = {};
  function d3_scaleExtent(domain) {
    var start = domain[0], stop = domain[domain.length - 1];
    return start < stop ? [ start, stop ] : [ stop, start ];
  }
  function d3_scaleRange(scale) {
    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());
  }
  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {
    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);
    return function(x) {
      return i(u(x));
    };
  }
  function d3_scale_nice(domain, nice) {
    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;
    if (x1 < x0) {
      dx = i0, i0 = i1, i1 = dx;
      dx = x0, x0 = x1, x1 = dx;
    }
    domain[i0] = nice.floor(x0);
    domain[i1] = nice.ceil(x1);
    return domain;
  }
  function d3_scale_niceStep(step) {
    return step ? {
      floor: function(x) {
        return Math.floor(x / step) * step;
      },
      ceil: function(x) {
        return Math.ceil(x / step) * step;
      }
    } : d3_scale_niceIdentity;
  }
  var d3_scale_niceIdentity = {
    floor: d3_identity,
    ceil: d3_identity
  };
  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {
    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;
    if (domain[k] < domain[0]) {
      domain = domain.slice().reverse();
      range = range.slice().reverse();
    }
    while (++j <= k) {
      u.push(uninterpolate(domain[j - 1], domain[j]));
      i.push(interpolate(range[j - 1], range[j]));
    }
    return function(x) {
      var j = d3.bisect(domain, x, 1, k) - 1;
      return i[j](u[j](x));
    };
  }
  d3.scale.linear = function() {
    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);
  };
  function d3_scale_linear(domain, range, interpolate, clamp) {
    var output, input;
    function rescale() {
      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;
      output = linear(domain, range, uninterpolate, interpolate);
      input = linear(range, domain, uninterpolate, d3_interpolate);
      return scale;
    }
    function scale(x) {
      return output(x);
    }
    scale.invert = function(y) {
      return input(y);
    };
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      domain = x.map(Number);
      return rescale();
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      return rescale();
    };
    scale.rangeRound = function(x) {
      return scale.range(x).interpolate(d3_interpolateRound);
    };
    scale.clamp = function(x) {
      if (!arguments.length) return clamp;
      clamp = x;
      return rescale();
    };
    scale.interpolate = function(x) {
      if (!arguments.length) return interpolate;
      interpolate = x;
      return rescale();
    };
    scale.ticks = function(m) {
      return d3_scale_linearTicks(domain, m);
    };
    scale.tickFormat = function(m, format) {
      return d3_scale_linearTickFormat(domain, m, format);
    };
    scale.nice = function(m) {
      d3_scale_linearNice(domain, m);
      return rescale();
    };
    scale.copy = function() {
      return d3_scale_linear(domain, range, interpolate, clamp);
    };
    return rescale();
  }
  function d3_scale_linearRebind(scale, linear) {
    return d3.rebind(scale, linear, "range", "rangeRound", "interpolate", "clamp");
  }
  function d3_scale_linearNice(domain, m) {
    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));
  }
  function d3_scale_linearTickRange(domain, m) {
    if (m == null) m = 10;
    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;
    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;
    extent[0] = Math.ceil(extent[0] / step) * step;
    extent[1] = Math.floor(extent[1] / step) * step + step * .5;
    extent[2] = step;
    return extent;
  }
  function d3_scale_linearTicks(domain, m) {
    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));
  }
  function d3_scale_linearTickFormat(domain, m, format) {
    var range = d3_scale_linearTickRange(domain, m);
    if (format) {
      var match = d3_format_re.exec(format);
      match.shift();
      if (match[8] === "s") {
        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));
        if (!match[7]) match[7] = "." + d3_scale_linearPrecision(prefix.scale(range[2]));
        match[8] = "f";
        format = d3.format(match.join(""));
        return function(d) {
          return format(prefix.scale(d)) + prefix.symbol;
        };
      }
      if (!match[7]) match[7] = "." + d3_scale_linearFormatPrecision(match[8], range);
      format = match.join("");
    } else {
      format = ",." + d3_scale_linearPrecision(range[2]) + "f";
    }
    return d3.format(format);
  }
  var d3_scale_linearFormatSignificant = {
    s: 1,
    g: 1,
    p: 1,
    r: 1,
    e: 1
  };
  function d3_scale_linearPrecision(value) {
    return -Math.floor(Math.log(value) / Math.LN10 + .01);
  }
  function d3_scale_linearFormatPrecision(type, range) {
    var p = d3_scale_linearPrecision(range[2]);
    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== "e") : p - (type === "%") * 2;
  }
  d3.scale.log = function() {
    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);
  };
  function d3_scale_log(linear, base, positive, domain) {
    function log(x) {
      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);
    }
    function pow(x) {
      return positive ? Math.pow(base, x) : -Math.pow(base, -x);
    }
    function scale(x) {
      return linear(log(x));
    }
    scale.invert = function(x) {
      return pow(linear.invert(x));
    };
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      positive = x[0] >= 0;
      linear.domain((domain = x.map(Number)).map(log));
      return scale;
    };
    scale.base = function(_) {
      if (!arguments.length) return base;
      base = +_;
      linear.domain(domain.map(log));
      return scale;
    };
    scale.nice = function() {
      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);
      linear.domain(niced);
      domain = niced.map(pow);
      return scale;
    };
    scale.ticks = function() {
      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;
      if (isFinite(j - i)) {
        if (positive) {
          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);
          ticks.push(pow(i));
        } else {
          ticks.push(pow(i));
          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);
        }
        for (i = 0; ticks[i] < u; i++) {}
        for (j = ticks.length; ticks[j - 1] > v; j--) {}
        ticks = ticks.slice(i, j);
      }
      return ticks;
    };
    scale.tickFormat = function(n, format) {
      if (!arguments.length) return d3_scale_logFormat;
      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== "function") format = d3.format(format);
      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, 
      Math.floor), e;
      return function(d) {
        return d / pow(f(log(d) + e)) <= k ? format(d) : "";
      };
    };
    scale.copy = function() {
      return d3_scale_log(linear.copy(), base, positive, domain);
    };
    return d3_scale_linearRebind(scale, linear);
  }
  var d3_scale_logFormat = d3.format(".0e"), d3_scale_logNiceNegative = {
    floor: function(x) {
      return -Math.ceil(-x);
    },
    ceil: function(x) {
      return -Math.floor(-x);
    }
  };
  d3.scale.pow = function() {
    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);
  };
  function d3_scale_pow(linear, exponent, domain) {
    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);
    function scale(x) {
      return linear(powp(x));
    }
    scale.invert = function(x) {
      return powb(linear.invert(x));
    };
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      linear.domain((domain = x.map(Number)).map(powp));
      return scale;
    };
    scale.ticks = function(m) {
      return d3_scale_linearTicks(domain, m);
    };
    scale.tickFormat = function(m, format) {
      return d3_scale_linearTickFormat(domain, m, format);
    };
    scale.nice = function(m) {
      return scale.domain(d3_scale_linearNice(domain, m));
    };
    scale.exponent = function(x) {
      if (!arguments.length) return exponent;
      powp = d3_scale_powPow(exponent = x);
      powb = d3_scale_powPow(1 / exponent);
      linear.domain(domain.map(powp));
      return scale;
    };
    scale.copy = function() {
      return d3_scale_pow(linear.copy(), exponent, domain);
    };
    return d3_scale_linearRebind(scale, linear);
  }
  function d3_scale_powPow(e) {
    return function(x) {
      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);
    };
  }
  d3.scale.sqrt = function() {
    return d3.scale.pow().exponent(.5);
  };
  d3.scale.ordinal = function() {
    return d3_scale_ordinal([], {
      t: "range",
      a: [ [] ]
    });
  };
  function d3_scale_ordinal(domain, ranger) {
    var index, range, rangeBand;
    function scale(x) {
      return range[((index.get(x) || (ranger.t === "range" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];
    }
    function steps(start, step) {
      return d3.range(domain.length).map(function(i) {
        return start + step * i;
      });
    }
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      domain = [];
      index = new d3_Map();
      var i = -1, n = x.length, xi;
      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));
      return scale[ranger.t].apply(scale, ranger.a);
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      rangeBand = 0;
      ranger = {
        t: "range",
        a: arguments
      };
      return scale;
    };
    scale.rangePoints = function(x, padding) {
      if (arguments.length < 2) padding = 0;
      var start = x[0], stop = x[1], step = (stop - start) / (Math.max(1, domain.length - 1) + padding);
      range = steps(domain.length < 2 ? (start + stop) / 2 : start + step * padding / 2, step);
      rangeBand = 0;
      ranger = {
        t: "rangePoints",
        a: arguments
      };
      return scale;
    };
    scale.rangeBands = function(x, padding, outerPadding) {
      if (arguments.length < 2) padding = 0;
      if (arguments.length < 3) outerPadding = padding;
      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);
      range = steps(start + step * outerPadding, step);
      if (reverse) range.reverse();
      rangeBand = step * (1 - padding);
      ranger = {
        t: "rangeBands",
        a: arguments
      };
      return scale;
    };
    scale.rangeRoundBands = function(x, padding, outerPadding) {
      if (arguments.length < 2) padding = 0;
      if (arguments.length < 3) outerPadding = padding;
      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding)), error = stop - start - (domain.length - padding) * step;
      range = steps(start + Math.round(error / 2), step);
      if (reverse) range.reverse();
      rangeBand = Math.round(step * (1 - padding));
      ranger = {
        t: "rangeRoundBands",
        a: arguments
      };
      return scale;
    };
    scale.rangeBand = function() {
      return rangeBand;
    };
    scale.rangeExtent = function() {
      return d3_scaleExtent(ranger.a[0]);
    };
    scale.copy = function() {
      return d3_scale_ordinal(domain, ranger);
    };
    return scale.domain(domain);
  }
  d3.scale.category10 = function() {
    return d3.scale.ordinal().range(d3_category10);
  };
  d3.scale.category20 = function() {
    return d3.scale.ordinal().range(d3_category20);
  };
  d3.scale.category20b = function() {
    return d3.scale.ordinal().range(d3_category20b);
  };
  d3.scale.category20c = function() {
    return d3.scale.ordinal().range(d3_category20c);
  };
  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);
  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);
  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);
  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);
  d3.scale.quantile = function() {
    return d3_scale_quantile([], []);
  };
  function d3_scale_quantile(domain, range) {
    var thresholds;
    function rescale() {
      var k = 0, q = range.length;
      thresholds = [];
      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);
      return scale;
    }
    function scale(x) {
      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];
    }
    scale.domain = function(x) {
      if (!arguments.length) return domain;
      domain = x.filter(d3_number).sort(d3_ascending);
      return rescale();
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      return rescale();
    };
    scale.quantiles = function() {
      return thresholds;
    };
    scale.invertExtent = function(y) {
      y = range.indexOf(y);
      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];
    };
    scale.copy = function() {
      return d3_scale_quantile(domain, range);
    };
    return rescale();
  }
  d3.scale.quantize = function() {
    return d3_scale_quantize(0, 1, [ 0, 1 ]);
  };
  function d3_scale_quantize(x0, x1, range) {
    var kx, i;
    function scale(x) {
      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];
    }
    function rescale() {
      kx = range.length / (x1 - x0);
      i = range.length - 1;
      return scale;
    }
    scale.domain = function(x) {
      if (!arguments.length) return [ x0, x1 ];
      x0 = +x[0];
      x1 = +x[x.length - 1];
      return rescale();
    };
    scale.range = function(x) {
      if (!arguments.length) return range;
      range = x;
      return rescale();
    };
    scale.invertExtent = function(y) {
      y = range.indexOf(y);
      y = y < 0 ? NaN : y / kx + x0;
      return [ y, y + 1 / kx ];
    };
    scale.copy = function() {
      return d3_scale_quantize(x0, x1, range);
    };
    return rescale();
  }
  d3.scale.threshold = function() {
    return d3_scale_threshold([ .5 ], [ 0, 1 ]);
  };
  function d3_scale_threshold(domain, range) {
    function scale(x) {
      if (x <= x) return range[d3.bisect(domain, x)];
    }
    scale.domain = function(_) {
      if (!arguments.length) return domain;
      domain = _;
      return scale;
    };
    scale.range = function(_) {
      if (!arguments.length) return range;
      range = _;
      return scale;
    };
    scale.invertExtent = function(y) {
      y = range.indexOf(y);
      return [ domain[y - 1], domain[y] ];
    };
    scale.copy = function() {
      return d3_scale_threshold(domain, range);
    };
    return scale;
  }
  d3.scale.identity = function() {
    return d3_scale_identity([ 0, 1 ]);
  };
  function d3_scale_identity(domain) {
    function identity(x) {
      return +x;
    }
    identity.invert = identity;
    identity.domain = identity.range = function(x) {
      if (!arguments.length) return domain;
      domain = x.map(identity);
      return identity;
    };
    identity.ticks = function(m) {
      return d3_scale_linearTicks(domain, m);
    };
    identity.tickFormat = function(m, format) {
      return d3_scale_linearTickFormat(domain, m, format);
    };
    identity.copy = function() {
      return d3_scale_identity(domain);
    };
    return identity;
  }
  d3.svg = {};
  d3.svg.arc = function() {
    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;
    function arc() {
      var r0 = innerRadius.apply(this, arguments), r1 = outerRadius.apply(this, arguments), a0 = startAngle.apply(this, arguments) + d3_svg_arcOffset, a1 = endAngle.apply(this, arguments) + d3_svg_arcOffset, da = (a1 < a0 && (da = a0, 
      a0 = a1, a1 = da), a1 - a0), df = da < π ? "0" : "1", c0 = Math.cos(a0), s0 = Math.sin(a0), c1 = Math.cos(a1), s1 = Math.sin(a1);
      return da >= d3_svg_arcMax ? r0 ? "M0," + r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + -r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + r1 + "M0," + r0 + "A" + r0 + "," + r0 + " 0 1,0 0," + -r0 + "A" + r0 + "," + r0 + " 0 1,0 0," + r0 + "Z" : "M0," + r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + -r1 + "A" + r1 + "," + r1 + " 0 1,1 0," + r1 + "Z" : r0 ? "M" + r1 * c0 + "," + r1 * s0 + "A" + r1 + "," + r1 + " 0 " + df + ",1 " + r1 * c1 + "," + r1 * s1 + "L" + r0 * c1 + "," + r0 * s1 + "A" + r0 + "," + r0 + " 0 " + df + ",0 " + r0 * c0 + "," + r0 * s0 + "Z" : "M" + r1 * c0 + "," + r1 * s0 + "A" + r1 + "," + r1 + " 0 " + df + ",1 " + r1 * c1 + "," + r1 * s1 + "L0,0" + "Z";
    }
    arc.innerRadius = function(v) {
      if (!arguments.length) return innerRadius;
      innerRadius = d3_functor(v);
      return arc;
    };
    arc.outerRadius = function(v) {
      if (!arguments.length) return outerRadius;
      outerRadius = d3_functor(v);
      return arc;
    };
    arc.startAngle = function(v) {
      if (!arguments.length) return startAngle;
      startAngle = d3_functor(v);
      return arc;
    };
    arc.endAngle = function(v) {
      if (!arguments.length) return endAngle;
      endAngle = d3_functor(v);
      return arc;
    };
    arc.centroid = function() {
      var r = (innerRadius.apply(this, arguments) + outerRadius.apply(this, arguments)) / 2, a = (startAngle.apply(this, arguments) + endAngle.apply(this, arguments)) / 2 + d3_svg_arcOffset;
      return [ Math.cos(a) * r, Math.sin(a) * r ];
    };
    return arc;
  };
  var d3_svg_arcOffset = -halfπ, d3_svg_arcMax = τ - ε;
  function d3_svg_arcInnerRadius(d) {
    return d.innerRadius;
  }
  function d3_svg_arcOuterRadius(d) {
    return d.outerRadius;
  }
  function d3_svg_arcStartAngle(d) {
    return d.startAngle;
  }
  function d3_svg_arcEndAngle(d) {
    return d.endAngle;
  }
  function d3_svg_line(projection) {
    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;
    function line(data) {
      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);
      function segment() {
        segments.push("M", interpolate(projection(points), tension));
      }
      while (++i < n) {
        if (defined.call(this, d = data[i], i)) {
          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);
        } else if (points.length) {
          segment();
          points = [];
        }
      }
      if (points.length) segment();
      return segments.length ? segments.join("") : null;
    }
    line.x = function(_) {
      if (!arguments.length) return x;
      x = _;
      return line;
    };
    line.y = function(_) {
      if (!arguments.length) return y;
      y = _;
      return line;
    };
    line.defined = function(_) {
      if (!arguments.length) return defined;
      defined = _;
      return line;
    };
    line.interpolate = function(_) {
      if (!arguments.length) return interpolateKey;
      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
      return line;
    };
    line.tension = function(_) {
      if (!arguments.length) return tension;
      tension = _;
      return line;
    };
    return line;
  }
  d3.svg.line = function() {
    return d3_svg_line(d3_identity);
  };
  var d3_svg_lineInterpolators = d3.map({
    linear: d3_svg_lineLinear,
    "linear-closed": d3_svg_lineLinearClosed,
    step: d3_svg_lineStep,
    "step-before": d3_svg_lineStepBefore,
    "step-after": d3_svg_lineStepAfter,
    basis: d3_svg_lineBasis,
    "basis-open": d3_svg_lineBasisOpen,
    "basis-closed": d3_svg_lineBasisClosed,
    bundle: d3_svg_lineBundle,
    cardinal: d3_svg_lineCardinal,
    "cardinal-open": d3_svg_lineCardinalOpen,
    "cardinal-closed": d3_svg_lineCardinalClosed,
    monotone: d3_svg_lineMonotone
  });
  d3_svg_lineInterpolators.forEach(function(key, value) {
    value.key = key;
    value.closed = /-closed$/.test(key);
  });
  function d3_svg_lineLinear(points) {
    return points.join("L");
  }
  function d3_svg_lineLinearClosed(points) {
    return d3_svg_lineLinear(points) + "Z";
  }
  function d3_svg_lineStep(points) {
    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
    while (++i < n) path.push("H", (p[0] + (p = points[i])[0]) / 2, "V", p[1]);
    if (n > 1) path.push("H", p[0]);
    return path.join("");
  }
  function d3_svg_lineStepBefore(points) {
    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
    while (++i < n) path.push("V", (p = points[i])[1], "H", p[0]);
    return path.join("");
  }
  function d3_svg_lineStepAfter(points) {
    var i = 0, n = points.length, p = points[0], path = [ p[0], ",", p[1] ];
    while (++i < n) path.push("H", (p = points[i])[0], "V", p[1]);
    return path.join("");
  }
  function d3_svg_lineCardinalOpen(points, tension) {
    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, points.length - 1), d3_svg_lineCardinalTangents(points, tension));
  }
  function d3_svg_lineCardinalClosed(points, tension) {
    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), 
    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));
  }
  function d3_svg_lineCardinal(points, tension) {
    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));
  }
  function d3_svg_lineHermite(points, tangents) {
    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {
      return d3_svg_lineLinear(points);
    }
    var quad = points.length != tangents.length, path = "", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;
    if (quad) {
      path += "Q" + (p[0] - t0[0] * 2 / 3) + "," + (p[1] - t0[1] * 2 / 3) + "," + p[0] + "," + p[1];
      p0 = points[1];
      pi = 2;
    }
    if (tangents.length > 1) {
      t = tangents[1];
      p = points[pi];
      pi++;
      path += "C" + (p0[0] + t0[0]) + "," + (p0[1] + t0[1]) + "," + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
      for (var i = 2; i < tangents.length; i++, pi++) {
        p = points[pi];
        t = tangents[i];
        path += "S" + (p[0] - t[0]) + "," + (p[1] - t[1]) + "," + p[0] + "," + p[1];
      }
    }
    if (quad) {
      var lp = points[pi];
      path += "Q" + (p[0] + t[0] * 2 / 3) + "," + (p[1] + t[1] * 2 / 3) + "," + lp[0] + "," + lp[1];
    }
    return path;
  }
  function d3_svg_lineCardinalTangents(points, tension) {
    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;
    while (++i < n) {
      p0 = p1;
      p1 = p2;
      p2 = points[i];
      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);
    }
    return tangents;
  }
  function d3_svg_lineBasis(points) {
    if (points.length < 3) return d3_svg_lineLinear(points);
    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, ",", y0, "L", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
    points.push(points[n - 1]);
    while (++i <= n) {
      pi = points[i];
      px.shift();
      px.push(pi[0]);
      py.shift();
      py.push(pi[1]);
      d3_svg_lineBasisBezier(path, px, py);
    }
    points.pop();
    path.push("L", pi);
    return path.join("");
  }
  function d3_svg_lineBasisOpen(points) {
    if (points.length < 4) return d3_svg_lineLinear(points);
    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];
    while (++i < 3) {
      pi = points[i];
      px.push(pi[0]);
      py.push(pi[1]);
    }
    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + "," + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));
    --i;
    while (++i < n) {
      pi = points[i];
      px.shift();
      px.push(pi[0]);
      py.shift();
      py.push(pi[1]);
      d3_svg_lineBasisBezier(path, px, py);
    }
    return path.join("");
  }
  function d3_svg_lineBasisClosed(points) {
    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];
    while (++i < 4) {
      pi = points[i % n];
      px.push(pi[0]);
      py.push(pi[1]);
    }
    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];
    --i;
    while (++i < m) {
      pi = points[i % n];
      px.shift();
      px.push(pi[0]);
      py.shift();
      py.push(pi[1]);
      d3_svg_lineBasisBezier(path, px, py);
    }
    return path.join("");
  }
  function d3_svg_lineBundle(points, tension) {
    var n = points.length - 1;
    if (n) {
      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;
      while (++i <= n) {
        p = points[i];
        t = i / n;
        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);
        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);
      }
    }
    return d3_svg_lineBasis(points);
  }
  function d3_svg_lineDot4(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
  }
  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];
  function d3_svg_lineBasisBezier(path, x, y) {
    path.push("C", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), ",", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));
  }
  function d3_svg_lineSlope(p0, p1) {
    return (p1[1] - p0[1]) / (p1[0] - p0[0]);
  }
  function d3_svg_lineFiniteDifferences(points) {
    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);
    while (++i < j) {
      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;
    }
    m[i] = d;
    return m;
  }
  function d3_svg_lineMonotoneTangents(points) {
    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;
    while (++i < j) {
      d = d3_svg_lineSlope(points[i], points[i + 1]);
      if (abs(d) < ε) {
        m[i] = m[i + 1] = 0;
      } else {
        a = m[i] / d;
        b = m[i + 1] / d;
        s = a * a + b * b;
        if (s > 9) {
          s = d * 3 / Math.sqrt(s);
          m[i] = s * a;
          m[i + 1] = s * b;
        }
      }
    }
    i = -1;
    while (++i <= j) {
      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));
      tangents.push([ s || 0, m[i] * s || 0 ]);
    }
    return tangents;
  }
  function d3_svg_lineMonotone(points) {
    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));
  }
  d3.svg.line.radial = function() {
    var line = d3_svg_line(d3_svg_lineRadial);
    line.radius = line.x, delete line.x;
    line.angle = line.y, delete line.y;
    return line;
  };
  function d3_svg_lineRadial(points) {
    var point, i = -1, n = points.length, r, a;
    while (++i < n) {
      point = points[i];
      r = point[0];
      a = point[1] + d3_svg_arcOffset;
      point[0] = r * Math.cos(a);
      point[1] = r * Math.sin(a);
    }
    return points;
  }
  function d3_svg_area(projection) {
    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = "L", tension = .7;
    function area(data) {
      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {
        return x;
      } : d3_functor(x1), fy1 = y0 === y1 ? function() {
        return y;
      } : d3_functor(y1), x, y;
      function segment() {
        segments.push("M", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), "Z");
      }
      while (++i < n) {
        if (defined.call(this, d = data[i], i)) {
          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);
          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);
        } else if (points0.length) {
          segment();
          points0 = [];
          points1 = [];
        }
      }
      if (points0.length) segment();
      return segments.length ? segments.join("") : null;
    }
    area.x = function(_) {
      if (!arguments.length) return x1;
      x0 = x1 = _;
      return area;
    };
    area.x0 = function(_) {
      if (!arguments.length) return x0;
      x0 = _;
      return area;
    };
    area.x1 = function(_) {
      if (!arguments.length) return x1;
      x1 = _;
      return area;
    };
    area.y = function(_) {
      if (!arguments.length) return y1;
      y0 = y1 = _;
      return area;
    };
    area.y0 = function(_) {
      if (!arguments.length) return y0;
      y0 = _;
      return area;
    };
    area.y1 = function(_) {
      if (!arguments.length) return y1;
      y1 = _;
      return area;
    };
    area.defined = function(_) {
      if (!arguments.length) return defined;
      defined = _;
      return area;
    };
    area.interpolate = function(_) {
      if (!arguments.length) return interpolateKey;
      if (typeof _ === "function") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;
      interpolateReverse = interpolate.reverse || interpolate;
      L = interpolate.closed ? "M" : "L";
      return area;
    };
    area.tension = function(_) {
      if (!arguments.length) return tension;
      tension = _;
      return area;
    };
    return area;
  }
  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;
  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;
  d3.svg.area = function() {
    return d3_svg_area(d3_identity);
  };
  d3.svg.area.radial = function() {
    var area = d3_svg_area(d3_svg_lineRadial);
    area.radius = area.x, delete area.x;
    area.innerRadius = area.x0, delete area.x0;
    area.outerRadius = area.x1, delete area.x1;
    area.angle = area.y, delete area.y;
    area.startAngle = area.y0, delete area.y0;
    area.endAngle = area.y1, delete area.y1;
    return area;
  };
  d3.svg.chord = function() {
    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;
    function chord(d, i) {
      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);
      return "M" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + "Z";
    }
    function subgroup(self, f, d, i) {
      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) + d3_svg_arcOffset, a1 = endAngle.call(self, subgroup, i) + d3_svg_arcOffset;
      return {
        r: r,
        a0: a0,
        a1: a1,
        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],
        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]
      };
    }
    function equals(a, b) {
      return a.a0 == b.a0 && a.a1 == b.a1;
    }
    function arc(r, p, a) {
      return "A" + r + "," + r + " 0 " + +(a > π) + ",1 " + p;
    }
    function curve(r0, p0, r1, p1) {
      return "Q 0,0 " + p1;
    }
    chord.radius = function(v) {
      if (!arguments.length) return radius;
      radius = d3_functor(v);
      return chord;
    };
    chord.source = function(v) {
      if (!arguments.length) return source;
      source = d3_functor(v);
      return chord;
    };
    chord.target = function(v) {
      if (!arguments.length) return target;
      target = d3_functor(v);
      return chord;
    };
    chord.startAngle = function(v) {
      if (!arguments.length) return startAngle;
      startAngle = d3_functor(v);
      return chord;
    };
    chord.endAngle = function(v) {
      if (!arguments.length) return endAngle;
      endAngle = d3_functor(v);
      return chord;
    };
    return chord;
  };
  function d3_svg_chordRadius(d) {
    return d.radius;
  }
  d3.svg.diagonal = function() {
    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;
    function diagonal(d, i) {
      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {
        x: p0.x,
        y: m
      }, {
        x: p3.x,
        y: m
      }, p3 ];
      p = p.map(projection);
      return "M" + p[0] + "C" + p[1] + " " + p[2] + " " + p[3];
    }
    diagonal.source = function(x) {
      if (!arguments.length) return source;
      source = d3_functor(x);
      return diagonal;
    };
    diagonal.target = function(x) {
      if (!arguments.length) return target;
      target = d3_functor(x);
      return diagonal;
    };
    diagonal.projection = function(x) {
      if (!arguments.length) return projection;
      projection = x;
      return diagonal;
    };
    return diagonal;
  };
  function d3_svg_diagonalProjection(d) {
    return [ d.x, d.y ];
  }
  d3.svg.diagonal.radial = function() {
    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;
    diagonal.projection = function(x) {
      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;
    };
    return diagonal;
  };
  function d3_svg_diagonalRadialProjection(projection) {
    return function() {
      var d = projection.apply(this, arguments), r = d[0], a = d[1] + d3_svg_arcOffset;
      return [ r * Math.cos(a), r * Math.sin(a) ];
    };
  }
  d3.svg.symbol = function() {
    var type = d3_svg_symbolType, size = d3_svg_symbolSize;
    function symbol(d, i) {
      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));
    }
    symbol.type = function(x) {
      if (!arguments.length) return type;
      type = d3_functor(x);
      return symbol;
    };
    symbol.size = function(x) {
      if (!arguments.length) return size;
      size = d3_functor(x);
      return symbol;
    };
    return symbol;
  };
  function d3_svg_symbolSize() {
    return 64;
  }
  function d3_svg_symbolType() {
    return "circle";
  }
  function d3_svg_symbolCircle(size) {
    var r = Math.sqrt(size / π);
    return "M0," + r + "A" + r + "," + r + " 0 1,1 0," + -r + "A" + r + "," + r + " 0 1,1 0," + r + "Z";
  }
  var d3_svg_symbols = d3.map({
    circle: d3_svg_symbolCircle,
    cross: function(size) {
      var r = Math.sqrt(size / 5) / 2;
      return "M" + -3 * r + "," + -r + "H" + -r + "V" + -3 * r + "H" + r + "V" + -r + "H" + 3 * r + "V" + r + "H" + r + "V" + 3 * r + "H" + -r + "V" + r + "H" + -3 * r + "Z";
    },
    diamond: function(size) {
      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;
      return "M0," + -ry + "L" + rx + ",0" + " 0," + ry + " " + -rx + ",0" + "Z";
    },
    square: function(size) {
      var r = Math.sqrt(size) / 2;
      return "M" + -r + "," + -r + "L" + r + "," + -r + " " + r + "," + r + " " + -r + "," + r + "Z";
    },
    "triangle-down": function(size) {
      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
      return "M0," + ry + "L" + rx + "," + -ry + " " + -rx + "," + -ry + "Z";
    },
    "triangle-up": function(size) {
      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;
      return "M0," + -ry + "L" + rx + "," + ry + " " + -rx + "," + ry + "Z";
    }
  });
  d3.svg.symbolTypes = d3_svg_symbols.keys();
  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);
  function d3_transition(groups, id) {
    d3_subclass(groups, d3_transitionPrototype);
    groups.id = id;
    return groups;
  }
  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;
  d3_transitionPrototype.call = d3_selectionPrototype.call;
  d3_transitionPrototype.empty = d3_selectionPrototype.empty;
  d3_transitionPrototype.node = d3_selectionPrototype.node;
  d3_transitionPrototype.size = d3_selectionPrototype.size;
  d3.transition = function(selection) {
    return arguments.length ? d3_transitionInheritId ? selection.transition() : selection : d3_selectionRoot.transition();
  };
  d3.transition.prototype = d3_transitionPrototype;
  d3_transitionPrototype.select = function(selector) {
    var id = this.id, subgroups = [], subgroup, subnode, node;
    selector = d3_selection_selector(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {
          if ("__data__" in node) subnode.__data__ = node.__data__;
          d3_transitionNode(subnode, i, id, node.__transition__[id]);
          subgroup.push(subnode);
        } else {
          subgroup.push(null);
        }
      }
    }
    return d3_transition(subgroups, id);
  };
  d3_transitionPrototype.selectAll = function(selector) {
    var id = this.id, subgroups = [], subgroup, subnodes, node, subnode, transition;
    selector = d3_selection_selectorAll(selector);
    for (var j = -1, m = this.length; ++j < m; ) {
      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {
        if (node = group[i]) {
          transition = node.__transition__[id];
          subnodes = selector.call(node, node.__data__, i, j);
          subgroups.push(subgroup = []);
          for (var k = -1, o = subnodes.length; ++k < o; ) {
            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, id, transition);
            subgroup.push(subnode);
          }
        }
      }
    }
    return d3_transition(subgroups, id);
  };
  d3_transitionPrototype.filter = function(filter) {
    var subgroups = [], subgroup, group, node;
    if (typeof filter !== "function") filter = d3_selection_filter(filter);
    for (var j = 0, m = this.length; j < m; j++) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {
          subgroup.push(node);
        }
      }
    }
    return d3_transition(subgroups, this.id);
  };
  d3_transitionPrototype.tween = function(name, tween) {
    var id = this.id;
    if (arguments.length < 2) return this.node().__transition__[id].tween.get(name);
    return d3_selection_each(this, tween == null ? function(node) {
      node.__transition__[id].tween.remove(name);
    } : function(node) {
      node.__transition__[id].tween.set(name, tween);
    });
  };
  function d3_transition_tween(groups, name, value, tween) {
    var id = groups.id;
    return d3_selection_each(groups, typeof value === "function" ? function(node, i, j) {
      node.__transition__[id].tween.set(name, tween(value.call(node, node.__data__, i, j)));
    } : (value = tween(value), function(node) {
      node.__transition__[id].tween.set(name, value);
    }));
  }
  d3_transitionPrototype.attr = function(nameNS, value) {
    if (arguments.length < 2) {
      for (value in nameNS) this.attr(value, nameNS[value]);
      return this;
    }
    var interpolate = nameNS == "transform" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);
    function attrNull() {
      this.removeAttribute(name);
    }
    function attrNullNS() {
      this.removeAttributeNS(name.space, name.local);
    }
    function attrTween(b) {
      return b == null ? attrNull : (b += "", function() {
        var a = this.getAttribute(name), i;
        return a !== b && (i = interpolate(a, b), function(t) {
          this.setAttribute(name, i(t));
        });
      });
    }
    function attrTweenNS(b) {
      return b == null ? attrNullNS : (b += "", function() {
        var a = this.getAttributeNS(name.space, name.local), i;
        return a !== b && (i = interpolate(a, b), function(t) {
          this.setAttributeNS(name.space, name.local, i(t));
        });
      });
    }
    return d3_transition_tween(this, "attr." + nameNS, value, name.local ? attrTweenNS : attrTween);
  };
  d3_transitionPrototype.attrTween = function(nameNS, tween) {
    var name = d3.ns.qualify(nameNS);
    function attrTween(d, i) {
      var f = tween.call(this, d, i, this.getAttribute(name));
      return f && function(t) {
        this.setAttribute(name, f(t));
      };
    }
    function attrTweenNS(d, i) {
      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));
      return f && function(t) {
        this.setAttributeNS(name.space, name.local, f(t));
      };
    }
    return this.tween("attr." + nameNS, name.local ? attrTweenNS : attrTween);
  };
  d3_transitionPrototype.style = function(name, value, priority) {
    var n = arguments.length;
    if (n < 3) {
      if (typeof name !== "string") {
        if (n < 2) value = "";
        for (priority in name) this.style(priority, name[priority], value);
        return this;
      }
      priority = "";
    }
    function styleNull() {
      this.style.removeProperty(name);
    }
    function styleString(b) {
      return b == null ? styleNull : (b += "", function() {
        var a = d3_window.getComputedStyle(this, null).getPropertyValue(name), i;
        return a !== b && (i = d3_interpolate(a, b), function(t) {
          this.style.setProperty(name, i(t), priority);
        });
      });
    }
    return d3_transition_tween(this, "style." + name, value, styleString);
  };
  d3_transitionPrototype.styleTween = function(name, tween, priority) {
    if (arguments.length < 3) priority = "";
    function styleTween(d, i) {
      var f = tween.call(this, d, i, d3_window.getComputedStyle(this, null).getPropertyValue(name));
      return f && function(t) {
        this.style.setProperty(name, f(t), priority);
      };
    }
    return this.tween("style." + name, styleTween);
  };
  d3_transitionPrototype.text = function(value) {
    return d3_transition_tween(this, "text", value, d3_transition_text);
  };
  function d3_transition_text(b) {
    if (b == null) b = "";
    return function() {
      this.textContent = b;
    };
  }
  d3_transitionPrototype.remove = function() {
    return this.each("end.transition", function() {
      var p;
      if (this.__transition__.count < 2 && (p = this.parentNode)) p.removeChild(this);
    });
  };
  d3_transitionPrototype.ease = function(value) {
    var id = this.id;
    if (arguments.length < 1) return this.node().__transition__[id].ease;
    if (typeof value !== "function") value = d3.ease.apply(d3, arguments);
    return d3_selection_each(this, function(node) {
      node.__transition__[id].ease = value;
    });
  };
  d3_transitionPrototype.delay = function(value) {
    var id = this.id;
    if (arguments.length < 1) return this.node().__transition__[id].delay;
    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
      node.__transition__[id].delay = +value.call(node, node.__data__, i, j);
    } : (value = +value, function(node) {
      node.__transition__[id].delay = value;
    }));
  };
  d3_transitionPrototype.duration = function(value) {
    var id = this.id;
    if (arguments.length < 1) return this.node().__transition__[id].duration;
    return d3_selection_each(this, typeof value === "function" ? function(node, i, j) {
      node.__transition__[id].duration = Math.max(1, value.call(node, node.__data__, i, j));
    } : (value = Math.max(1, value), function(node) {
      node.__transition__[id].duration = value;
    }));
  };
  d3_transitionPrototype.each = function(type, listener) {
    var id = this.id;
    if (arguments.length < 2) {
      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;
      d3_transitionInheritId = id;
      d3_selection_each(this, function(node, i, j) {
        d3_transitionInherit = node.__transition__[id];
        type.call(node, node.__data__, i, j);
      });
      d3_transitionInherit = inherit;
      d3_transitionInheritId = inheritId;
    } else {
      d3_selection_each(this, function(node) {
        var transition = node.__transition__[id];
        (transition.event || (transition.event = d3.dispatch("start", "end"))).on(type, listener);
      });
    }
    return this;
  };
  d3_transitionPrototype.transition = function() {
    var id0 = this.id, id1 = ++d3_transitionId, subgroups = [], subgroup, group, node, transition;
    for (var j = 0, m = this.length; j < m; j++) {
      subgroups.push(subgroup = []);
      for (var group = this[j], i = 0, n = group.length; i < n; i++) {
        if (node = group[i]) {
          transition = Object.create(node.__transition__[id0]);
          transition.delay += transition.duration;
          d3_transitionNode(node, i, id1, transition);
        }
        subgroup.push(node);
      }
    }
    return d3_transition(subgroups, id1);
  };
  function d3_transitionNode(node, i, id, inherit) {
    var lock = node.__transition__ || (node.__transition__ = {
      active: 0,
      count: 0
    }), transition = lock[id];
    if (!transition) {
      var time = inherit.time;
      transition = lock[id] = {
        tween: new d3_Map(),
        time: time,
        ease: inherit.ease,
        delay: inherit.delay,
        duration: inherit.duration
      };
      ++lock.count;
      d3.timer(function(elapsed) {
        var d = node.__data__, ease = transition.ease, delay = transition.delay, duration = transition.duration, timer = d3_timer_active, tweened = [];
        timer.t = delay + time;
        if (delay <= elapsed) return start(elapsed - delay);
        timer.c = start;
        function start(elapsed) {
          if (lock.active > id) return stop();
          lock.active = id;
          transition.event && transition.event.start.call(node, d, i);
          transition.tween.forEach(function(key, value) {
            if (value = value.call(node, d, i)) {
              tweened.push(value);
            }
          });
          d3.timer(function() {
            timer.c = tick(elapsed || 1) ? d3_true : tick;
            return 1;
          }, 0, time);
        }
        function tick(elapsed) {
          if (lock.active !== id) return stop();
          var t = elapsed / duration, e = ease(t), n = tweened.length;
          while (n > 0) {
            tweened[--n].call(node, e);
          }
          if (t >= 1) {
            transition.event && transition.event.end.call(node, d, i);
            return stop();
          }
        }
        function stop() {
          if (--lock.count) delete lock[id]; else delete node.__transition__;
          return 1;
        }
      }, 0, time);
    }
  }
  d3.svg.axis = function() {
    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;
    function axis(g) {
      g.each(function() {
        var g = d3.select(this);
        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();
        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(".tick").data(ticks, scale1), tickEnter = tick.enter().insert("g", ".domain").attr("class", "tick").style("opacity", ε), tickExit = d3.transition(tick.exit()).style("opacity", ε).remove(), tickUpdate = d3.transition(tick.order()).style("opacity", 1), tickTransform;
        var range = d3_scaleRange(scale1), path = g.selectAll(".domain").data([ 0 ]), pathUpdate = (path.enter().append("path").attr("class", "domain"), 
        d3.transition(path));
        tickEnter.append("line");
        tickEnter.append("text");
        var lineEnter = tickEnter.select("line"), lineUpdate = tickUpdate.select("line"), text = tick.select("text").text(tickFormat), textEnter = tickEnter.select("text"), textUpdate = tickUpdate.select("text");
        switch (orient) {
         case "bottom":
          {
            tickTransform = d3_svg_axisX;
            lineEnter.attr("y2", innerTickSize);
            textEnter.attr("y", Math.max(innerTickSize, 0) + tickPadding);
            lineUpdate.attr("x2", 0).attr("y2", innerTickSize);
            textUpdate.attr("x", 0).attr("y", Math.max(innerTickSize, 0) + tickPadding);
            text.attr("dy", ".71em").style("text-anchor", "middle");
            pathUpdate.attr("d", "M" + range[0] + "," + outerTickSize + "V0H" + range[1] + "V" + outerTickSize);
            break;
          }

         case "top":
          {
            tickTransform = d3_svg_axisX;
            lineEnter.attr("y2", -innerTickSize);
            textEnter.attr("y", -(Math.max(innerTickSize, 0) + tickPadding));
            lineUpdate.attr("x2", 0).attr("y2", -innerTickSize);
            textUpdate.attr("x", 0).attr("y", -(Math.max(innerTickSize, 0) + tickPadding));
            text.attr("dy", "0em").style("text-anchor", "middle");
            pathUpdate.attr("d", "M" + range[0] + "," + -outerTickSize + "V0H" + range[1] + "V" + -outerTickSize);
            break;
          }

         case "left":
          {
            tickTransform = d3_svg_axisY;
            lineEnter.attr("x2", -innerTickSize);
            textEnter.attr("x", -(Math.max(innerTickSize, 0) + tickPadding));
            lineUpdate.attr("x2", -innerTickSize).attr("y2", 0);
            textUpdate.attr("x", -(Math.max(innerTickSize, 0) + tickPadding)).attr("y", 0);
            text.attr("dy", ".32em").style("text-anchor", "end");
            pathUpdate.attr("d", "M" + -outerTickSize + "," + range[0] + "H0V" + range[1] + "H" + -outerTickSize);
            break;
          }

         case "right":
          {
            tickTransform = d3_svg_axisY;
            lineEnter.attr("x2", innerTickSize);
            textEnter.attr("x", Math.max(innerTickSize, 0) + tickPadding);
            lineUpdate.attr("x2", innerTickSize).attr("y2", 0);
            textUpdate.attr("x", Math.max(innerTickSize, 0) + tickPadding).attr("y", 0);
            text.attr("dy", ".32em").style("text-anchor", "start");
            pathUpdate.attr("d", "M" + outerTickSize + "," + range[0] + "H0V" + range[1] + "H" + outerTickSize);
            break;
          }
        }
        if (scale1.rangeBand) {
          var x = scale1, dx = x.rangeBand() / 2;
          scale0 = scale1 = function(d) {
            return x(d) + dx;
          };
        } else if (scale0.rangeBand) {
          scale0 = scale1;
        } else {
          tickExit.call(tickTransform, scale1);
        }
        tickEnter.call(tickTransform, scale0);
        tickUpdate.call(tickTransform, scale1);
      });
    }
    axis.scale = function(x) {
      if (!arguments.length) return scale;
      scale = x;
      return axis;
    };
    axis.orient = function(x) {
      if (!arguments.length) return orient;
      orient = x in d3_svg_axisOrients ? x + "" : d3_svg_axisDefaultOrient;
      return axis;
    };
    axis.ticks = function() {
      if (!arguments.length) return tickArguments_;
      tickArguments_ = arguments;
      return axis;
    };
    axis.tickValues = function(x) {
      if (!arguments.length) return tickValues;
      tickValues = x;
      return axis;
    };
    axis.tickFormat = function(x) {
      if (!arguments.length) return tickFormat_;
      tickFormat_ = x;
      return axis;
    };
    axis.tickSize = function(x) {
      var n = arguments.length;
      if (!n) return innerTickSize;
      innerTickSize = +x;
      outerTickSize = +arguments[n - 1];
      return axis;
    };
    axis.innerTickSize = function(x) {
      if (!arguments.length) return innerTickSize;
      innerTickSize = +x;
      return axis;
    };
    axis.outerTickSize = function(x) {
      if (!arguments.length) return outerTickSize;
      outerTickSize = +x;
      return axis;
    };
    axis.tickPadding = function(x) {
      if (!arguments.length) return tickPadding;
      tickPadding = +x;
      return axis;
    };
    axis.tickSubdivide = function() {
      return arguments.length && axis;
    };
    return axis;
  };
  var d3_svg_axisDefaultOrient = "bottom", d3_svg_axisOrients = {
    top: 1,
    right: 1,
    bottom: 1,
    left: 1
  };
  function d3_svg_axisX(selection, x) {
    selection.attr("transform", function(d) {
      return "translate(" + x(d) + ",0)";
    });
  }
  function d3_svg_axisY(selection, y) {
    selection.attr("transform", function(d) {
      return "translate(0," + y(d) + ")";
    });
  }
  d3.svg.brush = function() {
    var event = d3_eventDispatch(brush, "brushstart", "brush", "brushend"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];
    function brush(g) {
      g.each(function() {
        var g = d3.select(this).style("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush", brushstart).on("touchstart.brush", brushstart);
        var background = g.selectAll(".background").data([ 0 ]);
        background.enter().append("rect").attr("class", "background").style("visibility", "hidden").style("cursor", "crosshair");
        g.selectAll(".extent").data([ 0 ]).enter().append("rect").attr("class", "extent").style("cursor", "move");
        var resize = g.selectAll(".resize").data(resizes, d3_identity);
        resize.exit().remove();
        resize.enter().append("g").attr("class", function(d) {
          return "resize " + d;
        }).style("cursor", function(d) {
          return d3_svg_brushCursor[d];
        }).append("rect").attr("x", function(d) {
          return /[ew]$/.test(d) ? -3 : null;
        }).attr("y", function(d) {
          return /^[ns]/.test(d) ? -3 : null;
        }).attr("width", 6).attr("height", 6).style("visibility", "hidden");
        resize.style("display", brush.empty() ? "none" : null);
        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;
        if (x) {
          range = d3_scaleRange(x);
          backgroundUpdate.attr("x", range[0]).attr("width", range[1] - range[0]);
          redrawX(gUpdate);
        }
        if (y) {
          range = d3_scaleRange(y);
          backgroundUpdate.attr("y", range[0]).attr("height", range[1] - range[0]);
          redrawY(gUpdate);
        }
        redraw(gUpdate);
      });
    }
    brush.event = function(g) {
      g.each(function() {
        var event_ = event.of(this, arguments), extent1 = {
          x: xExtent,
          y: yExtent,
          i: xExtentDomain,
          j: yExtentDomain
        }, extent0 = this.__chart__ || extent1;
        this.__chart__ = extent1;
        if (d3_transitionInheritId) {
          d3.select(this).transition().each("start.brush", function() {
            xExtentDomain = extent0.i;
            yExtentDomain = extent0.j;
            xExtent = extent0.x;
            yExtent = extent0.y;
            event_({
              type: "brushstart"
            });
          }).tween("brush:brush", function() {
            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);
            xExtentDomain = yExtentDomain = null;
            return function(t) {
              xExtent = extent1.x = xi(t);
              yExtent = extent1.y = yi(t);
              event_({
                type: "brush",
                mode: "resize"
              });
            };
          }).each("end.brush", function() {
            xExtentDomain = extent1.i;
            yExtentDomain = extent1.j;
            event_({
              type: "brush",
              mode: "resize"
            });
            event_({
              type: "brushend"
            });
          });
        } else {
          event_({
            type: "brushstart"
          });
          event_({
            type: "brush",
            mode: "resize"
          });
          event_({
            type: "brushend"
          });
        }
      });
    };
    function redraw(g) {
      g.selectAll(".resize").attr("transform", function(d) {
        return "translate(" + xExtent[+/e$/.test(d)] + "," + yExtent[+/^s/.test(d)] + ")";
      });
    }
    function redrawX(g) {
      g.select(".extent").attr("x", xExtent[0]);
      g.selectAll(".extent,.n>rect,.s>rect").attr("width", xExtent[1] - xExtent[0]);
    }
    function redrawY(g) {
      g.select(".extent").attr("y", yExtent[0]);
      g.selectAll(".extent,.e>rect,.w>rect").attr("height", yExtent[1] - yExtent[0]);
    }
    function brushstart() {
      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed("extent"), dragRestore = d3_event_dragSuppress(), center, origin = d3.mouse(target), offset;
      var w = d3.select(d3_window).on("keydown.brush", keydown).on("keyup.brush", keyup);
      if (d3.event.changedTouches) {
        w.on("touchmove.brush", brushmove).on("touchend.brush", brushend);
      } else {
        w.on("mousemove.brush", brushmove).on("mouseup.brush", brushend);
      }
      g.interrupt().selectAll("*").interrupt();
      if (dragging) {
        origin[0] = xExtent[0] - origin[0];
        origin[1] = yExtent[0] - origin[1];
      } else if (resizing) {
        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);
        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];
        origin[0] = xExtent[ex];
        origin[1] = yExtent[ey];
      } else if (d3.event.altKey) center = origin.slice();
      g.style("pointer-events", "none").selectAll(".resize").style("display", null);
      d3.select("body").style("cursor", eventTarget.style("cursor"));
      event_({
        type: "brushstart"
      });
      brushmove();
      function keydown() {
        if (d3.event.keyCode == 32) {
          if (!dragging) {
            center = null;
            origin[0] -= xExtent[1];
            origin[1] -= yExtent[1];
            dragging = 2;
          }
          d3_eventPreventDefault();
        }
      }
      function keyup() {
        if (d3.event.keyCode == 32 && dragging == 2) {
          origin[0] += xExtent[1];
          origin[1] += yExtent[1];
          dragging = 0;
          d3_eventPreventDefault();
        }
      }
      function brushmove() {
        var point = d3.mouse(target), moved = false;
        if (offset) {
          point[0] += offset[0];
          point[1] += offset[1];
        }
        if (!dragging) {
          if (d3.event.altKey) {
            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];
            origin[0] = xExtent[+(point[0] < center[0])];
            origin[1] = yExtent[+(point[1] < center[1])];
          } else center = null;
        }
        if (resizingX && move1(point, x, 0)) {
          redrawX(g);
          moved = true;
        }
        if (resizingY && move1(point, y, 1)) {
          redrawY(g);
          moved = true;
        }
        if (moved) {
          redraw(g);
          event_({
            type: "brush",
            mode: dragging ? "move" : "resize"
          });
        }
      }
      function move1(point, scale, i) {
        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;
        if (dragging) {
          r0 -= position;
          r1 -= size + position;
        }
        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];
        if (dragging) {
          max = (min += position) + size;
        } else {
          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));
          if (position < min) {
            max = min;
            min = position;
          } else {
            max = position;
          }
        }
        if (extent[0] != min || extent[1] != max) {
          if (i) yExtentDomain = null; else xExtentDomain = null;
          extent[0] = min;
          extent[1] = max;
          return true;
        }
      }
      function brushend() {
        brushmove();
        g.style("pointer-events", "all").selectAll(".resize").style("display", brush.empty() ? "none" : null);
        d3.select("body").style("cursor", null);
        w.on("mousemove.brush", null).on("mouseup.brush", null).on("touchmove.brush", null).on("touchend.brush", null).on("keydown.brush", null).on("keyup.brush", null);
        dragRestore();
        event_({
          type: "brushend"
        });
      }
    }
    brush.x = function(z) {
      if (!arguments.length) return x;
      x = z;
      resizes = d3_svg_brushResizes[!x << 1 | !y];
      return brush;
    };
    brush.y = function(z) {
      if (!arguments.length) return y;
      y = z;
      resizes = d3_svg_brushResizes[!x << 1 | !y];
      return brush;
    };
    brush.clamp = function(z) {
      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;
      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;
      return brush;
    };
    brush.extent = function(z) {
      var x0, x1, y0, y1, t;
      if (!arguments.length) {
        if (x) {
          if (xExtentDomain) {
            x0 = xExtentDomain[0], x1 = xExtentDomain[1];
          } else {
            x0 = xExtent[0], x1 = xExtent[1];
            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);
            if (x1 < x0) t = x0, x0 = x1, x1 = t;
          }
        }
        if (y) {
          if (yExtentDomain) {
            y0 = yExtentDomain[0], y1 = yExtentDomain[1];
          } else {
            y0 = yExtent[0], y1 = yExtent[1];
            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);
            if (y1 < y0) t = y0, y0 = y1, y1 = t;
          }
        }
        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];
      }
      if (x) {
        x0 = z[0], x1 = z[1];
        if (y) x0 = x0[0], x1 = x1[0];
        xExtentDomain = [ x0, x1 ];
        if (x.invert) x0 = x(x0), x1 = x(x1);
        if (x1 < x0) t = x0, x0 = x1, x1 = t;
        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];
      }
      if (y) {
        y0 = z[0], y1 = z[1];
        if (x) y0 = y0[1], y1 = y1[1];
        yExtentDomain = [ y0, y1 ];
        if (y.invert) y0 = y(y0), y1 = y(y1);
        if (y1 < y0) t = y0, y0 = y1, y1 = t;
        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];
      }
      return brush;
    };
    brush.clear = function() {
      if (!brush.empty()) {
        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];
        xExtentDomain = yExtentDomain = null;
      }
      return brush;
    };
    brush.empty = function() {
      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];
    };
    return d3.rebind(brush, event, "on");
  };
  var d3_svg_brushCursor = {
    n: "ns-resize",
    e: "ew-resize",
    s: "ns-resize",
    w: "ew-resize",
    nw: "nwse-resize",
    ne: "nesw-resize",
    se: "nwse-resize",
    sw: "nesw-resize"
  };
  var d3_svg_brushResizes = [ [ "n", "e", "s", "w", "nw", "ne", "se", "sw" ], [ "e", "w" ], [ "n", "s" ], [] ];
  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;
  var d3_time_formatUtc = d3_time_format.utc;
  var d3_time_formatIso = d3_time_formatUtc("%Y-%m-%dT%H:%M:%S.%LZ");
  d3_time_format.iso = Date.prototype.toISOString && +new Date("2000-01-01T00:00:00.000Z") ? d3_time_formatIsoNative : d3_time_formatIso;
  function d3_time_formatIsoNative(date) {
    return date.toISOString();
  }
  d3_time_formatIsoNative.parse = function(string) {
    var date = new Date(string);
    return isNaN(date) ? null : date;
  };
  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;
  d3_time.second = d3_time_interval(function(date) {
    return new d3_date(Math.floor(date / 1e3) * 1e3);
  }, function(date, offset) {
    date.setTime(date.getTime() + Math.floor(offset) * 1e3);
  }, function(date) {
    return date.getSeconds();
  });
  d3_time.seconds = d3_time.second.range;
  d3_time.seconds.utc = d3_time.second.utc.range;
  d3_time.minute = d3_time_interval(function(date) {
    return new d3_date(Math.floor(date / 6e4) * 6e4);
  }, function(date, offset) {
    date.setTime(date.getTime() + Math.floor(offset) * 6e4);
  }, function(date) {
    return date.getMinutes();
  });
  d3_time.minutes = d3_time.minute.range;
  d3_time.minutes.utc = d3_time.minute.utc.range;
  d3_time.hour = d3_time_interval(function(date) {
    var timezone = date.getTimezoneOffset() / 60;
    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);
  }, function(date, offset) {
    date.setTime(date.getTime() + Math.floor(offset) * 36e5);
  }, function(date) {
    return date.getHours();
  });
  d3_time.hours = d3_time.hour.range;
  d3_time.hours.utc = d3_time.hour.utc.range;
  d3_time.month = d3_time_interval(function(date) {
    date = d3_time.day(date);
    date.setDate(1);
    return date;
  }, function(date, offset) {
    date.setMonth(date.getMonth() + offset);
  }, function(date) {
    return date.getMonth();
  });
  d3_time.months = d3_time.month.range;
  d3_time.months.utc = d3_time.month.utc.range;
  function d3_time_scale(linear, methods, format) {
    function scale(x) {
      return linear(x);
    }
    scale.invert = function(x) {
      return d3_time_scaleDate(linear.invert(x));
    };
    scale.domain = function(x) {
      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);
      linear.domain(x);
      return scale;
    };
    function tickMethod(extent, count) {
      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);
      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {
        return d / 31536e6;
      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];
    }
    scale.nice = function(interval, skip) {
      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" && tickMethod(extent, interval);
      if (method) interval = method[0], skip = method[1];
      function skipped(date) {
        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;
      }
      return scale.domain(d3_scale_nice(domain, skip > 1 ? {
        floor: function(date) {
          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);
          return date;
        },
        ceil: function(date) {
          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);
          return date;
        }
      } : interval));
    };
    scale.ticks = function(interval, skip) {
      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === "number" ? tickMethod(extent, interval) : !interval.range && [ {
        range: interval
      }, skip ];
      if (method) interval = method[0], skip = method[1];
      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);
    };
    scale.tickFormat = function() {
      return format;
    };
    scale.copy = function() {
      return d3_time_scale(linear.copy(), methods, format);
    };
    return d3_scale_linearRebind(scale, linear);
  }
  function d3_time_scaleDate(t) {
    return new Date(t);
  }
  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];
  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];
  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ ".%L", function(d) {
    return d.getMilliseconds();
  } ], [ ":%S", function(d) {
    return d.getSeconds();
  } ], [ "%I:%M", function(d) {
    return d.getMinutes();
  } ], [ "%I %p", function(d) {
    return d.getHours();
  } ], [ "%a %d", function(d) {
    return d.getDay() && d.getDate() != 1;
  } ], [ "%b %d", function(d) {
    return d.getDate() != 1;
  } ], [ "%B", function(d) {
    return d.getMonth();
  } ], [ "%Y", d3_true ] ]);
  var d3_time_scaleMilliseconds = {
    range: function(start, stop, step) {
      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);
    },
    floor: d3_identity,
    ceil: d3_identity
  };
  d3_time_scaleLocalMethods.year = d3_time.year;
  d3_time.scale = function() {
    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);
  };
  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {
    return [ m[0].utc, m[1] ];
  });
  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ ".%L", function(d) {
    return d.getUTCMilliseconds();
  } ], [ ":%S", function(d) {
    return d.getUTCSeconds();
  } ], [ "%I:%M", function(d) {
    return d.getUTCMinutes();
  } ], [ "%I %p", function(d) {
    return d.getUTCHours();
  } ], [ "%a %d", function(d) {
    return d.getUTCDay() && d.getUTCDate() != 1;
  } ], [ "%b %d", function(d) {
    return d.getUTCDate() != 1;
  } ], [ "%B", function(d) {
    return d.getUTCMonth();
  } ], [ "%Y", d3_true ] ]);
  d3_time_scaleUtcMethods.year = d3_time.year.utc;
  d3_time.scale.utc = function() {
    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);
  };
  d3.text = d3_xhrType(function(request) {
    return request.responseText;
  });
  d3.json = function(url, callback) {
    return d3_xhr(url, "application/json", d3_json, callback);
  };
  function d3_json(request) {
    return JSON.parse(request.responseText);
  }
  d3.html = function(url, callback) {
    return d3_xhr(url, "text/html", d3_html, callback);
  };
  function d3_html(request) {
    var range = d3_document.createRange();
    range.selectNode(d3_document.body);
    return range.createContextualFragment(request.responseText);
  }
  d3.xml = d3_xhrType(function(request) {
    return request.responseXML;
  });
  if (typeof define === "function" && define.amd) {
    define(d3);
  } else if (typeof module === "object" && module.exports) {
    module.exports = d3;
  } else {
    this.d3 = d3;
  }
}();
},{}],2:[function(require,module,exports){
module.exports = [
    {
        "id": "gapiRpc",
        "result": {
            "kind": "analytics#gaData",
            "id": "https://www.googleapis.com/analytics/v3/data/ga?ids=ga:70670430&dimensions=ga:dateHour,ga:fullReferrer,ga:sourceMedium,ga:browser,ga:country,ga:socialNetwork,ga:pagePath&metrics=ga:visitors,ga:timeOnSite&start-date=2014-03-01&end-date=2014-03-30",
            "query": {
                "start-date": "2014-03-01",
                "end-date": "2014-03-30",
                "ids": "ga:70670430",
                "dimensions": "ga:dateHour,ga:fullReferrer,ga:sourceMedium,ga:browser,ga:country,ga:socialNetwork,ga:pagePath",
                "metrics": ["ga:visitors", "ga:timeOnSite"],
                "start-index": 1,
                "max-results": 1000
            },
            "itemsPerPage": 1000,
            "totalResults": 10490,
            "selfLink": "https://www.googleapis.com/analytics/v3/data/ga?ids=ga:70670430&dimensions=ga:dateHour,ga:fullReferrer,ga:sourceMedium,ga:browser,ga:country,ga:socialNetwork,ga:pagePath&metrics=ga:visitors,ga:timeOnSite&start-date=2014-03-01&end-date=2014-03-30",
            "nextLink": "https://www.googleapis.com/analytics/v3/data/ga?ids=ga:70670430&dimensions=ga:dateHour,ga:fullReferrer,ga:sourceMedium,ga:browser,ga:country,ga:socialNetwork,ga:pagePath&metrics=ga:visitors,ga:timeOnSite&start-date=2014-03-01&end-date=2014-03-30&start-index=1001&max-results=1000",
            "profileInfo": {
                "profileId": "70670430",
                "accountId": "28343295",
                "webPropertyId": "UA-28343295-7",
                "internalWebPropertyId": "68611893",
                "profileName": "GitHub Visualizer",
                "tableId": "ga:70670430"
            },
            "containsSampledData": false,
            "columnHeaders": [
                {"name": "ga:dateHour", "columnType": "DIMENSION", "dataType": "STRING"},
                {"name": "ga:fullReferrer", "columnType": "DIMENSION", "dataType": "STRING"},
                {"name": "ga:sourceMedium", "columnType": "DIMENSION", "dataType": "STRING"},
                {"name": "ga:browser", "columnType": "DIMENSION", "dataType": "STRING"},
                {"name": "ga:country", "columnType": "DIMENSION", "dataType": "STRING"},
                {"name": "ga:socialNetwork", "columnType": "DIMENSION", "dataType": "STRING"},
                {"name": "ga:pagePath", "columnType": "DIMENSION", "dataType": "STRING"},
                {"name": "ga:visitors", "columnType": "METRIC", "dataType": "INTEGER"},
                {"name": "ga:timeOnSite", "columnType": "METRIC", "dataType": "TIME"}
            ],
            "totalsForAllResults": {"ga:visitors": "12337", "ga:timeOnSite": "639388.0"},
            "rows": [
                ["2014030100", "(direct)", "(direct) / (none)", "Chrome", "France", "(not set)", "/", "1", "104.0"],
                ["2014030100", "(direct)", "(direct) / (none)", "Chrome", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030100", "(direct)", "(direct) / (none)", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "127.0"],
                ["2014030100", "(direct)", "(direct) / (none)", "Safari", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Brazil", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "149.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/", "1", "8.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "349.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "73.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Japan", "(not set)", "/?repo=markov.js&climit=100&user=ikr7", "1", "0.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Japan", "(not set)", "/?user=ikr7", "1", "0.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=CM3202-FoursquareMapExample&climit=100&user=martinjc", "1", "0.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "63.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?user=martinjc", "1", "0.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/", "1", "21.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "4", "22.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=mc&climit=100&user=MidnightCommander", "1", "0.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=moodle", "1", "0.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Brazil", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "4.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "21.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "1.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Netherlands", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Slovenia", "(not set)", "/", "1", "3.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United Kingdom", "(not set)", "/", "1", "71.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United Kingdom", "(not set)", "/?repo=CSTIB-Echo&climit=100&user=petarv-", "1", "251.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United Kingdom", "(not set)", "/?user=PetarV-", "1", "0.0"],
                ["2014030100", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030101", "(direct)", "(direct) / (none)", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "252.0"],
                ["2014030101", "(direct)", "(direct) / (none)", "Safari", "United States", "(not set)", "/?repo=ardupilot&climit=100&user=diydrones", "1", "188.0"],
                ["2014030101", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "22.0"],
                ["2014030101", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/", "1", "0.0"],
                ["2014030101", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=Codeigniter-Turbo&climit=100&user=warrickhill", "1", "0.0"],
                ["2014030101", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=PHP_to_jQueryUI&climit=100&user=warrickhill", "1", "0.0"],
                ["2014030101", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=VisualSedimentation&climit=100&user=warrickhill", "1", "0.0"],
                ["2014030101", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "3", "313.0"],
                ["2014030101", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=warrickhill", "1", "0.0"],
                ["2014030101", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=estimator-class&climit=100&user=warrickhill", "1", "0.0"],
                ["2014030101", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?user=warrickhill", "1", "0.0"],
                ["2014030101", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=csv2geojson&climit=100&user=mbostock", "1", "0.0"],
                ["2014030101", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "3", "152.0"],
                ["2014030101", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Spain", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030101", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "2.0"],
                ["2014030101", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Switzerland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030101", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United Kingdom", "(not set)", "/", "1", "0.0"],
                ["2014030101", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United Kingdom", "(not set)", "/?repo=CSTIB-Echo&climit=324&user=petarv-", "1", "0.0"],
                ["2014030101", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United Kingdom", "(not set)", "/?user=PetarV-", "1", "0.0"],
                ["2014030101", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=GitHubVisualizer&climit=100&user=artzub", "1", "2.0"],
                ["2014030101", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=ar-student-schema&climit=100&user=chrisscherer", "1", "0.0"],
                ["2014030101", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "45.0"],
                ["2014030101", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?user=chrisscherer", "1", "0.0"],
                ["2014030102", "(direct)", "(direct) / (none)", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030102", "(direct)", "(direct) / (none)", "Safari", "United States", "(not set)", "/?repo=GitHubVisualizer&climit=100&user=artzub", "1", "16.0"],
                ["2014030102", "(direct)", "(direct) / (none)", "Safari", "United States", "(not set)", "/?user=cavellis", "1", "0.0"],
                ["2014030102", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Argentina", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "154.0"],
                ["2014030102", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030102", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Italy", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030102", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030102", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/", "1", "2.0"],
                ["2014030102", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=GitHubVisualizer&climit=100&user=artzub", "1", "614.0"],
                ["2014030102", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "3", "548.0"],
                ["2014030102", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=git-static&climit=100&user=mbostock", "1", "0.0"],
                ["2014030102", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=us-atlas&climit=100&user=mbostock", "1", "0.0"],
                ["2014030102", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=ClickerMonkey", "1", "0.0"],
                ["2014030102", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=cavellis", "1", "0.0"],
                ["2014030102", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=melkybee", "1", "0.0"],
                ["2014030102", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030102", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030102", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "39.0"],
                ["2014030102", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030103", "(direct)", "(direct) / (none)", "Firefox", "United States", "(not set)", "/", "1", "18.0"],
                ["2014030103", "(direct)", "(direct) / (none)", "Firefox", "United States", "(not set)", "/?repo=jquery&climit=100&user=jquery", "1", "0.0"],
                ["2014030103", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "26.0"],
                ["2014030103", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Colombia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030103", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/", "1", "261.0"],
                ["2014030103", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?repo=plugins&climit=100&user=virtualop", "1", "0.0"],
                ["2014030103", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?repo=virtualop_webapp&climit=100&user=virtualop", "1", "0.0"],
                ["2014030103", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?user=virtualop", "1", "0.0"],
                ["2014030103", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Netherlands", "(not set)", "/?repo=GitHubVisualizer&climit=100&user=artzub", "1", "1.0"],
                ["2014030103", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Poland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030103", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=2ch-API&climit=100&user=d1ffuz0r", "1", "0.0"],
                ["2014030103", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "7", "416.0"],
                ["2014030103", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=cleblanc87", "1", "0.0"],
                ["2014030103", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=d1ffuz0r", "1", "0.0"],
                ["2014030103", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=joemeade", "1", "0.0"],
                ["2014030103", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=kristiandelay", "1", "0.0"],
                ["2014030103", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=millicorp", "1", "0.0"],
                ["2014030103", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030103", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Portugal", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030103", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Saudi Arabia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030103", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "4.0"],
                ["2014030103", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "South Africa", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "5.0"],
                ["2014030103", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Germany", "(not set)", "/?repo=GitHubVisualizer&climit=100&user=artzub", "1", "2.0"],
                ["2014030104", "(direct)", "(direct) / (none)", "Chrome", "Brazil", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030104", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Belarus", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "275.0"],
                ["2014030104", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Belarus", "(not set)", "/?repo=mc&climit=100&user=MidnightCommander", "1", "0.0"],
                ["2014030104", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Brazil", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "95.0"],
                ["2014030104", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=d3&climit=100&user=ivanyuen", "1", "0.0"],
                ["2014030104", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Colombia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "38.0"],
                ["2014030104", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "5", "1373.0"],
                ["2014030104", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=bootstrap", "1", "0.0"],
                ["2014030104", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=raphael.js", "1", "0.0"],
                ["2014030104", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "108.0"],
                ["2014030104", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?user=swaredev", "1", "0.0"],
                ["2014030104", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "South Africa", "(not set)", "/", "1", "1.0"],
                ["2014030104", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "67.0"],
                ["2014030104", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030105", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030105", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "4.0"],
                ["2014030105", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/", "1", "85.0"],
                ["2014030105", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "3.0"],
                ["2014030105", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=amplifier", "1", "0.0"],
                ["2014030105", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=judharris", "1", "0.0"],
                ["2014030105", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030105", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Netherlands", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "204.0"],
                ["2014030105", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Netherlands", "(not set)", "/?repo=rebar&climit=100&user=rebar", "1", "0.0"],
                ["2014030105", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Netherlands", "(not set)", "/?user=alavrik", "1", "0.0"],
                ["2014030105", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Netherlands", "(not set)", "/?user=eonblast", "1", "0.0"],
                ["2014030105", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Netherlands", "(not set)", "/?user=jlouis", "1", "0.0"],
                ["2014030105", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Netherlands", "(not set)", "/?user=motiejus", "1", "0.0"],
                ["2014030105", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Netherlands", "(not set)", "/?user=rebar", "1", "0.0"],
                ["2014030105", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Netherlands", "(not set)", "/?user=yfyf", "1", "0.0"],
                ["2014030105", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Spain", "(not set)", "/", "1", "5.0"],
                ["2014030105", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "32.0"],
                ["2014030105", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030105", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030106", "(direct)", "(direct) / (none)", "Internet Explorer", "United States", "(not set)", "/", "1", "1.0"],
                ["2014030106", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Belgium", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030106", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "45.0"],
                ["2014030106", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030106", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Hungary", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030106", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Mexico", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "61.0"],
                ["2014030106", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Poland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030106", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Ukraine", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "255.0"],
                ["2014030106", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Ukraine", "(not set)", "/?repo=json-write&climit=100&user=mbostock", "1", "0.0"],
                ["2014030106", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "3.0"],
                ["2014030106", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=build&climit=100&user=phonegap", "1", "0.0"],
                ["2014030106", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "137.0"],
                ["2014030106", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=phonegap-docs&climit=100&user=phonegap", "1", "0.0"],
                ["2014030106", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?user=phonegap", "1", "0.0"],
                ["2014030106", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030106", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?climit=100&user=Shaffer", "1", "0.0"],
                ["2014030106", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?climit=100&user=junyangchen", "1", "0.0"],
                ["2014030106", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=d3&climit=100&user=Junyangchen", "1", "0.0"],
                ["2014030106", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "2842.0"],
                ["2014030107", "(direct)", "(direct) / (none)", "Internet Explorer", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030107", "diydrones.com/profiles/blogs/visualising-contributions-to-diydrones-codebase", "diydrones.com / referral", "Internet Explorer", "Israel", "(not set)", "/?repo=ardupilot&climit=100&user=diydrones", "1", "7.0"],
                ["2014030107", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "3.0"],
                ["2014030107", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "4.0"],
                ["2014030107", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030107", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "7", "36.0"],
                ["2014030107", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030107", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/", "1", "0.0"],
                ["2014030108", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "58.0"],
                ["2014030108", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/", "1", "1.0"],
                ["2014030108", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030108", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Turkey", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030109", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/", "1", "60.0"],
                ["2014030109", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=GitHubCodeSwarm&amp;climit=100&amp;user=artzub", "1", "357.0"],
                ["2014030109", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030109", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3-plugins&climit=100&user=d3", "1", "0.0"],
                ["2014030109", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=jquery&climit=100&user=jquery", "1", "0.0"],
                ["2014030109", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=song-of-github&climit=100&user=ajacksified", "1", "0.0"],
                ["2014030109", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=d3", "1", "0.0"],
                ["2014030109", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "49.0"],
                ["2014030109", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "South Korea", "(not set)", "/", "1", "114.0"],
                ["2014030109", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "South Korea", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030109", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030110", "(direct)", "(direct) / (none)", "Chrome", "South Korea", "(not set)", "/", "1", "17.0"],
                ["2014030110", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "10.0"],
                ["2014030110", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Singapore", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030110", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Korea", "(not set)", "/", "1", "183.0"],
                ["2014030110", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Korea", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030110", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Korea", "(not set)", "/?repo=jquery&climit=100&user=jquery", "1", "0.0"],
                ["2014030110", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/", "1", "525.0"],
                ["2014030110", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "5", "8.0"],
                ["2014030110", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Spain", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030110", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "54.0"],
                ["2014030111", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "5.0"],
                ["2014030111", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "6.0"],
                ["2014030111", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030112", "(direct)", "(direct) / (none)", "Chrome", "United States", "(not set)", "/", "1", "178.0"],
                ["2014030112", "(direct)", "(direct) / (none)", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030112", "(direct)", "(direct) / (none)", "Chrome", "United States", "(not set)", "/?repo=mc&climit=100&user=MidnightCommander", "1", "0.0"],
                ["2014030112", "(direct)", "(direct) / (none)", "Chrome", "United States", "(not set)", "/?repo=scala-swing&climit=100&user=scala", "1", "0.0"],
                ["2014030112", "(direct)", "(direct) / (none)", "Chrome", "United States", "(not set)", "/?user=kruckenb", "1", "0.0"],
                ["2014030112", "(direct)", "(direct) / (none)", "Chrome", "United States", "(not set)", "/?user=scala", "1", "0.0"],
                ["2014030112", "(direct)", "(direct) / (none)", "Safari", "United States", "(not set)", "/?repo=freenas&climit=100&user=freenas", "1", "2.0"],
                ["2014030112", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "115.0"],
                ["2014030112", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Korea", "(not set)", "/", "1", "2.0"],
                ["2014030112", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=chosen&climit=100&user=guybedford", "1", "0.0"],
                ["2014030112", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "123.0"],
                ["2014030112", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=guybedford", "1", "0.0"],
                ["2014030112", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=d3&climit=100&user=Ckrotcov", "1", "0.0"],
                ["2014030112", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "55.0"],
                ["2014030113", "(direct)", "(direct) / (none)", "Chrome", "South Korea", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030113", "(direct)", "(direct) / (none)", "Chrome", "United Kingdom", "(not set)", "/?repo=CSTIB-Echo&climit=100&user=petarv-", "1", "26.0"],
                ["2014030113", "(direct)", "(direct) / (none)", "Firefox", "United Kingdom", "(not set)", "/?repo=CSTIB-Echo&climit=100&user=petarv-", "1", "1.0"],
                ["2014030113", "diydrones.com/profiles/blogs/visualising-contributions-to-diydrones-codebase", "diydrones.com / referral", "Chrome", "Pakistan", "(not set)", "/?repo=apm_planner&climit=100&user=diydrones", "1", "0.0"],
                ["2014030113", "diydrones.com/profiles/blogs/visualising-contributions-to-diydrones-codebase", "diydrones.com / referral", "Chrome", "Pakistan", "(not set)", "/?user=diydrones", "1", "34.0"],
                ["2014030113", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "58.0"],
                ["2014030113", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "64.0"],
                ["2014030113", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "68.0"],
                ["2014030113", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United Kingdom", "(not set)", "/", "1", "159.0"],
                ["2014030113", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United Kingdom", "(not set)", "/?repo=CSTIB-Echo&climit=100&user=petarv-", "1", "0.0"],
                ["2014030113", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United Kingdom", "(not set)", "/?repo=jquery&climit=100&user=jquery", "1", "0.0"],
                ["2014030113", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United Kingdom", "(not set)", "/?user=PetarV-", "1", "0.0"],
                ["2014030113", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "1.0"],
                ["2014030114", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "33.0"],
                ["2014030114", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Pakistan", "(not set)", "/", "1", "296.0"],
                ["2014030114", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Pakistan", "(not set)", "/?repo=rails&climit=100&user=rails", "1", "0.0"],
                ["2014030114", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Pakistan", "(not set)", "/?repo=song-of-github&climit=100&user=ajacksified", "1", "0.0"],
                ["2014030114", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Pakistan", "(not set)", "/?user=Kuldeep", "1", "0.0"],
                ["2014030115", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030115", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Korea", "(not set)", "/", "1", "10.0"],
                ["2014030115", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Korea", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "28.0"],
                ["2014030115", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/", "1", "90.0"],
                ["2014030115", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=@jebeck", "1", "0.0"],
                ["2014030115", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=jebeck", "1", "0.0"],
                ["2014030115", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Germany", "(not set)", "/", "1", "0.0"],
                ["2014030115", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Germany", "(not set)", "/?user=Jenkinsci", "1", "0.0"],
                ["2014030115", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "73.0"],
                ["2014030116", "(direct)", "(direct) / (none)", "Firefox", "Spain", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030116", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=GitHubCodeSwarm&amp;climit=100&amp;user=artzub", "1", "7.0"],
                ["2014030116", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030116", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/", "1", "129.0"],
                ["2014030116", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?repo=jquery&climit=100&user=mojombo", "1", "0.0"],
                ["2014030116", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?user=mojombo", "1", "0.0"],
                ["2014030116", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030116", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030116", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030116", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Hong Kong", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030116", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari (in-app)", "Russia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030117", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/", "1", "2262.0"],
                ["2014030117", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030117", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "160.0"],
                ["2014030117", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Germany", "(not set)", "/?user=drahnr", "1", "0.0"],
                ["2014030117", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Turkey", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030118", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "138.0"],
                ["2014030118", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?repo=mc&climit=100&user=MidnightCommander", "1", "0.0"],
                ["2014030118", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?repo=rails&climit=100&user=rails", "1", "0.0"],
                ["2014030118", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "310.0"],
                ["2014030118", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Italy", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "4.0"],
                ["2014030118", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "181.0"],
                ["2014030118", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Germany", "(not set)", "/?repo=GitHubCodeSwarm&amp;climit=100&amp;user=artzub", "1", "8.0"],
                ["2014030118", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030119", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?repo=rails&climit=100&user=rails", "1", "11.0"],
                ["2014030119", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Indonesia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "5.0"],
                ["2014030119", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Italy", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030119", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "4.0"],
                ["2014030119", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Thailand", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "73.0"],
                ["2014030119", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030120", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Belgium", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030120", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/", "1", "7.0"],
                ["2014030120", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Korea", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "56.0"],
                ["2014030120", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Sweden", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "105.0"],
                ["2014030120", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Ukraine", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "63.0"],
                ["2014030120", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030120", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "France", "(not set)", "/?repo=GitHubVisualizer&climit=100&user=artzub", "1", "2.0"],
                ["2014030120", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Netherlands", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030120", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030120", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Turkey", "(not set)", "/", "1", "0.0"],
                ["2014030121", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "(not set)", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030121", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Hungary", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030121", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?repo=GitHubVisualizer&climit=100&user=artzub", "1", "71.0"],
                ["2014030121", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "7.0"],
                ["2014030121", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030121", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Taiwan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "72.0"],
                ["2014030121", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030121", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "Norway", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "49.0"],
                ["2014030121", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030122", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Côte d’Ivoire", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "11.0"],
                ["2014030122", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "7.0"],
                ["2014030122", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Taiwan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030123", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Argentina", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "113.0"],
                ["2014030123", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Argentina", "(not set)", "/?user=KITOP", "1", "0.0"],
                ["2014030123", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Australia", "(not set)", "/?climit=100&user=hongymagic", "1", "0.0"],
                ["2014030123", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Australia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "125.0"],
                ["2014030123", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Australia", "(not set)", "/?repo=hide-google-plus-notification&climit=100&user=mching", "1", "0.0"],
                ["2014030123", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Brazil", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "83.0"],
                ["2014030123", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030123", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "France", "(not set)", "/?repo=baremetalOS&climit=100&user=flask", "1", "0.0"],
                ["2014030123", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "France", "(not set)", "/?repo=baremetalOS&climit=100&user=neokeld", "1", "0.0"],
                ["2014030123", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "180.0"],
                ["2014030123", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "France", "(not set)", "/?user=linus", "1", "0.0"],
                ["2014030123", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "France", "(not set)", "/?user=neokeld", "1", "0.0"],
                ["2014030123", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Switzerland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "1022.0"],
                ["2014030123", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Switzerland", "(not set)", "/?user=eglatz", "1", "0.0"],
                ["2014030123", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030123", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Austria", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030123", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Turkey", "(not set)", "/", "1", "4.0"],
                ["2014030200", "(direct)", "(direct) / (none)", "Chrome", "Switzerland", "(not set)", "/", "1", "80.0"],
                ["2014030200", "(direct)", "(direct) / (none)", "Chrome", "Switzerland", "(not set)", "/?repo=config&climit=100&user=mhalder", "1", "0.0"],
                ["2014030200", "(direct)", "(direct) / (none)", "Chrome", "Switzerland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030200", "(direct)", "(direct) / (none)", "Chrome", "Switzerland", "(not set)", "/?user=mhalder", "1", "0.0"],
                ["2014030200", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Belgium", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "50.0"],
                ["2014030200", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Brazil", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "36.0"],
                ["2014030200", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Czech Republic", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "91.0"],
                ["2014030200", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Czech Republic", "(not set)", "/?user=guy", "1", "0.0"],
                ["2014030200", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Czech Republic", "(not set)", "/?user=prihoda", "1", "0.0"],
                ["2014030200", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Italy", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "248.0"],
                ["2014030200", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Italy", "(not set)", "/?user=gsmagazine", "1", "0.0"],
                ["2014030200", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Italy", "(not set)", "/?user=marcoslin", "1", "0.0"],
                ["2014030200", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030200", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Poland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030200", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Turkey", "(not set)", "/", "1", "4.0"],
                ["2014030200", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030200", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "69.0"],
                ["2014030200", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030200", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Romania", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "84.0"],
                ["2014030200", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Switzerland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030201", "(direct)", "(direct) / (none)", "Chrome", "France", "(not set)", "/", "1", "0.0"],
                ["2014030201", "(direct)", "(direct) / (none)", "Chrome", "France", "(not set)", "/?repo=HTML5-Future&climit=100&user=sylvainw", "1", "48.0"],
                ["2014030201", "(direct)", "(direct) / (none)", "Chrome", "France", "(not set)", "/?user=welcomattic", "1", "0.0"],
                ["2014030201", "artzub.com/", "artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/", "1", "29.0"],
                ["2014030201", "artzub.com/", "artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030201", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "7.0"],
                ["2014030201", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030201", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "106.0"],
                ["2014030201", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?repo=ocks.org&climit=100&user=mbostock", "1", "0.0"],
                ["2014030201", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Slovakia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030201", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Ukraine", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "12.0"],
                ["2014030201", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=GitHubVisualizer&climit=100&user=artzub", "1", "0.0"],
                ["2014030201", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "4", "182.0"],
                ["2014030201", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=metalaureate", "1", "0.0"],
                ["2014030201", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=virtualstaticvoid", "1", "0.0"],
                ["2014030201", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Switzerland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030201", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "1.0"],
                ["2014030202", "artzub.com/ghv/", "artzub.com / referral", "Chrome", "United States", "(not set)", "/", "1", "0.0"],
                ["2014030202", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Italy", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030202", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Korea", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030202", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030202", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/", "1", "90.0"],
                ["2014030202", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030202", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=jquery&climit=100&user=jquery", "1", "0.0"],
                ["2014030202", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Poland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030203", "(direct)", "(direct) / (none)", "Firefox", "United States", "(not set)", "/?repo=paparazzi&climit=200&user=paparazzi", "1", "178.0"],
                ["2014030203", "(direct)", "(direct) / (none)", "Opera", "United States", "(not set)", "/", "1", "1.0"],
                ["2014030203", "(direct)", "(direct) / (none)", "Safari", "United States", "(not set)", "/?repo=paparazzi&climit=200&user=paparazzi", "1", "2.0"],
                ["2014030203", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "4.0"],
                ["2014030203", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "134.0"],
                ["2014030203", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?repo=queue&climit=100&user=mbostock", "1", "0.0"],
                ["2014030203", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Peru", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030203", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Spain", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "929.0"],
                ["2014030203", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Turkey", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030203", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030203", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030204", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Poland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "86.0"],
                ["2014030204", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Poland", "(not set)", "/?repo=node&climit=100&user=meteor", "1", "0.0"],
                ["2014030204", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Poland", "(not set)", "/?user=meteor", "1", "0.0"],
                ["2014030204", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Spain", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030204", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030204", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Poland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "163.0"],
                ["2014030204", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Poland", "(not set)", "/?repo=simplechatclient&climit=100&user=simplechatclient", "1", "0.0"],
                ["2014030204", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Poland", "(not set)", "/?user=PiotrLuczko", "1", "0.0"],
                ["2014030204", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Poland", "(not set)", "/?user=simplechatclient", "1", "0.0"],
                ["2014030204", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030204", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030204", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "1.0"],
                ["2014030205", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Brazil", "(not set)", "/", "1", "34.0"],
                ["2014030205", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Brazil", "(not set)", "/?repo=jquery&climit=100&user=jquery", "1", "0.0"],
                ["2014030205", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030205", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "178.0"],
                ["2014030205", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?user=jwroblewski", "1", "0.0"],
                ["2014030205", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Ukraine", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030205", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/", "1", "3.0"],
                ["2014030205", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030205", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Hungary", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030205", "ghv.artzub.com/", "ghv.artzub.com / referral", "Opera", "Russia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030205", "ghv.artzub.com/", "ghv.artzub.com / referral", "Opera", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "1.0"],
                ["2014030205", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Denmark", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030206", "artzub.com/ghv/", "artzub.com / referral", "Firefox", "United States", "(not set)", "/", "1", "3.0"],
                ["2014030206", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Austria", "(not set)", "/", "1", "62.0"],
                ["2014030206", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Austria", "(not set)", "/?repo=jquery&climit=100&user=jquery", "1", "0.0"],
                ["2014030206", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "1.0"],
                ["2014030206", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030206", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Peru", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030206", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/", "1", "353.0"],
                ["2014030206", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=EventfulEngine&climit=100&user=callumlawson", "1", "0.0"],
                ["2014030206", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=SpaceChips&climit=100&user=callumlawson", "1", "0.0"],
                ["2014030206", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030206", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=hide-google-plus-notification&climit=100&user=mbostock", "1", "0.0"],
                ["2014030206", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?user=callumlawson", "1", "0.0"],
                ["2014030206", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "4", "5.0"],
                ["2014030206", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "70.0"],
                ["2014030206", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030206", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=GitHubCodeSwarm&amp;climit=100&amp;user=artzub", "1", "21.0"],
                ["2014030206", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=jquery&climit=100&user=jquery", "1", "0.0"],
                ["2014030207", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Australia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030207", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Czech Republic", "(not set)", "/?repo=GitHubVisualizer&climit=100&user=artzub", "1", "4.0"],
                ["2014030207", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030207", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "3", "7.0"],
                ["2014030207", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Australia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "4.0"],
                ["2014030207", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=GitHubCodeSwarm&amp;climit=100&amp;user=artzub", "1", "106.0"],
                ["2014030207", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?user=scjnsn", "1", "0.0"],
                ["2014030208", "artzub.com/ghv/", "artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030208", "artzub.com/ghv/", "artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=900&user=mbostock", "1", "608.0"],
                ["2014030208", "artzub.com/ghv/", "artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=gistup&climit=100&user=mbostock", "1", "0.0"],
                ["2014030208", "artzub.com/ghv/", "artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=jsdom&climit=100&user=mbostock", "1", "0.0"],
                ["2014030208", "artzub.com/ghv/", "artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=topojson&climit=100&user=mbostock", "1", "0.0"],
                ["2014030208", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Spain", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030208", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/", "1", "1.0"],
                ["2014030208", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "23.0"],
                ["2014030208", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?user=scjnsn", "1", "0.0"],
                ["2014030208", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?user=scott@motivosity.com", "1", "0.0"],
                ["2014030209", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030209", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "491.0"],
                ["2014030209", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "3", "7.0"],
                ["2014030209", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/", "1", "1.0"],
                ["2014030210", "artzub.com/ghv/", "artzub.com / referral", "Chrome", "Australia", "(not set)", "/?user=zfs", "1", "0.0"],
                ["2014030210", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030210", "us.search.yahoo.com/search", "us.search.yahoo.com / referral", "Firefox", "Norway", "(not set)", "/", "1", "0.0"],
                ["2014030211", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Australia", "(not set)", "/?repo=GitHubVisualizer&climit=100&user=artzub", "1", "0.0"],
                ["2014030211", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Kosovo", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "133.0"],
                ["2014030211", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030211", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Taiwan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "4.0"],
                ["2014030211", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030211", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Russia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "48.0"],
                ["2014030211", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Canada", "(not set)", "/", "1", "6.0"],
                ["2014030212", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "4.0"],
                ["2014030212", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Nepal", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "12.0"],
                ["2014030212", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030212", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Venezuela", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030212", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030213", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030213", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "219.0"],
                ["2014030213", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=osu-public&climit=100&user=peppy", "1", "0.0"],
                ["2014030213", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?user=peppy", "1", "0.0"],
                ["2014030214", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030214", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "69.0"],
                ["2014030214", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Australia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "59.0"],
                ["2014030215", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "32.0"],
                ["2014030215", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "4.0"],
                ["2014030215", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Netherlands", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "385.0"],
                ["2014030215", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Netherlands", "(not set)", "/?repo=solutions-geoprocessing-toolbox&climit=100&user=esri", "1", "0.0"],
                ["2014030215", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Netherlands", "(not set)", "/?user=esri", "1", "0.0"],
                ["2014030215", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Australia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030216", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Australia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030216", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Switzerland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030216", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030216", "google", "google / organic", "Safari", "United States", "(not set)", "/", "1", "0.0"],
                ["2014030217", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Croatia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030217", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Spain", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030217", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "1124.0"],
                ["2014030217", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=tomvdv", "1", "0.0"],
                ["2014030218", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "4.0"],
                ["2014030218", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Mongolia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "9.0"],
                ["2014030218", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Palestine", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "6.0"],
                ["2014030218", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030218", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "4.0"],
                ["2014030218", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "117.0"],
                ["2014030218", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United Kingdom", "(not set)", "/?user=gregsexton", "1", "0.0"],
                ["2014030218", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "75.0"],
                ["2014030219", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Iran", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "11.0"],
                ["2014030219", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "France", "(not set)", "/?user=neokeld", "1", "0.0"],
                ["2014030219", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030219", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Norway", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030220", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Australia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030220", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "110.0"],
                ["2014030220", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Ireland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "40.0"],
                ["2014030220", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Ireland", "(not set)", "/?user=jospcm", "1", "0.0"],
                ["2014030220", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Ukraine", "(not set)", "/?repo=HIDE&climit=100&user=misterpah", "1", "0.0"],
                ["2014030220", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Ukraine", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "182.0"],
                ["2014030220", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Ukraine", "(not set)", "/?user=as3boyan", "1", "0.0"],
                ["2014030220", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Ukraine", "(not set)", "/?user=misterpah", "1", "0.0"],
                ["2014030220", "habrahabr.ru/post/174375/", "habrahabr.ru / referral", "Firefox", "Turkey", "(not set)", "/", "1", "88.0"],
                ["2014030221", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Brazil", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "37.0"],
                ["2014030221", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "88.0"],
                ["2014030221", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?repo=grock&climit=100&user=killercup", "1", "0.0"],
                ["2014030221", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?user=killercup", "1", "0.0"],
                ["2014030221", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Israel", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030221", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030221", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Korea", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "1153.0"],
                ["2014030221", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030222", "(direct)", "(direct) / (none)", "Chrome", "China", "(not set)", "/", "1", "662.0"],
                ["2014030222", "(direct)", "(direct) / (none)", "Chrome", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030222", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "10.0"],
                ["2014030222", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?user=gierschv", "1", "0.0"],
                ["2014030222", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030222", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030222", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "1.0"],
                ["2014030222", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "India", "(not set)", "/", "1", "20.0"],
                ["2014030222", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Turkey", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030222", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United Arab Emirates", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "4.0"],
                ["2014030222", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "23.0"],
                ["2014030222", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Austria", "(not set)", "/", "1", "30.0"],
                ["2014030223", "(direct)", "(direct) / (none)", "Chrome", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "50.0"],
                ["2014030223", "(direct)", "(direct) / (none)", "Chrome", "China", "(not set)", "/?repo=gistup&climit=100&user=mbostock", "1", "0.0"],
                ["2014030223", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Hungary", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030223", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Switzerland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030223", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "2.0"],
                ["2014030300", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "1.0"],
                ["2014030300", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Italy", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "36.0"],
                ["2014030300", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Italy", "(not set)", "/?user=n.sanitate@gmail.com", "1", "0.0"],
                ["2014030300", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Puerto Rico", "(not set)", "/", "1", "50.0"],
                ["2014030300", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Puerto Rico", "(not set)", "/?repo=Reportalo&climit=100&user=commonwealth-of-puerto-rico", "1", "0.0"],
                ["2014030300", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Puerto Rico", "(not set)", "/?repo=crime-spotter&climit=100&user=commonwealth-of-puerto-rico", "1", "0.0"],
                ["2014030300", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Puerto Rico", "(not set)", "/?repo=lean&climit=100&user=commonwealth-of-puerto-rico", "1", "0.0"],
                ["2014030300", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Puerto Rico", "(not set)", "/?user=commonwealth-of-puerto-rico", "1", "0.0"],
                ["2014030300", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=GitHubCodeSwarm&amp;climit=100&amp;user=artzub", "1", "0.0"],
                ["2014030300", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "1.0"],
                ["2014030301", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "889.0"],
                ["2014030301", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=fshark&climit=100&user=xorg62", "1", "0.0"],
                ["2014030301", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=openflow-tutorial&climit=100&user=mininet", "1", "0.0"],
                ["2014030301", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=vim-gocode&climit=100&user=spf13", "1", "0.0"],
                ["2014030301", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=wmfs&climit=100&user=xorg62", "1", "0.0"],
                ["2014030301", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?user=mininet", "1", "0.0"],
                ["2014030301", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?user=routeflow", "1", "0.0"],
                ["2014030301", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?user=spf13", "1", "0.0"],
                ["2014030301", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?user=vim", "1", "0.0"],
                ["2014030301", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?user=xorg62", "1", "0.0"],
                ["2014030301", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?user=xorg62/wmfs", "1", "0.0"],
                ["2014030301", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/", "1", "0.0"],
                ["2014030301", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Syria", "(not set)", "/?repo=GitHubCodeSwarm&amp;climit=100&amp;user=artzub", "1", "79.0"],
                ["2014030301", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Syria", "(not set)", "/?repo=jquery&climit=100&user=jquery", "1", "0.0"],
                ["2014030301", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030301", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "1.0"],
                ["2014030301", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Sweden", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030301", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030302", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "538.0"],
                ["2014030302", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "125.0"],
                ["2014030302", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?user=opentsdb", "1", "0.0"],
                ["2014030302", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?user=tsuna", "1", "0.0"],
                ["2014030302", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Ukraine", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "145.0"],
                ["2014030302", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Ukraine", "(not set)", "/?user=solyony", "1", "0.0"],
                ["2014030302", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Ukraine", "(not set)", "/?user=vanclist", "1", "0.0"],
                ["2014030302", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "192.0"],
                ["2014030302", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?user=chrisfey", "1", "0.0"],
                ["2014030302", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?user=mmjack", "1", "0.0"],
                ["2014030302", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?user=sharkofmirkwood", "1", "0.0"],
                ["2014030302", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "104.0"],
                ["2014030302", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030302", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Thailand", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "33.0"],
                ["2014030303", "(direct)", "(direct) / (none)", "Chrome", "Mexico", "(not set)", "/?repo=SISOPREGA&climit=100&user=diego-torres", "1", "4.0"],
                ["2014030303", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Poland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030303", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Switzerland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030303", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030303", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Italy", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030303", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Mexico", "(not set)", "/?repo=SISOPREGA&climit=100&user=diego-torres", "1", "0.0"],
                ["2014030303", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Mexico", "(not set)", "/?repo=bdde&climit=100&user=alan-delrio", "1", "0.0"],
                ["2014030303", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Mexico", "(not set)", "/?repo=bdde&climit=100&user=diego-torres", "1", "0.0"],
                ["2014030303", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Mexico", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "154.0"],
                ["2014030303", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Mexico", "(not set)", "/?user=alan-delrio", "1", "0.0"],
                ["2014030303", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Spain", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "64.0"],
                ["2014030303", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Spain", "(not set)", "/?user=vetorius", "1", "0.0"],
                ["2014030303", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "234.0"],
                ["2014030303", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?user=arrbee", "1", "0.0"],
                ["2014030303", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?user=libgit2", "1", "0.0"],
                ["2014030303", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Finland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030304", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Finland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030304", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030304", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Hungary", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "276.0"],
                ["2014030304", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Iran", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030304", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "461.0"],
                ["2014030304", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Japan", "(not set)", "/?repo=rails&climit=100&user=rails", "1", "0.0"],
                ["2014030304", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Japan", "(not set)", "/?user=rails", "1", "0.0"],
                ["2014030304", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Mexico", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "1.0"],
                ["2014030304", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Netherlands", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "446.0"],
                ["2014030304", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Netherlands", "(not set)", "/?repo=tire-bouchon&climit=100&user=m3kh", "1", "0.0"],
                ["2014030304", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Netherlands", "(not set)", "/?user=m3kh", "1", "0.0"],
                ["2014030304", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?repo=bbtasks&climit=100&user=samosad", "1", "0.0"],
                ["2014030304", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "221.0"],
                ["2014030304", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?repo=list.js&climit=100&user=samosad", "1", "0.0"],
                ["2014030304", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?repo=x-plosion_test&climit=100&user=samosad", "1", "0.0"],
                ["2014030304", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?user=samosad", "1", "0.0"],
                ["2014030304", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "3", "94.0"],
                ["2014030304", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=nodeunit&climit=100&user=jimtla", "1", "0.0"],
                ["2014030305", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030305", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Spain", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030305", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030306", "(direct)", "(direct) / (none)", "Chrome", "Australia", "(not set)", "/?repo=GitHubCodeSwarm&climit=100&user=artzub", "1", "1153.0"],
                ["2014030306", "(direct)", "(direct) / (none)", "Chrome", "Australia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030306", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Argentina", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "236.0"],
                ["2014030306", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Argentina", "(not set)", "/?repo=manta-thoth&climit=100&user=joyent", "1", "0.0"],
                ["2014030306", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Argentina", "(not set)", "/?user=hruscitti", "1", "0.0"],
                ["2014030306", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Argentina", "(not set)", "/?user=jositux", "1", "0.0"],
                ["2014030306", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Argentina", "(not set)", "/?user=joyent", "1", "0.0"],
                ["2014030306", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Argentina", "(not set)", "/?user=jquery", "1", "0.0"],
                ["2014030306", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Australia", "(not set)", "/?repo=GitHubCodeSwarm&amp;climit=100&amp;user=artzub", "1", "26.0"],
                ["2014030306", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Australia", "(not set)", "/?repo=mc&climit=100&user=MidnightCommander", "1", "0.0"],
                ["2014030306", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Poland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "58.0"],
                ["2014030307", "(direct)", "(direct) / (none)", "Chrome", "Australia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030307", "(direct)", "(direct) / (none)", "Chrome", "Australia", "(not set)", "/?repo=rails&climit=100&user=rails", "1", "0.0"],
                ["2014030307", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Brazil", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030307", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/", "1", "450.0"],
                ["2014030307", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?repo=bootstrap&climit=100&user=twbs", "1", "0.0"],
                ["2014030307", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?repo=f3_snippets&climit=100&user=oliverhermanni", "1", "0.0"],
                ["2014030307", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?repo=javascript&climit=100&user=oliverhermanni", "1", "0.0"],
                ["2014030307", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?repo=mc&climit=100&user=MidnightCommander", "1", "0.0"],
                ["2014030307", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?repo=mc&climit=100&user=bizcademy", "1", "0.0"],
                ["2014030307", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?repo=song-of-github&climit=100&user=ajacksified", "1", "0.0"],
                ["2014030307", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?user=oliverhermanni", "1", "0.0"],
                ["2014030307", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "85.0"],
                ["2014030307", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=unused-css&climit=100&user=christemple", "1", "0.0"],
                ["2014030307", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?user=christemple", "1", "0.0"],
                ["2014030307", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/", "1", "202.0"],
                ["2014030307", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "75.0"],
                ["2014030307", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=brentv", "1", "0.0"],
                ["2014030307", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=rgawdzik", "1", "0.0"],
                ["2014030307", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Colombia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "71.0"],
                ["2014030307", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Colombia", "(not set)", "/?user=af.arenas", "1", "0.0"],
                ["2014030308", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Australia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "165.0"],
                ["2014030308", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "247.0"],
                ["2014030308", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=netcall&climit=100&user=aglyzov", "1", "0.0"],
                ["2014030308", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=zeromq4-x&climit=100&user=zeromq", "1", "0.0"],
                ["2014030308", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?user=aglyzov", "1", "0.0"],
                ["2014030308", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?user=zeromq", "1", "0.0"],
                ["2014030308", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030308", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/", "1", "0.0"],
                ["2014030308", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "3", "197.0"],
                ["2014030308", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=confidential101", "1", "0.0"],
                ["2014030308", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=musicophiliac", "1", "0.0"],
                ["2014030308", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=ngvitovitch@gmail.com", "1", "0.0"],
                ["2014030308", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "17.0"],
                ["2014030308", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030309", "(direct)", "(direct) / (none)", "Firefox", "Indonesia", "(not set)", "/", "1", "18.0"],
                ["2014030309", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Indonesia", "(not set)", "/?climit=100&user=ahmad@rumah.com", "1", "0.0"],
                ["2014030309", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Indonesia", "(not set)", "/?repo=bootstrap-expo&climit=100&user=twbs", "1", "0.0"],
                ["2014030309", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Indonesia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "254.0"],
                ["2014030309", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Indonesia", "(not set)", "/?repo=d3&climit=100&user=satirirumahcom", "1", "0.0"],
                ["2014030309", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Indonesia", "(not set)", "/?user=bootstrap", "1", "0.0"],
                ["2014030309", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Indonesia", "(not set)", "/?user=endymuhardin", "1", "0.0"],
                ["2014030309", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Indonesia", "(not set)", "/?user=jason", "1", "0.0"],
                ["2014030309", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Indonesia", "(not set)", "/?user=symfony2", "1", "0.0"],
                ["2014030309", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Indonesia", "(not set)", "/?user=twbs", "1", "0.0"],
                ["2014030309", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Indonesia", "(not set)", "/?user=twitter/bootstrap", "1", "0.0"],
                ["2014030309", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Netherlands", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030309", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "238.0"],
                ["2014030309", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=paultwo", "1", "0.0"],
                ["2014030309", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=phlipper", "1", "0.0"],
                ["2014030309", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "1.0"],
                ["2014030310", "(direct)", "(direct) / (none)", "Firefox", "Indonesia", "(not set)", "/", "1", "0.0"],
                ["2014030310", "(direct)", "(direct) / (none)", "Firefox", "Indonesia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030310", "(direct)", "(direct) / (none)", "Firefox", "Indonesia", "(not set)", "/?user=java", "1", "49.0"],
                ["2014030310", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "10.0"],
                ["2014030310", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Ecuador", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030310", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/", "1", "2.0"],
                ["2014030310", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "5.0"],
                ["2014030310", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Singapore", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "4.0"],
                ["2014030311", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Australia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "13.0"],
                ["2014030311", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "123.0"],
                ["2014030311", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030311", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Korea", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030311", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "8", "167.0"],
                ["2014030311", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "24.0"],
                ["2014030311", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "4.0"],
                ["2014030312", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=GitHubVisualizer&climit=100&user=artzub", "1", "186.0"],
                ["2014030312", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "4.0"],
                ["2014030312", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/", "1", "0.0"],
                ["2014030312", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?repo=ardupilot&climit=100&user=diydrones", "1", "3848.0"],
                ["2014030312", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?user=diydrones", "1", "0.0"],
                ["2014030312", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/", "1", "15.0"],
                ["2014030312", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "1.0"],
                ["2014030313", "(direct)", "(direct) / (none)", "Chrome", "Australia", "(not set)", "/?repo=rails&climit=100&user=rails", "1", "124.0"],
                ["2014030313", "(direct)", "(direct) / (none)", "Chrome", "Australia", "(not set)", "/?repo=rails.github.com&climit=100&user=rails", "1", "0.0"],
                ["2014030313", "(direct)", "(direct) / (none)", "Chrome", "Sri Lanka", "(not set)", "/?repo=rails&climit=100&user=rails", "1", "3.0"],
                ["2014030313", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Australia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "347.0"],
                ["2014030313", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030313", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030313", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?repo=GitHubVisualizer&climit=100&user=artzub", "1", "0.0"],
                ["2014030313", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?repo=droidplanner&climit=10000&user=droidplanner", "1", "0.0"],
                ["2014030313", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Korea", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030313", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Turkey", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030313", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/", "1", "0.0"],
                ["2014030313", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "3", "363.0"],
                ["2014030313", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=song-of-github&climit=100&user=ajacksified", "1", "0.0"],
                ["2014030313", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Australia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030313", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Portugal", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030313", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030313", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "5.0"],
                ["2014030313", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "1.0"],
                ["2014030313", "t.co/rufx6niSeR", "t.co / referral", "Chrome", "United States", "Twitter", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030314", "(direct)", "(direct) / (none)", "Chrome", "Australia", "(not set)", "/?repo=rails&climit=100&user=rails", "1", "141.0"],
                ["2014030314", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "(not set)", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030314", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "67.0"],
                ["2014030314", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "2.0"],
                ["2014030314", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "7.0"],
                ["2014030314", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Singapore", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "4.0"],
                ["2014030314", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030314", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Indonesia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030314", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030314", "ghv.artzub.com/", "ghv.artzub.com / referral", "Maxthon", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "60.0"],
                ["2014030315", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "83.0"],
                ["2014030315", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?repo=polly-b-gone&climit=100&user=mbostock", "1", "0.0"],
                ["2014030315", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "54.0"],
                ["2014030315", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "13.0"],
                ["2014030315", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Poland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030315", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Korea", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030315", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Sweden", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030315", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "4.0"],
                ["2014030315", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "1.0"],
                ["2014030315", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Finland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "276.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Australia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Denmark", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "33.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Oman", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Korea", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "597.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Korea", "(not set)", "/?repo=iodocs&climit=100&user=outsideris", "1", "0.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Korea", "(not set)", "/?repo=popularconvention&climit=100&user=outsideris", "1", "0.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Korea", "(not set)", "/?user=outsider", "1", "0.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Korea", "(not set)", "/?user=outsideris", "1", "0.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Austria", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Germany", "(not set)", "/?repo=NoTrick&climit=100&user=feststelltaste", "1", "0.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Germany", "(not set)", "/?repo=aim42&climit=100&user=aim42", "1", "0.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "532.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Germany", "(not set)", "/?user=aim42", "1", "0.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Germany", "(not set)", "/?user=feststelltaste", "1", "0.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Netherlands", "(not set)", "/", "1", "4.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Romania", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "241.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "China", "(not set)", "/?repo=pomelo&climit=100&user=bmgy", "1", "0.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "China", "(not set)", "/?repo=sails&climit=100&user=bmgy", "1", "0.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "China", "(not set)", "/?user=bmgy", "1", "0.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030316", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United Arab Emirates", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "206.0"],
                ["2014030317", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "(not set)", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030317", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030317", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "103.0"],
                ["2014030317", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?user=hudson", "1", "0.0"],
                ["2014030317", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Ireland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030317", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Italy", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030317", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Spain", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030317", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "34.0"],
                ["2014030317", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=jwesor", "1", "0.0"],
                ["2014030317", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "146.0"],
                ["2014030317", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "4.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=GitHubVisualizer&climit=100&user=artzub", "1", "49.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=TimelineJS&climit=100&user=artzub", "1", "0.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/", "1", "7.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "468.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Ireland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "371.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Japan", "(not set)", "/?user=flyakite", "1", "0.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Netherlands", "(not set)", "/?repo=3DVITA&climit=100&user=rcjurriaans", "1", "0.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Netherlands", "(not set)", "/?repo=CodeCult&climit=100&user=rcjurriaans", "1", "0.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Netherlands", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "178.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Netherlands", "(not set)", "/?user=RCJurriaans", "1", "0.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Portugal", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Korea", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Switzerland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "7.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "662.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "95.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Portugal", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "South Korea", "(not set)", "/?repo=d3&climit=100&user=hongminhee", "1", "0.0"],
                ["2014030318", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "South Korea", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "53.0"],
                ["2014030319", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Australia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "12.0"],
                ["2014030319", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "5.0"],
                ["2014030319", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/", "1", "0.0"],
                ["2014030319", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030319", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?user=pramodpersi", "1", "0.0"],
                ["2014030319", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Italy", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "17.0"],
                ["2014030319", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "59.0"],
                ["2014030319", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030319", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "6.0"],
                ["2014030319", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Monaco", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030319", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Norway", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "170.0"],
                ["2014030319", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Norway", "(not set)", "/?repo=gcalnoscroll.safariextension&climit=100&user=ryand", "1", "0.0"],
                ["2014030319", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Norway", "(not set)", "/?repo=php-markdown&climit=100&user=ryand", "1", "0.0"],
                ["2014030319", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Norway", "(not set)", "/?user=nodejs", "1", "0.0"],
                ["2014030319", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Norway", "(not set)", "/?user=ryand", "1", "0.0"],
                ["2014030319", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "1356.0"],
                ["2014030319", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United Kingdom", "(not set)", "/?user=jdalton", "1", "0.0"],
                ["2014030319", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United Kingdom", "(not set)", "/?user=klovas", "1", "0.0"],
                ["2014030319", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United Kingdom", "(not set)", "/?user=mcclade", "1", "0.0"],
                ["2014030319", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United Kingdom", "(not set)", "/?user=mdo", "1", "0.0"],
                ["2014030319", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United Kingdom", "(not set)", "/?user=torvalds", "1", "0.0"],
                ["2014030320", "(direct)", "(direct) / (none)", "Firefox", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "5.0"],
                ["2014030320", "(direct)", "(direct) / (none)", "Firefox", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030320", "(direct)", "(direct) / (none)", "Firefox", "Japan", "(not set)", "/?user=soha", "1", "175.0"],
                ["2014030320", "(direct)", "(direct) / (none)", "Firefox", "Japan", "(not set)", "/?user=taruminus", "1", "0.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "(not set)", "(not set)", "/?repo=d3&climit=100&user=antirez\u200e", "1", "0.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "(not set)", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "155.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "(not set)", "(not set)", "/?repo=d3&climit=100&user=needim", "1", "0.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Brazil", "(not set)", "/?repo=andengine-platform-game&climit=100&user=marloncarvalho", "1", "0.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Brazil", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "199.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Brazil", "(not set)", "/?user=jhonystein", "1", "0.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Brazil", "(not set)", "/?user=marloncarvalho", "1", "0.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Brazil", "(not set)", "/?user=mcarvalho", "1", "0.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/", "1", "22.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "85.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?user=novus", "1", "0.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?user=pavitardua", "1", "0.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?user=pulkit21", "1", "0.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Israel", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Italy", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Netherlands", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "36.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Africa", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "4.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Taiwan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "9.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Australia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "10.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "799.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "China", "(not set)", "/?repo=geojsonwg.github.io&climit=100&user=mbostock", "1", "0.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "257.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Japan", "(not set)", "/?user=soha", "1", "0.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030320", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "60.0"],
                ["2014030321", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "127.0"],
                ["2014030321", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=bootstrap&climit=100&user=twbs", "1", "0.0"],
                ["2014030321", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=bootstrap&climit=1000&user=twbs", "1", "0.0"],
                ["2014030321", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "156.0"],
                ["2014030321", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=dandelion&climit=100&user=dandelion", "1", "0.0"],
                ["2014030321", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=dandelion-datatables&climit=100&user=dandelion", "1", "0.0"],
                ["2014030321", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?user=dandelion", "1", "0.0"],
                ["2014030321", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?user=twbs", "1", "0.0"],
                ["2014030321", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030321", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Netherlands", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030321", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Pakistan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "37.0"],
                ["2014030321", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Poland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "114.0"],
                ["2014030321", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Africa", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "14.0"],
                ["2014030321", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030321", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "5.0"],
                ["2014030321", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "219.0"],
                ["2014030321", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "51.0"],
                ["2014030321", "plus.url.google.com/url", "plus.url.google.com / referral", "Chrome", "Brazil", "Google+", "/?repo=droidplanner&climit=10000&user=droidplanner", "1", "2.0"],
                ["2014030322", "(direct)", "(direct) / (none)", "Chrome", "Poland", "(not set)", "/?repo=PEA&climit=100&user=piotrgiedziun", "1", "135.0"],
                ["2014030322", "(direct)", "(direct) / (none)", "Chrome", "Poland", "(not set)", "/?repo=PEA&climit=1000&user=piotrgiedziun", "1", "0.0"],
                ["2014030322", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "1.0"],
                ["2014030322", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030322", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "8.0"],
                ["2014030322", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030322", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030322", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Portugal", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030322", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Sweden", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030322", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030322", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Czech Republic", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030322", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030322", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "65.0"],
                ["2014030322", "ghv.artzub.com/", "ghv.artzub.com / referral", "Opera", "Italy", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030322", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030323", "(direct)", "(direct) / (none)", "Firefox", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "21.0"],
                ["2014030323", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Belgium", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030323", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Chile", "(not set)", "/?repo=GitHubVisualizer&climit=100&user=artzub", "1", "4.0"],
                ["2014030323", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?repo=bedrock&climit=100&user=mozilla", "1", "0.0"],
                ["2014030323", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "China", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "265.0"],
                ["2014030323", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Colombia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030323", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Finland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030323", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030323", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Mexico", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030323", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Netherlands", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030323", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Poland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030323", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "4.0"],
                ["2014030323", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=SemiAutoFilmmaking&climit=100&user=dpeet", "1", "0.0"],
                ["2014030323", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "3", "354.0"],
                ["2014030323", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=dpeet", "1", "0.0"],
                ["2014030323", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "6.0"],
                ["2014030323", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United Kingdom", "(not set)", "/?repo=GitHubVisualizer&climit=100&user=artzub", "1", "3.0"],
                ["2014030323", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "India", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "6.0"],
                ["2014030323", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "40.0"],
                ["2014030323", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "23.0"],
                ["2014030400", "(direct)", "(direct) / (none)", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "77.0"],
                ["2014030400", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Denmark", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030400", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Italy", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "30.0"],
                ["2014030400", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Russia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030400", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "38.0"],
                ["2014030400", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?user=mfmbarber", "1", "0.0"],
                ["2014030400", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "3", "4.0"],
                ["2014030400", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030400", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030401", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Austria", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030401", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "20.0"],
                ["2014030401", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Spain", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030401", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030401", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "3", "6.0"],
                ["2014030401", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "80.0"],
                ["2014030401", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Germany", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030401", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030401", "plus.url.google.com/url", "plus.url.google.com / referral", "Chrome", "Brazil", "Google+", "/", "1", "0.0"],
                ["2014030401", "plus.url.google.com/url", "plus.url.google.com / referral", "Chrome", "Brazil", "Google+", "/?repo=droidplanner&climit=100&user=droidplanner", "1", "0.0"],
                ["2014030401", "plus.url.google.com/url", "plus.url.google.com / referral", "Chrome", "Brazil", "Google+", "/?repo=droidplanner&climit=10000&user=droidplanner", "1", "207.0"],
                ["2014030402", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Chile", "(not set)", "/", "1", "0.0"],
                ["2014030402", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Chile", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "43.0"],
                ["2014030402", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Portugal", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030402", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030402", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=GitHubCodeSwarm&amp;climit=100&amp;user=artzub", "2", "385.0"],
                ["2014030402", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=bootstrap&climit=100&user=twbs", "1", "0.0"],
                ["2014030402", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=cruzrr&climit=100&user=ablakely", "1", "0.0"],
                ["2014030402", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "7", "428.0"],
                ["2014030402", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=jquery&climit=100&user=jquery", "2", "0.0"],
                ["2014030402", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=node-ar-drone&climit=100&user=ablakely", "1", "0.0"],
                ["2014030402", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=node-weedfs&climit=100&user=cruzrr", "1", "0.0"],
                ["2014030402", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=ablakely", "1", "0.0"],
                ["2014030402", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=cruzrr", "1", "0.0"],
                ["2014030402", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Poland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "384.0"],
                ["2014030402", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Puerto Rico", "(not set)", "/?user=commonwealth-of-puerto-rico", "1", "89.0"],
                ["2014030402", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030403", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "1.0"],
                ["2014030403", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "4", "40.0"],
                ["2014030403", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=nileshk", "1", "0.0"],
                ["2014030403", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Portugal", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030403", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "Canada", "(not set)", "/?repo=Durandal&climit=100&user=rwhepburn", "1", "0.0"],
                ["2014030403", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "129.0"],
                ["2014030403", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "Canada", "(not set)", "/?user=rwhepburn", "1", "0.0"],
                ["2014030404", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Belarus", "(not set)", "/", "1", "7.0"],
                ["2014030404", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "4", "31.0"],
                ["2014030404", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Czech Republic", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030404", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Switzerland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "3", "6.0"],
                ["2014030404", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/", "1", "0.0"],
                ["2014030404", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=Essentials&climit=100&user=essentials", "1", "0.0"],
                ["2014030404", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=Essentials&climit=5000&user=essentials", "1", "0.0"],
                ["2014030404", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=SocialCircle&climit=100&user=horaceli", "1", "0.0"],
                ["2014030404", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "215.0"],
                ["2014030404", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=horaceli.github.io&climit=100&user=horaceli", "1", "0.0"],
                ["2014030404", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?user=Essentials", "1", "0.0"],
                ["2014030404", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?user=horaceli", "1", "0.0"],
                ["2014030404", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "7", "978.0"],
                ["2014030404", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=dforesman", "1", "0.0"],
                ["2014030404", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?user=ishaikovsky", "1", "0.0"],
                ["2014030404", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Ireland", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030404", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030405", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "48.0"],
                ["2014030405", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "France", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030405", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Mexico", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030405", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Puerto Rico", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030405", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Spain", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "95.0"],
                ["2014030405", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Spain", "(not set)", "/?repo=topojson&climit=153&user=mbostock", "1", "0.0"],
                ["2014030405", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=GitHubCodeSwarm&amp;climit=100&amp;user=artzub", "1", "0.0"],
                ["2014030405", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "4", "32.0"],
                ["2014030405", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Austria", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030405", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Hungary", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030405", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "30.0"],
                ["2014030405", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Germany", "(not set)", "/", "1", "0.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Brazil", "(not set)", "/?repo=coffee-script&climit=100&user=thiagomata", "1", "0.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Brazil", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "220.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Brazil", "(not set)", "/?user=thiagomata", "1", "0.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/", "1", "353.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?repo=bfVisual&climit=100&user=bigomega", "1", "0.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?repo=danbo&climit=100&user=bigomega", "1", "0.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?repo=jarvis&climit=100&user=bigomega", "1", "0.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?repo=openfaux-client&climit=100&user=bigomega", "1", "0.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?repo=tron&climit=100&user=bigomega", "1", "0.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "India", "(not set)", "/?user=bigomega", "1", "0.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Korea", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "49.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=GitHubCodeSwarm&amp;climit=100&amp;user=artzub", "1", "0.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "58.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/", "1", "291.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=BadScience&climit=100&user=junglecatsoftware", "1", "0.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "5", "17.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=200&user=mbostock", "1", "0.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?user=JungleCatSoftware", "1", "0.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?user=brwyatt", "1", "0.0"],
                ["2014030406", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?user=dtinteractive", "1", "0.0"],
                ["2014030406", "plus.url.google.com/url", "plus.url.google.com / referral", "Chrome", "Brazil", "Google+", "/?repo=droidplanner&climit=10000&user=droidplanner", "1", "2.0"],
                ["2014030407", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030407", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Estonia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030407", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Netherlands", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030407", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United Kingdom", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030407", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "3", "67.0"],
                ["2014030407", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Brazil", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030407", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Israel", "(not set)", "/?climit=100&user=binarythor", "1", "0.0"],
                ["2014030407", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Israel", "(not set)", "/?repo=Exilecoin&climit=100&user=binarythor", "1", "0.0"],
                ["2014030407", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Israel", "(not set)", "/?repo=d3&climit=100&user=BinaryThor", "1", "0.0"],
                ["2014030407", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Israel", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "51.0"],
                ["2014030408", "(direct)", "(direct) / (none)", "Chrome", "Australia", "(not set)", "/?repo=rails&climit=100&user=rails", "1", "54.0"],
                ["2014030408", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Australia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "16.0"],
                ["2014030408", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Italy", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "28.0"],
                ["2014030408", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "South Korea", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "41.0"],
                ["2014030408", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "3.0"],
                ["2014030408", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "Australia", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "3.0"],
                ["2014030408", "ghv.artzub.com/", "ghv.artzub.com / referral", "Firefox", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030408", "ghv.artzub.com/", "ghv.artzub.com / referral", "Internet Explorer", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "1.0"],
                ["2014030408", "ghv.artzub.com/", "ghv.artzub.com / referral", "Safari", "Japan", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Belgium", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "2.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Brazil", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "27.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=bootstrap&climit=100&user=twbs", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "461.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Canada", "(not set)", "/?repo=mc&climit=100&user=MidnightCommander", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Greece", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "8.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Hong Kong", "(not set)", "/?repo=d3&climit=100&user=mbostock", "2", "141.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Singapore", "(not set)", "/?repo=Expense&climit=100&user=zabudipar", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Singapore", "(not set)", "/?repo=angular.js&climit=100&user=angular", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Singapore", "(not set)", "/?repo=d3&climit=100&user=mbostock", "1", "203.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Singapore", "(not set)", "/?repo=demo1crud&climit=100&user=angularjs", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Singapore", "(not set)", "/?user=Angularjs", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Singapore", "(not set)", "/?user=angular", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "Singapore", "(not set)", "/?user=zabudipar", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=Finches-2011&climit=100&user=prog694", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=GitHubVisualizer&climit=100&user=artzub", "2", "2.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=cs398vl&climit=100&user=kevinwang", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=d3&climit=100&user=mbostock", "4", "1534.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=desiree&climit=100&user=prog694", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=desmond&climit=100&user=prog694", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=dorm-automation&climit=100&user=kevinwang", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=frc&climit=100&user=prog694", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=joebot&climit=100&user=prog694", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=linux&climit=100&user=torvalds", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=linux&climit=1000&user=torvalds", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=linux&climit=10000&user=torvalds", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=minecarft&climit=100&user=kevinwang", "1", "0.0"],
                ["2014030409", "ghv.artzub.com/", "ghv.artzub.com / referral", "Chrome", "United States", "(not set)", "/?repo=prog694.github.com&climit=100&user=prog694", "1", "0.0"]
            ]
        }
    }
];
},{}],3:[function(require,module,exports){
var d3 = require('d3')
    , gaapi = require('./gaapi')
    , processor = require('./processor')
    , physics = require('./physics')
    , graphic = require('./graphic')
    ;

function log(label, data) {
    if (arguments.length < 2)
        console.log(label);
    else
        console.log(label, data);
}

function logError(error) {
    log("error", error);
}

var ui = {
        accounts : d3.select('#accounts'),
        webProperties : d3.select("#webProperties"),
        profiles : d3.select("#profiles"),
        from : d3.select("#from"),
        to : d3.select("#to"),
        buttons : {
            run : d3.select("#run")
        }
    }
    , uiSelected = {
        account : null,
        webProperty : null,
        profile : null
    }
    , size = [
        window.innerWidth,
        window.innerHeight
    ]
    ;

var provider;

function singIn(prd) {
    provider = prd;
    if (!provider)
        return;
    provider.on('signIn', handleSignIn);
    //provider.signIn()
    ui.buttons.run.on('click')();
    resize();
}

function keyItem(d) {
    return d.id;
}

function handle(sel_prop, ui_prop, css_class, click_fn) {
    return function(err, data) {
        if(err) {
            uiSelected[sel_prop] = null;
            logError(err);
            return;
        }

        var prop = uiSelected[sel_prop] = data[0];
        var items = ui[ui_prop].selectAll(css_class)
            .data(data, keyItem);
        items.enter()
            .append('li')
            .attr('class', css_class.substr(1))
            .text(function(d) {
                return d.name;
            })
            .on('click', click_fn)
            .each(function(d) {
                prop
                && prop.id == d.id
                && click_fn.call(this, prop);
            });
        items.exit().remove();
    }
}

function clickTopMenu(click_fn) {
    return function(d) {
        d3.select(this.parentNode)
            .selectAll('li')
            .classed('uiSelected', false);
        d3.select(this.parentNode.parentNode)
            .select('span').text(d.name);
        d3.select(this)
            .classed('uiSelected', true);

        click_fn &&
        click_fn(d);
    }
}

function handleSignIn(err) {
    if (err) {
        logError(err);
        return;
    }

    provider.accounts.list(handle(
        'account',
        'accounts',
        '.account',
        clickTopMenu(clickAccount)
    ));
}

function clickAccount(d) {
    uiSelected.account = d;
    uiSelected.account &&
    provider.webproperties.list(
        uiSelected.account.id,
        handle(
            'webProperty',
            'webProperties',
            '.webProperty',
            clickTopMenu(clickWebProperty)
        )
    );
}

function clickWebProperty(d) {
    uiSelected.webProperty = d;
    uiSelected.account && uiSelected.webProperty &&
    provider.profiles.list(
        uiSelected.account.id,
        uiSelected.webProperty.id,
        handle(
            'profile',
            'profiles',
            '.profile',
            clickTopMenu(clickProfile)
        )
    );
}

var state = {
    hashFrom : d3.map({})
    , hashTo : d3.map({})
    , sizes :  d3.scale.linear().range([1, 40]).domain([0, 1])
    , colors : d3.scale.category20()
};

function ofSize(d) {
    return {
        valueOf : function() {
            return 16;//state.sizes(d.weight);
        }
    }
}

function initNode(d) {
    d.fixed = true;
    state.sizes.domain([state.sizes.domain()[0], state.sizes.domain()[1] < d.weight ? d.weight : state.sizes.domain()[1]]);
    d.size = ofSize(d);
    d.color = d3.rgb(state.colors(d.to.pagePath.name));
    if (!state.hashFrom.has(d.from.socialNetwork.name)) {
        d.from.socialNetwork.x = 0;
        d.from.socialNetwork.y = Math.random() * size[1];
        state.hashFrom.set(d.from.socialNetwork.name, d.from.socialNetwork);
    }
    if (!state.hashTo.has(d.to.pagePath.name)) {
        d.to.pagePath.x = size[0];
        d.to.pagePath.y = Math.random() * size[1];
        state.hashTo.set(d.to.pagePath.name, d.to.pagePath);
    }
}

function keyHash(d) {
    return d.key;
}

function liXl(li) {
    return {
        valueOf : function() {
            var rect = li.getBoundingClientRect();
            return rect.right;
        }
    };
}

function liXr(li) {
    return {
        valueOf : function() {
            var rect = li.getBoundingClientRect();
            return rect.left - 15;
        }
    };
}

function liY(li) {
    return {
        valueOf : function() {
            //li.offsetTop + li.parentNode.offsetTop + li
            var rect = li.getBoundingClientRect();
            return (rect.top + rect.height) / 2;
        }
    };
}

function updateParent(ui, hash) {
    var lis = ui.selectAll('li')
        .data(hash.entries(), keyHash);

    lis.enter().append('li')
        .text(keyHash)
        .each(function(d) {
            d = d.value;
            d.x = hash === state.hashFrom ? liXl(this) : liXr(this);
            d.y = liY(this);
        });
}

function refresh(data) {
    if (!data || !data.length)
        return;

    var lb = processor.bounds()[0] || data[0].date
        , rb = data.length > 1 ? data.slice(-1).pop().date : lb
        ;

    data.forEach(initNode);

    physics.size(size);

    state.data = state.data || [].concat(data);

    processor.bounds([lb, rb]);

    !processor.IsRun() && processor.start();

}

ui.buttons.run.on('click', function() {
    provider.reports.social(/*uiSelected.profile.id*/'111', '2014-03-01', '2014-03-30', function(err, data) {
        if (err) {
            logError(err);
            return;
        }

        refresh(data);
    });
});

function clickProfile(d) {
    uiSelected.profile = d;
}

processor.on('start', function() {
    if (!rqId) rending();
    resize();
});

processor.on('stop', function() {

});

processor.on('finish', function() {

});

processor.on('tick', function(items, l, r) {
    updateParent(ui.from, state.hashFrom);
    updateParent(ui.to, state.hashTo);
});

processor.on('calc', function (d) {
    if (!processor.IsRun())
        return;

    p = d.from.socialNetwork;

    if (d.fixed) {
        d.x = +p.x;
        d.y = +p.y;
    }

    d.fixed = false;

    d.parent = d.to.pagePath;

    d.visible = getVisible(d);

    physics && physics.nodes(state.data.filter(filterChild)).start();
});

processor.on('calcrightbound', function(l) {
    processor.leftBound++;
});

processor.on('filter', function(l, r) {
    processor.items = state.data.filter(function(d) {
        return d.date >= l && d.date < r;
    });
});

function getVisible(d) {
    return true;
}

function filterChild(d) {
    return d.visible;
}

/**
 * rAF & cAF
 */
(function() {
    var lastTime = 0;
    var vendors = ['ms', 'moz', 'webkit', 'o'];
    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {
        window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];
        window.cancelAnimationFrame =
            window[vendors[x]+'CancelAnimationFrame'] || window[vendors[x]+'CancelRequestAnimationFrame'];
    }

    if (!window.requestAnimationFrame)
        window.requestAnimationFrame = function(callback/*, element*/) {
            var currTime = new Date().getTime();
            var timeToCall = Math.max(0, 16 - (currTime - lastTime));
            var id = window.setTimeout(function() { callback(currTime + timeToCall); },
                timeToCall);
            lastTime = currTime + timeToCall;
            return id;
        };

    if (!window.cancelAnimationFrame)
        window.cancelAnimationFrame = function(id) {
            clearTimeout(id);
        };
})();

var valid = false
    , rqId
    , canvas = d3.select("#canvas").append('canvas')
        .text("This browser don't support element type of Canvas.")
        .attr("width", size[0])
        .attr("height", size[1])
        //.call(zoom)
        //.on('mousemove.tooltip', moveMouse)
        .node()
    , ctx = canvas.getContext('2d')
    ;

function rending() {

    rqId = requestAnimationFrame(rending, undefined);

    var n = physics.nodes();

    if (!ctx || valid || !n || !n.length)
        return;

    valid = true;

    ctx.save();
    ctx.clearRect(0, 0, size[0], size[1]);

    ctx.drawImage(graphic.draw(n), 0, 0);
    ctx.restore();

    valid = false;
}

function resize() {
    size = [
        window.innerWidth,
        window.innerHeight
    ];

    canvas.width = size[0];
    canvas.height = size[1];

    graphic.size = size;
    physics.size(size);

    ui.from.style('height', size[1]);
    ui.to.style('height', size[1]);

    updateParent(ui.from, state.hashFrom);
    updateParent(ui.to, state.hashTo);
}

d3.select(window).on('resize', resize);


gaapi(singIn);
},{"./gaapi":4,"./graphic":5,"./physics":6,"./processor":7,"d3":1}],4:[function(require,module,exports){
/**
 * Function makes a node
 * @param that
 * @param name
 * @param d
 * @returns {{type: *, name: *, nodeValue: *}}
 * @constructor
 */
function Node(that, name, d) {
    that.name = name;
    that.nodeValue = d;
}

function FromNode(name, d) {
    Node(this, name, d);
}

function ToNode(name, d) {
    Node(this, name, d);
}

function IProvider() {
    return {
        signIn : function() {

        }
        , signOut : function () {

        }
        , getAccount : function () {

        }
        , getProperty : function () {

        }
        , getView : function () {

        }
        , parse : function() {
            return [];
        }
    }
}


var CLIENT_ID = '125867639228-55svp06ntafe8b2uf27m7llvk2ernk3s.apps.googleusercontent.com'
    , SCOPES = 'https://www.googleapis.com/auth/analytics.readonly'
    , MaxResults = 1000000000
    ;

module.exports = function(callback) {
    var script = document.createElement('script');
    window.LOADERAPI = handleClientLoad;
    script.src = "https://apis.google.com/js/client.js?onload=LOADERAPI";
    script.onerror = console.log.bind(console, 'error');
    document.body.appendChild(script);

    function handleClientLoad() {
        callback && callback(new GAClient(CLIENT_ID));
    }
};

var GAClient = function(key) {
    GAClient.ClientId = key;
};

(function(proto) {
    var actions = {}
        ;

    function isFn(arg) {
        return arg && typeof arg === 'function';
    }

    function dispatch(action) {
        if (action == '')
            return;
        var act = action.toString().toLowerCase();
        isFn(actions[act]) &&
            actions[act].apply(GAClient, Array.prototype.slice.call(arguments, 1));
    }

    function error(msg) {
        return {
            message : msg
        };
    }

    function handle(action, prop) {
        return function(data) {
            var err = null;
            if (!data) {
                err = error('data not found');
            }
            else if (data.code) {
                err = {code: data.code, message: data.message};
            }
            else if (prop) {
                if (data[prop] && data[prop].length) {
                    data = data[prop];
                }
                else {
                    err = error('data not found');
                }
            }
            dispatch(action, err, data);
        }
    }

    function report(dim, profileId, datebegin, dateend, callback) {
        gapi.client.analytics.data.ga.get({
            ids: 'ga:' + profileId,
            'start-date': datebegin,
            'end-date': dateend,
            metrics: 'ga:visitors,ga:timeOnSite',
            dimensions: dim
        }).execute(callback);
    }

    proto.on = function(action, callback) {
        if (action == '')
            return;
        var act = action.toString().toLowerCase();

        if (arguments.length < 2)
            return actions[act];
        actions[act] = callback;
    };

    proto.signIn = function(key) {
        key = key || GAClient.ClientId;
        if (key.error) {
            localStorage.removeItem("ga-access_token");
            dispatch('signIn', key.error);
        }
        else if (key.access_token) {
            var now = Date.now();
            var msToAdd = (parseInt(key.expires_in) - 100) * 1000;
            at = {};
            at.expiration = now + msToAdd;
            at.access_token = key.access_token;
            localStorage.setItem("ga-access_token", at);
            dispatch('signIn', null);
        }
        else {
            at = localStorage.getItem("ga-access_token");

            gapi && gapi.auth.authorize({
                client_id: key,
                scope: SCOPES,
                immediate: at && at.expiration > Date.now()
            }, proto.signIn);
        }
    };

    proto.signOut = function() {
        localStorage.removeItem("ga-access_token");
        dispatch('signout');
    };

    proto.accounts = {
        list : function(callback) {
            var act = 'accounts.list';
            proto.on(act, callback);

            gapi.client.load('analytics', 'v3', function() {
                gapi.client.analytics
                    .management
                    .accounts
                    .list()
                    .execute(handle(act, 'items'));
            });
        }
    };

    proto.webproperties = {
        list : function(accountId, callback) {
            var act = 'webproperties.list';
            proto.on(act, callback);
            gapi.client.analytics
                .management
                .webproperties
                .list({'accountId': accountId})
                .execute(handle(act, 'items'));
        }
    };

    proto.profiles = {
        list : function(accountId, webPropertyId, callback) {
            var act = 'profiles.list';
            proto.on(act, callback);
            gapi.client.analytics
                .management
                .profiles
                .list({
                    accountId: accountId,
                    webPropertyId: webPropertyId
                }).execute(handle(act, 'items'));
        }
    };

    proto.reports = {
        social : function(profileId, datebegin, dateend, callback) {
            var act = 'reports.social';
            //proto.on(act, wrapperParser(parserSocial, callback));

            wrapperParser(parserSocial, callback)(null, require('./data'));
            /*report('ga:dateHour,ga:fullReferrer,ga:sourceMedium,ga:browser,ga:country,ga:socialNetwork,ga:pagePath',
                profileId,
                datebegin,
                dateend,
                handle(act)
            );*/
        },
        geo : function(datebegin, dateend, callback) {
            var act = 'reports.geo';
            proto.on(act, wrapperParser(parserSocial, callback));
            report('ga:dateHour,ga:fullReferrer,ga:country,ga:pagePath,ga:city,ga:latitude,ga:longitude',
                profileId,
                datebegin,
                dateend,
                handle(act)
            );
        }
    };

    function wrapperParser(parser, callback) {
        return function (err, data) {
            callback && callback(err, parser(data));
        }
    }

    function parserSocial(data) {
        if (!data || !data[0] || !(data = data[0].result) || !data.rows)
            return [];

        var rows = data.rows
            , l = rows.length
            , d
            , res = []
            , from = {}
            , to = {}
            ;

        var fr, sm, b, c, sn;

        while(--l > -1) {
            d = rows[l];
            fr = d[1];
            sm = d[2];
            b = d[3];
            c = d[4];
            sn = d[5];
            res.push({
                date : parseInt(d[0])
                , from : {
                    fullReferrer : from[fr] || (from[fr] = new FromNode(fr, fr))
                    , sourceMedium  : from[sm] || (from[sm] = new FromNode(sm, sm))
                    , browser  : from[b] || (from[b] = new FromNode(b, b))
                    , country  : from[c] || (from[c] = new FromNode(c, c))
                    , socialNetwork  : from[sn] || (from[sn] = new FromNode(sn, sn))
                }
                , to : {
                    pagePath : to[d[6]] || (to[d[6]] = new ToNode(d[6], d[6]))
                }
                , amount : parseInt(d[7])
                , weight : parseFloat(d[8])
            });
        }

        return res.reverse();
    }
})(GAClient.prototype);

},{"./data":2}],5:[function(require,module,exports){
var d3 = require('d3');

var neonBallCache = d3.map({});

var render = {
    size : [500, 500]
};

var trackCanvas
    , trackCtx
    , bufCanvas
    , bufCtx
    ;

render.reset = function() {
    trackCanvas =
        trackCtx =
            bufCanvas =
                bufCtx = null
};

function sortByColor(a, b) {
    return d3.ascending(b.color, a.color);
}

function sortByOpacity(a, b) {
    return d3.ascending(b.opacity, a.opacity);
}

/**
 * Draw tracks of particles
 * @param nodes
 * @param lastEvent
 * @returns {HTMLCanvasElement|null}
 */
function drawTrack(nodes, lastEvent) {
    if(!nodes || !nodes.length)
        return null;

    if (!trackCtx) {
        trackCanvas = document.createElement("canvas");
        trackCanvas.width = render.size[0];
        trackCanvas.height = render.size[1];

        trackCtx = trackCanvas.getContext('2d');
        trackCtx.lineJoin = "round";
        trackCtx.lineWidth = 1;//(radius(nr(d)) / 4)  || 1;
    }

    trackCtx.save();

    trackCtx.globalCompositeOperation = "destination-out";

    trackCtx.fillStyle = "rgba(0, 0, 0, .2)";
    trackCtx.fillRect(0, 0, render.size[0], render.size[1]);

    trackCtx.globalCompositeOperation = 'source-over';

    trackCtx.translate(lastEvent.translate[0], lastEvent.translate[1]);
    trackCtx.scale(lastEvent.scale, lastEvent.scale);

    var d, l = nodes.length, curColor, c = null;

    trackCtx.fillStyle = "none";

    while(--l > -1) {
        d = nodes[l];

        curColor = getSelectedColor(d);
        if (!c || compereColor(c, curColor)) {
            c = curColor;
            trackCtx.strokeStyle = c.toString();
        }

        if (!d.paths)
            continue;

        trackCtx.beginPath();

        var rs = d.paths.slice(0).reverse()
            , p
            ;

        if (!d.flash && d.paths.length < render.setting.lengthTrack)
            d.paths = [];

        if (d.paths.length > render.setting.lengthTrack)
            d.paths.splice(0, d.flash ? render.setting.lengthTrack : render.setting.lengthTrack + 1);

        trackCtx.moveTo(Math.floor(d.x), Math.floor(d.y));
        for (p in rs) {
            if (!rs.hasOwnProperty(p))
                continue;

            trackCtx.lineTo(
                Math.floor(rs[p].x),
                Math.floor(rs[p].y)
            );
        }
        trackCtx.stroke();

        d.alive && d.parent && (d.flash || d.paths.length > 1) && d.paths.push({
            x : d.x,
            y : d.y
        });
    }

    trackCtx.restore();
    return trackCanvas;
}

render.draw = function(nodes) {

    if (!bufCtx) {
        bufCanvas = document.createElement("canvas");

        bufCtx = bufCanvas.getContext("2d");
        bufCtx.globalCompositeOperation = 'lighter';

        bufCtx.textAlign = "center";
    }

    if (bufCanvas.width !== render.size[0] || bufCanvas.height !== render.size[1]) {
        bufCanvas.width = render.size[0];
        bufCanvas.height = render.size[1];
    }

    var n
        , cn
        , l
        , i
        , img
        , d
        , c
        , x
        , y
        , s
        , currentCache
        , tracksImg
        ;

    bufCtx.save();
    bufCtx.clearRect(0, 0, render.size[0], render.size[1]);

    /*cn = (nodes || [])
        .sort(sortByOpacity)
        .sort(sortByColor);

    tracksImg = drawTrack(cn, lastEvent);
    tracksImg &&
        bufCtx.drawImage(tracksImg, 0, 0, render.size[0], render.size[1]);*/

    /*bufCtx.translate(lastEvent.translate[0], lastEvent.translate[1]);
    bufCtx.scale(lastEvent.scale, lastEvent.scale);*/

    //bufCtx.globalCompositeOperation = 'source-over';

    cn = cn || (nodes || [])
        .sort(sortByOpacity)
        .sort(sortByColor);

    currentCache = neonBallCache;

    /*if (render.setting.compositeOperation
        && bufCtx.globalCompositeOperation != render.setting.compositeOperation)
        bufCtx.globalCompositeOperation = render.setting.compositeOperation;*/

    l = cn.length;
    c = null;
    i = 100;

    bufCtx.strokeStyle = 'none';
    bufCtx.globalAlpha = i * .01;

    while(--l > -1) {
        d = cn[l];

        if (i != d.opacity) {
            i = d.opacity;
            bufCtx.globalAlpha = i * .01;
        }

        if (!c || d.color.r != c.r || d.color.b != c.b || d.color.g != c.g) {
            c = d.color;

            bufCtx.strokeStyle = c.toString();
            img = currentCache.get(bufCtx.strokeStyle);
            if (!img) {
                img = generateNeonBall(64, 64, c.r, c.g, c.b, 1);
                currentCache.set(bufCtx.strokeStyle, img);
            }
        }

        x = Math.floor(d.x);
        y = Math.floor(d.y);
        s = Math.sqrt(+d.size) * 8;

        bufCtx.drawImage(img, x - s / 2, y - s / 2, s, s);
    }

    bufCtx.restore();

    return bufCanvas;
};


render.resize = function(arg) {
    if(!arguments.length)
        return render.size;
    render.size = arg;

    if (bufCanvas) {
        bufCanvas.width = arg[0];
        bufCanvas.height = arg[1];
    }

    if (trackCanvas) {
        trackCanvas.width = arg[0];
        trackCanvas.height = arg[1];
    }
};

/**
 * Generate a neon ball
 * @param {Number} w width
 * @param {Number} h height
 * @param {Number} r red
 * @param {Number} g green
 * @param {Number} b blue
 * @param {Number} a alpha
 * @returns {HTMLCanvasElement}
 */
function generateNeonBall(w, h, r, g, b, a) {

    var tempCanvas = document.createElement("canvas");

    tempCanvas.width = w;
    tempCanvas.height = h;

    var imgCtx = tempCanvas.getContext("2d");
    var gradient = imgCtx.createRadialGradient( w/2, h/2, 0, w/2, h/2, w/2 );

    gradient.addColorStop( 0, 'rgba(255,255,255,' + a + ')' );
    gradient.addColorStop( 0.3, 'rgba(' + [r, g, b, a * .5] + ')' );
    gradient.addColorStop( 1, 'rgba(' + [r, g, b, 0] + ')' ); //0,0,64

    imgCtx.fillStyle = gradient;
    imgCtx.fillRect( 0, 0, w, h);

    return tempCanvas;
}

module.exports = render;
},{"d3":1}],6:[function(require,module,exports){
var d3 = require('d3');

var size = [100, 100]
    , forceChild = d3.layout.force()
        .stop()
        .size(size)
        .friction(.75)
        .gravity(0)
        .charge(function(d) { return -d.size * .064; })
        .on("tick", tick)
        .nodes([])
    ;

function tick() {
    if (forceChild.nodes()) {
        forceChild.nodes()
            .forEach(cluster(0.025));
    }
    forceChild.resume();
}

function cluster(alpha) {

    return function(d) {
        if (!d.parent || !d.visible)
            return;

        var node = d.parent
            , l
            , r
            , x
            , y
            ;

        if (node == d) return;

        x = d.x - node.x;
        y = d.y - node.y;
        l = Math.sqrt(x * x + y * y);
        r = +d.size * .064;
        if (l != r) {
            l = (l - r) / (l || 1) * (alpha || 1);
            x *= l;
            y *= l;

            d.x -= x;
            d.y -= y;
        }
    };
}

module.exports = forceChild;


},{"d3":1}],7:[function(require,module,exports){
var d3 = require('d3');
const delay = 1000;

function asyncForEach(items, fn, time) {
    if (!(items instanceof Array))
        return;

    var workArr = items.concat();

    (function loop() {
        if (workArr.length > 0) {
            fn(workArr.pop(), workArr);
            setTimeout(loop, time || 10);
        }
    })();
}

var pause
    , stop
    , worker
    , tempTimeout
    ;

var processor = {
    killWorker : killWorker
};

var dispatch = d3.dispatch("start", 'stop', 'finish', 'tick', 'calc', 'error', 'filter', 'calcrightbound');

function killWorker() {
    if (worker) {
        clearInterval(worker);
        worker = null;
    }

    if (tempTimeout) {
        clearTimeout(tempTimeout);
        tempTimeout = null;
    }
}

var boundRange = [0, 0];
processor.bounds = function(bounds) {
    if (!arguments.length || !(bounds instanceof Array))
        return boundRange;
    boundRange = bounds;
    return processor;
};

function loop() {

    if (tempTimeout) {
        clearTimeout(tempTimeout);
        tempTimeout = null;
    }

    if (stop) {
        killWorker();
        return;
    }

    if (pause)
        return;

    var dl, dr;

    dl = processor.leftBound = boundRange[0];
    dispatch.calcrightbound.call(processor, dl);
    dr = boundRange[0] = processor.leftBound;

    dispatch.filter.call(processor, dl, dr);

    var visTurn = processor.items;

    visTurn && visTurn.length && asyncForEach(visTurn, dispatch.calc, delay / (visTurn.length || delay));

    dispatch.tick.call(processor, visTurn, dl, dr);

    if (dl > boundRange[1]) {
        killWorker();
        dispatch.finish.call(processor, dl, dr);
    } else {
        if (!visTurn || !visTurn.length) {
            //loop();
            tempTimeout = setTimeout(loop, 1);
        }
    }
}

processor.start = function() {
    stop = pause = false;
    killWorker();

    dispatch.start.call(processor);

    worker = setInterval(loop, delay);
    return processor;
};

processor.pause = function() {
    pause = true;
    return processor;
};

processor.stop = function() {
    stop = true;
    killWorker();
    dispatch.stop.call(processor);
    return processor;
};

processor.resume = function() {
    pause = false;
    return processor;
};

/**
 * Check that process is paused
 * @returns {boolean}
 */
processor.IsPaused = function() {
    return worker && pause && !stop;
};

/**
 * Check that process is running
 * @returns {boolean}
 */
processor.IsRun = function() {
    return !!worker;
};

d3.rebind(processor, dispatch, 'on');

module.exports = processor;

},{"d3":1}]},{},[3])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlcyI6WyJOOlxcRHJvcGJveFxccHJvamVjdHNcXGFydHp1Yi5jb21cXEdBVlxcbm9kZV9tb2R1bGVzXFxndWxwLWJyb3dzZXJpZnlcXG5vZGVfbW9kdWxlc1xcYnJvd3NlcmlmeVxcbm9kZV9tb2R1bGVzXFxicm93c2VyLXBhY2tcXF9wcmVsdWRlLmpzIiwiTjovRHJvcGJveC9wcm9qZWN0cy9hcnR6dWIuY29tL0dBVi9ub2RlX21vZHVsZXMvZDMvZDMuanMiLCJOOi9Ecm9wYm94L3Byb2plY3RzL2FydHp1Yi5jb20vR0FWL3NjcmlwdHMvZGF0YS5qcyIsIk46L0Ryb3Bib3gvcHJvamVjdHMvYXJ0enViLmNvbS9HQVYvc2NyaXB0cy9mYWtlX2I5M2IzMDUwLmpzIiwiTjovRHJvcGJveC9wcm9qZWN0cy9hcnR6dWIuY29tL0dBVi9zY3JpcHRzL2dhYXBpLmpzIiwiTjovRHJvcGJveC9wcm9qZWN0cy9hcnR6dWIuY29tL0dBVi9zY3JpcHRzL2dyYXBoaWMuanMiLCJOOi9Ecm9wYm94L3Byb2plY3RzL2FydHp1Yi5jb20vR0FWL3NjcmlwdHMvcGh5c2ljcy5qcyIsIk46L0Ryb3Bib3gvcHJvamVjdHMvYXJ0enViLmNvbS9HQVYvc2NyaXB0cy9wcm9jZXNzb3IuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDdGlTQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNwaENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3RZQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNqUkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDNVBBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNyREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3Rocm93IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIil9dmFyIGY9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGYuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sZixmLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIiFmdW5jdGlvbigpIHtcbiAgdmFyIGQzID0ge1xuICAgIHZlcnNpb246IFwiMy40LjhcIlxuICB9O1xuICBpZiAoIURhdGUubm93KSBEYXRlLm5vdyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiArbmV3IERhdGUoKTtcbiAgfTtcbiAgdmFyIGQzX2FycmF5U2xpY2UgPSBbXS5zbGljZSwgZDNfYXJyYXkgPSBmdW5jdGlvbihsaXN0KSB7XG4gICAgcmV0dXJuIGQzX2FycmF5U2xpY2UuY2FsbChsaXN0KTtcbiAgfTtcbiAgdmFyIGQzX2RvY3VtZW50ID0gZG9jdW1lbnQsIGQzX2RvY3VtZW50RWxlbWVudCA9IGQzX2RvY3VtZW50LmRvY3VtZW50RWxlbWVudCwgZDNfd2luZG93ID0gd2luZG93O1xuICB0cnkge1xuICAgIGQzX2FycmF5KGQzX2RvY3VtZW50RWxlbWVudC5jaGlsZE5vZGVzKVswXS5ub2RlVHlwZTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGQzX2FycmF5ID0gZnVuY3Rpb24obGlzdCkge1xuICAgICAgdmFyIGkgPSBsaXN0Lmxlbmd0aCwgYXJyYXkgPSBuZXcgQXJyYXkoaSk7XG4gICAgICB3aGlsZSAoaS0tKSBhcnJheVtpXSA9IGxpc3RbaV07XG4gICAgICByZXR1cm4gYXJyYXk7XG4gICAgfTtcbiAgfVxuICB0cnkge1xuICAgIGQzX2RvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUuc2V0UHJvcGVydHkoXCJvcGFjaXR5XCIsIDAsIFwiXCIpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHZhciBkM19lbGVtZW50X3Byb3RvdHlwZSA9IGQzX3dpbmRvdy5FbGVtZW50LnByb3RvdHlwZSwgZDNfZWxlbWVudF9zZXRBdHRyaWJ1dGUgPSBkM19lbGVtZW50X3Byb3RvdHlwZS5zZXRBdHRyaWJ1dGUsIGQzX2VsZW1lbnRfc2V0QXR0cmlidXRlTlMgPSBkM19lbGVtZW50X3Byb3RvdHlwZS5zZXRBdHRyaWJ1dGVOUywgZDNfc3R5bGVfcHJvdG90eXBlID0gZDNfd2luZG93LkNTU1N0eWxlRGVjbGFyYXRpb24ucHJvdG90eXBlLCBkM19zdHlsZV9zZXRQcm9wZXJ0eSA9IGQzX3N0eWxlX3Byb3RvdHlwZS5zZXRQcm9wZXJ0eTtcbiAgICBkM19lbGVtZW50X3Byb3RvdHlwZS5zZXRBdHRyaWJ1dGUgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgICAgZDNfZWxlbWVudF9zZXRBdHRyaWJ1dGUuY2FsbCh0aGlzLCBuYW1lLCB2YWx1ZSArIFwiXCIpO1xuICAgIH07XG4gICAgZDNfZWxlbWVudF9wcm90b3R5cGUuc2V0QXR0cmlidXRlTlMgPSBmdW5jdGlvbihzcGFjZSwgbG9jYWwsIHZhbHVlKSB7XG4gICAgICBkM19lbGVtZW50X3NldEF0dHJpYnV0ZU5TLmNhbGwodGhpcywgc3BhY2UsIGxvY2FsLCB2YWx1ZSArIFwiXCIpO1xuICAgIH07XG4gICAgZDNfc3R5bGVfcHJvdG90eXBlLnNldFByb3BlcnR5ID0gZnVuY3Rpb24obmFtZSwgdmFsdWUsIHByaW9yaXR5KSB7XG4gICAgICBkM19zdHlsZV9zZXRQcm9wZXJ0eS5jYWxsKHRoaXMsIG5hbWUsIHZhbHVlICsgXCJcIiwgcHJpb3JpdHkpO1xuICAgIH07XG4gIH1cbiAgZDMuYXNjZW5kaW5nID0gZDNfYXNjZW5kaW5nO1xuICBmdW5jdGlvbiBkM19hc2NlbmRpbmcoYSwgYikge1xuICAgIHJldHVybiBhIDwgYiA/IC0xIDogYSA+IGIgPyAxIDogYSA+PSBiID8gMCA6IE5hTjtcbiAgfVxuICBkMy5kZXNjZW5kaW5nID0gZnVuY3Rpb24oYSwgYikge1xuICAgIHJldHVybiBiIDwgYSA/IC0xIDogYiA+IGEgPyAxIDogYiA+PSBhID8gMCA6IE5hTjtcbiAgfTtcbiAgZDMubWluID0gZnVuY3Rpb24oYXJyYXksIGYpIHtcbiAgICB2YXIgaSA9IC0xLCBuID0gYXJyYXkubGVuZ3RoLCBhLCBiO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgICB3aGlsZSAoKytpIDwgbiAmJiAhKChhID0gYXJyYXlbaV0pICE9IG51bGwgJiYgYSA8PSBhKSkgYSA9IHVuZGVmaW5lZDtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoKGIgPSBhcnJheVtpXSkgIT0gbnVsbCAmJiBhID4gYikgYSA9IGI7XG4gICAgfSBlbHNlIHtcbiAgICAgIHdoaWxlICgrK2kgPCBuICYmICEoKGEgPSBmLmNhbGwoYXJyYXksIGFycmF5W2ldLCBpKSkgIT0gbnVsbCAmJiBhIDw9IGEpKSBhID0gdW5kZWZpbmVkO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICgoYiA9IGYuY2FsbChhcnJheSwgYXJyYXlbaV0sIGkpKSAhPSBudWxsICYmIGEgPiBiKSBhID0gYjtcbiAgICB9XG4gICAgcmV0dXJuIGE7XG4gIH07XG4gIGQzLm1heCA9IGZ1bmN0aW9uKGFycmF5LCBmKSB7XG4gICAgdmFyIGkgPSAtMSwgbiA9IGFycmF5Lmxlbmd0aCwgYSwgYjtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgd2hpbGUgKCsraSA8IG4gJiYgISgoYSA9IGFycmF5W2ldKSAhPSBudWxsICYmIGEgPD0gYSkpIGEgPSB1bmRlZmluZWQ7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKChiID0gYXJyYXlbaV0pICE9IG51bGwgJiYgYiA+IGEpIGEgPSBiO1xuICAgIH0gZWxzZSB7XG4gICAgICB3aGlsZSAoKytpIDwgbiAmJiAhKChhID0gZi5jYWxsKGFycmF5LCBhcnJheVtpXSwgaSkpICE9IG51bGwgJiYgYSA8PSBhKSkgYSA9IHVuZGVmaW5lZDtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoKGIgPSBmLmNhbGwoYXJyYXksIGFycmF5W2ldLCBpKSkgIT0gbnVsbCAmJiBiID4gYSkgYSA9IGI7XG4gICAgfVxuICAgIHJldHVybiBhO1xuICB9O1xuICBkMy5leHRlbnQgPSBmdW5jdGlvbihhcnJheSwgZikge1xuICAgIHZhciBpID0gLTEsIG4gPSBhcnJheS5sZW5ndGgsIGEsIGIsIGM7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICAgIHdoaWxlICgrK2kgPCBuICYmICEoKGEgPSBjID0gYXJyYXlbaV0pICE9IG51bGwgJiYgYSA8PSBhKSkgYSA9IGMgPSB1bmRlZmluZWQ7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKChiID0gYXJyYXlbaV0pICE9IG51bGwpIHtcbiAgICAgICAgaWYgKGEgPiBiKSBhID0gYjtcbiAgICAgICAgaWYgKGMgPCBiKSBjID0gYjtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgd2hpbGUgKCsraSA8IG4gJiYgISgoYSA9IGMgPSBmLmNhbGwoYXJyYXksIGFycmF5W2ldLCBpKSkgIT0gbnVsbCAmJiBhIDw9IGEpKSBhID0gdW5kZWZpbmVkO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICgoYiA9IGYuY2FsbChhcnJheSwgYXJyYXlbaV0sIGkpKSAhPSBudWxsKSB7XG4gICAgICAgIGlmIChhID4gYikgYSA9IGI7XG4gICAgICAgIGlmIChjIDwgYikgYyA9IGI7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBbIGEsIGMgXTtcbiAgfTtcbiAgZDMuc3VtID0gZnVuY3Rpb24oYXJyYXksIGYpIHtcbiAgICB2YXIgcyA9IDAsIG4gPSBhcnJheS5sZW5ndGgsIGEsIGkgPSAtMTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICghaXNOYU4oYSA9ICthcnJheVtpXSkpIHMgKz0gYTtcbiAgICB9IGVsc2Uge1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGlmICghaXNOYU4oYSA9ICtmLmNhbGwoYXJyYXksIGFycmF5W2ldLCBpKSkpIHMgKz0gYTtcbiAgICB9XG4gICAgcmV0dXJuIHM7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX251bWJlcih4KSB7XG4gICAgcmV0dXJuIHggIT0gbnVsbCAmJiAhaXNOYU4oeCk7XG4gIH1cbiAgZDMubWVhbiA9IGZ1bmN0aW9uKGFycmF5LCBmKSB7XG4gICAgdmFyIHMgPSAwLCBuID0gYXJyYXkubGVuZ3RoLCBhLCBpID0gLTEsIGogPSBuO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKGQzX251bWJlcihhID0gYXJyYXlbaV0pKSBzICs9IGE7IGVsc2UgLS1qO1xuICAgIH0gZWxzZSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKGQzX251bWJlcihhID0gZi5jYWxsKGFycmF5LCBhcnJheVtpXSwgaSkpKSBzICs9IGE7IGVsc2UgLS1qO1xuICAgIH1cbiAgICByZXR1cm4gaiA/IHMgLyBqIDogdW5kZWZpbmVkO1xuICB9O1xuICBkMy5xdWFudGlsZSA9IGZ1bmN0aW9uKHZhbHVlcywgcCkge1xuICAgIHZhciBIID0gKHZhbHVlcy5sZW5ndGggLSAxKSAqIHAgKyAxLCBoID0gTWF0aC5mbG9vcihIKSwgdiA9ICt2YWx1ZXNbaCAtIDFdLCBlID0gSCAtIGg7XG4gICAgcmV0dXJuIGUgPyB2ICsgZSAqICh2YWx1ZXNbaF0gLSB2KSA6IHY7XG4gIH07XG4gIGQzLm1lZGlhbiA9IGZ1bmN0aW9uKGFycmF5LCBmKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSBhcnJheSA9IGFycmF5Lm1hcChmKTtcbiAgICBhcnJheSA9IGFycmF5LmZpbHRlcihkM19udW1iZXIpO1xuICAgIHJldHVybiBhcnJheS5sZW5ndGggPyBkMy5xdWFudGlsZShhcnJheS5zb3J0KGQzX2FzY2VuZGluZyksIC41KSA6IHVuZGVmaW5lZDtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfYmlzZWN0b3IoY29tcGFyZSkge1xuICAgIHJldHVybiB7XG4gICAgICBsZWZ0OiBmdW5jdGlvbihhLCB4LCBsbywgaGkpIHtcbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAzKSBsbyA9IDA7XG4gICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgNCkgaGkgPSBhLmxlbmd0aDtcbiAgICAgICAgd2hpbGUgKGxvIDwgaGkpIHtcbiAgICAgICAgICB2YXIgbWlkID0gbG8gKyBoaSA+Pj4gMTtcbiAgICAgICAgICBpZiAoY29tcGFyZShhW21pZF0sIHgpIDwgMCkgbG8gPSBtaWQgKyAxOyBlbHNlIGhpID0gbWlkO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBsbztcbiAgICAgIH0sXG4gICAgICByaWdodDogZnVuY3Rpb24oYSwgeCwgbG8sIGhpKSB7XG4gICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMykgbG8gPSAwO1xuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDQpIGhpID0gYS5sZW5ndGg7XG4gICAgICAgIHdoaWxlIChsbyA8IGhpKSB7XG4gICAgICAgICAgdmFyIG1pZCA9IGxvICsgaGkgPj4+IDE7XG4gICAgICAgICAgaWYgKGNvbXBhcmUoYVttaWRdLCB4KSA+IDApIGhpID0gbWlkOyBlbHNlIGxvID0gbWlkICsgMTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbG87XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICB2YXIgZDNfYmlzZWN0ID0gZDNfYmlzZWN0b3IoZDNfYXNjZW5kaW5nKTtcbiAgZDMuYmlzZWN0TGVmdCA9IGQzX2Jpc2VjdC5sZWZ0O1xuICBkMy5iaXNlY3QgPSBkMy5iaXNlY3RSaWdodCA9IGQzX2Jpc2VjdC5yaWdodDtcbiAgZDMuYmlzZWN0b3IgPSBmdW5jdGlvbihmKSB7XG4gICAgcmV0dXJuIGQzX2Jpc2VjdG9yKGYubGVuZ3RoID09PSAxID8gZnVuY3Rpb24oZCwgeCkge1xuICAgICAgcmV0dXJuIGQzX2FzY2VuZGluZyhmKGQpLCB4KTtcbiAgICB9IDogZik7XG4gIH07XG4gIGQzLnNodWZmbGUgPSBmdW5jdGlvbihhcnJheSkge1xuICAgIHZhciBtID0gYXJyYXkubGVuZ3RoLCB0LCBpO1xuICAgIHdoaWxlIChtKSB7XG4gICAgICBpID0gTWF0aC5yYW5kb20oKSAqIG0tLSB8IDA7XG4gICAgICB0ID0gYXJyYXlbbV0sIGFycmF5W21dID0gYXJyYXlbaV0sIGFycmF5W2ldID0gdDtcbiAgICB9XG4gICAgcmV0dXJuIGFycmF5O1xuICB9O1xuICBkMy5wZXJtdXRlID0gZnVuY3Rpb24oYXJyYXksIGluZGV4ZXMpIHtcbiAgICB2YXIgaSA9IGluZGV4ZXMubGVuZ3RoLCBwZXJtdXRlcyA9IG5ldyBBcnJheShpKTtcbiAgICB3aGlsZSAoaS0tKSBwZXJtdXRlc1tpXSA9IGFycmF5W2luZGV4ZXNbaV1dO1xuICAgIHJldHVybiBwZXJtdXRlcztcbiAgfTtcbiAgZDMucGFpcnMgPSBmdW5jdGlvbihhcnJheSkge1xuICAgIHZhciBpID0gMCwgbiA9IGFycmF5Lmxlbmd0aCAtIDEsIHAwLCBwMSA9IGFycmF5WzBdLCBwYWlycyA9IG5ldyBBcnJheShuIDwgMCA/IDAgOiBuKTtcbiAgICB3aGlsZSAoaSA8IG4pIHBhaXJzW2ldID0gWyBwMCA9IHAxLCBwMSA9IGFycmF5WysraV0gXTtcbiAgICByZXR1cm4gcGFpcnM7XG4gIH07XG4gIGQzLnppcCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmICghKG4gPSBhcmd1bWVudHMubGVuZ3RoKSkgcmV0dXJuIFtdO1xuICAgIGZvciAodmFyIGkgPSAtMSwgbSA9IGQzLm1pbihhcmd1bWVudHMsIGQzX3ppcExlbmd0aCksIHppcHMgPSBuZXcgQXJyYXkobSk7ICsraSA8IG07ICkge1xuICAgICAgZm9yICh2YXIgaiA9IC0xLCBuLCB6aXAgPSB6aXBzW2ldID0gbmV3IEFycmF5KG4pOyArK2ogPCBuOyApIHtcbiAgICAgICAgemlwW2pdID0gYXJndW1lbnRzW2pdW2ldO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gemlwcztcbiAgfTtcbiAgZnVuY3Rpb24gZDNfemlwTGVuZ3RoKGQpIHtcbiAgICByZXR1cm4gZC5sZW5ndGg7XG4gIH1cbiAgZDMudHJhbnNwb3NlID0gZnVuY3Rpb24obWF0cml4KSB7XG4gICAgcmV0dXJuIGQzLnppcC5hcHBseShkMywgbWF0cml4KTtcbiAgfTtcbiAgZDMua2V5cyA9IGZ1bmN0aW9uKG1hcCkge1xuICAgIHZhciBrZXlzID0gW107XG4gICAgZm9yICh2YXIga2V5IGluIG1hcCkga2V5cy5wdXNoKGtleSk7XG4gICAgcmV0dXJuIGtleXM7XG4gIH07XG4gIGQzLnZhbHVlcyA9IGZ1bmN0aW9uKG1hcCkge1xuICAgIHZhciB2YWx1ZXMgPSBbXTtcbiAgICBmb3IgKHZhciBrZXkgaW4gbWFwKSB2YWx1ZXMucHVzaChtYXBba2V5XSk7XG4gICAgcmV0dXJuIHZhbHVlcztcbiAgfTtcbiAgZDMuZW50cmllcyA9IGZ1bmN0aW9uKG1hcCkge1xuICAgIHZhciBlbnRyaWVzID0gW107XG4gICAgZm9yICh2YXIga2V5IGluIG1hcCkgZW50cmllcy5wdXNoKHtcbiAgICAgIGtleToga2V5LFxuICAgICAgdmFsdWU6IG1hcFtrZXldXG4gICAgfSk7XG4gICAgcmV0dXJuIGVudHJpZXM7XG4gIH07XG4gIGQzLm1lcmdlID0gZnVuY3Rpb24oYXJyYXlzKSB7XG4gICAgdmFyIG4gPSBhcnJheXMubGVuZ3RoLCBtLCBpID0gLTEsIGogPSAwLCBtZXJnZWQsIGFycmF5O1xuICAgIHdoaWxlICgrK2kgPCBuKSBqICs9IGFycmF5c1tpXS5sZW5ndGg7XG4gICAgbWVyZ2VkID0gbmV3IEFycmF5KGopO1xuICAgIHdoaWxlICgtLW4gPj0gMCkge1xuICAgICAgYXJyYXkgPSBhcnJheXNbbl07XG4gICAgICBtID0gYXJyYXkubGVuZ3RoO1xuICAgICAgd2hpbGUgKC0tbSA+PSAwKSB7XG4gICAgICAgIG1lcmdlZFstLWpdID0gYXJyYXlbbV07XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBtZXJnZWQ7XG4gIH07XG4gIHZhciBhYnMgPSBNYXRoLmFicztcbiAgZDMucmFuZ2UgPSBmdW5jdGlvbihzdGFydCwgc3RvcCwgc3RlcCkge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMykge1xuICAgICAgc3RlcCA9IDE7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgc3RvcCA9IHN0YXJ0O1xuICAgICAgICBzdGFydCA9IDA7XG4gICAgICB9XG4gICAgfVxuICAgIGlmICgoc3RvcCAtIHN0YXJ0KSAvIHN0ZXAgPT09IEluZmluaXR5KSB0aHJvdyBuZXcgRXJyb3IoXCJpbmZpbml0ZSByYW5nZVwiKTtcbiAgICB2YXIgcmFuZ2UgPSBbXSwgayA9IGQzX3JhbmdlX2ludGVnZXJTY2FsZShhYnMoc3RlcCkpLCBpID0gLTEsIGo7XG4gICAgc3RhcnQgKj0gaywgc3RvcCAqPSBrLCBzdGVwICo9IGs7XG4gICAgaWYgKHN0ZXAgPCAwKSB3aGlsZSAoKGogPSBzdGFydCArIHN0ZXAgKiArK2kpID4gc3RvcCkgcmFuZ2UucHVzaChqIC8gayk7IGVsc2Ugd2hpbGUgKChqID0gc3RhcnQgKyBzdGVwICogKytpKSA8IHN0b3ApIHJhbmdlLnB1c2goaiAvIGspO1xuICAgIHJldHVybiByYW5nZTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfcmFuZ2VfaW50ZWdlclNjYWxlKHgpIHtcbiAgICB2YXIgayA9IDE7XG4gICAgd2hpbGUgKHggKiBrICUgMSkgayAqPSAxMDtcbiAgICByZXR1cm4gaztcbiAgfVxuICBmdW5jdGlvbiBkM19jbGFzcyhjdG9yLCBwcm9wZXJ0aWVzKSB7XG4gICAgdHJ5IHtcbiAgICAgIGZvciAodmFyIGtleSBpbiBwcm9wZXJ0aWVzKSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjdG9yLnByb3RvdHlwZSwga2V5LCB7XG4gICAgICAgICAgdmFsdWU6IHByb3BlcnRpZXNba2V5XSxcbiAgICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjdG9yLnByb3RvdHlwZSA9IHByb3BlcnRpZXM7XG4gICAgfVxuICB9XG4gIGQzLm1hcCA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHZhciBtYXAgPSBuZXcgZDNfTWFwKCk7XG4gICAgaWYgKG9iamVjdCBpbnN0YW5jZW9mIGQzX01hcCkgb2JqZWN0LmZvckVhY2goZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgICAgbWFwLnNldChrZXksIHZhbHVlKTtcbiAgICB9KTsgZWxzZSBmb3IgKHZhciBrZXkgaW4gb2JqZWN0KSBtYXAuc2V0KGtleSwgb2JqZWN0W2tleV0pO1xuICAgIHJldHVybiBtYXA7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX01hcCgpIHt9XG4gIGQzX2NsYXNzKGQzX01hcCwge1xuICAgIGhhczogZDNfbWFwX2hhcyxcbiAgICBnZXQ6IGZ1bmN0aW9uKGtleSkge1xuICAgICAgcmV0dXJuIHRoaXNbZDNfbWFwX3ByZWZpeCArIGtleV07XG4gICAgfSxcbiAgICBzZXQ6IGZ1bmN0aW9uKGtleSwgdmFsdWUpIHtcbiAgICAgIHJldHVybiB0aGlzW2QzX21hcF9wcmVmaXggKyBrZXldID0gdmFsdWU7XG4gICAgfSxcbiAgICByZW1vdmU6IGQzX21hcF9yZW1vdmUsXG4gICAga2V5czogZDNfbWFwX2tleXMsXG4gICAgdmFsdWVzOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB2YWx1ZXMgPSBbXTtcbiAgICAgIHRoaXMuZm9yRWFjaChmdW5jdGlvbihrZXksIHZhbHVlKSB7XG4gICAgICAgIHZhbHVlcy5wdXNoKHZhbHVlKTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHZhbHVlcztcbiAgICB9LFxuICAgIGVudHJpZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIGVudHJpZXMgPSBbXTtcbiAgICAgIHRoaXMuZm9yRWFjaChmdW5jdGlvbihrZXksIHZhbHVlKSB7XG4gICAgICAgIGVudHJpZXMucHVzaCh7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgdmFsdWU6IHZhbHVlXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gZW50cmllcztcbiAgICB9LFxuICAgIHNpemU6IGQzX21hcF9zaXplLFxuICAgIGVtcHR5OiBkM19tYXBfZW1wdHksXG4gICAgZm9yRWFjaDogZnVuY3Rpb24oZikge1xuICAgICAgZm9yICh2YXIga2V5IGluIHRoaXMpIGlmIChrZXkuY2hhckNvZGVBdCgwKSA9PT0gZDNfbWFwX3ByZWZpeENvZGUpIGYuY2FsbCh0aGlzLCBrZXkuc3Vic3RyaW5nKDEpLCB0aGlzW2tleV0pO1xuICAgIH1cbiAgfSk7XG4gIHZhciBkM19tYXBfcHJlZml4ID0gXCJcXHgwMFwiLCBkM19tYXBfcHJlZml4Q29kZSA9IGQzX21hcF9wcmVmaXguY2hhckNvZGVBdCgwKTtcbiAgZnVuY3Rpb24gZDNfbWFwX2hhcyhrZXkpIHtcbiAgICByZXR1cm4gZDNfbWFwX3ByZWZpeCArIGtleSBpbiB0aGlzO1xuICB9XG4gIGZ1bmN0aW9uIGQzX21hcF9yZW1vdmUoa2V5KSB7XG4gICAga2V5ID0gZDNfbWFwX3ByZWZpeCArIGtleTtcbiAgICByZXR1cm4ga2V5IGluIHRoaXMgJiYgZGVsZXRlIHRoaXNba2V5XTtcbiAgfVxuICBmdW5jdGlvbiBkM19tYXBfa2V5cygpIHtcbiAgICB2YXIga2V5cyA9IFtdO1xuICAgIHRoaXMuZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcbiAgICAgIGtleXMucHVzaChrZXkpO1xuICAgIH0pO1xuICAgIHJldHVybiBrZXlzO1xuICB9XG4gIGZ1bmN0aW9uIGQzX21hcF9zaXplKCkge1xuICAgIHZhciBzaXplID0gMDtcbiAgICBmb3IgKHZhciBrZXkgaW4gdGhpcykgaWYgKGtleS5jaGFyQ29kZUF0KDApID09PSBkM19tYXBfcHJlZml4Q29kZSkgKytzaXplO1xuICAgIHJldHVybiBzaXplO1xuICB9XG4gIGZ1bmN0aW9uIGQzX21hcF9lbXB0eSgpIHtcbiAgICBmb3IgKHZhciBrZXkgaW4gdGhpcykgaWYgKGtleS5jaGFyQ29kZUF0KDApID09PSBkM19tYXBfcHJlZml4Q29kZSkgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIGQzLm5lc3QgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbmVzdCA9IHt9LCBrZXlzID0gW10sIHNvcnRLZXlzID0gW10sIHNvcnRWYWx1ZXMsIHJvbGx1cDtcbiAgICBmdW5jdGlvbiBtYXAobWFwVHlwZSwgYXJyYXksIGRlcHRoKSB7XG4gICAgICBpZiAoZGVwdGggPj0ga2V5cy5sZW5ndGgpIHJldHVybiByb2xsdXAgPyByb2xsdXAuY2FsbChuZXN0LCBhcnJheSkgOiBzb3J0VmFsdWVzID8gYXJyYXkuc29ydChzb3J0VmFsdWVzKSA6IGFycmF5O1xuICAgICAgdmFyIGkgPSAtMSwgbiA9IGFycmF5Lmxlbmd0aCwga2V5ID0ga2V5c1tkZXB0aCsrXSwga2V5VmFsdWUsIG9iamVjdCwgc2V0dGVyLCB2YWx1ZXNCeUtleSA9IG5ldyBkM19NYXAoKSwgdmFsdWVzO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgaWYgKHZhbHVlcyA9IHZhbHVlc0J5S2V5LmdldChrZXlWYWx1ZSA9IGtleShvYmplY3QgPSBhcnJheVtpXSkpKSB7XG4gICAgICAgICAgdmFsdWVzLnB1c2gob2JqZWN0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2YWx1ZXNCeUtleS5zZXQoa2V5VmFsdWUsIFsgb2JqZWN0IF0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWFwVHlwZSkge1xuICAgICAgICBvYmplY3QgPSBtYXBUeXBlKCk7XG4gICAgICAgIHNldHRlciA9IGZ1bmN0aW9uKGtleVZhbHVlLCB2YWx1ZXMpIHtcbiAgICAgICAgICBvYmplY3Quc2V0KGtleVZhbHVlLCBtYXAobWFwVHlwZSwgdmFsdWVzLCBkZXB0aCkpO1xuICAgICAgICB9O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb2JqZWN0ID0ge307XG4gICAgICAgIHNldHRlciA9IGZ1bmN0aW9uKGtleVZhbHVlLCB2YWx1ZXMpIHtcbiAgICAgICAgICBvYmplY3Rba2V5VmFsdWVdID0gbWFwKG1hcFR5cGUsIHZhbHVlcywgZGVwdGgpO1xuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgdmFsdWVzQnlLZXkuZm9yRWFjaChzZXR0ZXIpO1xuICAgICAgcmV0dXJuIG9iamVjdDtcbiAgICB9XG4gICAgZnVuY3Rpb24gZW50cmllcyhtYXAsIGRlcHRoKSB7XG4gICAgICBpZiAoZGVwdGggPj0ga2V5cy5sZW5ndGgpIHJldHVybiBtYXA7XG4gICAgICB2YXIgYXJyYXkgPSBbXSwgc29ydEtleSA9IHNvcnRLZXlzW2RlcHRoKytdO1xuICAgICAgbWFwLmZvckVhY2goZnVuY3Rpb24oa2V5LCBrZXlNYXApIHtcbiAgICAgICAgYXJyYXkucHVzaCh7XG4gICAgICAgICAga2V5OiBrZXksXG4gICAgICAgICAgdmFsdWVzOiBlbnRyaWVzKGtleU1hcCwgZGVwdGgpXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gc29ydEtleSA/IGFycmF5LnNvcnQoZnVuY3Rpb24oYSwgYikge1xuICAgICAgICByZXR1cm4gc29ydEtleShhLmtleSwgYi5rZXkpO1xuICAgICAgfSkgOiBhcnJheTtcbiAgICB9XG4gICAgbmVzdC5tYXAgPSBmdW5jdGlvbihhcnJheSwgbWFwVHlwZSkge1xuICAgICAgcmV0dXJuIG1hcChtYXBUeXBlLCBhcnJheSwgMCk7XG4gICAgfTtcbiAgICBuZXN0LmVudHJpZXMgPSBmdW5jdGlvbihhcnJheSkge1xuICAgICAgcmV0dXJuIGVudHJpZXMobWFwKGQzLm1hcCwgYXJyYXksIDApLCAwKTtcbiAgICB9O1xuICAgIG5lc3Qua2V5ID0gZnVuY3Rpb24oZCkge1xuICAgICAga2V5cy5wdXNoKGQpO1xuICAgICAgcmV0dXJuIG5lc3Q7XG4gICAgfTtcbiAgICBuZXN0LnNvcnRLZXlzID0gZnVuY3Rpb24ob3JkZXIpIHtcbiAgICAgIHNvcnRLZXlzW2tleXMubGVuZ3RoIC0gMV0gPSBvcmRlcjtcbiAgICAgIHJldHVybiBuZXN0O1xuICAgIH07XG4gICAgbmVzdC5zb3J0VmFsdWVzID0gZnVuY3Rpb24ob3JkZXIpIHtcbiAgICAgIHNvcnRWYWx1ZXMgPSBvcmRlcjtcbiAgICAgIHJldHVybiBuZXN0O1xuICAgIH07XG4gICAgbmVzdC5yb2xsdXAgPSBmdW5jdGlvbihmKSB7XG4gICAgICByb2xsdXAgPSBmO1xuICAgICAgcmV0dXJuIG5lc3Q7XG4gICAgfTtcbiAgICByZXR1cm4gbmVzdDtcbiAgfTtcbiAgZDMuc2V0ID0gZnVuY3Rpb24oYXJyYXkpIHtcbiAgICB2YXIgc2V0ID0gbmV3IGQzX1NldCgpO1xuICAgIGlmIChhcnJheSkgZm9yICh2YXIgaSA9IDAsIG4gPSBhcnJheS5sZW5ndGg7IGkgPCBuOyArK2kpIHNldC5hZGQoYXJyYXlbaV0pO1xuICAgIHJldHVybiBzZXQ7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX1NldCgpIHt9XG4gIGQzX2NsYXNzKGQzX1NldCwge1xuICAgIGhhczogZDNfbWFwX2hhcyxcbiAgICBhZGQ6IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICB0aGlzW2QzX21hcF9wcmVmaXggKyB2YWx1ZV0gPSB0cnVlO1xuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH0sXG4gICAgcmVtb3ZlOiBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgdmFsdWUgPSBkM19tYXBfcHJlZml4ICsgdmFsdWU7XG4gICAgICByZXR1cm4gdmFsdWUgaW4gdGhpcyAmJiBkZWxldGUgdGhpc1t2YWx1ZV07XG4gICAgfSxcbiAgICB2YWx1ZXM6IGQzX21hcF9rZXlzLFxuICAgIHNpemU6IGQzX21hcF9zaXplLFxuICAgIGVtcHR5OiBkM19tYXBfZW1wdHksXG4gICAgZm9yRWFjaDogZnVuY3Rpb24oZikge1xuICAgICAgZm9yICh2YXIgdmFsdWUgaW4gdGhpcykgaWYgKHZhbHVlLmNoYXJDb2RlQXQoMCkgPT09IGQzX21hcF9wcmVmaXhDb2RlKSBmLmNhbGwodGhpcywgdmFsdWUuc3Vic3RyaW5nKDEpKTtcbiAgICB9XG4gIH0pO1xuICBkMy5iZWhhdmlvciA9IHt9O1xuICBkMy5yZWJpbmQgPSBmdW5jdGlvbih0YXJnZXQsIHNvdXJjZSkge1xuICAgIHZhciBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGgsIG1ldGhvZDtcbiAgICB3aGlsZSAoKytpIDwgbikgdGFyZ2V0W21ldGhvZCA9IGFyZ3VtZW50c1tpXV0gPSBkM19yZWJpbmQodGFyZ2V0LCBzb3VyY2UsIHNvdXJjZVttZXRob2RdKTtcbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9O1xuICBmdW5jdGlvbiBkM19yZWJpbmQodGFyZ2V0LCBzb3VyY2UsIG1ldGhvZCkge1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB2YWx1ZSA9IG1ldGhvZC5hcHBseShzb3VyY2UsIGFyZ3VtZW50cyk7XG4gICAgICByZXR1cm4gdmFsdWUgPT09IHNvdXJjZSA/IHRhcmdldCA6IHZhbHVlO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfdmVuZG9yU3ltYm9sKG9iamVjdCwgbmFtZSkge1xuICAgIGlmIChuYW1lIGluIG9iamVjdCkgcmV0dXJuIG5hbWU7XG4gICAgbmFtZSA9IG5hbWUuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBuYW1lLnN1YnN0cmluZygxKTtcbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IGQzX3ZlbmRvclByZWZpeGVzLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgdmFyIHByZWZpeE5hbWUgPSBkM192ZW5kb3JQcmVmaXhlc1tpXSArIG5hbWU7XG4gICAgICBpZiAocHJlZml4TmFtZSBpbiBvYmplY3QpIHJldHVybiBwcmVmaXhOYW1lO1xuICAgIH1cbiAgfVxuICB2YXIgZDNfdmVuZG9yUHJlZml4ZXMgPSBbIFwid2Via2l0XCIsIFwibXNcIiwgXCJtb3pcIiwgXCJNb3pcIiwgXCJvXCIsIFwiT1wiIF07XG4gIGZ1bmN0aW9uIGQzX25vb3AoKSB7fVxuICBkMy5kaXNwYXRjaCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBkaXNwYXRjaCA9IG5ldyBkM19kaXNwYXRjaCgpLCBpID0gLTEsIG4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBkaXNwYXRjaFthcmd1bWVudHNbaV1dID0gZDNfZGlzcGF0Y2hfZXZlbnQoZGlzcGF0Y2gpO1xuICAgIHJldHVybiBkaXNwYXRjaDtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZGlzcGF0Y2goKSB7fVxuICBkM19kaXNwYXRjaC5wcm90b3R5cGUub24gPSBmdW5jdGlvbih0eXBlLCBsaXN0ZW5lcikge1xuICAgIHZhciBpID0gdHlwZS5pbmRleE9mKFwiLlwiKSwgbmFtZSA9IFwiXCI7XG4gICAgaWYgKGkgPj0gMCkge1xuICAgICAgbmFtZSA9IHR5cGUuc3Vic3RyaW5nKGkgKyAxKTtcbiAgICAgIHR5cGUgPSB0eXBlLnN1YnN0cmluZygwLCBpKTtcbiAgICB9XG4gICAgaWYgKHR5cGUpIHJldHVybiBhcmd1bWVudHMubGVuZ3RoIDwgMiA/IHRoaXNbdHlwZV0ub24obmFtZSkgOiB0aGlzW3R5cGVdLm9uKG5hbWUsIGxpc3RlbmVyKTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMikge1xuICAgICAgaWYgKGxpc3RlbmVyID09IG51bGwpIGZvciAodHlwZSBpbiB0aGlzKSB7XG4gICAgICAgIGlmICh0aGlzLmhhc093blByb3BlcnR5KHR5cGUpKSB0aGlzW3R5cGVdLm9uKG5hbWUsIG51bGwpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICB9O1xuICBmdW5jdGlvbiBkM19kaXNwYXRjaF9ldmVudChkaXNwYXRjaCkge1xuICAgIHZhciBsaXN0ZW5lcnMgPSBbXSwgbGlzdGVuZXJCeU5hbWUgPSBuZXcgZDNfTWFwKCk7XG4gICAgZnVuY3Rpb24gZXZlbnQoKSB7XG4gICAgICB2YXIgeiA9IGxpc3RlbmVycywgaSA9IC0xLCBuID0gei5sZW5ndGgsIGw7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKGwgPSB6W2ldLm9uKSBsLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICByZXR1cm4gZGlzcGF0Y2g7XG4gICAgfVxuICAgIGV2ZW50Lm9uID0gZnVuY3Rpb24obmFtZSwgbGlzdGVuZXIpIHtcbiAgICAgIHZhciBsID0gbGlzdGVuZXJCeU5hbWUuZ2V0KG5hbWUpLCBpO1xuICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSByZXR1cm4gbCAmJiBsLm9uO1xuICAgICAgaWYgKGwpIHtcbiAgICAgICAgbC5vbiA9IG51bGw7XG4gICAgICAgIGxpc3RlbmVycyA9IGxpc3RlbmVycy5zbGljZSgwLCBpID0gbGlzdGVuZXJzLmluZGV4T2YobCkpLmNvbmNhdChsaXN0ZW5lcnMuc2xpY2UoaSArIDEpKTtcbiAgICAgICAgbGlzdGVuZXJCeU5hbWUucmVtb3ZlKG5hbWUpO1xuICAgICAgfVxuICAgICAgaWYgKGxpc3RlbmVyKSBsaXN0ZW5lcnMucHVzaChsaXN0ZW5lckJ5TmFtZS5zZXQobmFtZSwge1xuICAgICAgICBvbjogbGlzdGVuZXJcbiAgICAgIH0pKTtcbiAgICAgIHJldHVybiBkaXNwYXRjaDtcbiAgICB9O1xuICAgIHJldHVybiBldmVudDtcbiAgfVxuICBkMy5ldmVudCA9IG51bGw7XG4gIGZ1bmN0aW9uIGQzX2V2ZW50UHJldmVudERlZmF1bHQoKSB7XG4gICAgZDMuZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgfVxuICBmdW5jdGlvbiBkM19ldmVudFNvdXJjZSgpIHtcbiAgICB2YXIgZSA9IGQzLmV2ZW50LCBzO1xuICAgIHdoaWxlIChzID0gZS5zb3VyY2VFdmVudCkgZSA9IHM7XG4gICAgcmV0dXJuIGU7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZXZlbnREaXNwYXRjaCh0YXJnZXQpIHtcbiAgICB2YXIgZGlzcGF0Y2ggPSBuZXcgZDNfZGlzcGF0Y2goKSwgaSA9IDAsIG4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBkaXNwYXRjaFthcmd1bWVudHNbaV1dID0gZDNfZGlzcGF0Y2hfZXZlbnQoZGlzcGF0Y2gpO1xuICAgIGRpc3BhdGNoLm9mID0gZnVuY3Rpb24odGhpeiwgYXJndW1lbnR6KSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24oZTEpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICB2YXIgZTAgPSBlMS5zb3VyY2VFdmVudCA9IGQzLmV2ZW50O1xuICAgICAgICAgIGUxLnRhcmdldCA9IHRhcmdldDtcbiAgICAgICAgICBkMy5ldmVudCA9IGUxO1xuICAgICAgICAgIGRpc3BhdGNoW2UxLnR5cGVdLmFwcGx5KHRoaXosIGFyZ3VtZW50eik7XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgZDMuZXZlbnQgPSBlMDtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9O1xuICAgIHJldHVybiBkaXNwYXRjaDtcbiAgfVxuICBkMy5yZXF1b3RlID0gZnVuY3Rpb24ocykge1xuICAgIHJldHVybiBzLnJlcGxhY2UoZDNfcmVxdW90ZV9yZSwgXCJcXFxcJCZcIik7XG4gIH07XG4gIHZhciBkM19yZXF1b3RlX3JlID0gL1tcXFxcXFxeXFwkXFwqXFwrXFw/XFx8XFxbXFxdXFwoXFwpXFwuXFx7XFx9XS9nO1xuICB2YXIgZDNfc3ViY2xhc3MgPSB7fS5fX3Byb3RvX18gPyBmdW5jdGlvbihvYmplY3QsIHByb3RvdHlwZSkge1xuICAgIG9iamVjdC5fX3Byb3RvX18gPSBwcm90b3R5cGU7XG4gIH0gOiBmdW5jdGlvbihvYmplY3QsIHByb3RvdHlwZSkge1xuICAgIGZvciAodmFyIHByb3BlcnR5IGluIHByb3RvdHlwZSkgb2JqZWN0W3Byb3BlcnR5XSA9IHByb3RvdHlwZVtwcm9wZXJ0eV07XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbihncm91cHMpIHtcbiAgICBkM19zdWJjbGFzcyhncm91cHMsIGQzX3NlbGVjdGlvblByb3RvdHlwZSk7XG4gICAgcmV0dXJuIGdyb3VwcztcbiAgfVxuICB2YXIgZDNfc2VsZWN0ID0gZnVuY3Rpb24ocywgbikge1xuICAgIHJldHVybiBuLnF1ZXJ5U2VsZWN0b3Iocyk7XG4gIH0sIGQzX3NlbGVjdEFsbCA9IGZ1bmN0aW9uKHMsIG4pIHtcbiAgICByZXR1cm4gbi5xdWVyeVNlbGVjdG9yQWxsKHMpO1xuICB9LCBkM19zZWxlY3RNYXRjaGVyID0gZDNfZG9jdW1lbnRFbGVtZW50W2QzX3ZlbmRvclN5bWJvbChkM19kb2N1bWVudEVsZW1lbnQsIFwibWF0Y2hlc1NlbGVjdG9yXCIpXSwgZDNfc2VsZWN0TWF0Y2hlcyA9IGZ1bmN0aW9uKG4sIHMpIHtcbiAgICByZXR1cm4gZDNfc2VsZWN0TWF0Y2hlci5jYWxsKG4sIHMpO1xuICB9O1xuICBpZiAodHlwZW9mIFNpenpsZSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgZDNfc2VsZWN0ID0gZnVuY3Rpb24ocywgbikge1xuICAgICAgcmV0dXJuIFNpenpsZShzLCBuKVswXSB8fCBudWxsO1xuICAgIH07XG4gICAgZDNfc2VsZWN0QWxsID0gU2l6emxlO1xuICAgIGQzX3NlbGVjdE1hdGNoZXMgPSBTaXp6bGUubWF0Y2hlc1NlbGVjdG9yO1xuICB9XG4gIGQzLnNlbGVjdGlvbiA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19zZWxlY3Rpb25Sb290O1xuICB9O1xuICB2YXIgZDNfc2VsZWN0aW9uUHJvdG90eXBlID0gZDMuc2VsZWN0aW9uLnByb3RvdHlwZSA9IFtdO1xuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuc2VsZWN0ID0gZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgICB2YXIgc3ViZ3JvdXBzID0gW10sIHN1Ymdyb3VwLCBzdWJub2RlLCBncm91cCwgbm9kZTtcbiAgICBzZWxlY3RvciA9IGQzX3NlbGVjdGlvbl9zZWxlY3RvcihzZWxlY3Rvcik7XG4gICAgZm9yICh2YXIgaiA9IC0xLCBtID0gdGhpcy5sZW5ndGg7ICsraiA8IG07ICkge1xuICAgICAgc3ViZ3JvdXBzLnB1c2goc3ViZ3JvdXAgPSBbXSk7XG4gICAgICBzdWJncm91cC5wYXJlbnROb2RlID0gKGdyb3VwID0gdGhpc1tqXSkucGFyZW50Tm9kZTtcbiAgICAgIGZvciAodmFyIGkgPSAtMSwgbiA9IGdyb3VwLmxlbmd0aDsgKytpIDwgbjsgKSB7XG4gICAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgICBzdWJncm91cC5wdXNoKHN1Ym5vZGUgPSBzZWxlY3Rvci5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGopKTtcbiAgICAgICAgICBpZiAoc3Vibm9kZSAmJiBcIl9fZGF0YV9fXCIgaW4gbm9kZSkgc3Vibm9kZS5fX2RhdGFfXyA9IG5vZGUuX19kYXRhX187XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3ViZ3JvdXAucHVzaChudWxsKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZDNfc2VsZWN0aW9uKHN1Ymdyb3Vwcyk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9zZWxlY3RvcihzZWxlY3Rvcikge1xuICAgIHJldHVybiB0eXBlb2Ygc2VsZWN0b3IgPT09IFwiZnVuY3Rpb25cIiA/IHNlbGVjdG9yIDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfc2VsZWN0KHNlbGVjdG9yLCB0aGlzKTtcbiAgICB9O1xuICB9XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5zZWxlY3RBbGwgPSBmdW5jdGlvbihzZWxlY3Rvcikge1xuICAgIHZhciBzdWJncm91cHMgPSBbXSwgc3ViZ3JvdXAsIG5vZGU7XG4gICAgc2VsZWN0b3IgPSBkM19zZWxlY3Rpb25fc2VsZWN0b3JBbGwoc2VsZWN0b3IpO1xuICAgIGZvciAodmFyIGogPSAtMSwgbSA9IHRoaXMubGVuZ3RoOyArK2ogPCBtOyApIHtcbiAgICAgIGZvciAodmFyIGdyb3VwID0gdGhpc1tqXSwgaSA9IC0xLCBuID0gZ3JvdXAubGVuZ3RoOyArK2kgPCBuOyApIHtcbiAgICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICAgIHN1Ymdyb3Vwcy5wdXNoKHN1Ymdyb3VwID0gZDNfYXJyYXkoc2VsZWN0b3IuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBqKSkpO1xuICAgICAgICAgIHN1Ymdyb3VwLnBhcmVudE5vZGUgPSBub2RlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkM19zZWxlY3Rpb24oc3ViZ3JvdXBzKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX3NlbGVjdG9yQWxsKHNlbGVjdG9yKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJmdW5jdGlvblwiID8gc2VsZWN0b3IgOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19zZWxlY3RBbGwoc2VsZWN0b3IsIHRoaXMpO1xuICAgIH07XG4gIH1cbiAgdmFyIGQzX25zUHJlZml4ID0ge1xuICAgIHN2ZzogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFxuICAgIHhodG1sOiBcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixcbiAgICB4bGluazogXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsXG4gICAgeG1sOiBcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLFxuICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAveG1sbnMvXCJcbiAgfTtcbiAgZDMubnMgPSB7XG4gICAgcHJlZml4OiBkM19uc1ByZWZpeCxcbiAgICBxdWFsaWZ5OiBmdW5jdGlvbihuYW1lKSB7XG4gICAgICB2YXIgaSA9IG5hbWUuaW5kZXhPZihcIjpcIiksIHByZWZpeCA9IG5hbWU7XG4gICAgICBpZiAoaSA+PSAwKSB7XG4gICAgICAgIHByZWZpeCA9IG5hbWUuc3Vic3RyaW5nKDAsIGkpO1xuICAgICAgICBuYW1lID0gbmFtZS5zdWJzdHJpbmcoaSArIDEpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGQzX25zUHJlZml4Lmhhc093blByb3BlcnR5KHByZWZpeCkgPyB7XG4gICAgICAgIHNwYWNlOiBkM19uc1ByZWZpeFtwcmVmaXhdLFxuICAgICAgICBsb2NhbDogbmFtZVxuICAgICAgfSA6IG5hbWU7XG4gICAgfVxuICB9O1xuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuYXR0ciA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgICBpZiAodHlwZW9mIG5hbWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdmFyIG5vZGUgPSB0aGlzLm5vZGUoKTtcbiAgICAgICAgbmFtZSA9IGQzLm5zLnF1YWxpZnkobmFtZSk7XG4gICAgICAgIHJldHVybiBuYW1lLmxvY2FsID8gbm9kZS5nZXRBdHRyaWJ1dGVOUyhuYW1lLnNwYWNlLCBuYW1lLmxvY2FsKSA6IG5vZGUuZ2V0QXR0cmlidXRlKG5hbWUpO1xuICAgICAgfVxuICAgICAgZm9yICh2YWx1ZSBpbiBuYW1lKSB0aGlzLmVhY2goZDNfc2VsZWN0aW9uX2F0dHIodmFsdWUsIG5hbWVbdmFsdWVdKSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuZWFjaChkM19zZWxlY3Rpb25fYXR0cihuYW1lLCB2YWx1ZSkpO1xuICB9O1xuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fYXR0cihuYW1lLCB2YWx1ZSkge1xuICAgIG5hbWUgPSBkMy5ucy5xdWFsaWZ5KG5hbWUpO1xuICAgIGZ1bmN0aW9uIGF0dHJOdWxsKCkge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUobmFtZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGF0dHJOdWxsTlMoKSB7XG4gICAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZU5TKG5hbWUuc3BhY2UsIG5hbWUubG9jYWwpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBhdHRyQ29uc3RhbnQoKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGF0dHJDb25zdGFudE5TKCkge1xuICAgICAgdGhpcy5zZXRBdHRyaWJ1dGVOUyhuYW1lLnNwYWNlLCBuYW1lLmxvY2FsLCB2YWx1ZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGF0dHJGdW5jdGlvbigpIHtcbiAgICAgIHZhciB4ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIGlmICh4ID09IG51bGwpIHRoaXMucmVtb3ZlQXR0cmlidXRlKG5hbWUpOyBlbHNlIHRoaXMuc2V0QXR0cmlidXRlKG5hbWUsIHgpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBhdHRyRnVuY3Rpb25OUygpIHtcbiAgICAgIHZhciB4ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIGlmICh4ID09IG51bGwpIHRoaXMucmVtb3ZlQXR0cmlidXRlTlMobmFtZS5zcGFjZSwgbmFtZS5sb2NhbCk7IGVsc2UgdGhpcy5zZXRBdHRyaWJ1dGVOUyhuYW1lLnNwYWNlLCBuYW1lLmxvY2FsLCB4KTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlID09IG51bGwgPyBuYW1lLmxvY2FsID8gYXR0ck51bGxOUyA6IGF0dHJOdWxsIDogdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyBuYW1lLmxvY2FsID8gYXR0ckZ1bmN0aW9uTlMgOiBhdHRyRnVuY3Rpb24gOiBuYW1lLmxvY2FsID8gYXR0ckNvbnN0YW50TlMgOiBhdHRyQ29uc3RhbnQ7XG4gIH1cbiAgZnVuY3Rpb24gZDNfY29sbGFwc2Uocykge1xuICAgIHJldHVybiBzLnRyaW0oKS5yZXBsYWNlKC9cXHMrL2csIFwiIFwiKTtcbiAgfVxuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuY2xhc3NlZCA9IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgICBpZiAodHlwZW9mIG5hbWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdmFyIG5vZGUgPSB0aGlzLm5vZGUoKSwgbiA9IChuYW1lID0gZDNfc2VsZWN0aW9uX2NsYXNzZXMobmFtZSkpLmxlbmd0aCwgaSA9IC0xO1xuICAgICAgICBpZiAodmFsdWUgPSBub2RlLmNsYXNzTGlzdCkge1xuICAgICAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoIXZhbHVlLmNvbnRhaW5zKG5hbWVbaV0pKSByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFsdWUgPSBub2RlLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpO1xuICAgICAgICAgIHdoaWxlICgrK2kgPCBuKSBpZiAoIWQzX3NlbGVjdGlvbl9jbGFzc2VkUmUobmFtZVtpXSkudGVzdCh2YWx1ZSkpIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIGZvciAodmFsdWUgaW4gbmFtZSkgdGhpcy5lYWNoKGQzX3NlbGVjdGlvbl9jbGFzc2VkKHZhbHVlLCBuYW1lW3ZhbHVlXSkpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmVhY2goZDNfc2VsZWN0aW9uX2NsYXNzZWQobmFtZSwgdmFsdWUpKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX2NsYXNzZWRSZShuYW1lKSB7XG4gICAgcmV0dXJuIG5ldyBSZWdFeHAoXCIoPzpefFxcXFxzKylcIiArIGQzLnJlcXVvdGUobmFtZSkgKyBcIig/OlxcXFxzK3wkKVwiLCBcImdcIik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX2NsYXNzZXMobmFtZSkge1xuICAgIHJldHVybiBuYW1lLnRyaW0oKS5zcGxpdCgvXnxcXHMrLyk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX2NsYXNzZWQobmFtZSwgdmFsdWUpIHtcbiAgICBuYW1lID0gZDNfc2VsZWN0aW9uX2NsYXNzZXMobmFtZSkubWFwKGQzX3NlbGVjdGlvbl9jbGFzc2VkTmFtZSk7XG4gICAgdmFyIG4gPSBuYW1lLmxlbmd0aDtcbiAgICBmdW5jdGlvbiBjbGFzc2VkQ29uc3RhbnQoKSB7XG4gICAgICB2YXIgaSA9IC0xO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIG5hbWVbaV0odGhpcywgdmFsdWUpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjbGFzc2VkRnVuY3Rpb24oKSB7XG4gICAgICB2YXIgaSA9IC0xLCB4ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBuYW1lW2ldKHRoaXMsIHgpO1xuICAgIH1cbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyBjbGFzc2VkRnVuY3Rpb24gOiBjbGFzc2VkQ29uc3RhbnQ7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX2NsYXNzZWROYW1lKG5hbWUpIHtcbiAgICB2YXIgcmUgPSBkM19zZWxlY3Rpb25fY2xhc3NlZFJlKG5hbWUpO1xuICAgIHJldHVybiBmdW5jdGlvbihub2RlLCB2YWx1ZSkge1xuICAgICAgaWYgKGMgPSBub2RlLmNsYXNzTGlzdCkgcmV0dXJuIHZhbHVlID8gYy5hZGQobmFtZSkgOiBjLnJlbW92ZShuYW1lKTtcbiAgICAgIHZhciBjID0gbm9kZS5nZXRBdHRyaWJ1dGUoXCJjbGFzc1wiKSB8fCBcIlwiO1xuICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgIHJlLmxhc3RJbmRleCA9IDA7XG4gICAgICAgIGlmICghcmUudGVzdChjKSkgbm9kZS5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCBkM19jb2xsYXBzZShjICsgXCIgXCIgKyBuYW1lKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBub2RlLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIGQzX2NvbGxhcHNlKGMucmVwbGFjZShyZSwgXCIgXCIpKSk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuc3R5bGUgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpIHtcbiAgICB2YXIgbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgaWYgKG4gPCAzKSB7XG4gICAgICBpZiAodHlwZW9mIG5hbWUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgaWYgKG4gPCAyKSB2YWx1ZSA9IFwiXCI7XG4gICAgICAgIGZvciAocHJpb3JpdHkgaW4gbmFtZSkgdGhpcy5lYWNoKGQzX3NlbGVjdGlvbl9zdHlsZShwcmlvcml0eSwgbmFtZVtwcmlvcml0eV0sIHZhbHVlKSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuICAgICAgaWYgKG4gPCAyKSByZXR1cm4gZDNfd2luZG93LmdldENvbXB1dGVkU3R5bGUodGhpcy5ub2RlKCksIG51bGwpLmdldFByb3BlcnR5VmFsdWUobmFtZSk7XG4gICAgICBwcmlvcml0eSA9IFwiXCI7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmVhY2goZDNfc2VsZWN0aW9uX3N0eWxlKG5hbWUsIHZhbHVlLCBwcmlvcml0eSkpO1xuICB9O1xuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fc3R5bGUobmFtZSwgdmFsdWUsIHByaW9yaXR5KSB7XG4gICAgZnVuY3Rpb24gc3R5bGVOdWxsKCkge1xuICAgICAgdGhpcy5zdHlsZS5yZW1vdmVQcm9wZXJ0eShuYW1lKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc3R5bGVDb25zdGFudCgpIHtcbiAgICAgIHRoaXMuc3R5bGUuc2V0UHJvcGVydHkobmFtZSwgdmFsdWUsIHByaW9yaXR5KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc3R5bGVGdW5jdGlvbigpIHtcbiAgICAgIHZhciB4ID0gdmFsdWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIGlmICh4ID09IG51bGwpIHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSk7IGVsc2UgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eShuYW1lLCB4LCBwcmlvcml0eSk7XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZSA9PSBudWxsID8gc3R5bGVOdWxsIDogdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyBzdHlsZUZ1bmN0aW9uIDogc3R5bGVDb25zdGFudDtcbiAgfVxuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUucHJvcGVydHkgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSkge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikge1xuICAgICAgaWYgKHR5cGVvZiBuYW1lID09PSBcInN0cmluZ1wiKSByZXR1cm4gdGhpcy5ub2RlKClbbmFtZV07XG4gICAgICBmb3IgKHZhbHVlIGluIG5hbWUpIHRoaXMuZWFjaChkM19zZWxlY3Rpb25fcHJvcGVydHkodmFsdWUsIG5hbWVbdmFsdWVdKSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuZWFjaChkM19zZWxlY3Rpb25fcHJvcGVydHkobmFtZSwgdmFsdWUpKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX3Byb3BlcnR5KG5hbWUsIHZhbHVlKSB7XG4gICAgZnVuY3Rpb24gcHJvcGVydHlOdWxsKCkge1xuICAgICAgZGVsZXRlIHRoaXNbbmFtZV07XG4gICAgfVxuICAgIGZ1bmN0aW9uIHByb3BlcnR5Q29uc3RhbnQoKSB7XG4gICAgICB0aGlzW25hbWVdID0gdmFsdWU7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHByb3BlcnR5RnVuY3Rpb24oKSB7XG4gICAgICB2YXIgeCA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICBpZiAoeCA9PSBudWxsKSBkZWxldGUgdGhpc1tuYW1lXTsgZWxzZSB0aGlzW25hbWVdID0geDtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlID09IG51bGwgPyBwcm9wZXJ0eU51bGwgOiB0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIiA/IHByb3BlcnR5RnVuY3Rpb24gOiBwcm9wZXJ0eUNvbnN0YW50O1xuICB9XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS50ZXh0ID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/IHRoaXMuZWFjaCh0eXBlb2YgdmFsdWUgPT09IFwiZnVuY3Rpb25cIiA/IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHYgPSB2YWx1ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgdGhpcy50ZXh0Q29udGVudCA9IHYgPT0gbnVsbCA/IFwiXCIgOiB2O1xuICAgIH0gOiB2YWx1ZSA9PSBudWxsID8gZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLnRleHRDb250ZW50ID0gXCJcIjtcbiAgICB9IDogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLnRleHRDb250ZW50ID0gdmFsdWU7XG4gICAgfSkgOiB0aGlzLm5vZGUoKS50ZXh0Q29udGVudDtcbiAgfTtcbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLmh0bWwgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gdGhpcy5lYWNoKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgdiA9IHZhbHVlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB0aGlzLmlubmVySFRNTCA9IHYgPT0gbnVsbCA/IFwiXCIgOiB2O1xuICAgIH0gOiB2YWx1ZSA9PSBudWxsID8gZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLmlubmVySFRNTCA9IFwiXCI7XG4gICAgfSA6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5pbm5lckhUTUwgPSB2YWx1ZTtcbiAgICB9KSA6IHRoaXMubm9kZSgpLmlubmVySFRNTDtcbiAgfTtcbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLmFwcGVuZCA9IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICBuYW1lID0gZDNfc2VsZWN0aW9uX2NyZWF0b3IobmFtZSk7XG4gICAgcmV0dXJuIHRoaXMuc2VsZWN0KGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuYXBwZW5kQ2hpbGQobmFtZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgICB9KTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX2NyZWF0b3IobmFtZSkge1xuICAgIHJldHVybiB0eXBlb2YgbmFtZSA9PT0gXCJmdW5jdGlvblwiID8gbmFtZSA6IChuYW1lID0gZDMubnMucXVhbGlmeShuYW1lKSkubG9jYWwgPyBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKG5hbWUuc3BhY2UsIG5hbWUubG9jYWwpO1xuICAgIH0gOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLm93bmVyRG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKHRoaXMubmFtZXNwYWNlVVJJLCBuYW1lKTtcbiAgICB9O1xuICB9XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5pbnNlcnQgPSBmdW5jdGlvbihuYW1lLCBiZWZvcmUpIHtcbiAgICBuYW1lID0gZDNfc2VsZWN0aW9uX2NyZWF0b3IobmFtZSk7XG4gICAgYmVmb3JlID0gZDNfc2VsZWN0aW9uX3NlbGVjdG9yKGJlZm9yZSk7XG4gICAgcmV0dXJuIHRoaXMuc2VsZWN0KGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuaW5zZXJ0QmVmb3JlKG5hbWUuYXBwbHkodGhpcywgYXJndW1lbnRzKSwgYmVmb3JlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgbnVsbCk7XG4gICAgfSk7XG4gIH07XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHBhcmVudCA9IHRoaXMucGFyZW50Tm9kZTtcbiAgICAgIGlmIChwYXJlbnQpIHBhcmVudC5yZW1vdmVDaGlsZCh0aGlzKTtcbiAgICB9KTtcbiAgfTtcbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLmRhdGEgPSBmdW5jdGlvbih2YWx1ZSwga2V5KSB7XG4gICAgdmFyIGkgPSAtMSwgbiA9IHRoaXMubGVuZ3RoLCBncm91cCwgbm9kZTtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgIHZhbHVlID0gbmV3IEFycmF5KG4gPSAoZ3JvdXAgPSB0aGlzWzBdKS5sZW5ndGgpO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICAgIHZhbHVlW2ldID0gbm9kZS5fX2RhdGFfXztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICBmdW5jdGlvbiBiaW5kKGdyb3VwLCBncm91cERhdGEpIHtcbiAgICAgIHZhciBpLCBuID0gZ3JvdXAubGVuZ3RoLCBtID0gZ3JvdXBEYXRhLmxlbmd0aCwgbjAgPSBNYXRoLm1pbihuLCBtKSwgdXBkYXRlTm9kZXMgPSBuZXcgQXJyYXkobSksIGVudGVyTm9kZXMgPSBuZXcgQXJyYXkobSksIGV4aXROb2RlcyA9IG5ldyBBcnJheShuKSwgbm9kZSwgbm9kZURhdGE7XG4gICAgICBpZiAoa2V5KSB7XG4gICAgICAgIHZhciBub2RlQnlLZXlWYWx1ZSA9IG5ldyBkM19NYXAoKSwgZGF0YUJ5S2V5VmFsdWUgPSBuZXcgZDNfTWFwKCksIGtleVZhbHVlcyA9IFtdLCBrZXlWYWx1ZTtcbiAgICAgICAgZm9yIChpID0gLTE7ICsraSA8IG47ICkge1xuICAgICAgICAgIGtleVZhbHVlID0ga2V5LmNhbGwobm9kZSA9IGdyb3VwW2ldLCBub2RlLl9fZGF0YV9fLCBpKTtcbiAgICAgICAgICBpZiAobm9kZUJ5S2V5VmFsdWUuaGFzKGtleVZhbHVlKSkge1xuICAgICAgICAgICAgZXhpdE5vZGVzW2ldID0gbm9kZTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbm9kZUJ5S2V5VmFsdWUuc2V0KGtleVZhbHVlLCBub2RlKTtcbiAgICAgICAgICB9XG4gICAgICAgICAga2V5VmFsdWVzLnB1c2goa2V5VmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoaSA9IC0xOyArK2kgPCBtOyApIHtcbiAgICAgICAgICBrZXlWYWx1ZSA9IGtleS5jYWxsKGdyb3VwRGF0YSwgbm9kZURhdGEgPSBncm91cERhdGFbaV0sIGkpO1xuICAgICAgICAgIGlmIChub2RlID0gbm9kZUJ5S2V5VmFsdWUuZ2V0KGtleVZhbHVlKSkge1xuICAgICAgICAgICAgdXBkYXRlTm9kZXNbaV0gPSBub2RlO1xuICAgICAgICAgICAgbm9kZS5fX2RhdGFfXyA9IG5vZGVEYXRhO1xuICAgICAgICAgIH0gZWxzZSBpZiAoIWRhdGFCeUtleVZhbHVlLmhhcyhrZXlWYWx1ZSkpIHtcbiAgICAgICAgICAgIGVudGVyTm9kZXNbaV0gPSBkM19zZWxlY3Rpb25fZGF0YU5vZGUobm9kZURhdGEpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBkYXRhQnlLZXlWYWx1ZS5zZXQoa2V5VmFsdWUsIG5vZGVEYXRhKTtcbiAgICAgICAgICBub2RlQnlLZXlWYWx1ZS5yZW1vdmUoa2V5VmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoaSA9IC0xOyArK2kgPCBuOyApIHtcbiAgICAgICAgICBpZiAobm9kZUJ5S2V5VmFsdWUuaGFzKGtleVZhbHVlc1tpXSkpIHtcbiAgICAgICAgICAgIGV4aXROb2Rlc1tpXSA9IGdyb3VwW2ldO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZm9yIChpID0gLTE7ICsraSA8IG4wOyApIHtcbiAgICAgICAgICBub2RlID0gZ3JvdXBbaV07XG4gICAgICAgICAgbm9kZURhdGEgPSBncm91cERhdGFbaV07XG4gICAgICAgICAgaWYgKG5vZGUpIHtcbiAgICAgICAgICAgIG5vZGUuX19kYXRhX18gPSBub2RlRGF0YTtcbiAgICAgICAgICAgIHVwZGF0ZU5vZGVzW2ldID0gbm9kZTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZW50ZXJOb2Rlc1tpXSA9IGQzX3NlbGVjdGlvbl9kYXRhTm9kZShub2RlRGF0YSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAoO2kgPCBtOyArK2kpIHtcbiAgICAgICAgICBlbnRlck5vZGVzW2ldID0gZDNfc2VsZWN0aW9uX2RhdGFOb2RlKGdyb3VwRGF0YVtpXSk7XG4gICAgICAgIH1cbiAgICAgICAgZm9yICg7aSA8IG47ICsraSkge1xuICAgICAgICAgIGV4aXROb2Rlc1tpXSA9IGdyb3VwW2ldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBlbnRlck5vZGVzLnVwZGF0ZSA9IHVwZGF0ZU5vZGVzO1xuICAgICAgZW50ZXJOb2Rlcy5wYXJlbnROb2RlID0gdXBkYXRlTm9kZXMucGFyZW50Tm9kZSA9IGV4aXROb2Rlcy5wYXJlbnROb2RlID0gZ3JvdXAucGFyZW50Tm9kZTtcbiAgICAgIGVudGVyLnB1c2goZW50ZXJOb2Rlcyk7XG4gICAgICB1cGRhdGUucHVzaCh1cGRhdGVOb2Rlcyk7XG4gICAgICBleGl0LnB1c2goZXhpdE5vZGVzKTtcbiAgICB9XG4gICAgdmFyIGVudGVyID0gZDNfc2VsZWN0aW9uX2VudGVyKFtdKSwgdXBkYXRlID0gZDNfc2VsZWN0aW9uKFtdKSwgZXhpdCA9IGQzX3NlbGVjdGlvbihbXSk7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICBiaW5kKGdyb3VwID0gdGhpc1tpXSwgdmFsdWUuY2FsbChncm91cCwgZ3JvdXAucGFyZW50Tm9kZS5fX2RhdGFfXywgaSkpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICBiaW5kKGdyb3VwID0gdGhpc1tpXSwgdmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgICB1cGRhdGUuZW50ZXIgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBlbnRlcjtcbiAgICB9O1xuICAgIHVwZGF0ZS5leGl0ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZXhpdDtcbiAgICB9O1xuICAgIHJldHVybiB1cGRhdGU7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9kYXRhTm9kZShkYXRhKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIF9fZGF0YV9fOiBkYXRhXG4gICAgfTtcbiAgfVxuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuZGF0dW0gPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gdGhpcy5wcm9wZXJ0eShcIl9fZGF0YV9fXCIsIHZhbHVlKSA6IHRoaXMucHJvcGVydHkoXCJfX2RhdGFfX1wiKTtcbiAgfTtcbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLmZpbHRlciA9IGZ1bmN0aW9uKGZpbHRlcikge1xuICAgIHZhciBzdWJncm91cHMgPSBbXSwgc3ViZ3JvdXAsIGdyb3VwLCBub2RlO1xuICAgIGlmICh0eXBlb2YgZmlsdGVyICE9PSBcImZ1bmN0aW9uXCIpIGZpbHRlciA9IGQzX3NlbGVjdGlvbl9maWx0ZXIoZmlsdGVyKTtcbiAgICBmb3IgKHZhciBqID0gMCwgbSA9IHRoaXMubGVuZ3RoOyBqIDwgbTsgaisrKSB7XG4gICAgICBzdWJncm91cHMucHVzaChzdWJncm91cCA9IFtdKTtcbiAgICAgIHN1Ymdyb3VwLnBhcmVudE5vZGUgPSAoZ3JvdXAgPSB0aGlzW2pdKS5wYXJlbnROb2RlO1xuICAgICAgZm9yICh2YXIgaSA9IDAsIG4gPSBncm91cC5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgaWYgKChub2RlID0gZ3JvdXBbaV0pICYmIGZpbHRlci5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGopKSB7XG4gICAgICAgICAgc3ViZ3JvdXAucHVzaChub2RlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZDNfc2VsZWN0aW9uKHN1Ymdyb3Vwcyk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9maWx0ZXIoc2VsZWN0b3IpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfc2VsZWN0TWF0Y2hlcyh0aGlzLCBzZWxlY3Rvcik7XG4gICAgfTtcbiAgfVxuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUub3JkZXIgPSBmdW5jdGlvbigpIHtcbiAgICBmb3IgKHZhciBqID0gLTEsIG0gPSB0aGlzLmxlbmd0aDsgKytqIDwgbTsgKSB7XG4gICAgICBmb3IgKHZhciBncm91cCA9IHRoaXNbal0sIGkgPSBncm91cC5sZW5ndGggLSAxLCBuZXh0ID0gZ3JvdXBbaV0sIG5vZGU7IC0taSA+PSAwOyApIHtcbiAgICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICAgIGlmIChuZXh0ICYmIG5leHQgIT09IG5vZGUubmV4dFNpYmxpbmcpIG5leHQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobm9kZSwgbmV4dCk7XG4gICAgICAgICAgbmV4dCA9IG5vZGU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5zb3J0ID0gZnVuY3Rpb24oY29tcGFyYXRvcikge1xuICAgIGNvbXBhcmF0b3IgPSBkM19zZWxlY3Rpb25fc29ydENvbXBhcmF0b3IuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICBmb3IgKHZhciBqID0gLTEsIG0gPSB0aGlzLmxlbmd0aDsgKytqIDwgbTsgKSB0aGlzW2pdLnNvcnQoY29tcGFyYXRvcik7XG4gICAgcmV0dXJuIHRoaXMub3JkZXIoKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX3NvcnRDb21wYXJhdG9yKGNvbXBhcmF0b3IpIHtcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIGNvbXBhcmF0b3IgPSBkM19hc2NlbmRpbmc7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgIHJldHVybiBhICYmIGIgPyBjb21wYXJhdG9yKGEuX19kYXRhX18sIGIuX19kYXRhX18pIDogIWEgLSAhYjtcbiAgICB9O1xuICB9XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5lYWNoID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICByZXR1cm4gZDNfc2VsZWN0aW9uX2VhY2godGhpcywgZnVuY3Rpb24obm9kZSwgaSwgaikge1xuICAgICAgY2FsbGJhY2suY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBqKTtcbiAgICB9KTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX2VhY2goZ3JvdXBzLCBjYWxsYmFjaykge1xuICAgIGZvciAodmFyIGogPSAwLCBtID0gZ3JvdXBzLmxlbmd0aDsgaiA8IG07IGorKykge1xuICAgICAgZm9yICh2YXIgZ3JvdXAgPSBncm91cHNbal0sIGkgPSAwLCBuID0gZ3JvdXAubGVuZ3RoLCBub2RlOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIGNhbGxiYWNrKG5vZGUsIGksIGopO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZ3JvdXBzO1xuICB9XG4gIGQzX3NlbGVjdGlvblByb3RvdHlwZS5jYWxsID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICB2YXIgYXJncyA9IGQzX2FycmF5KGFyZ3VtZW50cyk7XG4gICAgY2FsbGJhY2suYXBwbHkoYXJnc1swXSA9IHRoaXMsIGFyZ3MpO1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuZW1wdHkgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gIXRoaXMubm9kZSgpO1xuICB9O1xuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUubm9kZSA9IGZ1bmN0aW9uKCkge1xuICAgIGZvciAodmFyIGogPSAwLCBtID0gdGhpcy5sZW5ndGg7IGogPCBtOyBqKyspIHtcbiAgICAgIGZvciAodmFyIGdyb3VwID0gdGhpc1tqXSwgaSA9IDAsIG4gPSBncm91cC5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgdmFyIG5vZGUgPSBncm91cFtpXTtcbiAgICAgICAgaWYgKG5vZGUpIHJldHVybiBub2RlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfTtcbiAgZDNfc2VsZWN0aW9uUHJvdG90eXBlLnNpemUgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgbiA9IDA7XG4gICAgdGhpcy5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgKytuO1xuICAgIH0pO1xuICAgIHJldHVybiBuO1xuICB9O1xuICBmdW5jdGlvbiBkM19zZWxlY3Rpb25fZW50ZXIoc2VsZWN0aW9uKSB7XG4gICAgZDNfc3ViY2xhc3Moc2VsZWN0aW9uLCBkM19zZWxlY3Rpb25fZW50ZXJQcm90b3R5cGUpO1xuICAgIHJldHVybiBzZWxlY3Rpb247XG4gIH1cbiAgdmFyIGQzX3NlbGVjdGlvbl9lbnRlclByb3RvdHlwZSA9IFtdO1xuICBkMy5zZWxlY3Rpb24uZW50ZXIgPSBkM19zZWxlY3Rpb25fZW50ZXI7XG4gIGQzLnNlbGVjdGlvbi5lbnRlci5wcm90b3R5cGUgPSBkM19zZWxlY3Rpb25fZW50ZXJQcm90b3R5cGU7XG4gIGQzX3NlbGVjdGlvbl9lbnRlclByb3RvdHlwZS5hcHBlbmQgPSBkM19zZWxlY3Rpb25Qcm90b3R5cGUuYXBwZW5kO1xuICBkM19zZWxlY3Rpb25fZW50ZXJQcm90b3R5cGUuZW1wdHkgPSBkM19zZWxlY3Rpb25Qcm90b3R5cGUuZW1wdHk7XG4gIGQzX3NlbGVjdGlvbl9lbnRlclByb3RvdHlwZS5ub2RlID0gZDNfc2VsZWN0aW9uUHJvdG90eXBlLm5vZGU7XG4gIGQzX3NlbGVjdGlvbl9lbnRlclByb3RvdHlwZS5jYWxsID0gZDNfc2VsZWN0aW9uUHJvdG90eXBlLmNhbGw7XG4gIGQzX3NlbGVjdGlvbl9lbnRlclByb3RvdHlwZS5zaXplID0gZDNfc2VsZWN0aW9uUHJvdG90eXBlLnNpemU7XG4gIGQzX3NlbGVjdGlvbl9lbnRlclByb3RvdHlwZS5zZWxlY3QgPSBmdW5jdGlvbihzZWxlY3Rvcikge1xuICAgIHZhciBzdWJncm91cHMgPSBbXSwgc3ViZ3JvdXAsIHN1Ym5vZGUsIHVwZ3JvdXAsIGdyb3VwLCBub2RlO1xuICAgIGZvciAodmFyIGogPSAtMSwgbSA9IHRoaXMubGVuZ3RoOyArK2ogPCBtOyApIHtcbiAgICAgIHVwZ3JvdXAgPSAoZ3JvdXAgPSB0aGlzW2pdKS51cGRhdGU7XG4gICAgICBzdWJncm91cHMucHVzaChzdWJncm91cCA9IFtdKTtcbiAgICAgIHN1Ymdyb3VwLnBhcmVudE5vZGUgPSBncm91cC5wYXJlbnROb2RlO1xuICAgICAgZm9yICh2YXIgaSA9IC0xLCBuID0gZ3JvdXAubGVuZ3RoOyArK2kgPCBuOyApIHtcbiAgICAgICAgaWYgKG5vZGUgPSBncm91cFtpXSkge1xuICAgICAgICAgIHN1Ymdyb3VwLnB1c2godXBncm91cFtpXSA9IHN1Ym5vZGUgPSBzZWxlY3Rvci5jYWxsKGdyb3VwLnBhcmVudE5vZGUsIG5vZGUuX19kYXRhX18sIGksIGopKTtcbiAgICAgICAgICBzdWJub2RlLl9fZGF0YV9fID0gbm9kZS5fX2RhdGFfXztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzdWJncm91cC5wdXNoKG51bGwpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkM19zZWxlY3Rpb24oc3ViZ3JvdXBzKTtcbiAgfTtcbiAgZDNfc2VsZWN0aW9uX2VudGVyUHJvdG90eXBlLmluc2VydCA9IGZ1bmN0aW9uKG5hbWUsIGJlZm9yZSkge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikgYmVmb3JlID0gZDNfc2VsZWN0aW9uX2VudGVySW5zZXJ0QmVmb3JlKHRoaXMpO1xuICAgIHJldHVybiBkM19zZWxlY3Rpb25Qcm90b3R5cGUuaW5zZXJ0LmNhbGwodGhpcywgbmFtZSwgYmVmb3JlKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX2VudGVySW5zZXJ0QmVmb3JlKGVudGVyKSB7XG4gICAgdmFyIGkwLCBqMDtcbiAgICByZXR1cm4gZnVuY3Rpb24oZCwgaSwgaikge1xuICAgICAgdmFyIGdyb3VwID0gZW50ZXJbal0udXBkYXRlLCBuID0gZ3JvdXAubGVuZ3RoLCBub2RlO1xuICAgICAgaWYgKGogIT0gajApIGowID0gaiwgaTAgPSAwO1xuICAgICAgaWYgKGkgPj0gaTApIGkwID0gaSArIDE7XG4gICAgICB3aGlsZSAoIShub2RlID0gZ3JvdXBbaTBdKSAmJiArK2kwIDwgbikgO1xuICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfTtcbiAgfVxuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUudHJhbnNpdGlvbiA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBpZCA9IGQzX3RyYW5zaXRpb25Jbmhlcml0SWQgfHwgKytkM190cmFuc2l0aW9uSWQsIHN1Ymdyb3VwcyA9IFtdLCBzdWJncm91cCwgbm9kZSwgdHJhbnNpdGlvbiA9IGQzX3RyYW5zaXRpb25Jbmhlcml0IHx8IHtcbiAgICAgIHRpbWU6IERhdGUubm93KCksXG4gICAgICBlYXNlOiBkM19lYXNlX2N1YmljSW5PdXQsXG4gICAgICBkZWxheTogMCxcbiAgICAgIGR1cmF0aW9uOiAyNTBcbiAgICB9O1xuICAgIGZvciAodmFyIGogPSAtMSwgbSA9IHRoaXMubGVuZ3RoOyArK2ogPCBtOyApIHtcbiAgICAgIHN1Ymdyb3Vwcy5wdXNoKHN1Ymdyb3VwID0gW10pO1xuICAgICAgZm9yICh2YXIgZ3JvdXAgPSB0aGlzW2pdLCBpID0gLTEsIG4gPSBncm91cC5sZW5ndGg7ICsraSA8IG47ICkge1xuICAgICAgICBpZiAobm9kZSA9IGdyb3VwW2ldKSBkM190cmFuc2l0aW9uTm9kZShub2RlLCBpLCBpZCwgdHJhbnNpdGlvbik7XG4gICAgICAgIHN1Ymdyb3VwLnB1c2gobm9kZSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkM190cmFuc2l0aW9uKHN1Ymdyb3VwcywgaWQpO1xuICB9O1xuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUuaW50ZXJydXB0ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZWFjaChkM19zZWxlY3Rpb25faW50ZXJydXB0KTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX2ludGVycnVwdCgpIHtcbiAgICB2YXIgbG9jayA9IHRoaXMuX190cmFuc2l0aW9uX187XG4gICAgaWYgKGxvY2spICsrbG9jay5hY3RpdmU7XG4gIH1cbiAgZDMuc2VsZWN0ID0gZnVuY3Rpb24obm9kZSkge1xuICAgIHZhciBncm91cCA9IFsgdHlwZW9mIG5vZGUgPT09IFwic3RyaW5nXCIgPyBkM19zZWxlY3Qobm9kZSwgZDNfZG9jdW1lbnQpIDogbm9kZSBdO1xuICAgIGdyb3VwLnBhcmVudE5vZGUgPSBkM19kb2N1bWVudEVsZW1lbnQ7XG4gICAgcmV0dXJuIGQzX3NlbGVjdGlvbihbIGdyb3VwIF0pO1xuICB9O1xuICBkMy5zZWxlY3RBbGwgPSBmdW5jdGlvbihub2Rlcykge1xuICAgIHZhciBncm91cCA9IGQzX2FycmF5KHR5cGVvZiBub2RlcyA9PT0gXCJzdHJpbmdcIiA/IGQzX3NlbGVjdEFsbChub2RlcywgZDNfZG9jdW1lbnQpIDogbm9kZXMpO1xuICAgIGdyb3VwLnBhcmVudE5vZGUgPSBkM19kb2N1bWVudEVsZW1lbnQ7XG4gICAgcmV0dXJuIGQzX3NlbGVjdGlvbihbIGdyb3VwIF0pO1xuICB9O1xuICB2YXIgZDNfc2VsZWN0aW9uUm9vdCA9IGQzLnNlbGVjdChkM19kb2N1bWVudEVsZW1lbnQpO1xuICBkM19zZWxlY3Rpb25Qcm90b3R5cGUub24gPSBmdW5jdGlvbih0eXBlLCBsaXN0ZW5lciwgY2FwdHVyZSkge1xuICAgIHZhciBuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBpZiAobiA8IDMpIHtcbiAgICAgIGlmICh0eXBlb2YgdHlwZSAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICBpZiAobiA8IDIpIGxpc3RlbmVyID0gZmFsc2U7XG4gICAgICAgIGZvciAoY2FwdHVyZSBpbiB0eXBlKSB0aGlzLmVhY2goZDNfc2VsZWN0aW9uX29uKGNhcHR1cmUsIHR5cGVbY2FwdHVyZV0sIGxpc3RlbmVyKSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgfVxuICAgICAgaWYgKG4gPCAyKSByZXR1cm4gKG4gPSB0aGlzLm5vZGUoKVtcIl9fb25cIiArIHR5cGVdKSAmJiBuLl87XG4gICAgICBjYXB0dXJlID0gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLmVhY2goZDNfc2VsZWN0aW9uX29uKHR5cGUsIGxpc3RlbmVyLCBjYXB0dXJlKSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9vbih0eXBlLCBsaXN0ZW5lciwgY2FwdHVyZSkge1xuICAgIHZhciBuYW1lID0gXCJfX29uXCIgKyB0eXBlLCBpID0gdHlwZS5pbmRleE9mKFwiLlwiKSwgd3JhcCA9IGQzX3NlbGVjdGlvbl9vbkxpc3RlbmVyO1xuICAgIGlmIChpID4gMCkgdHlwZSA9IHR5cGUuc3Vic3RyaW5nKDAsIGkpO1xuICAgIHZhciBmaWx0ZXIgPSBkM19zZWxlY3Rpb25fb25GaWx0ZXJzLmdldCh0eXBlKTtcbiAgICBpZiAoZmlsdGVyKSB0eXBlID0gZmlsdGVyLCB3cmFwID0gZDNfc2VsZWN0aW9uX29uRmlsdGVyO1xuICAgIGZ1bmN0aW9uIG9uUmVtb3ZlKCkge1xuICAgICAgdmFyIGwgPSB0aGlzW25hbWVdO1xuICAgICAgaWYgKGwpIHtcbiAgICAgICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKHR5cGUsIGwsIGwuJCk7XG4gICAgICAgIGRlbGV0ZSB0aGlzW25hbWVdO1xuICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBvbkFkZCgpIHtcbiAgICAgIHZhciBsID0gd3JhcChsaXN0ZW5lciwgZDNfYXJyYXkoYXJndW1lbnRzKSk7XG4gICAgICBvblJlbW92ZS5jYWxsKHRoaXMpO1xuICAgICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKHR5cGUsIHRoaXNbbmFtZV0gPSBsLCBsLiQgPSBjYXB0dXJlKTtcbiAgICAgIGwuXyA9IGxpc3RlbmVyO1xuICAgIH1cbiAgICBmdW5jdGlvbiByZW1vdmVBbGwoKSB7XG4gICAgICB2YXIgcmUgPSBuZXcgUmVnRXhwKFwiXl9fb24oW14uXSspXCIgKyBkMy5yZXF1b3RlKHR5cGUpICsgXCIkXCIpLCBtYXRjaDtcbiAgICAgIGZvciAodmFyIG5hbWUgaW4gdGhpcykge1xuICAgICAgICBpZiAobWF0Y2ggPSBuYW1lLm1hdGNoKHJlKSkge1xuICAgICAgICAgIHZhciBsID0gdGhpc1tuYW1lXTtcbiAgICAgICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIobWF0Y2hbMV0sIGwsIGwuJCk7XG4gICAgICAgICAgZGVsZXRlIHRoaXNbbmFtZV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGkgPyBsaXN0ZW5lciA/IG9uQWRkIDogb25SZW1vdmUgOiBsaXN0ZW5lciA/IGQzX25vb3AgOiByZW1vdmVBbGw7XG4gIH1cbiAgdmFyIGQzX3NlbGVjdGlvbl9vbkZpbHRlcnMgPSBkMy5tYXAoe1xuICAgIG1vdXNlZW50ZXI6IFwibW91c2VvdmVyXCIsXG4gICAgbW91c2VsZWF2ZTogXCJtb3VzZW91dFwiXG4gIH0pO1xuICBkM19zZWxlY3Rpb25fb25GaWx0ZXJzLmZvckVhY2goZnVuY3Rpb24oaykge1xuICAgIGlmIChcIm9uXCIgKyBrIGluIGQzX2RvY3VtZW50KSBkM19zZWxlY3Rpb25fb25GaWx0ZXJzLnJlbW92ZShrKTtcbiAgfSk7XG4gIGZ1bmN0aW9uIGQzX3NlbGVjdGlvbl9vbkxpc3RlbmVyKGxpc3RlbmVyLCBhcmd1bWVudHopIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oZSkge1xuICAgICAgdmFyIG8gPSBkMy5ldmVudDtcbiAgICAgIGQzLmV2ZW50ID0gZTtcbiAgICAgIGFyZ3VtZW50elswXSA9IHRoaXMuX19kYXRhX187XG4gICAgICB0cnkge1xuICAgICAgICBsaXN0ZW5lci5hcHBseSh0aGlzLCBhcmd1bWVudHopO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgZDMuZXZlbnQgPSBvO1xuICAgICAgfVxuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2VsZWN0aW9uX29uRmlsdGVyKGxpc3RlbmVyLCBhcmd1bWVudHopIHtcbiAgICB2YXIgbCA9IGQzX3NlbGVjdGlvbl9vbkxpc3RlbmVyKGxpc3RlbmVyLCBhcmd1bWVudHopO1xuICAgIHJldHVybiBmdW5jdGlvbihlKSB7XG4gICAgICB2YXIgdGFyZ2V0ID0gdGhpcywgcmVsYXRlZCA9IGUucmVsYXRlZFRhcmdldDtcbiAgICAgIGlmICghcmVsYXRlZCB8fCByZWxhdGVkICE9PSB0YXJnZXQgJiYgIShyZWxhdGVkLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKHRhcmdldCkgJiA4KSkge1xuICAgICAgICBsLmNhbGwodGFyZ2V0LCBlKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIHZhciBkM19ldmVudF9kcmFnU2VsZWN0ID0gXCJvbnNlbGVjdHN0YXJ0XCIgaW4gZDNfZG9jdW1lbnQgPyBudWxsIDogZDNfdmVuZG9yU3ltYm9sKGQzX2RvY3VtZW50RWxlbWVudC5zdHlsZSwgXCJ1c2VyU2VsZWN0XCIpLCBkM19ldmVudF9kcmFnSWQgPSAwO1xuICBmdW5jdGlvbiBkM19ldmVudF9kcmFnU3VwcHJlc3MoKSB7XG4gICAgdmFyIG5hbWUgPSBcIi5kcmFnc3VwcHJlc3MtXCIgKyArK2QzX2V2ZW50X2RyYWdJZCwgY2xpY2sgPSBcImNsaWNrXCIgKyBuYW1lLCB3ID0gZDMuc2VsZWN0KGQzX3dpbmRvdykub24oXCJ0b3VjaG1vdmVcIiArIG5hbWUsIGQzX2V2ZW50UHJldmVudERlZmF1bHQpLm9uKFwiZHJhZ3N0YXJ0XCIgKyBuYW1lLCBkM19ldmVudFByZXZlbnREZWZhdWx0KS5vbihcInNlbGVjdHN0YXJ0XCIgKyBuYW1lLCBkM19ldmVudFByZXZlbnREZWZhdWx0KTtcbiAgICBpZiAoZDNfZXZlbnRfZHJhZ1NlbGVjdCkge1xuICAgICAgdmFyIHN0eWxlID0gZDNfZG9jdW1lbnRFbGVtZW50LnN0eWxlLCBzZWxlY3QgPSBzdHlsZVtkM19ldmVudF9kcmFnU2VsZWN0XTtcbiAgICAgIHN0eWxlW2QzX2V2ZW50X2RyYWdTZWxlY3RdID0gXCJub25lXCI7XG4gICAgfVxuICAgIHJldHVybiBmdW5jdGlvbihzdXBwcmVzc0NsaWNrKSB7XG4gICAgICB3Lm9uKG5hbWUsIG51bGwpO1xuICAgICAgaWYgKGQzX2V2ZW50X2RyYWdTZWxlY3QpIHN0eWxlW2QzX2V2ZW50X2RyYWdTZWxlY3RdID0gc2VsZWN0O1xuICAgICAgaWYgKHN1cHByZXNzQ2xpY2spIHtcbiAgICAgICAgZnVuY3Rpb24gb2ZmKCkge1xuICAgICAgICAgIHcub24oY2xpY2ssIG51bGwpO1xuICAgICAgICB9XG4gICAgICAgIHcub24oY2xpY2ssIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGQzX2V2ZW50UHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICBvZmYoKTtcbiAgICAgICAgfSwgdHJ1ZSk7XG4gICAgICAgIHNldFRpbWVvdXQob2ZmLCAwKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIGQzLm1vdXNlID0gZnVuY3Rpb24oY29udGFpbmVyKSB7XG4gICAgcmV0dXJuIGQzX21vdXNlUG9pbnQoY29udGFpbmVyLCBkM19ldmVudFNvdXJjZSgpKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfbW91c2VQb2ludChjb250YWluZXIsIGUpIHtcbiAgICBpZiAoZS5jaGFuZ2VkVG91Y2hlcykgZSA9IGUuY2hhbmdlZFRvdWNoZXNbMF07XG4gICAgdmFyIHN2ZyA9IGNvbnRhaW5lci5vd25lclNWR0VsZW1lbnQgfHwgY29udGFpbmVyO1xuICAgIGlmIChzdmcuY3JlYXRlU1ZHUG9pbnQpIHtcbiAgICAgIHZhciBwb2ludCA9IHN2Zy5jcmVhdGVTVkdQb2ludCgpO1xuICAgICAgcG9pbnQueCA9IGUuY2xpZW50WCwgcG9pbnQueSA9IGUuY2xpZW50WTtcbiAgICAgIHBvaW50ID0gcG9pbnQubWF0cml4VHJhbnNmb3JtKGNvbnRhaW5lci5nZXRTY3JlZW5DVE0oKS5pbnZlcnNlKCkpO1xuICAgICAgcmV0dXJuIFsgcG9pbnQueCwgcG9pbnQueSBdO1xuICAgIH1cbiAgICB2YXIgcmVjdCA9IGNvbnRhaW5lci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICByZXR1cm4gWyBlLmNsaWVudFggLSByZWN0LmxlZnQgLSBjb250YWluZXIuY2xpZW50TGVmdCwgZS5jbGllbnRZIC0gcmVjdC50b3AgLSBjb250YWluZXIuY2xpZW50VG9wIF07XG4gIH1cbiAgZDMudG91Y2hlcyA9IGZ1bmN0aW9uKGNvbnRhaW5lciwgdG91Y2hlcykge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikgdG91Y2hlcyA9IGQzX2V2ZW50U291cmNlKCkudG91Y2hlcztcbiAgICByZXR1cm4gdG91Y2hlcyA/IGQzX2FycmF5KHRvdWNoZXMpLm1hcChmdW5jdGlvbih0b3VjaCkge1xuICAgICAgdmFyIHBvaW50ID0gZDNfbW91c2VQb2ludChjb250YWluZXIsIHRvdWNoKTtcbiAgICAgIHBvaW50LmlkZW50aWZpZXIgPSB0b3VjaC5pZGVudGlmaWVyO1xuICAgICAgcmV0dXJuIHBvaW50O1xuICAgIH0pIDogW107XG4gIH07XG4gIGQzLmJlaGF2aW9yLmRyYWcgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgZXZlbnQgPSBkM19ldmVudERpc3BhdGNoKGRyYWcsIFwiZHJhZ1wiLCBcImRyYWdzdGFydFwiLCBcImRyYWdlbmRcIiksIG9yaWdpbiA9IG51bGwsIG1vdXNlZG93biA9IGRyYWdzdGFydChkM19ub29wLCBkMy5tb3VzZSwgZDNfYmVoYXZpb3JfZHJhZ01vdXNlU3ViamVjdCwgXCJtb3VzZW1vdmVcIiwgXCJtb3VzZXVwXCIpLCB0b3VjaHN0YXJ0ID0gZHJhZ3N0YXJ0KGQzX2JlaGF2aW9yX2RyYWdUb3VjaElkLCBkMy50b3VjaCwgZDNfYmVoYXZpb3JfZHJhZ1RvdWNoU3ViamVjdCwgXCJ0b3VjaG1vdmVcIiwgXCJ0b3VjaGVuZFwiKTtcbiAgICBmdW5jdGlvbiBkcmFnKCkge1xuICAgICAgdGhpcy5vbihcIm1vdXNlZG93bi5kcmFnXCIsIG1vdXNlZG93bikub24oXCJ0b3VjaHN0YXJ0LmRyYWdcIiwgdG91Y2hzdGFydCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGRyYWdzdGFydChpZCwgcG9zaXRpb24sIHN1YmplY3QsIG1vdmUsIGVuZCkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgdGhhdCA9IHRoaXMsIHRhcmdldCA9IGQzLmV2ZW50LnRhcmdldCwgcGFyZW50ID0gdGhhdC5wYXJlbnROb2RlLCBkaXNwYXRjaCA9IGV2ZW50Lm9mKHRoYXQsIGFyZ3VtZW50cyksIGRyYWdnZWQgPSAwLCBkcmFnSWQgPSBpZCgpLCBkcmFnTmFtZSA9IFwiLmRyYWdcIiArIChkcmFnSWQgPT0gbnVsbCA/IFwiXCIgOiBcIi1cIiArIGRyYWdJZCksIGRyYWdPZmZzZXQsIGRyYWdTdWJqZWN0ID0gZDMuc2VsZWN0KHN1YmplY3QoKSkub24obW92ZSArIGRyYWdOYW1lLCBtb3ZlZCkub24oZW5kICsgZHJhZ05hbWUsIGVuZGVkKSwgZHJhZ1Jlc3RvcmUgPSBkM19ldmVudF9kcmFnU3VwcHJlc3MoKSwgcG9zaXRpb24wID0gcG9zaXRpb24ocGFyZW50LCBkcmFnSWQpO1xuICAgICAgICBpZiAob3JpZ2luKSB7XG4gICAgICAgICAgZHJhZ09mZnNldCA9IG9yaWdpbi5hcHBseSh0aGF0LCBhcmd1bWVudHMpO1xuICAgICAgICAgIGRyYWdPZmZzZXQgPSBbIGRyYWdPZmZzZXQueCAtIHBvc2l0aW9uMFswXSwgZHJhZ09mZnNldC55IC0gcG9zaXRpb24wWzFdIF07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZHJhZ09mZnNldCA9IFsgMCwgMCBdO1xuICAgICAgICB9XG4gICAgICAgIGRpc3BhdGNoKHtcbiAgICAgICAgICB0eXBlOiBcImRyYWdzdGFydFwiXG4gICAgICAgIH0pO1xuICAgICAgICBmdW5jdGlvbiBtb3ZlZCgpIHtcbiAgICAgICAgICB2YXIgcG9zaXRpb24xID0gcG9zaXRpb24ocGFyZW50LCBkcmFnSWQpLCBkeCwgZHk7XG4gICAgICAgICAgaWYgKCFwb3NpdGlvbjEpIHJldHVybjtcbiAgICAgICAgICBkeCA9IHBvc2l0aW9uMVswXSAtIHBvc2l0aW9uMFswXTtcbiAgICAgICAgICBkeSA9IHBvc2l0aW9uMVsxXSAtIHBvc2l0aW9uMFsxXTtcbiAgICAgICAgICBkcmFnZ2VkIHw9IGR4IHwgZHk7XG4gICAgICAgICAgcG9zaXRpb24wID0gcG9zaXRpb24xO1xuICAgICAgICAgIGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6IFwiZHJhZ1wiLFxuICAgICAgICAgICAgeDogcG9zaXRpb24xWzBdICsgZHJhZ09mZnNldFswXSxcbiAgICAgICAgICAgIHk6IHBvc2l0aW9uMVsxXSArIGRyYWdPZmZzZXRbMV0sXG4gICAgICAgICAgICBkeDogZHgsXG4gICAgICAgICAgICBkeTogZHlcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBlbmRlZCgpIHtcbiAgICAgICAgICBpZiAoIXBvc2l0aW9uKHBhcmVudCwgZHJhZ0lkKSkgcmV0dXJuO1xuICAgICAgICAgIGRyYWdTdWJqZWN0Lm9uKG1vdmUgKyBkcmFnTmFtZSwgbnVsbCkub24oZW5kICsgZHJhZ05hbWUsIG51bGwpO1xuICAgICAgICAgIGRyYWdSZXN0b3JlKGRyYWdnZWQgJiYgZDMuZXZlbnQudGFyZ2V0ID09PSB0YXJnZXQpO1xuICAgICAgICAgIGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6IFwiZHJhZ2VuZFwiXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICAgIGRyYWcub3JpZ2luID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gb3JpZ2luO1xuICAgICAgb3JpZ2luID0geDtcbiAgICAgIHJldHVybiBkcmFnO1xuICAgIH07XG4gICAgcmV0dXJuIGQzLnJlYmluZChkcmFnLCBldmVudCwgXCJvblwiKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfYmVoYXZpb3JfZHJhZ1RvdWNoSWQoKSB7XG4gICAgcmV0dXJuIGQzLmV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdLmlkZW50aWZpZXI7XG4gIH1cbiAgZnVuY3Rpb24gZDNfYmVoYXZpb3JfZHJhZ1RvdWNoU3ViamVjdCgpIHtcbiAgICByZXR1cm4gZDMuZXZlbnQudGFyZ2V0O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2JlaGF2aW9yX2RyYWdNb3VzZVN1YmplY3QoKSB7XG4gICAgcmV0dXJuIGQzX3dpbmRvdztcbiAgfVxuICB2YXIgz4AgPSBNYXRoLlBJLCDPhCA9IDIgKiDPgCwgaGFsZs+AID0gz4AgLyAyLCDOtSA9IDFlLTYsIM61MiA9IM61ICogzrUsIGQzX3JhZGlhbnMgPSDPgCAvIDE4MCwgZDNfZGVncmVlcyA9IDE4MCAvIM+AO1xuICBmdW5jdGlvbiBkM19zZ24oeCkge1xuICAgIHJldHVybiB4ID4gMCA/IDEgOiB4IDwgMCA/IC0xIDogMDtcbiAgfVxuICBmdW5jdGlvbiBkM19jcm9zczJkKGEsIGIsIGMpIHtcbiAgICByZXR1cm4gKGJbMF0gLSBhWzBdKSAqIChjWzFdIC0gYVsxXSkgLSAoYlsxXSAtIGFbMV0pICogKGNbMF0gLSBhWzBdKTtcbiAgfVxuICBmdW5jdGlvbiBkM19hY29zKHgpIHtcbiAgICByZXR1cm4geCA+IDEgPyAwIDogeCA8IC0xID8gz4AgOiBNYXRoLmFjb3MoeCk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfYXNpbih4KSB7XG4gICAgcmV0dXJuIHggPiAxID8gaGFsZs+AIDogeCA8IC0xID8gLWhhbGbPgCA6IE1hdGguYXNpbih4KTtcbiAgfVxuICBmdW5jdGlvbiBkM19zaW5oKHgpIHtcbiAgICByZXR1cm4gKCh4ID0gTWF0aC5leHAoeCkpIC0gMSAvIHgpIC8gMjtcbiAgfVxuICBmdW5jdGlvbiBkM19jb3NoKHgpIHtcbiAgICByZXR1cm4gKCh4ID0gTWF0aC5leHAoeCkpICsgMSAvIHgpIC8gMjtcbiAgfVxuICBmdW5jdGlvbiBkM190YW5oKHgpIHtcbiAgICByZXR1cm4gKCh4ID0gTWF0aC5leHAoMiAqIHgpKSAtIDEpIC8gKHggKyAxKTtcbiAgfVxuICBmdW5jdGlvbiBkM19oYXZlcnNpbih4KSB7XG4gICAgcmV0dXJuICh4ID0gTWF0aC5zaW4oeCAvIDIpKSAqIHg7XG4gIH1cbiAgdmFyIM+BID0gTWF0aC5TUVJUMiwgz4EyID0gMiwgz4E0ID0gNDtcbiAgZDMuaW50ZXJwb2xhdGVab29tID0gZnVuY3Rpb24ocDAsIHAxKSB7XG4gICAgdmFyIHV4MCA9IHAwWzBdLCB1eTAgPSBwMFsxXSwgdzAgPSBwMFsyXSwgdXgxID0gcDFbMF0sIHV5MSA9IHAxWzFdLCB3MSA9IHAxWzJdO1xuICAgIHZhciBkeCA9IHV4MSAtIHV4MCwgZHkgPSB1eTEgLSB1eTAsIGQyID0gZHggKiBkeCArIGR5ICogZHksIGQxID0gTWF0aC5zcXJ0KGQyKSwgYjAgPSAodzEgKiB3MSAtIHcwICogdzAgKyDPgTQgKiBkMikgLyAoMiAqIHcwICogz4EyICogZDEpLCBiMSA9ICh3MSAqIHcxIC0gdzAgKiB3MCAtIM+BNCAqIGQyKSAvICgyICogdzEgKiDPgTIgKiBkMSksIHIwID0gTWF0aC5sb2coTWF0aC5zcXJ0KGIwICogYjAgKyAxKSAtIGIwKSwgcjEgPSBNYXRoLmxvZyhNYXRoLnNxcnQoYjEgKiBiMSArIDEpIC0gYjEpLCBkciA9IHIxIC0gcjAsIFMgPSAoZHIgfHwgTWF0aC5sb2codzEgLyB3MCkpIC8gz4E7XG4gICAgZnVuY3Rpb24gaW50ZXJwb2xhdGUodCkge1xuICAgICAgdmFyIHMgPSB0ICogUztcbiAgICAgIGlmIChkcikge1xuICAgICAgICB2YXIgY29zaHIwID0gZDNfY29zaChyMCksIHUgPSB3MCAvICjPgTIgKiBkMSkgKiAoY29zaHIwICogZDNfdGFuaCjPgSAqIHMgKyByMCkgLSBkM19zaW5oKHIwKSk7XG4gICAgICAgIHJldHVybiBbIHV4MCArIHUgKiBkeCwgdXkwICsgdSAqIGR5LCB3MCAqIGNvc2hyMCAvIGQzX2Nvc2goz4EgKiBzICsgcjApIF07XG4gICAgICB9XG4gICAgICByZXR1cm4gWyB1eDAgKyB0ICogZHgsIHV5MCArIHQgKiBkeSwgdzAgKiBNYXRoLmV4cCjPgSAqIHMpIF07XG4gICAgfVxuICAgIGludGVycG9sYXRlLmR1cmF0aW9uID0gUyAqIDFlMztcbiAgICByZXR1cm4gaW50ZXJwb2xhdGU7XG4gIH07XG4gIGQzLmJlaGF2aW9yLnpvb20gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdmlldyA9IHtcbiAgICAgIHg6IDAsXG4gICAgICB5OiAwLFxuICAgICAgazogMVxuICAgIH0sIHRyYW5zbGF0ZTAsIGNlbnRlciwgc2l6ZSA9IFsgOTYwLCA1MDAgXSwgc2NhbGVFeHRlbnQgPSBkM19iZWhhdmlvcl96b29tSW5maW5pdHksIG1vdXNlZG93biA9IFwibW91c2Vkb3duLnpvb21cIiwgbW91c2Vtb3ZlID0gXCJtb3VzZW1vdmUuem9vbVwiLCBtb3VzZXVwID0gXCJtb3VzZXVwLnpvb21cIiwgbW91c2V3aGVlbFRpbWVyLCB0b3VjaHN0YXJ0ID0gXCJ0b3VjaHN0YXJ0Lnpvb21cIiwgdG91Y2h0aW1lLCBldmVudCA9IGQzX2V2ZW50RGlzcGF0Y2goem9vbSwgXCJ6b29tc3RhcnRcIiwgXCJ6b29tXCIsIFwiem9vbWVuZFwiKSwgeDAsIHgxLCB5MCwgeTE7XG4gICAgZnVuY3Rpb24gem9vbShnKSB7XG4gICAgICBnLm9uKG1vdXNlZG93biwgbW91c2Vkb3duZWQpLm9uKGQzX2JlaGF2aW9yX3pvb21XaGVlbCArIFwiLnpvb21cIiwgbW91c2V3aGVlbGVkKS5vbihtb3VzZW1vdmUsIG1vdXNld2hlZWxyZXNldCkub24oXCJkYmxjbGljay56b29tXCIsIGRibGNsaWNrZWQpLm9uKHRvdWNoc3RhcnQsIHRvdWNoc3RhcnRlZCk7XG4gICAgfVxuICAgIHpvb20uZXZlbnQgPSBmdW5jdGlvbihnKSB7XG4gICAgICBnLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBkaXNwYXRjaCA9IGV2ZW50Lm9mKHRoaXMsIGFyZ3VtZW50cyksIHZpZXcxID0gdmlldztcbiAgICAgICAgaWYgKGQzX3RyYW5zaXRpb25Jbmhlcml0SWQpIHtcbiAgICAgICAgICBkMy5zZWxlY3QodGhpcykudHJhbnNpdGlvbigpLmVhY2goXCJzdGFydC56b29tXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmlldyA9IHRoaXMuX19jaGFydF9fIHx8IHtcbiAgICAgICAgICAgICAgeDogMCxcbiAgICAgICAgICAgICAgeTogMCxcbiAgICAgICAgICAgICAgazogMVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHpvb21zdGFydGVkKGRpc3BhdGNoKTtcbiAgICAgICAgICB9KS50d2VlbihcInpvb206em9vbVwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBkeCA9IHNpemVbMF0sIGR5ID0gc2l6ZVsxXSwgY3ggPSBkeCAvIDIsIGN5ID0gZHkgLyAyLCBpID0gZDMuaW50ZXJwb2xhdGVab29tKFsgKGN4IC0gdmlldy54KSAvIHZpZXcuaywgKGN5IC0gdmlldy55KSAvIHZpZXcuaywgZHggLyB2aWV3LmsgXSwgWyAoY3ggLSB2aWV3MS54KSAvIHZpZXcxLmssIChjeSAtIHZpZXcxLnkpIC8gdmlldzEuaywgZHggLyB2aWV3MS5rIF0pO1xuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICAgICAgdmFyIGwgPSBpKHQpLCBrID0gZHggLyBsWzJdO1xuICAgICAgICAgICAgICB0aGlzLl9fY2hhcnRfXyA9IHZpZXcgPSB7XG4gICAgICAgICAgICAgICAgeDogY3ggLSBsWzBdICogayxcbiAgICAgICAgICAgICAgICB5OiBjeSAtIGxbMV0gKiBrLFxuICAgICAgICAgICAgICAgIGs6IGtcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgem9vbWVkKGRpc3BhdGNoKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfSkuZWFjaChcImVuZC56b29tXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgem9vbWVuZGVkKGRpc3BhdGNoKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLl9fY2hhcnRfXyA9IHZpZXc7XG4gICAgICAgICAgem9vbXN0YXJ0ZWQoZGlzcGF0Y2gpO1xuICAgICAgICAgIHpvb21lZChkaXNwYXRjaCk7XG4gICAgICAgICAgem9vbWVuZGVkKGRpc3BhdGNoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfTtcbiAgICB6b29tLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFsgdmlldy54LCB2aWV3LnkgXTtcbiAgICAgIHZpZXcgPSB7XG4gICAgICAgIHg6ICtfWzBdLFxuICAgICAgICB5OiArX1sxXSxcbiAgICAgICAgazogdmlldy5rXG4gICAgICB9O1xuICAgICAgcmVzY2FsZSgpO1xuICAgICAgcmV0dXJuIHpvb207XG4gICAgfTtcbiAgICB6b29tLnNjYWxlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdmlldy5rO1xuICAgICAgdmlldyA9IHtcbiAgICAgICAgeDogdmlldy54LFxuICAgICAgICB5OiB2aWV3LnksXG4gICAgICAgIGs6ICtfXG4gICAgICB9O1xuICAgICAgcmVzY2FsZSgpO1xuICAgICAgcmV0dXJuIHpvb207XG4gICAgfTtcbiAgICB6b29tLnNjYWxlRXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc2NhbGVFeHRlbnQ7XG4gICAgICBzY2FsZUV4dGVudCA9IF8gPT0gbnVsbCA/IGQzX2JlaGF2aW9yX3pvb21JbmZpbml0eSA6IFsgK19bMF0sICtfWzFdIF07XG4gICAgICByZXR1cm4gem9vbTtcbiAgICB9O1xuICAgIHpvb20uY2VudGVyID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gY2VudGVyO1xuICAgICAgY2VudGVyID0gXyAmJiBbICtfWzBdLCArX1sxXSBdO1xuICAgICAgcmV0dXJuIHpvb207XG4gICAgfTtcbiAgICB6b29tLnNpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzaXplO1xuICAgICAgc2l6ZSA9IF8gJiYgWyArX1swXSwgK19bMV0gXTtcbiAgICAgIHJldHVybiB6b29tO1xuICAgIH07XG4gICAgem9vbS54ID0gZnVuY3Rpb24oeikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geDE7XG4gICAgICB4MSA9IHo7XG4gICAgICB4MCA9IHouY29weSgpO1xuICAgICAgdmlldyA9IHtcbiAgICAgICAgeDogMCxcbiAgICAgICAgeTogMCxcbiAgICAgICAgazogMVxuICAgICAgfTtcbiAgICAgIHJldHVybiB6b29tO1xuICAgIH07XG4gICAgem9vbS55ID0gZnVuY3Rpb24oeikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geTE7XG4gICAgICB5MSA9IHo7XG4gICAgICB5MCA9IHouY29weSgpO1xuICAgICAgdmlldyA9IHtcbiAgICAgICAgeDogMCxcbiAgICAgICAgeTogMCxcbiAgICAgICAgazogMVxuICAgICAgfTtcbiAgICAgIHJldHVybiB6b29tO1xuICAgIH07XG4gICAgZnVuY3Rpb24gbG9jYXRpb24ocCkge1xuICAgICAgcmV0dXJuIFsgKHBbMF0gLSB2aWV3LngpIC8gdmlldy5rLCAocFsxXSAtIHZpZXcueSkgLyB2aWV3LmsgXTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcG9pbnQobCkge1xuICAgICAgcmV0dXJuIFsgbFswXSAqIHZpZXcuayArIHZpZXcueCwgbFsxXSAqIHZpZXcuayArIHZpZXcueSBdO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzY2FsZVRvKHMpIHtcbiAgICAgIHZpZXcuayA9IE1hdGgubWF4KHNjYWxlRXh0ZW50WzBdLCBNYXRoLm1pbihzY2FsZUV4dGVudFsxXSwgcykpO1xuICAgIH1cbiAgICBmdW5jdGlvbiB0cmFuc2xhdGVUbyhwLCBsKSB7XG4gICAgICBsID0gcG9pbnQobCk7XG4gICAgICB2aWV3LnggKz0gcFswXSAtIGxbMF07XG4gICAgICB2aWV3LnkgKz0gcFsxXSAtIGxbMV07XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJlc2NhbGUoKSB7XG4gICAgICBpZiAoeDEpIHgxLmRvbWFpbih4MC5yYW5nZSgpLm1hcChmdW5jdGlvbih4KSB7XG4gICAgICAgIHJldHVybiAoeCAtIHZpZXcueCkgLyB2aWV3Lms7XG4gICAgICB9KS5tYXAoeDAuaW52ZXJ0KSk7XG4gICAgICBpZiAoeTEpIHkxLmRvbWFpbih5MC5yYW5nZSgpLm1hcChmdW5jdGlvbih5KSB7XG4gICAgICAgIHJldHVybiAoeSAtIHZpZXcueSkgLyB2aWV3Lms7XG4gICAgICB9KS5tYXAoeTAuaW52ZXJ0KSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHpvb21zdGFydGVkKGRpc3BhdGNoKSB7XG4gICAgICBkaXNwYXRjaCh7XG4gICAgICAgIHR5cGU6IFwiem9vbXN0YXJ0XCJcbiAgICAgIH0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiB6b29tZWQoZGlzcGF0Y2gpIHtcbiAgICAgIHJlc2NhbGUoKTtcbiAgICAgIGRpc3BhdGNoKHtcbiAgICAgICAgdHlwZTogXCJ6b29tXCIsXG4gICAgICAgIHNjYWxlOiB2aWV3LmssXG4gICAgICAgIHRyYW5zbGF0ZTogWyB2aWV3LngsIHZpZXcueSBdXG4gICAgICB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gem9vbWVuZGVkKGRpc3BhdGNoKSB7XG4gICAgICBkaXNwYXRjaCh7XG4gICAgICAgIHR5cGU6IFwiem9vbWVuZFwiXG4gICAgICB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gbW91c2Vkb3duZWQoKSB7XG4gICAgICB2YXIgdGhhdCA9IHRoaXMsIHRhcmdldCA9IGQzLmV2ZW50LnRhcmdldCwgZGlzcGF0Y2ggPSBldmVudC5vZih0aGF0LCBhcmd1bWVudHMpLCBkcmFnZ2VkID0gMCwgc3ViamVjdCA9IGQzLnNlbGVjdChkM193aW5kb3cpLm9uKG1vdXNlbW92ZSwgbW92ZWQpLm9uKG1vdXNldXAsIGVuZGVkKSwgbG9jYXRpb24wID0gbG9jYXRpb24oZDMubW91c2UodGhhdCkpLCBkcmFnUmVzdG9yZSA9IGQzX2V2ZW50X2RyYWdTdXBwcmVzcygpO1xuICAgICAgZDNfc2VsZWN0aW9uX2ludGVycnVwdC5jYWxsKHRoYXQpO1xuICAgICAgem9vbXN0YXJ0ZWQoZGlzcGF0Y2gpO1xuICAgICAgZnVuY3Rpb24gbW92ZWQoKSB7XG4gICAgICAgIGRyYWdnZWQgPSAxO1xuICAgICAgICB0cmFuc2xhdGVUbyhkMy5tb3VzZSh0aGF0KSwgbG9jYXRpb24wKTtcbiAgICAgICAgem9vbWVkKGRpc3BhdGNoKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGVuZGVkKCkge1xuICAgICAgICBzdWJqZWN0Lm9uKG1vdXNlbW92ZSwgZDNfd2luZG93ID09PSB0aGF0ID8gbW91c2V3aGVlbHJlc2V0IDogbnVsbCkub24obW91c2V1cCwgbnVsbCk7XG4gICAgICAgIGRyYWdSZXN0b3JlKGRyYWdnZWQgJiYgZDMuZXZlbnQudGFyZ2V0ID09PSB0YXJnZXQpO1xuICAgICAgICB6b29tZW5kZWQoZGlzcGF0Y2gpO1xuICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiB0b3VjaHN0YXJ0ZWQoKSB7XG4gICAgICB2YXIgdGhhdCA9IHRoaXMsIGRpc3BhdGNoID0gZXZlbnQub2YodGhhdCwgYXJndW1lbnRzKSwgbG9jYXRpb25zMCA9IHt9LCBkaXN0YW5jZTAgPSAwLCBzY2FsZTAsIHpvb21OYW1lID0gXCIuem9vbS1cIiArIGQzLmV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdLmlkZW50aWZpZXIsIHRvdWNobW92ZSA9IFwidG91Y2htb3ZlXCIgKyB6b29tTmFtZSwgdG91Y2hlbmQgPSBcInRvdWNoZW5kXCIgKyB6b29tTmFtZSwgdGFyZ2V0cyA9IFtdLCBzdWJqZWN0ID0gZDMuc2VsZWN0KHRoYXQpLm9uKG1vdXNlZG93biwgbnVsbCkub24odG91Y2hzdGFydCwgc3RhcnRlZCksIGRyYWdSZXN0b3JlID0gZDNfZXZlbnRfZHJhZ1N1cHByZXNzKCk7XG4gICAgICBkM19zZWxlY3Rpb25faW50ZXJydXB0LmNhbGwodGhhdCk7XG4gICAgICBzdGFydGVkKCk7XG4gICAgICB6b29tc3RhcnRlZChkaXNwYXRjaCk7XG4gICAgICBmdW5jdGlvbiByZWxvY2F0ZSgpIHtcbiAgICAgICAgdmFyIHRvdWNoZXMgPSBkMy50b3VjaGVzKHRoYXQpO1xuICAgICAgICBzY2FsZTAgPSB2aWV3Lms7XG4gICAgICAgIHRvdWNoZXMuZm9yRWFjaChmdW5jdGlvbih0KSB7XG4gICAgICAgICAgaWYgKHQuaWRlbnRpZmllciBpbiBsb2NhdGlvbnMwKSBsb2NhdGlvbnMwW3QuaWRlbnRpZmllcl0gPSBsb2NhdGlvbih0KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0b3VjaGVzO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gc3RhcnRlZCgpIHtcbiAgICAgICAgdmFyIHRhcmdldCA9IGQzLmV2ZW50LnRhcmdldDtcbiAgICAgICAgZDMuc2VsZWN0KHRhcmdldCkub24odG91Y2htb3ZlLCBtb3ZlZCkub24odG91Y2hlbmQsIGVuZGVkKTtcbiAgICAgICAgdGFyZ2V0cy5wdXNoKHRhcmdldCk7XG4gICAgICAgIHZhciBjaGFuZ2VkID0gZDMuZXZlbnQuY2hhbmdlZFRvdWNoZXM7XG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBuID0gY2hhbmdlZC5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgICBsb2NhdGlvbnMwW2NoYW5nZWRbaV0uaWRlbnRpZmllcl0gPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHZhciB0b3VjaGVzID0gcmVsb2NhdGUoKSwgbm93ID0gRGF0ZS5ub3coKTtcbiAgICAgICAgaWYgKHRvdWNoZXMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgaWYgKG5vdyAtIHRvdWNodGltZSA8IDUwMCkge1xuICAgICAgICAgICAgdmFyIHAgPSB0b3VjaGVzWzBdLCBsID0gbG9jYXRpb25zMFtwLmlkZW50aWZpZXJdO1xuICAgICAgICAgICAgc2NhbGVUbyh2aWV3LmsgKiAyKTtcbiAgICAgICAgICAgIHRyYW5zbGF0ZVRvKHAsIGwpO1xuICAgICAgICAgICAgZDNfZXZlbnRQcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgem9vbWVkKGRpc3BhdGNoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdG91Y2h0aW1lID0gbm93O1xuICAgICAgICB9IGVsc2UgaWYgKHRvdWNoZXMubGVuZ3RoID4gMSkge1xuICAgICAgICAgIHZhciBwID0gdG91Y2hlc1swXSwgcSA9IHRvdWNoZXNbMV0sIGR4ID0gcFswXSAtIHFbMF0sIGR5ID0gcFsxXSAtIHFbMV07XG4gICAgICAgICAgZGlzdGFuY2UwID0gZHggKiBkeCArIGR5ICogZHk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIG1vdmVkKCkge1xuICAgICAgICB2YXIgdG91Y2hlcyA9IGQzLnRvdWNoZXModGhhdCksIHAwLCBsMCwgcDEsIGwxO1xuICAgICAgICBmb3IgKHZhciBpID0gMCwgbiA9IHRvdWNoZXMubGVuZ3RoOyBpIDwgbjsgKytpLCBsMSA9IG51bGwpIHtcbiAgICAgICAgICBwMSA9IHRvdWNoZXNbaV07XG4gICAgICAgICAgaWYgKGwxID0gbG9jYXRpb25zMFtwMS5pZGVudGlmaWVyXSkge1xuICAgICAgICAgICAgaWYgKGwwKSBicmVhaztcbiAgICAgICAgICAgIHAwID0gcDEsIGwwID0gbDE7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChsMSkge1xuICAgICAgICAgIHZhciBkaXN0YW5jZTEgPSAoZGlzdGFuY2UxID0gcDFbMF0gLSBwMFswXSkgKiBkaXN0YW5jZTEgKyAoZGlzdGFuY2UxID0gcDFbMV0gLSBwMFsxXSkgKiBkaXN0YW5jZTEsIHNjYWxlMSA9IGRpc3RhbmNlMCAmJiBNYXRoLnNxcnQoZGlzdGFuY2UxIC8gZGlzdGFuY2UwKTtcbiAgICAgICAgICBwMCA9IFsgKHAwWzBdICsgcDFbMF0pIC8gMiwgKHAwWzFdICsgcDFbMV0pIC8gMiBdO1xuICAgICAgICAgIGwwID0gWyAobDBbMF0gKyBsMVswXSkgLyAyLCAobDBbMV0gKyBsMVsxXSkgLyAyIF07XG4gICAgICAgICAgc2NhbGVUbyhzY2FsZTEgKiBzY2FsZTApO1xuICAgICAgICB9XG4gICAgICAgIHRvdWNodGltZSA9IG51bGw7XG4gICAgICAgIHRyYW5zbGF0ZVRvKHAwLCBsMCk7XG4gICAgICAgIHpvb21lZChkaXNwYXRjaCk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBlbmRlZCgpIHtcbiAgICAgICAgaWYgKGQzLmV2ZW50LnRvdWNoZXMubGVuZ3RoKSB7XG4gICAgICAgICAgdmFyIGNoYW5nZWQgPSBkMy5ldmVudC5jaGFuZ2VkVG91Y2hlcztcbiAgICAgICAgICBmb3IgKHZhciBpID0gMCwgbiA9IGNoYW5nZWQubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICAgICAgICBkZWxldGUgbG9jYXRpb25zMFtjaGFuZ2VkW2ldLmlkZW50aWZpZXJdO1xuICAgICAgICAgIH1cbiAgICAgICAgICBmb3IgKHZhciBpZGVudGlmaWVyIGluIGxvY2F0aW9uczApIHtcbiAgICAgICAgICAgIHJldHVybiB2b2lkIHJlbG9jYXRlKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGQzLnNlbGVjdEFsbCh0YXJnZXRzKS5vbih6b29tTmFtZSwgbnVsbCk7XG4gICAgICAgIHN1YmplY3Qub24obW91c2Vkb3duLCBtb3VzZWRvd25lZCkub24odG91Y2hzdGFydCwgdG91Y2hzdGFydGVkKTtcbiAgICAgICAgZHJhZ1Jlc3RvcmUoKTtcbiAgICAgICAgem9vbWVuZGVkKGRpc3BhdGNoKTtcbiAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gbW91c2V3aGVlbGVkKCkge1xuICAgICAgdmFyIGRpc3BhdGNoID0gZXZlbnQub2YodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIGlmIChtb3VzZXdoZWVsVGltZXIpIGNsZWFyVGltZW91dChtb3VzZXdoZWVsVGltZXIpOyBlbHNlIGQzX3NlbGVjdGlvbl9pbnRlcnJ1cHQuY2FsbCh0aGlzKSwgXG4gICAgICB6b29tc3RhcnRlZChkaXNwYXRjaCk7XG4gICAgICBtb3VzZXdoZWVsVGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICBtb3VzZXdoZWVsVGltZXIgPSBudWxsO1xuICAgICAgICB6b29tZW5kZWQoZGlzcGF0Y2gpO1xuICAgICAgfSwgNTApO1xuICAgICAgZDNfZXZlbnRQcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdmFyIHBvaW50ID0gY2VudGVyIHx8IGQzLm1vdXNlKHRoaXMpO1xuICAgICAgaWYgKCF0cmFuc2xhdGUwKSB0cmFuc2xhdGUwID0gbG9jYXRpb24ocG9pbnQpO1xuICAgICAgc2NhbGVUbyhNYXRoLnBvdygyLCBkM19iZWhhdmlvcl96b29tRGVsdGEoKSAqIC4wMDIpICogdmlldy5rKTtcbiAgICAgIHRyYW5zbGF0ZVRvKHBvaW50LCB0cmFuc2xhdGUwKTtcbiAgICAgIHpvb21lZChkaXNwYXRjaCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIG1vdXNld2hlZWxyZXNldCgpIHtcbiAgICAgIHRyYW5zbGF0ZTAgPSBudWxsO1xuICAgIH1cbiAgICBmdW5jdGlvbiBkYmxjbGlja2VkKCkge1xuICAgICAgdmFyIGRpc3BhdGNoID0gZXZlbnQub2YodGhpcywgYXJndW1lbnRzKSwgcCA9IGQzLm1vdXNlKHRoaXMpLCBsID0gbG9jYXRpb24ocCksIGsgPSBNYXRoLmxvZyh2aWV3LmspIC8gTWF0aC5MTjI7XG4gICAgICB6b29tc3RhcnRlZChkaXNwYXRjaCk7XG4gICAgICBzY2FsZVRvKE1hdGgucG93KDIsIGQzLmV2ZW50LnNoaWZ0S2V5ID8gTWF0aC5jZWlsKGspIC0gMSA6IE1hdGguZmxvb3IoaykgKyAxKSk7XG4gICAgICB0cmFuc2xhdGVUbyhwLCBsKTtcbiAgICAgIHpvb21lZChkaXNwYXRjaCk7XG4gICAgICB6b29tZW5kZWQoZGlzcGF0Y2gpO1xuICAgIH1cbiAgICByZXR1cm4gZDMucmViaW5kKHpvb20sIGV2ZW50LCBcIm9uXCIpO1xuICB9O1xuICB2YXIgZDNfYmVoYXZpb3Jfem9vbUluZmluaXR5ID0gWyAwLCBJbmZpbml0eSBdO1xuICB2YXIgZDNfYmVoYXZpb3Jfem9vbURlbHRhLCBkM19iZWhhdmlvcl96b29tV2hlZWwgPSBcIm9ud2hlZWxcIiBpbiBkM19kb2N1bWVudCA/IChkM19iZWhhdmlvcl96b29tRGVsdGEgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gLWQzLmV2ZW50LmRlbHRhWSAqIChkMy5ldmVudC5kZWx0YU1vZGUgPyAxMjAgOiAxKTtcbiAgfSwgXCJ3aGVlbFwiKSA6IFwib25tb3VzZXdoZWVsXCIgaW4gZDNfZG9jdW1lbnQgPyAoZDNfYmVoYXZpb3Jfem9vbURlbHRhID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzLmV2ZW50LndoZWVsRGVsdGE7XG4gIH0sIFwibW91c2V3aGVlbFwiKSA6IChkM19iZWhhdmlvcl96b29tRGVsdGEgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gLWQzLmV2ZW50LmRldGFpbDtcbiAgfSwgXCJNb3pNb3VzZVBpeGVsU2Nyb2xsXCIpO1xuICBmdW5jdGlvbiBkM19Db2xvcigpIHt9XG4gIGQzX0NvbG9yLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLnJnYigpICsgXCJcIjtcbiAgfTtcbiAgZDMuaHNsID0gZnVuY3Rpb24oaCwgcywgbCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID8gaCBpbnN0YW5jZW9mIGQzX0hzbCA/IGQzX2hzbChoLmgsIGgucywgaC5sKSA6IGQzX3JnYl9wYXJzZShcIlwiICsgaCwgZDNfcmdiX2hzbCwgZDNfaHNsKSA6IGQzX2hzbCgraCwgK3MsICtsKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfaHNsKGgsIHMsIGwpIHtcbiAgICByZXR1cm4gbmV3IGQzX0hzbChoLCBzLCBsKTtcbiAgfVxuICBmdW5jdGlvbiBkM19Ic2woaCwgcywgbCkge1xuICAgIHRoaXMuaCA9IGg7XG4gICAgdGhpcy5zID0gcztcbiAgICB0aGlzLmwgPSBsO1xuICB9XG4gIHZhciBkM19oc2xQcm90b3R5cGUgPSBkM19Ic2wucHJvdG90eXBlID0gbmV3IGQzX0NvbG9yKCk7XG4gIGQzX2hzbFByb3RvdHlwZS5icmlnaHRlciA9IGZ1bmN0aW9uKGspIHtcbiAgICBrID0gTWF0aC5wb3coLjcsIGFyZ3VtZW50cy5sZW5ndGggPyBrIDogMSk7XG4gICAgcmV0dXJuIGQzX2hzbCh0aGlzLmgsIHRoaXMucywgdGhpcy5sIC8gayk7XG4gIH07XG4gIGQzX2hzbFByb3RvdHlwZS5kYXJrZXIgPSBmdW5jdGlvbihrKSB7XG4gICAgayA9IE1hdGgucG93KC43LCBhcmd1bWVudHMubGVuZ3RoID8gayA6IDEpO1xuICAgIHJldHVybiBkM19oc2wodGhpcy5oLCB0aGlzLnMsIGsgKiB0aGlzLmwpO1xuICB9O1xuICBkM19oc2xQcm90b3R5cGUucmdiID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX2hzbF9yZ2IodGhpcy5oLCB0aGlzLnMsIHRoaXMubCk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2hzbF9yZ2IoaCwgcywgbCkge1xuICAgIHZhciBtMSwgbTI7XG4gICAgaCA9IGlzTmFOKGgpID8gMCA6IChoICU9IDM2MCkgPCAwID8gaCArIDM2MCA6IGg7XG4gICAgcyA9IGlzTmFOKHMpID8gMCA6IHMgPCAwID8gMCA6IHMgPiAxID8gMSA6IHM7XG4gICAgbCA9IGwgPCAwID8gMCA6IGwgPiAxID8gMSA6IGw7XG4gICAgbTIgPSBsIDw9IC41ID8gbCAqICgxICsgcykgOiBsICsgcyAtIGwgKiBzO1xuICAgIG0xID0gMiAqIGwgLSBtMjtcbiAgICBmdW5jdGlvbiB2KGgpIHtcbiAgICAgIGlmIChoID4gMzYwKSBoIC09IDM2MDsgZWxzZSBpZiAoaCA8IDApIGggKz0gMzYwO1xuICAgICAgaWYgKGggPCA2MCkgcmV0dXJuIG0xICsgKG0yIC0gbTEpICogaCAvIDYwO1xuICAgICAgaWYgKGggPCAxODApIHJldHVybiBtMjtcbiAgICAgIGlmIChoIDwgMjQwKSByZXR1cm4gbTEgKyAobTIgLSBtMSkgKiAoMjQwIC0gaCkgLyA2MDtcbiAgICAgIHJldHVybiBtMTtcbiAgICB9XG4gICAgZnVuY3Rpb24gdnYoaCkge1xuICAgICAgcmV0dXJuIE1hdGgucm91bmQodihoKSAqIDI1NSk7XG4gICAgfVxuICAgIHJldHVybiBkM19yZ2IodnYoaCArIDEyMCksIHZ2KGgpLCB2dihoIC0gMTIwKSk7XG4gIH1cbiAgZDMuaGNsID0gZnVuY3Rpb24oaCwgYywgbCkge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID8gaCBpbnN0YW5jZW9mIGQzX0hjbCA/IGQzX2hjbChoLmgsIGguYywgaC5sKSA6IGggaW5zdGFuY2VvZiBkM19MYWIgPyBkM19sYWJfaGNsKGgubCwgaC5hLCBoLmIpIDogZDNfbGFiX2hjbCgoaCA9IGQzX3JnYl9sYWIoKGggPSBkMy5yZ2IoaCkpLnIsIGguZywgaC5iKSkubCwgaC5hLCBoLmIpIDogZDNfaGNsKCtoLCArYywgK2wpO1xuICB9O1xuICBmdW5jdGlvbiBkM19oY2woaCwgYywgbCkge1xuICAgIHJldHVybiBuZXcgZDNfSGNsKGgsIGMsIGwpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX0hjbChoLCBjLCBsKSB7XG4gICAgdGhpcy5oID0gaDtcbiAgICB0aGlzLmMgPSBjO1xuICAgIHRoaXMubCA9IGw7XG4gIH1cbiAgdmFyIGQzX2hjbFByb3RvdHlwZSA9IGQzX0hjbC5wcm90b3R5cGUgPSBuZXcgZDNfQ29sb3IoKTtcbiAgZDNfaGNsUHJvdG90eXBlLmJyaWdodGVyID0gZnVuY3Rpb24oaykge1xuICAgIHJldHVybiBkM19oY2wodGhpcy5oLCB0aGlzLmMsIE1hdGgubWluKDEwMCwgdGhpcy5sICsgZDNfbGFiX0sgKiAoYXJndW1lbnRzLmxlbmd0aCA/IGsgOiAxKSkpO1xuICB9O1xuICBkM19oY2xQcm90b3R5cGUuZGFya2VyID0gZnVuY3Rpb24oaykge1xuICAgIHJldHVybiBkM19oY2wodGhpcy5oLCB0aGlzLmMsIE1hdGgubWF4KDAsIHRoaXMubCAtIGQzX2xhYl9LICogKGFyZ3VtZW50cy5sZW5ndGggPyBrIDogMSkpKTtcbiAgfTtcbiAgZDNfaGNsUHJvdG90eXBlLnJnYiA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19oY2xfbGFiKHRoaXMuaCwgdGhpcy5jLCB0aGlzLmwpLnJnYigpO1xuICB9O1xuICBmdW5jdGlvbiBkM19oY2xfbGFiKGgsIGMsIGwpIHtcbiAgICBpZiAoaXNOYU4oaCkpIGggPSAwO1xuICAgIGlmIChpc05hTihjKSkgYyA9IDA7XG4gICAgcmV0dXJuIGQzX2xhYihsLCBNYXRoLmNvcyhoICo9IGQzX3JhZGlhbnMpICogYywgTWF0aC5zaW4oaCkgKiBjKTtcbiAgfVxuICBkMy5sYWIgPSBmdW5jdGlvbihsLCBhLCBiKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPT09IDEgPyBsIGluc3RhbmNlb2YgZDNfTGFiID8gZDNfbGFiKGwubCwgbC5hLCBsLmIpIDogbCBpbnN0YW5jZW9mIGQzX0hjbCA/IGQzX2hjbF9sYWIobC5sLCBsLmMsIGwuaCkgOiBkM19yZ2JfbGFiKChsID0gZDMucmdiKGwpKS5yLCBsLmcsIGwuYikgOiBkM19sYWIoK2wsICthLCArYik7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2xhYihsLCBhLCBiKSB7XG4gICAgcmV0dXJuIG5ldyBkM19MYWIobCwgYSwgYik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfTGFiKGwsIGEsIGIpIHtcbiAgICB0aGlzLmwgPSBsO1xuICAgIHRoaXMuYSA9IGE7XG4gICAgdGhpcy5iID0gYjtcbiAgfVxuICB2YXIgZDNfbGFiX0sgPSAxODtcbiAgdmFyIGQzX2xhYl9YID0gLjk1MDQ3LCBkM19sYWJfWSA9IDEsIGQzX2xhYl9aID0gMS4wODg4MztcbiAgdmFyIGQzX2xhYlByb3RvdHlwZSA9IGQzX0xhYi5wcm90b3R5cGUgPSBuZXcgZDNfQ29sb3IoKTtcbiAgZDNfbGFiUHJvdG90eXBlLmJyaWdodGVyID0gZnVuY3Rpb24oaykge1xuICAgIHJldHVybiBkM19sYWIoTWF0aC5taW4oMTAwLCB0aGlzLmwgKyBkM19sYWJfSyAqIChhcmd1bWVudHMubGVuZ3RoID8gayA6IDEpKSwgdGhpcy5hLCB0aGlzLmIpO1xuICB9O1xuICBkM19sYWJQcm90b3R5cGUuZGFya2VyID0gZnVuY3Rpb24oaykge1xuICAgIHJldHVybiBkM19sYWIoTWF0aC5tYXgoMCwgdGhpcy5sIC0gZDNfbGFiX0sgKiAoYXJndW1lbnRzLmxlbmd0aCA/IGsgOiAxKSksIHRoaXMuYSwgdGhpcy5iKTtcbiAgfTtcbiAgZDNfbGFiUHJvdG90eXBlLnJnYiA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19sYWJfcmdiKHRoaXMubCwgdGhpcy5hLCB0aGlzLmIpO1xuICB9O1xuICBmdW5jdGlvbiBkM19sYWJfcmdiKGwsIGEsIGIpIHtcbiAgICB2YXIgeSA9IChsICsgMTYpIC8gMTE2LCB4ID0geSArIGEgLyA1MDAsIHogPSB5IC0gYiAvIDIwMDtcbiAgICB4ID0gZDNfbGFiX3h5eih4KSAqIGQzX2xhYl9YO1xuICAgIHkgPSBkM19sYWJfeHl6KHkpICogZDNfbGFiX1k7XG4gICAgeiA9IGQzX2xhYl94eXooeikgKiBkM19sYWJfWjtcbiAgICByZXR1cm4gZDNfcmdiKGQzX3h5el9yZ2IoMy4yNDA0NTQyICogeCAtIDEuNTM3MTM4NSAqIHkgLSAuNDk4NTMxNCAqIHopLCBkM194eXpfcmdiKC0uOTY5MjY2ICogeCArIDEuODc2MDEwOCAqIHkgKyAuMDQxNTU2ICogeiksIGQzX3h5el9yZ2IoLjA1NTY0MzQgKiB4IC0gLjIwNDAyNTkgKiB5ICsgMS4wNTcyMjUyICogeikpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xhYl9oY2wobCwgYSwgYikge1xuICAgIHJldHVybiBsID4gMCA/IGQzX2hjbChNYXRoLmF0YW4yKGIsIGEpICogZDNfZGVncmVlcywgTWF0aC5zcXJ0KGEgKiBhICsgYiAqIGIpLCBsKSA6IGQzX2hjbChOYU4sIE5hTiwgbCk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGFiX3h5eih4KSB7XG4gICAgcmV0dXJuIHggPiAuMjA2ODkzMDM0ID8geCAqIHggKiB4IDogKHggLSA0IC8gMjkpIC8gNy43ODcwMzc7XG4gIH1cbiAgZnVuY3Rpb24gZDNfeHl6X2xhYih4KSB7XG4gICAgcmV0dXJuIHggPiAuMDA4ODU2ID8gTWF0aC5wb3coeCwgMSAvIDMpIDogNy43ODcwMzcgKiB4ICsgNCAvIDI5O1xuICB9XG4gIGZ1bmN0aW9uIGQzX3h5el9yZ2Iocikge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKDI1NSAqIChyIDw9IC4wMDMwNCA/IDEyLjkyICogciA6IDEuMDU1ICogTWF0aC5wb3cociwgMSAvIDIuNCkgLSAuMDU1KSk7XG4gIH1cbiAgZDMucmdiID0gZnVuY3Rpb24ociwgZywgYikge1xuICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID8gciBpbnN0YW5jZW9mIGQzX1JnYiA/IGQzX3JnYihyLnIsIHIuZywgci5iKSA6IGQzX3JnYl9wYXJzZShcIlwiICsgciwgZDNfcmdiLCBkM19oc2xfcmdiKSA6IGQzX3JnYih+fnIsIH5+Zywgfn5iKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfcmdiTnVtYmVyKHZhbHVlKSB7XG4gICAgcmV0dXJuIGQzX3JnYih2YWx1ZSA+PiAxNiwgdmFsdWUgPj4gOCAmIDI1NSwgdmFsdWUgJiAyNTUpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3JnYlN0cmluZyh2YWx1ZSkge1xuICAgIHJldHVybiBkM19yZ2JOdW1iZXIodmFsdWUpICsgXCJcIjtcbiAgfVxuICBmdW5jdGlvbiBkM19yZ2IociwgZywgYikge1xuICAgIHJldHVybiBuZXcgZDNfUmdiKHIsIGcsIGIpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX1JnYihyLCBnLCBiKSB7XG4gICAgdGhpcy5yID0gcjtcbiAgICB0aGlzLmcgPSBnO1xuICAgIHRoaXMuYiA9IGI7XG4gIH1cbiAgdmFyIGQzX3JnYlByb3RvdHlwZSA9IGQzX1JnYi5wcm90b3R5cGUgPSBuZXcgZDNfQ29sb3IoKTtcbiAgZDNfcmdiUHJvdG90eXBlLmJyaWdodGVyID0gZnVuY3Rpb24oaykge1xuICAgIGsgPSBNYXRoLnBvdyguNywgYXJndW1lbnRzLmxlbmd0aCA/IGsgOiAxKTtcbiAgICB2YXIgciA9IHRoaXMuciwgZyA9IHRoaXMuZywgYiA9IHRoaXMuYiwgaSA9IDMwO1xuICAgIGlmICghciAmJiAhZyAmJiAhYikgcmV0dXJuIGQzX3JnYihpLCBpLCBpKTtcbiAgICBpZiAociAmJiByIDwgaSkgciA9IGk7XG4gICAgaWYgKGcgJiYgZyA8IGkpIGcgPSBpO1xuICAgIGlmIChiICYmIGIgPCBpKSBiID0gaTtcbiAgICByZXR1cm4gZDNfcmdiKE1hdGgubWluKDI1NSwgfn4ociAvIGspKSwgTWF0aC5taW4oMjU1LCB+fihnIC8gaykpLCBNYXRoLm1pbigyNTUsIH5+KGIgLyBrKSkpO1xuICB9O1xuICBkM19yZ2JQcm90b3R5cGUuZGFya2VyID0gZnVuY3Rpb24oaykge1xuICAgIGsgPSBNYXRoLnBvdyguNywgYXJndW1lbnRzLmxlbmd0aCA/IGsgOiAxKTtcbiAgICByZXR1cm4gZDNfcmdiKH5+KGsgKiB0aGlzLnIpLCB+fihrICogdGhpcy5nKSwgfn4oayAqIHRoaXMuYikpO1xuICB9O1xuICBkM19yZ2JQcm90b3R5cGUuaHNsID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX3JnYl9oc2wodGhpcy5yLCB0aGlzLmcsIHRoaXMuYik7XG4gIH07XG4gIGQzX3JnYlByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBcIiNcIiArIGQzX3JnYl9oZXgodGhpcy5yKSArIGQzX3JnYl9oZXgodGhpcy5nKSArIGQzX3JnYl9oZXgodGhpcy5iKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfcmdiX2hleCh2KSB7XG4gICAgcmV0dXJuIHYgPCAxNiA/IFwiMFwiICsgTWF0aC5tYXgoMCwgdikudG9TdHJpbmcoMTYpIDogTWF0aC5taW4oMjU1LCB2KS50b1N0cmluZygxNik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfcmdiX3BhcnNlKGZvcm1hdCwgcmdiLCBoc2wpIHtcbiAgICB2YXIgciA9IDAsIGcgPSAwLCBiID0gMCwgbTEsIG0yLCBjb2xvcjtcbiAgICBtMSA9IC8oW2Etel0rKVxcKCguKilcXCkvaS5leGVjKGZvcm1hdCk7XG4gICAgaWYgKG0xKSB7XG4gICAgICBtMiA9IG0xWzJdLnNwbGl0KFwiLFwiKTtcbiAgICAgIHN3aXRjaCAobTFbMV0pIHtcbiAgICAgICBjYXNlIFwiaHNsXCI6XG4gICAgICAgIHtcbiAgICAgICAgICByZXR1cm4gaHNsKHBhcnNlRmxvYXQobTJbMF0pLCBwYXJzZUZsb2F0KG0yWzFdKSAvIDEwMCwgcGFyc2VGbG9hdChtMlsyXSkgLyAxMDApO1xuICAgICAgICB9XG5cbiAgICAgICBjYXNlIFwicmdiXCI6XG4gICAgICAgIHtcbiAgICAgICAgICByZXR1cm4gcmdiKGQzX3JnYl9wYXJzZU51bWJlcihtMlswXSksIGQzX3JnYl9wYXJzZU51bWJlcihtMlsxXSksIGQzX3JnYl9wYXJzZU51bWJlcihtMlsyXSkpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChjb2xvciA9IGQzX3JnYl9uYW1lcy5nZXQoZm9ybWF0KSkgcmV0dXJuIHJnYihjb2xvci5yLCBjb2xvci5nLCBjb2xvci5iKTtcbiAgICBpZiAoZm9ybWF0ICE9IG51bGwgJiYgZm9ybWF0LmNoYXJBdCgwKSA9PT0gXCIjXCIgJiYgIWlzTmFOKGNvbG9yID0gcGFyc2VJbnQoZm9ybWF0LnN1YnN0cmluZygxKSwgMTYpKSkge1xuICAgICAgaWYgKGZvcm1hdC5sZW5ndGggPT09IDQpIHtcbiAgICAgICAgciA9IChjb2xvciAmIDM4NDApID4+IDQ7XG4gICAgICAgIHIgPSByID4+IDQgfCByO1xuICAgICAgICBnID0gY29sb3IgJiAyNDA7XG4gICAgICAgIGcgPSBnID4+IDQgfCBnO1xuICAgICAgICBiID0gY29sb3IgJiAxNTtcbiAgICAgICAgYiA9IGIgPDwgNCB8IGI7XG4gICAgICB9IGVsc2UgaWYgKGZvcm1hdC5sZW5ndGggPT09IDcpIHtcbiAgICAgICAgciA9IChjb2xvciAmIDE2NzExNjgwKSA+PiAxNjtcbiAgICAgICAgZyA9IChjb2xvciAmIDY1MjgwKSA+PiA4O1xuICAgICAgICBiID0gY29sb3IgJiAyNTU7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZ2IociwgZywgYik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfcmdiX2hzbChyLCBnLCBiKSB7XG4gICAgdmFyIG1pbiA9IE1hdGgubWluKHIgLz0gMjU1LCBnIC89IDI1NSwgYiAvPSAyNTUpLCBtYXggPSBNYXRoLm1heChyLCBnLCBiKSwgZCA9IG1heCAtIG1pbiwgaCwgcywgbCA9IChtYXggKyBtaW4pIC8gMjtcbiAgICBpZiAoZCkge1xuICAgICAgcyA9IGwgPCAuNSA/IGQgLyAobWF4ICsgbWluKSA6IGQgLyAoMiAtIG1heCAtIG1pbik7XG4gICAgICBpZiAociA9PSBtYXgpIGggPSAoZyAtIGIpIC8gZCArIChnIDwgYiA/IDYgOiAwKTsgZWxzZSBpZiAoZyA9PSBtYXgpIGggPSAoYiAtIHIpIC8gZCArIDI7IGVsc2UgaCA9IChyIC0gZykgLyBkICsgNDtcbiAgICAgIGggKj0gNjA7XG4gICAgfSBlbHNlIHtcbiAgICAgIGggPSBOYU47XG4gICAgICBzID0gbCA+IDAgJiYgbCA8IDEgPyAwIDogaDtcbiAgICB9XG4gICAgcmV0dXJuIGQzX2hzbChoLCBzLCBsKTtcbiAgfVxuICBmdW5jdGlvbiBkM19yZ2JfbGFiKHIsIGcsIGIpIHtcbiAgICByID0gZDNfcmdiX3h5eihyKTtcbiAgICBnID0gZDNfcmdiX3h5eihnKTtcbiAgICBiID0gZDNfcmdiX3h5eihiKTtcbiAgICB2YXIgeCA9IGQzX3h5el9sYWIoKC40MTI0NTY0ICogciArIC4zNTc1NzYxICogZyArIC4xODA0Mzc1ICogYikgLyBkM19sYWJfWCksIHkgPSBkM194eXpfbGFiKCguMjEyNjcyOSAqIHIgKyAuNzE1MTUyMiAqIGcgKyAuMDcyMTc1ICogYikgLyBkM19sYWJfWSksIHogPSBkM194eXpfbGFiKCguMDE5MzMzOSAqIHIgKyAuMTE5MTkyICogZyArIC45NTAzMDQxICogYikgLyBkM19sYWJfWik7XG4gICAgcmV0dXJuIGQzX2xhYigxMTYgKiB5IC0gMTYsIDUwMCAqICh4IC0geSksIDIwMCAqICh5IC0geikpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3JnYl94eXoocikge1xuICAgIHJldHVybiAociAvPSAyNTUpIDw9IC4wNDA0NSA/IHIgLyAxMi45MiA6IE1hdGgucG93KChyICsgLjA1NSkgLyAxLjA1NSwgMi40KTtcbiAgfVxuICBmdW5jdGlvbiBkM19yZ2JfcGFyc2VOdW1iZXIoYykge1xuICAgIHZhciBmID0gcGFyc2VGbG9hdChjKTtcbiAgICByZXR1cm4gYy5jaGFyQXQoYy5sZW5ndGggLSAxKSA9PT0gXCIlXCIgPyBNYXRoLnJvdW5kKGYgKiAyLjU1KSA6IGY7XG4gIH1cbiAgdmFyIGQzX3JnYl9uYW1lcyA9IGQzLm1hcCh7XG4gICAgYWxpY2VibHVlOiAxNTc5MjM4MyxcbiAgICBhbnRpcXVld2hpdGU6IDE2NDQ0Mzc1LFxuICAgIGFxdWE6IDY1NTM1LFxuICAgIGFxdWFtYXJpbmU6IDgzODg1NjQsXG4gICAgYXp1cmU6IDE1Nzk0MTc1LFxuICAgIGJlaWdlOiAxNjExOTI2MCxcbiAgICBiaXNxdWU6IDE2NzcwMjQ0LFxuICAgIGJsYWNrOiAwLFxuICAgIGJsYW5jaGVkYWxtb25kOiAxNjc3MjA0NSxcbiAgICBibHVlOiAyNTUsXG4gICAgYmx1ZXZpb2xldDogOTA1NTIwMixcbiAgICBicm93bjogMTA4MjQyMzQsXG4gICAgYnVybHl3b29kOiAxNDU5NjIzMSxcbiAgICBjYWRldGJsdWU6IDYyNjY1MjgsXG4gICAgY2hhcnRyZXVzZTogODM4ODM1MixcbiAgICBjaG9jb2xhdGU6IDEzNzg5NDcwLFxuICAgIGNvcmFsOiAxNjc0NDI3MixcbiAgICBjb3JuZmxvd2VyYmx1ZTogNjU5MTk4MSxcbiAgICBjb3Juc2lsazogMTY3NzUzODgsXG4gICAgY3JpbXNvbjogMTQ0MjMxMDAsXG4gICAgY3lhbjogNjU1MzUsXG4gICAgZGFya2JsdWU6IDEzOSxcbiAgICBkYXJrY3lhbjogMzU3MjMsXG4gICAgZGFya2dvbGRlbnJvZDogMTIwOTI5MzksXG4gICAgZGFya2dyYXk6IDExMTE5MDE3LFxuICAgIGRhcmtncmVlbjogMjU2MDAsXG4gICAgZGFya2dyZXk6IDExMTE5MDE3LFxuICAgIGRhcmtraGFraTogMTI0MzMyNTksXG4gICAgZGFya21hZ2VudGE6IDkxMDk2NDMsXG4gICAgZGFya29saXZlZ3JlZW46IDU1OTc5OTksXG4gICAgZGFya29yYW5nZTogMTY3NDc1MjAsXG4gICAgZGFya29yY2hpZDogMTAwNDAwMTIsXG4gICAgZGFya3JlZDogOTEwOTUwNCxcbiAgICBkYXJrc2FsbW9uOiAxNTMwODQxMCxcbiAgICBkYXJrc2VhZ3JlZW46IDk0MTk5MTksXG4gICAgZGFya3NsYXRlYmx1ZTogNDczNDM0NyxcbiAgICBkYXJrc2xhdGVncmF5OiAzMTAwNDk1LFxuICAgIGRhcmtzbGF0ZWdyZXk6IDMxMDA0OTUsXG4gICAgZGFya3R1cnF1b2lzZTogNTI5NDUsXG4gICAgZGFya3Zpb2xldDogOTY5OTUzOSxcbiAgICBkZWVwcGluazogMTY3MTY5NDcsXG4gICAgZGVlcHNreWJsdWU6IDQ5MTUxLFxuICAgIGRpbWdyYXk6IDY5MDgyNjUsXG4gICAgZGltZ3JleTogNjkwODI2NSxcbiAgICBkb2RnZXJibHVlOiAyMDAzMTk5LFxuICAgIGZpcmVicmljazogMTE2NzQxNDYsXG4gICAgZmxvcmFsd2hpdGU6IDE2Nzc1OTIwLFxuICAgIGZvcmVzdGdyZWVuOiAyMjYzODQyLFxuICAgIGZ1Y2hzaWE6IDE2NzExOTM1LFxuICAgIGdhaW5zYm9ybzogMTQ0NzQ0NjAsXG4gICAgZ2hvc3R3aGl0ZTogMTYzMTY2NzEsXG4gICAgZ29sZDogMTY3NjY3MjAsXG4gICAgZ29sZGVucm9kOiAxNDMyOTEyMCxcbiAgICBncmF5OiA4NDIxNTA0LFxuICAgIGdyZWVuOiAzMjc2OCxcbiAgICBncmVlbnllbGxvdzogMTE0MDMwNTUsXG4gICAgZ3JleTogODQyMTUwNCxcbiAgICBob25leWRldzogMTU3OTQxNjAsXG4gICAgaG90cGluazogMTY3Mzg3NDAsXG4gICAgaW5kaWFucmVkOiAxMzQ1ODUyNCxcbiAgICBpbmRpZ286IDQ5MTUzMzAsXG4gICAgaXZvcnk6IDE2Nzc3MjAwLFxuICAgIGtoYWtpOiAxNTc4NzY2MCxcbiAgICBsYXZlbmRlcjogMTUxMzI0MTAsXG4gICAgbGF2ZW5kZXJibHVzaDogMTY3NzMzNjUsXG4gICAgbGF3bmdyZWVuOiA4MTkwOTc2LFxuICAgIGxlbW9uY2hpZmZvbjogMTY3NzU4ODUsXG4gICAgbGlnaHRibHVlOiAxMTM5MzI1NCxcbiAgICBsaWdodGNvcmFsOiAxNTc2MTUzNixcbiAgICBsaWdodGN5YW46IDE0NzQ1NTk5LFxuICAgIGxpZ2h0Z29sZGVucm9keWVsbG93OiAxNjQ0ODIxMCxcbiAgICBsaWdodGdyYXk6IDEzODgyMzIzLFxuICAgIGxpZ2h0Z3JlZW46IDk0OTgyNTYsXG4gICAgbGlnaHRncmV5OiAxMzg4MjMyMyxcbiAgICBsaWdodHBpbms6IDE2NzU4NDY1LFxuICAgIGxpZ2h0c2FsbW9uOiAxNjc1Mjc2MixcbiAgICBsaWdodHNlYWdyZWVuOiAyMTQyODkwLFxuICAgIGxpZ2h0c2t5Ymx1ZTogODkwMDM0NixcbiAgICBsaWdodHNsYXRlZ3JheTogNzgzMzc1MyxcbiAgICBsaWdodHNsYXRlZ3JleTogNzgzMzc1MyxcbiAgICBsaWdodHN0ZWVsYmx1ZTogMTE1ODQ3MzQsXG4gICAgbGlnaHR5ZWxsb3c6IDE2Nzc3MTg0LFxuICAgIGxpbWU6IDY1MjgwLFxuICAgIGxpbWVncmVlbjogMzMyOTMzMCxcbiAgICBsaW5lbjogMTY0NDU2NzAsXG4gICAgbWFnZW50YTogMTY3MTE5MzUsXG4gICAgbWFyb29uOiA4Mzg4NjA4LFxuICAgIG1lZGl1bWFxdWFtYXJpbmU6IDY3MzczMjIsXG4gICAgbWVkaXVtYmx1ZTogMjA1LFxuICAgIG1lZGl1bW9yY2hpZDogMTIyMTE2NjcsXG4gICAgbWVkaXVtcHVycGxlOiA5NjYyNjgzLFxuICAgIG1lZGl1bXNlYWdyZWVuOiAzOTc4MDk3LFxuICAgIG1lZGl1bXNsYXRlYmx1ZTogODA4Nzc5MCxcbiAgICBtZWRpdW1zcHJpbmdncmVlbjogNjQxNTQsXG4gICAgbWVkaXVtdHVycXVvaXNlOiA0NzcyMzAwLFxuICAgIG1lZGl1bXZpb2xldHJlZDogMTMwNDcxNzMsXG4gICAgbWlkbmlnaHRibHVlOiAxNjQ0OTEyLFxuICAgIG1pbnRjcmVhbTogMTYxMjE4NTAsXG4gICAgbWlzdHlyb3NlOiAxNjc3MDI3MyxcbiAgICBtb2NjYXNpbjogMTY3NzAyMjksXG4gICAgbmF2YWpvd2hpdGU6IDE2NzY4Njg1LFxuICAgIG5hdnk6IDEyOCxcbiAgICBvbGRsYWNlOiAxNjY0MzU1OCxcbiAgICBvbGl2ZTogODQyMTM3NixcbiAgICBvbGl2ZWRyYWI6IDcwNDg3MzksXG4gICAgb3JhbmdlOiAxNjc1MzkyMCxcbiAgICBvcmFuZ2VyZWQ6IDE2NzI5MzQ0LFxuICAgIG9yY2hpZDogMTQzMTU3MzQsXG4gICAgcGFsZWdvbGRlbnJvZDogMTU2NTcxMzAsXG4gICAgcGFsZWdyZWVuOiAxMDAyNTg4MCxcbiAgICBwYWxldHVycXVvaXNlOiAxMTUyOTk2NixcbiAgICBwYWxldmlvbGV0cmVkOiAxNDM4MTIwMyxcbiAgICBwYXBheWF3aGlwOiAxNjc3MzA3NyxcbiAgICBwZWFjaHB1ZmY6IDE2NzY3NjczLFxuICAgIHBlcnU6IDEzNDY4OTkxLFxuICAgIHBpbms6IDE2NzYxMDM1LFxuICAgIHBsdW06IDE0NTI0NjM3LFxuICAgIHBvd2RlcmJsdWU6IDExNTkxOTEwLFxuICAgIHB1cnBsZTogODM4ODczNixcbiAgICByZWQ6IDE2NzExNjgwLFxuICAgIHJvc3licm93bjogMTIzNTc1MTksXG4gICAgcm95YWxibHVlOiA0Mjg2OTQ1LFxuICAgIHNhZGRsZWJyb3duOiA5MTI3MTg3LFxuICAgIHNhbG1vbjogMTY0MTY4ODIsXG4gICAgc2FuZHlicm93bjogMTYwMzI4NjQsXG4gICAgc2VhZ3JlZW46IDMwNTAzMjcsXG4gICAgc2Vhc2hlbGw6IDE2Nzc0NjM4LFxuICAgIHNpZW5uYTogMTA1MDY3OTcsXG4gICAgc2lsdmVyOiAxMjYzMjI1NixcbiAgICBza3libHVlOiA4OTAwMzMxLFxuICAgIHNsYXRlYmx1ZTogNjk3MDA2MSxcbiAgICBzbGF0ZWdyYXk6IDczNzI5NDQsXG4gICAgc2xhdGVncmV5OiA3MzcyOTQ0LFxuICAgIHNub3c6IDE2Nzc1OTMwLFxuICAgIHNwcmluZ2dyZWVuOiA2NTQwNyxcbiAgICBzdGVlbGJsdWU6IDQ2MjA5ODAsXG4gICAgdGFuOiAxMzgwODc4MCxcbiAgICB0ZWFsOiAzMjg5NixcbiAgICB0aGlzdGxlOiAxNDIwNDg4OCxcbiAgICB0b21hdG86IDE2NzM3MDk1LFxuICAgIHR1cnF1b2lzZTogNDI1MTg1NixcbiAgICB2aW9sZXQ6IDE1NjMxMDg2LFxuICAgIHdoZWF0OiAxNjExMzMzMSxcbiAgICB3aGl0ZTogMTY3NzcyMTUsXG4gICAgd2hpdGVzbW9rZTogMTYxMTkyODUsXG4gICAgeWVsbG93OiAxNjc3Njk2MCxcbiAgICB5ZWxsb3dncmVlbjogMTAxNDUwNzRcbiAgfSk7XG4gIGQzX3JnYl9uYW1lcy5mb3JFYWNoKGZ1bmN0aW9uKGtleSwgdmFsdWUpIHtcbiAgICBkM19yZ2JfbmFtZXMuc2V0KGtleSwgZDNfcmdiTnVtYmVyKHZhbHVlKSk7XG4gIH0pO1xuICBmdW5jdGlvbiBkM19mdW5jdG9yKHYpIHtcbiAgICByZXR1cm4gdHlwZW9mIHYgPT09IFwiZnVuY3Rpb25cIiA/IHYgOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB2O1xuICAgIH07XG4gIH1cbiAgZDMuZnVuY3RvciA9IGQzX2Z1bmN0b3I7XG4gIGZ1bmN0aW9uIGQzX2lkZW50aXR5KGQpIHtcbiAgICByZXR1cm4gZDtcbiAgfVxuICBkMy54aHIgPSBkM194aHJUeXBlKGQzX2lkZW50aXR5KTtcbiAgZnVuY3Rpb24gZDNfeGhyVHlwZShyZXNwb25zZSkge1xuICAgIHJldHVybiBmdW5jdGlvbih1cmwsIG1pbWVUeXBlLCBjYWxsYmFjaykge1xuICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDIgJiYgdHlwZW9mIG1pbWVUeXBlID09PSBcImZ1bmN0aW9uXCIpIGNhbGxiYWNrID0gbWltZVR5cGUsIFxuICAgICAgbWltZVR5cGUgPSBudWxsO1xuICAgICAgcmV0dXJuIGQzX3hocih1cmwsIG1pbWVUeXBlLCByZXNwb25zZSwgY2FsbGJhY2spO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfeGhyKHVybCwgbWltZVR5cGUsIHJlc3BvbnNlLCBjYWxsYmFjaykge1xuICAgIHZhciB4aHIgPSB7fSwgZGlzcGF0Y2ggPSBkMy5kaXNwYXRjaChcImJlZm9yZXNlbmRcIiwgXCJwcm9ncmVzc1wiLCBcImxvYWRcIiwgXCJlcnJvclwiKSwgaGVhZGVycyA9IHt9LCByZXF1ZXN0ID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCksIHJlc3BvbnNlVHlwZSA9IG51bGw7XG4gICAgaWYgKGQzX3dpbmRvdy5YRG9tYWluUmVxdWVzdCAmJiAhKFwid2l0aENyZWRlbnRpYWxzXCIgaW4gcmVxdWVzdCkgJiYgL14oaHR0cChzKT86KT9cXC9cXC8vLnRlc3QodXJsKSkgcmVxdWVzdCA9IG5ldyBYRG9tYWluUmVxdWVzdCgpO1xuICAgIFwib25sb2FkXCIgaW4gcmVxdWVzdCA/IHJlcXVlc3Qub25sb2FkID0gcmVxdWVzdC5vbmVycm9yID0gcmVzcG9uZCA6IHJlcXVlc3Qub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXF1ZXN0LnJlYWR5U3RhdGUgPiAzICYmIHJlc3BvbmQoKTtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIHJlc3BvbmQoKSB7XG4gICAgICB2YXIgc3RhdHVzID0gcmVxdWVzdC5zdGF0dXMsIHJlc3VsdDtcbiAgICAgIGlmICghc3RhdHVzICYmIHJlcXVlc3QucmVzcG9uc2VUZXh0IHx8IHN0YXR1cyA+PSAyMDAgJiYgc3RhdHVzIDwgMzAwIHx8IHN0YXR1cyA9PT0gMzA0KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgcmVzdWx0ID0gcmVzcG9uc2UuY2FsbCh4aHIsIHJlcXVlc3QpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgZGlzcGF0Y2guZXJyb3IuY2FsbCh4aHIsIGUpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBkaXNwYXRjaC5sb2FkLmNhbGwoeGhyLCByZXN1bHQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZGlzcGF0Y2guZXJyb3IuY2FsbCh4aHIsIHJlcXVlc3QpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXF1ZXN0Lm9ucHJvZ3Jlc3MgPSBmdW5jdGlvbihldmVudCkge1xuICAgICAgdmFyIG8gPSBkMy5ldmVudDtcbiAgICAgIGQzLmV2ZW50ID0gZXZlbnQ7XG4gICAgICB0cnkge1xuICAgICAgICBkaXNwYXRjaC5wcm9ncmVzcy5jYWxsKHhociwgcmVxdWVzdCk7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBkMy5ldmVudCA9IG87XG4gICAgICB9XG4gICAgfTtcbiAgICB4aHIuaGVhZGVyID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgICAgIG5hbWUgPSAobmFtZSArIFwiXCIpLnRvTG93ZXJDYXNlKCk7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHJldHVybiBoZWFkZXJzW25hbWVdO1xuICAgICAgaWYgKHZhbHVlID09IG51bGwpIGRlbGV0ZSBoZWFkZXJzW25hbWVdOyBlbHNlIGhlYWRlcnNbbmFtZV0gPSB2YWx1ZSArIFwiXCI7XG4gICAgICByZXR1cm4geGhyO1xuICAgIH07XG4gICAgeGhyLm1pbWVUeXBlID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG1pbWVUeXBlO1xuICAgICAgbWltZVR5cGUgPSB2YWx1ZSA9PSBudWxsID8gbnVsbCA6IHZhbHVlICsgXCJcIjtcbiAgICAgIHJldHVybiB4aHI7XG4gICAgfTtcbiAgICB4aHIucmVzcG9uc2VUeXBlID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHJlc3BvbnNlVHlwZTtcbiAgICAgIHJlc3BvbnNlVHlwZSA9IHZhbHVlO1xuICAgICAgcmV0dXJuIHhocjtcbiAgICB9O1xuICAgIHhoci5yZXNwb25zZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICByZXNwb25zZSA9IHZhbHVlO1xuICAgICAgcmV0dXJuIHhocjtcbiAgICB9O1xuICAgIFsgXCJnZXRcIiwgXCJwb3N0XCIgXS5mb3JFYWNoKGZ1bmN0aW9uKG1ldGhvZCkge1xuICAgICAgeGhyW21ldGhvZF0gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHhoci5zZW5kLmFwcGx5KHhociwgWyBtZXRob2QgXS5jb25jYXQoZDNfYXJyYXkoYXJndW1lbnRzKSkpO1xuICAgICAgfTtcbiAgICB9KTtcbiAgICB4aHIuc2VuZCA9IGZ1bmN0aW9uKG1ldGhvZCwgZGF0YSwgY2FsbGJhY2spIHtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyICYmIHR5cGVvZiBkYXRhID09PSBcImZ1bmN0aW9uXCIpIGNhbGxiYWNrID0gZGF0YSwgZGF0YSA9IG51bGw7XG4gICAgICByZXF1ZXN0Lm9wZW4obWV0aG9kLCB1cmwsIHRydWUpO1xuICAgICAgaWYgKG1pbWVUeXBlICE9IG51bGwgJiYgIShcImFjY2VwdFwiIGluIGhlYWRlcnMpKSBoZWFkZXJzW1wiYWNjZXB0XCJdID0gbWltZVR5cGUgKyBcIiwqLypcIjtcbiAgICAgIGlmIChyZXF1ZXN0LnNldFJlcXVlc3RIZWFkZXIpIGZvciAodmFyIG5hbWUgaW4gaGVhZGVycykgcmVxdWVzdC5zZXRSZXF1ZXN0SGVhZGVyKG5hbWUsIGhlYWRlcnNbbmFtZV0pO1xuICAgICAgaWYgKG1pbWVUeXBlICE9IG51bGwgJiYgcmVxdWVzdC5vdmVycmlkZU1pbWVUeXBlKSByZXF1ZXN0Lm92ZXJyaWRlTWltZVR5cGUobWltZVR5cGUpO1xuICAgICAgaWYgKHJlc3BvbnNlVHlwZSAhPSBudWxsKSByZXF1ZXN0LnJlc3BvbnNlVHlwZSA9IHJlc3BvbnNlVHlwZTtcbiAgICAgIGlmIChjYWxsYmFjayAhPSBudWxsKSB4aHIub24oXCJlcnJvclwiLCBjYWxsYmFjaykub24oXCJsb2FkXCIsIGZ1bmN0aW9uKHJlcXVlc3QpIHtcbiAgICAgICAgY2FsbGJhY2sobnVsbCwgcmVxdWVzdCk7XG4gICAgICB9KTtcbiAgICAgIGRpc3BhdGNoLmJlZm9yZXNlbmQuY2FsbCh4aHIsIHJlcXVlc3QpO1xuICAgICAgcmVxdWVzdC5zZW5kKGRhdGEgPT0gbnVsbCA/IG51bGwgOiBkYXRhKTtcbiAgICAgIHJldHVybiB4aHI7XG4gICAgfTtcbiAgICB4aHIuYWJvcnQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJlcXVlc3QuYWJvcnQoKTtcbiAgICAgIHJldHVybiB4aHI7XG4gICAgfTtcbiAgICBkMy5yZWJpbmQoeGhyLCBkaXNwYXRjaCwgXCJvblwiKTtcbiAgICByZXR1cm4gY2FsbGJhY2sgPT0gbnVsbCA/IHhociA6IHhoci5nZXQoZDNfeGhyX2ZpeENhbGxiYWNrKGNhbGxiYWNrKSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfeGhyX2ZpeENhbGxiYWNrKGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIGNhbGxiYWNrLmxlbmd0aCA9PT0gMSA/IGZ1bmN0aW9uKGVycm9yLCByZXF1ZXN0KSB7XG4gICAgICBjYWxsYmFjayhlcnJvciA9PSBudWxsID8gcmVxdWVzdCA6IG51bGwpO1xuICAgIH0gOiBjYWxsYmFjaztcbiAgfVxuICBkMy5kc3YgPSBmdW5jdGlvbihkZWxpbWl0ZXIsIG1pbWVUeXBlKSB7XG4gICAgdmFyIHJlRm9ybWF0ID0gbmV3IFJlZ0V4cCgnW1wiJyArIGRlbGltaXRlciArIFwiXFxuXVwiKSwgZGVsaW1pdGVyQ29kZSA9IGRlbGltaXRlci5jaGFyQ29kZUF0KDApO1xuICAgIGZ1bmN0aW9uIGRzdih1cmwsIHJvdywgY2FsbGJhY2spIHtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMykgY2FsbGJhY2sgPSByb3csIHJvdyA9IG51bGw7XG4gICAgICB2YXIgeGhyID0gZDNfeGhyKHVybCwgbWltZVR5cGUsIHJvdyA9PSBudWxsID8gcmVzcG9uc2UgOiB0eXBlZFJlc3BvbnNlKHJvdyksIGNhbGxiYWNrKTtcbiAgICAgIHhoci5yb3cgPSBmdW5jdGlvbihfKSB7XG4gICAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8geGhyLnJlc3BvbnNlKChyb3cgPSBfKSA9PSBudWxsID8gcmVzcG9uc2UgOiB0eXBlZFJlc3BvbnNlKF8pKSA6IHJvdztcbiAgICAgIH07XG4gICAgICByZXR1cm4geGhyO1xuICAgIH1cbiAgICBmdW5jdGlvbiByZXNwb25zZShyZXF1ZXN0KSB7XG4gICAgICByZXR1cm4gZHN2LnBhcnNlKHJlcXVlc3QucmVzcG9uc2VUZXh0KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gdHlwZWRSZXNwb25zZShmKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24ocmVxdWVzdCkge1xuICAgICAgICByZXR1cm4gZHN2LnBhcnNlKHJlcXVlc3QucmVzcG9uc2VUZXh0LCBmKTtcbiAgICAgIH07XG4gICAgfVxuICAgIGRzdi5wYXJzZSA9IGZ1bmN0aW9uKHRleHQsIGYpIHtcbiAgICAgIHZhciBvO1xuICAgICAgcmV0dXJuIGRzdi5wYXJzZVJvd3ModGV4dCwgZnVuY3Rpb24ocm93LCBpKSB7XG4gICAgICAgIGlmIChvKSByZXR1cm4gbyhyb3csIGkgLSAxKTtcbiAgICAgICAgdmFyIGEgPSBuZXcgRnVuY3Rpb24oXCJkXCIsIFwicmV0dXJuIHtcIiArIHJvdy5tYXAoZnVuY3Rpb24obmFtZSwgaSkge1xuICAgICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShuYW1lKSArIFwiOiBkW1wiICsgaSArIFwiXVwiO1xuICAgICAgICB9KS5qb2luKFwiLFwiKSArIFwifVwiKTtcbiAgICAgICAgbyA9IGYgPyBmdW5jdGlvbihyb3csIGkpIHtcbiAgICAgICAgICByZXR1cm4gZihhKHJvdyksIGkpO1xuICAgICAgICB9IDogYTtcbiAgICAgIH0pO1xuICAgIH07XG4gICAgZHN2LnBhcnNlUm93cyA9IGZ1bmN0aW9uKHRleHQsIGYpIHtcbiAgICAgIHZhciBFT0wgPSB7fSwgRU9GID0ge30sIHJvd3MgPSBbXSwgTiA9IHRleHQubGVuZ3RoLCBJID0gMCwgbiA9IDAsIHQsIGVvbDtcbiAgICAgIGZ1bmN0aW9uIHRva2VuKCkge1xuICAgICAgICBpZiAoSSA+PSBOKSByZXR1cm4gRU9GO1xuICAgICAgICBpZiAoZW9sKSByZXR1cm4gZW9sID0gZmFsc2UsIEVPTDtcbiAgICAgICAgdmFyIGogPSBJO1xuICAgICAgICBpZiAodGV4dC5jaGFyQ29kZUF0KGopID09PSAzNCkge1xuICAgICAgICAgIHZhciBpID0gajtcbiAgICAgICAgICB3aGlsZSAoaSsrIDwgTikge1xuICAgICAgICAgICAgaWYgKHRleHQuY2hhckNvZGVBdChpKSA9PT0gMzQpIHtcbiAgICAgICAgICAgICAgaWYgKHRleHQuY2hhckNvZGVBdChpICsgMSkgIT09IDM0KSBicmVhaztcbiAgICAgICAgICAgICAgKytpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBJID0gaSArIDI7XG4gICAgICAgICAgdmFyIGMgPSB0ZXh0LmNoYXJDb2RlQXQoaSArIDEpO1xuICAgICAgICAgIGlmIChjID09PSAxMykge1xuICAgICAgICAgICAgZW9sID0gdHJ1ZTtcbiAgICAgICAgICAgIGlmICh0ZXh0LmNoYXJDb2RlQXQoaSArIDIpID09PSAxMCkgKytJO1xuICAgICAgICAgIH0gZWxzZSBpZiAoYyA9PT0gMTApIHtcbiAgICAgICAgICAgIGVvbCA9IHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB0ZXh0LnN1YnN0cmluZyhqICsgMSwgaSkucmVwbGFjZSgvXCJcIi9nLCAnXCInKTtcbiAgICAgICAgfVxuICAgICAgICB3aGlsZSAoSSA8IE4pIHtcbiAgICAgICAgICB2YXIgYyA9IHRleHQuY2hhckNvZGVBdChJKyspLCBrID0gMTtcbiAgICAgICAgICBpZiAoYyA9PT0gMTApIGVvbCA9IHRydWU7IGVsc2UgaWYgKGMgPT09IDEzKSB7XG4gICAgICAgICAgICBlb2wgPSB0cnVlO1xuICAgICAgICAgICAgaWYgKHRleHQuY2hhckNvZGVBdChJKSA9PT0gMTApICsrSSwgKytrO1xuICAgICAgICAgIH0gZWxzZSBpZiAoYyAhPT0gZGVsaW1pdGVyQ29kZSkgY29udGludWU7XG4gICAgICAgICAgcmV0dXJuIHRleHQuc3Vic3RyaW5nKGosIEkgLSBrKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGV4dC5zdWJzdHJpbmcoaik7XG4gICAgICB9XG4gICAgICB3aGlsZSAoKHQgPSB0b2tlbigpKSAhPT0gRU9GKSB7XG4gICAgICAgIHZhciBhID0gW107XG4gICAgICAgIHdoaWxlICh0ICE9PSBFT0wgJiYgdCAhPT0gRU9GKSB7XG4gICAgICAgICAgYS5wdXNoKHQpO1xuICAgICAgICAgIHQgPSB0b2tlbigpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChmICYmICEoYSA9IGYoYSwgbisrKSkpIGNvbnRpbnVlO1xuICAgICAgICByb3dzLnB1c2goYSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcm93cztcbiAgICB9O1xuICAgIGRzdi5mb3JtYXQgPSBmdW5jdGlvbihyb3dzKSB7XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShyb3dzWzBdKSkgcmV0dXJuIGRzdi5mb3JtYXRSb3dzKHJvd3MpO1xuICAgICAgdmFyIGZpZWxkU2V0ID0gbmV3IGQzX1NldCgpLCBmaWVsZHMgPSBbXTtcbiAgICAgIHJvd3MuZm9yRWFjaChmdW5jdGlvbihyb3cpIHtcbiAgICAgICAgZm9yICh2YXIgZmllbGQgaW4gcm93KSB7XG4gICAgICAgICAgaWYgKCFmaWVsZFNldC5oYXMoZmllbGQpKSB7XG4gICAgICAgICAgICBmaWVsZHMucHVzaChmaWVsZFNldC5hZGQoZmllbGQpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIFsgZmllbGRzLm1hcChmb3JtYXRWYWx1ZSkuam9pbihkZWxpbWl0ZXIpIF0uY29uY2F0KHJvd3MubWFwKGZ1bmN0aW9uKHJvdykge1xuICAgICAgICByZXR1cm4gZmllbGRzLm1hcChmdW5jdGlvbihmaWVsZCkge1xuICAgICAgICAgIHJldHVybiBmb3JtYXRWYWx1ZShyb3dbZmllbGRdKTtcbiAgICAgICAgfSkuam9pbihkZWxpbWl0ZXIpO1xuICAgICAgfSkpLmpvaW4oXCJcXG5cIik7XG4gICAgfTtcbiAgICBkc3YuZm9ybWF0Um93cyA9IGZ1bmN0aW9uKHJvd3MpIHtcbiAgICAgIHJldHVybiByb3dzLm1hcChmb3JtYXRSb3cpLmpvaW4oXCJcXG5cIik7XG4gICAgfTtcbiAgICBmdW5jdGlvbiBmb3JtYXRSb3cocm93KSB7XG4gICAgICByZXR1cm4gcm93Lm1hcChmb3JtYXRWYWx1ZSkuam9pbihkZWxpbWl0ZXIpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBmb3JtYXRWYWx1ZSh0ZXh0KSB7XG4gICAgICByZXR1cm4gcmVGb3JtYXQudGVzdCh0ZXh0KSA/ICdcIicgKyB0ZXh0LnJlcGxhY2UoL1xcXCIvZywgJ1wiXCInKSArICdcIicgOiB0ZXh0O1xuICAgIH1cbiAgICByZXR1cm4gZHN2O1xuICB9O1xuICBkMy5jc3YgPSBkMy5kc3YoXCIsXCIsIFwidGV4dC9jc3ZcIik7XG4gIGQzLnRzdiA9IGQzLmRzdihcIlx0XCIsIFwidGV4dC90YWItc2VwYXJhdGVkLXZhbHVlc1wiKTtcbiAgZDMudG91Y2ggPSBmdW5jdGlvbihjb250YWluZXIsIHRvdWNoZXMsIGlkZW50aWZpZXIpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDMpIGlkZW50aWZpZXIgPSB0b3VjaGVzLCB0b3VjaGVzID0gZDNfZXZlbnRTb3VyY2UoKS5jaGFuZ2VkVG91Y2hlcztcbiAgICBpZiAodG91Y2hlcykgZm9yICh2YXIgaSA9IDAsIG4gPSB0b3VjaGVzLmxlbmd0aCwgdG91Y2g7IGkgPCBuOyArK2kpIHtcbiAgICAgIGlmICgodG91Y2ggPSB0b3VjaGVzW2ldKS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICAgIHJldHVybiBkM19tb3VzZVBvaW50KGNvbnRhaW5lciwgdG91Y2gpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcbiAgdmFyIGQzX3RpbWVyX3F1ZXVlSGVhZCwgZDNfdGltZXJfcXVldWVUYWlsLCBkM190aW1lcl9pbnRlcnZhbCwgZDNfdGltZXJfdGltZW91dCwgZDNfdGltZXJfYWN0aXZlLCBkM190aW1lcl9mcmFtZSA9IGQzX3dpbmRvd1tkM192ZW5kb3JTeW1ib2woZDNfd2luZG93LCBcInJlcXVlc3RBbmltYXRpb25GcmFtZVwiKV0gfHwgZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICBzZXRUaW1lb3V0KGNhbGxiYWNrLCAxNyk7XG4gIH07XG4gIGQzLnRpbWVyID0gZnVuY3Rpb24oY2FsbGJhY2ssIGRlbGF5LCB0aGVuKSB7XG4gICAgdmFyIG4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIGlmIChuIDwgMikgZGVsYXkgPSAwO1xuICAgIGlmIChuIDwgMykgdGhlbiA9IERhdGUubm93KCk7XG4gICAgdmFyIHRpbWUgPSB0aGVuICsgZGVsYXksIHRpbWVyID0ge1xuICAgICAgYzogY2FsbGJhY2ssXG4gICAgICB0OiB0aW1lLFxuICAgICAgZjogZmFsc2UsXG4gICAgICBuOiBudWxsXG4gICAgfTtcbiAgICBpZiAoZDNfdGltZXJfcXVldWVUYWlsKSBkM190aW1lcl9xdWV1ZVRhaWwubiA9IHRpbWVyOyBlbHNlIGQzX3RpbWVyX3F1ZXVlSGVhZCA9IHRpbWVyO1xuICAgIGQzX3RpbWVyX3F1ZXVlVGFpbCA9IHRpbWVyO1xuICAgIGlmICghZDNfdGltZXJfaW50ZXJ2YWwpIHtcbiAgICAgIGQzX3RpbWVyX3RpbWVvdXQgPSBjbGVhclRpbWVvdXQoZDNfdGltZXJfdGltZW91dCk7XG4gICAgICBkM190aW1lcl9pbnRlcnZhbCA9IDE7XG4gICAgICBkM190aW1lcl9mcmFtZShkM190aW1lcl9zdGVwKTtcbiAgICB9XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3RpbWVyX3N0ZXAoKSB7XG4gICAgdmFyIG5vdyA9IGQzX3RpbWVyX21hcmsoKSwgZGVsYXkgPSBkM190aW1lcl9zd2VlcCgpIC0gbm93O1xuICAgIGlmIChkZWxheSA+IDI0KSB7XG4gICAgICBpZiAoaXNGaW5pdGUoZGVsYXkpKSB7XG4gICAgICAgIGNsZWFyVGltZW91dChkM190aW1lcl90aW1lb3V0KTtcbiAgICAgICAgZDNfdGltZXJfdGltZW91dCA9IHNldFRpbWVvdXQoZDNfdGltZXJfc3RlcCwgZGVsYXkpO1xuICAgICAgfVxuICAgICAgZDNfdGltZXJfaW50ZXJ2YWwgPSAwO1xuICAgIH0gZWxzZSB7XG4gICAgICBkM190aW1lcl9pbnRlcnZhbCA9IDE7XG4gICAgICBkM190aW1lcl9mcmFtZShkM190aW1lcl9zdGVwKTtcbiAgICB9XG4gIH1cbiAgZDMudGltZXIuZmx1c2ggPSBmdW5jdGlvbigpIHtcbiAgICBkM190aW1lcl9tYXJrKCk7XG4gICAgZDNfdGltZXJfc3dlZXAoKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfdGltZXJfbWFyaygpIHtcbiAgICB2YXIgbm93ID0gRGF0ZS5ub3coKTtcbiAgICBkM190aW1lcl9hY3RpdmUgPSBkM190aW1lcl9xdWV1ZUhlYWQ7XG4gICAgd2hpbGUgKGQzX3RpbWVyX2FjdGl2ZSkge1xuICAgICAgaWYgKG5vdyA+PSBkM190aW1lcl9hY3RpdmUudCkgZDNfdGltZXJfYWN0aXZlLmYgPSBkM190aW1lcl9hY3RpdmUuYyhub3cgLSBkM190aW1lcl9hY3RpdmUudCk7XG4gICAgICBkM190aW1lcl9hY3RpdmUgPSBkM190aW1lcl9hY3RpdmUubjtcbiAgICB9XG4gICAgcmV0dXJuIG5vdztcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lcl9zd2VlcCgpIHtcbiAgICB2YXIgdDAsIHQxID0gZDNfdGltZXJfcXVldWVIZWFkLCB0aW1lID0gSW5maW5pdHk7XG4gICAgd2hpbGUgKHQxKSB7XG4gICAgICBpZiAodDEuZikge1xuICAgICAgICB0MSA9IHQwID8gdDAubiA9IHQxLm4gOiBkM190aW1lcl9xdWV1ZUhlYWQgPSB0MS5uO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHQxLnQgPCB0aW1lKSB0aW1lID0gdDEudDtcbiAgICAgICAgdDEgPSAodDAgPSB0MSkubjtcbiAgICAgIH1cbiAgICB9XG4gICAgZDNfdGltZXJfcXVldWVUYWlsID0gdDA7XG4gICAgcmV0dXJuIHRpbWU7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZm9ybWF0X3ByZWNpc2lvbih4LCBwKSB7XG4gICAgcmV0dXJuIHAgLSAoeCA/IE1hdGguY2VpbChNYXRoLmxvZyh4KSAvIE1hdGguTE4xMCkgOiAxKTtcbiAgfVxuICBkMy5yb3VuZCA9IGZ1bmN0aW9uKHgsIG4pIHtcbiAgICByZXR1cm4gbiA/IE1hdGgucm91bmQoeCAqIChuID0gTWF0aC5wb3coMTAsIG4pKSkgLyBuIDogTWF0aC5yb3VuZCh4KTtcbiAgfTtcbiAgdmFyIGQzX2Zvcm1hdFByZWZpeGVzID0gWyBcInlcIiwgXCJ6XCIsIFwiYVwiLCBcImZcIiwgXCJwXCIsIFwiblwiLCBcIsK1XCIsIFwibVwiLCBcIlwiLCBcImtcIiwgXCJNXCIsIFwiR1wiLCBcIlRcIiwgXCJQXCIsIFwiRVwiLCBcIlpcIiwgXCJZXCIgXS5tYXAoZDNfZm9ybWF0UHJlZml4KTtcbiAgZDMuZm9ybWF0UHJlZml4ID0gZnVuY3Rpb24odmFsdWUsIHByZWNpc2lvbikge1xuICAgIHZhciBpID0gMDtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIGlmICh2YWx1ZSA8IDApIHZhbHVlICo9IC0xO1xuICAgICAgaWYgKHByZWNpc2lvbikgdmFsdWUgPSBkMy5yb3VuZCh2YWx1ZSwgZDNfZm9ybWF0X3ByZWNpc2lvbih2YWx1ZSwgcHJlY2lzaW9uKSk7XG4gICAgICBpID0gMSArIE1hdGguZmxvb3IoMWUtMTIgKyBNYXRoLmxvZyh2YWx1ZSkgLyBNYXRoLkxOMTApO1xuICAgICAgaSA9IE1hdGgubWF4KC0yNCwgTWF0aC5taW4oMjQsIE1hdGguZmxvb3IoKGkgLSAxKSAvIDMpICogMykpO1xuICAgIH1cbiAgICByZXR1cm4gZDNfZm9ybWF0UHJlZml4ZXNbOCArIGkgLyAzXTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZm9ybWF0UHJlZml4KGQsIGkpIHtcbiAgICB2YXIgayA9IE1hdGgucG93KDEwLCBhYnMoOCAtIGkpICogMyk7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNjYWxlOiBpID4gOCA/IGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgcmV0dXJuIGQgLyBrO1xuICAgICAgfSA6IGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgcmV0dXJuIGQgKiBrO1xuICAgICAgfSxcbiAgICAgIHN5bWJvbDogZFxuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfbG9jYWxlX251bWJlckZvcm1hdChsb2NhbGUpIHtcbiAgICB2YXIgbG9jYWxlX2RlY2ltYWwgPSBsb2NhbGUuZGVjaW1hbCwgbG9jYWxlX3Rob3VzYW5kcyA9IGxvY2FsZS50aG91c2FuZHMsIGxvY2FsZV9ncm91cGluZyA9IGxvY2FsZS5ncm91cGluZywgbG9jYWxlX2N1cnJlbmN5ID0gbG9jYWxlLmN1cnJlbmN5LCBmb3JtYXRHcm91cCA9IGxvY2FsZV9ncm91cGluZyA/IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICB2YXIgaSA9IHZhbHVlLmxlbmd0aCwgdCA9IFtdLCBqID0gMCwgZyA9IGxvY2FsZV9ncm91cGluZ1swXTtcbiAgICAgIHdoaWxlIChpID4gMCAmJiBnID4gMCkge1xuICAgICAgICB0LnB1c2godmFsdWUuc3Vic3RyaW5nKGkgLT0gZywgaSArIGcpKTtcbiAgICAgICAgZyA9IGxvY2FsZV9ncm91cGluZ1tqID0gKGogKyAxKSAlIGxvY2FsZV9ncm91cGluZy5sZW5ndGhdO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHQucmV2ZXJzZSgpLmpvaW4obG9jYWxlX3Rob3VzYW5kcyk7XG4gICAgfSA6IGQzX2lkZW50aXR5O1xuICAgIHJldHVybiBmdW5jdGlvbihzcGVjaWZpZXIpIHtcbiAgICAgIHZhciBtYXRjaCA9IGQzX2Zvcm1hdF9yZS5leGVjKHNwZWNpZmllciksIGZpbGwgPSBtYXRjaFsxXSB8fCBcIiBcIiwgYWxpZ24gPSBtYXRjaFsyXSB8fCBcIj5cIiwgc2lnbiA9IG1hdGNoWzNdIHx8IFwiXCIsIHN5bWJvbCA9IG1hdGNoWzRdIHx8IFwiXCIsIHpmaWxsID0gbWF0Y2hbNV0sIHdpZHRoID0gK21hdGNoWzZdLCBjb21tYSA9IG1hdGNoWzddLCBwcmVjaXNpb24gPSBtYXRjaFs4XSwgdHlwZSA9IG1hdGNoWzldLCBzY2FsZSA9IDEsIHByZWZpeCA9IFwiXCIsIHN1ZmZpeCA9IFwiXCIsIGludGVnZXIgPSBmYWxzZTtcbiAgICAgIGlmIChwcmVjaXNpb24pIHByZWNpc2lvbiA9ICtwcmVjaXNpb24uc3Vic3RyaW5nKDEpO1xuICAgICAgaWYgKHpmaWxsIHx8IGZpbGwgPT09IFwiMFwiICYmIGFsaWduID09PSBcIj1cIikge1xuICAgICAgICB6ZmlsbCA9IGZpbGwgPSBcIjBcIjtcbiAgICAgICAgYWxpZ24gPSBcIj1cIjtcbiAgICAgICAgaWYgKGNvbW1hKSB3aWR0aCAtPSBNYXRoLmZsb29yKCh3aWR0aCAtIDEpIC8gNCk7XG4gICAgICB9XG4gICAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICBjYXNlIFwiblwiOlxuICAgICAgICBjb21tYSA9IHRydWU7XG4gICAgICAgIHR5cGUgPSBcImdcIjtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgICBjYXNlIFwiJVwiOlxuICAgICAgICBzY2FsZSA9IDEwMDtcbiAgICAgICAgc3VmZml4ID0gXCIlXCI7XG4gICAgICAgIHR5cGUgPSBcImZcIjtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgICBjYXNlIFwicFwiOlxuICAgICAgICBzY2FsZSA9IDEwMDtcbiAgICAgICAgc3VmZml4ID0gXCIlXCI7XG4gICAgICAgIHR5cGUgPSBcInJcIjtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgICBjYXNlIFwiYlwiOlxuICAgICAgIGNhc2UgXCJvXCI6XG4gICAgICAgY2FzZSBcInhcIjpcbiAgICAgICBjYXNlIFwiWFwiOlxuICAgICAgICBpZiAoc3ltYm9sID09PSBcIiNcIikgcHJlZml4ID0gXCIwXCIgKyB0eXBlLnRvTG93ZXJDYXNlKCk7XG5cbiAgICAgICBjYXNlIFwiY1wiOlxuICAgICAgIGNhc2UgXCJkXCI6XG4gICAgICAgIGludGVnZXIgPSB0cnVlO1xuICAgICAgICBwcmVjaXNpb24gPSAwO1xuICAgICAgICBicmVhaztcblxuICAgICAgIGNhc2UgXCJzXCI6XG4gICAgICAgIHNjYWxlID0gLTE7XG4gICAgICAgIHR5cGUgPSBcInJcIjtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBpZiAoc3ltYm9sID09PSBcIiRcIikgcHJlZml4ID0gbG9jYWxlX2N1cnJlbmN5WzBdLCBzdWZmaXggPSBsb2NhbGVfY3VycmVuY3lbMV07XG4gICAgICBpZiAodHlwZSA9PSBcInJcIiAmJiAhcHJlY2lzaW9uKSB0eXBlID0gXCJnXCI7XG4gICAgICBpZiAocHJlY2lzaW9uICE9IG51bGwpIHtcbiAgICAgICAgaWYgKHR5cGUgPT0gXCJnXCIpIHByZWNpc2lvbiA9IE1hdGgubWF4KDEsIE1hdGgubWluKDIxLCBwcmVjaXNpb24pKTsgZWxzZSBpZiAodHlwZSA9PSBcImVcIiB8fCB0eXBlID09IFwiZlwiKSBwcmVjaXNpb24gPSBNYXRoLm1heCgwLCBNYXRoLm1pbigyMCwgcHJlY2lzaW9uKSk7XG4gICAgICB9XG4gICAgICB0eXBlID0gZDNfZm9ybWF0X3R5cGVzLmdldCh0eXBlKSB8fCBkM19mb3JtYXRfdHlwZURlZmF1bHQ7XG4gICAgICB2YXIgemNvbW1hID0gemZpbGwgJiYgY29tbWE7XG4gICAgICByZXR1cm4gZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgdmFyIGZ1bGxTdWZmaXggPSBzdWZmaXg7XG4gICAgICAgIGlmIChpbnRlZ2VyICYmIHZhbHVlICUgMSkgcmV0dXJuIFwiXCI7XG4gICAgICAgIHZhciBuZWdhdGl2ZSA9IHZhbHVlIDwgMCB8fCB2YWx1ZSA9PT0gMCAmJiAxIC8gdmFsdWUgPCAwID8gKHZhbHVlID0gLXZhbHVlLCBcIi1cIikgOiBzaWduO1xuICAgICAgICBpZiAoc2NhbGUgPCAwKSB7XG4gICAgICAgICAgdmFyIHVuaXQgPSBkMy5mb3JtYXRQcmVmaXgodmFsdWUsIHByZWNpc2lvbik7XG4gICAgICAgICAgdmFsdWUgPSB1bml0LnNjYWxlKHZhbHVlKTtcbiAgICAgICAgICBmdWxsU3VmZml4ID0gdW5pdC5zeW1ib2wgKyBzdWZmaXg7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFsdWUgKj0gc2NhbGU7XG4gICAgICAgIH1cbiAgICAgICAgdmFsdWUgPSB0eXBlKHZhbHVlLCBwcmVjaXNpb24pO1xuICAgICAgICB2YXIgaSA9IHZhbHVlLmxhc3RJbmRleE9mKFwiLlwiKSwgYmVmb3JlID0gaSA8IDAgPyB2YWx1ZSA6IHZhbHVlLnN1YnN0cmluZygwLCBpKSwgYWZ0ZXIgPSBpIDwgMCA/IFwiXCIgOiBsb2NhbGVfZGVjaW1hbCArIHZhbHVlLnN1YnN0cmluZyhpICsgMSk7XG4gICAgICAgIGlmICghemZpbGwgJiYgY29tbWEpIGJlZm9yZSA9IGZvcm1hdEdyb3VwKGJlZm9yZSk7XG4gICAgICAgIHZhciBsZW5ndGggPSBwcmVmaXgubGVuZ3RoICsgYmVmb3JlLmxlbmd0aCArIGFmdGVyLmxlbmd0aCArICh6Y29tbWEgPyAwIDogbmVnYXRpdmUubGVuZ3RoKSwgcGFkZGluZyA9IGxlbmd0aCA8IHdpZHRoID8gbmV3IEFycmF5KGxlbmd0aCA9IHdpZHRoIC0gbGVuZ3RoICsgMSkuam9pbihmaWxsKSA6IFwiXCI7XG4gICAgICAgIGlmICh6Y29tbWEpIGJlZm9yZSA9IGZvcm1hdEdyb3VwKHBhZGRpbmcgKyBiZWZvcmUpO1xuICAgICAgICBuZWdhdGl2ZSArPSBwcmVmaXg7XG4gICAgICAgIHZhbHVlID0gYmVmb3JlICsgYWZ0ZXI7XG4gICAgICAgIHJldHVybiAoYWxpZ24gPT09IFwiPFwiID8gbmVnYXRpdmUgKyB2YWx1ZSArIHBhZGRpbmcgOiBhbGlnbiA9PT0gXCI+XCIgPyBwYWRkaW5nICsgbmVnYXRpdmUgKyB2YWx1ZSA6IGFsaWduID09PSBcIl5cIiA/IHBhZGRpbmcuc3Vic3RyaW5nKDAsIGxlbmd0aCA+Pj0gMSkgKyBuZWdhdGl2ZSArIHZhbHVlICsgcGFkZGluZy5zdWJzdHJpbmcobGVuZ3RoKSA6IG5lZ2F0aXZlICsgKHpjb21tYSA/IHZhbHVlIDogcGFkZGluZyArIHZhbHVlKSkgKyBmdWxsU3VmZml4O1xuICAgICAgfTtcbiAgICB9O1xuICB9XG4gIHZhciBkM19mb3JtYXRfcmUgPSAvKD86KFtee10pPyhbPD49Xl0pKT8oWytcXC0gXSk/KFskI10pPygwKT8oXFxkKyk/KCwpPyhcXC4tP1xcZCspPyhbYS16JV0pPy9pO1xuICB2YXIgZDNfZm9ybWF0X3R5cGVzID0gZDMubWFwKHtcbiAgICBiOiBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4geC50b1N0cmluZygyKTtcbiAgICB9LFxuICAgIGM6IGZ1bmN0aW9uKHgpIHtcbiAgICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKHgpO1xuICAgIH0sXG4gICAgbzogZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIHgudG9TdHJpbmcoOCk7XG4gICAgfSxcbiAgICB4OiBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4geC50b1N0cmluZygxNik7XG4gICAgfSxcbiAgICBYOiBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4geC50b1N0cmluZygxNikudG9VcHBlckNhc2UoKTtcbiAgICB9LFxuICAgIGc6IGZ1bmN0aW9uKHgsIHApIHtcbiAgICAgIHJldHVybiB4LnRvUHJlY2lzaW9uKHApO1xuICAgIH0sXG4gICAgZTogZnVuY3Rpb24oeCwgcCkge1xuICAgICAgcmV0dXJuIHgudG9FeHBvbmVudGlhbChwKTtcbiAgICB9LFxuICAgIGY6IGZ1bmN0aW9uKHgsIHApIHtcbiAgICAgIHJldHVybiB4LnRvRml4ZWQocCk7XG4gICAgfSxcbiAgICByOiBmdW5jdGlvbih4LCBwKSB7XG4gICAgICByZXR1cm4gKHggPSBkMy5yb3VuZCh4LCBkM19mb3JtYXRfcHJlY2lzaW9uKHgsIHApKSkudG9GaXhlZChNYXRoLm1heCgwLCBNYXRoLm1pbigyMCwgZDNfZm9ybWF0X3ByZWNpc2lvbih4ICogKDEgKyAxZS0xNSksIHApKSkpO1xuICAgIH1cbiAgfSk7XG4gIGZ1bmN0aW9uIGQzX2Zvcm1hdF90eXBlRGVmYXVsdCh4KSB7XG4gICAgcmV0dXJuIHggKyBcIlwiO1xuICB9XG4gIHZhciBkM190aW1lID0gZDMudGltZSA9IHt9LCBkM19kYXRlID0gRGF0ZTtcbiAgZnVuY3Rpb24gZDNfZGF0ZV91dGMoKSB7XG4gICAgdGhpcy5fID0gbmV3IERhdGUoYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBEYXRlLlVUQy5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogYXJndW1lbnRzWzBdKTtcbiAgfVxuICBkM19kYXRlX3V0Yy5wcm90b3R5cGUgPSB7XG4gICAgZ2V0RGF0ZTogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5fLmdldFVUQ0RhdGUoKTtcbiAgICB9LFxuICAgIGdldERheTogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5fLmdldFVUQ0RheSgpO1xuICAgIH0sXG4gICAgZ2V0RnVsbFllYXI6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuXy5nZXRVVENGdWxsWWVhcigpO1xuICAgIH0sXG4gICAgZ2V0SG91cnM6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuXy5nZXRVVENIb3VycygpO1xuICAgIH0sXG4gICAgZ2V0TWlsbGlzZWNvbmRzOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLl8uZ2V0VVRDTWlsbGlzZWNvbmRzKCk7XG4gICAgfSxcbiAgICBnZXRNaW51dGVzOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLl8uZ2V0VVRDTWludXRlcygpO1xuICAgIH0sXG4gICAgZ2V0TW9udGg6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuXy5nZXRVVENNb250aCgpO1xuICAgIH0sXG4gICAgZ2V0U2Vjb25kczogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5fLmdldFVUQ1NlY29uZHMoKTtcbiAgICB9LFxuICAgIGdldFRpbWU6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuXy5nZXRUaW1lKCk7XG4gICAgfSxcbiAgICBnZXRUaW1lem9uZU9mZnNldDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gMDtcbiAgICB9LFxuICAgIHZhbHVlT2Y6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHRoaXMuXy52YWx1ZU9mKCk7XG4gICAgfSxcbiAgICBzZXREYXRlOiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX3RpbWVfcHJvdG90eXBlLnNldFVUQ0RhdGUuYXBwbHkodGhpcy5fLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgc2V0RGF5OiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX3RpbWVfcHJvdG90eXBlLnNldFVUQ0RheS5hcHBseSh0aGlzLl8sIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBzZXRGdWxsWWVhcjogZnVuY3Rpb24oKSB7XG4gICAgICBkM190aW1lX3Byb3RvdHlwZS5zZXRVVENGdWxsWWVhci5hcHBseSh0aGlzLl8sIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBzZXRIb3VyczogZnVuY3Rpb24oKSB7XG4gICAgICBkM190aW1lX3Byb3RvdHlwZS5zZXRVVENIb3Vycy5hcHBseSh0aGlzLl8sIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBzZXRNaWxsaXNlY29uZHM6IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfdGltZV9wcm90b3R5cGUuc2V0VVRDTWlsbGlzZWNvbmRzLmFwcGx5KHRoaXMuXywgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIHNldE1pbnV0ZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfdGltZV9wcm90b3R5cGUuc2V0VVRDTWludXRlcy5hcHBseSh0aGlzLl8sIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBzZXRNb250aDogZnVuY3Rpb24oKSB7XG4gICAgICBkM190aW1lX3Byb3RvdHlwZS5zZXRVVENNb250aC5hcHBseSh0aGlzLl8sIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBzZXRTZWNvbmRzOiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX3RpbWVfcHJvdG90eXBlLnNldFVUQ1NlY29uZHMuYXBwbHkodGhpcy5fLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgc2V0VGltZTogZnVuY3Rpb24oKSB7XG4gICAgICBkM190aW1lX3Byb3RvdHlwZS5zZXRUaW1lLmFwcGx5KHRoaXMuXywgYXJndW1lbnRzKTtcbiAgICB9XG4gIH07XG4gIHZhciBkM190aW1lX3Byb3RvdHlwZSA9IERhdGUucHJvdG90eXBlO1xuICBmdW5jdGlvbiBkM190aW1lX2ludGVydmFsKGxvY2FsLCBzdGVwLCBudW1iZXIpIHtcbiAgICBmdW5jdGlvbiByb3VuZChkYXRlKSB7XG4gICAgICB2YXIgZDAgPSBsb2NhbChkYXRlKSwgZDEgPSBvZmZzZXQoZDAsIDEpO1xuICAgICAgcmV0dXJuIGRhdGUgLSBkMCA8IGQxIC0gZGF0ZSA/IGQwIDogZDE7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNlaWwoZGF0ZSkge1xuICAgICAgc3RlcChkYXRlID0gbG9jYWwobmV3IGQzX2RhdGUoZGF0ZSAtIDEpKSwgMSk7XG4gICAgICByZXR1cm4gZGF0ZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gb2Zmc2V0KGRhdGUsIGspIHtcbiAgICAgIHN0ZXAoZGF0ZSA9IG5ldyBkM19kYXRlKCtkYXRlKSwgayk7XG4gICAgICByZXR1cm4gZGF0ZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcmFuZ2UodDAsIHQxLCBkdCkge1xuICAgICAgdmFyIHRpbWUgPSBjZWlsKHQwKSwgdGltZXMgPSBbXTtcbiAgICAgIGlmIChkdCA+IDEpIHtcbiAgICAgICAgd2hpbGUgKHRpbWUgPCB0MSkge1xuICAgICAgICAgIGlmICghKG51bWJlcih0aW1lKSAlIGR0KSkgdGltZXMucHVzaChuZXcgRGF0ZSgrdGltZSkpO1xuICAgICAgICAgIHN0ZXAodGltZSwgMSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHdoaWxlICh0aW1lIDwgdDEpIHRpbWVzLnB1c2gobmV3IERhdGUoK3RpbWUpKSwgc3RlcCh0aW1lLCAxKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aW1lcztcbiAgICB9XG4gICAgZnVuY3Rpb24gcmFuZ2VfdXRjKHQwLCB0MSwgZHQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGQzX2RhdGUgPSBkM19kYXRlX3V0YztcbiAgICAgICAgdmFyIHV0YyA9IG5ldyBkM19kYXRlX3V0YygpO1xuICAgICAgICB1dGMuXyA9IHQwO1xuICAgICAgICByZXR1cm4gcmFuZ2UodXRjLCB0MSwgZHQpO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgZDNfZGF0ZSA9IERhdGU7XG4gICAgICB9XG4gICAgfVxuICAgIGxvY2FsLmZsb29yID0gbG9jYWw7XG4gICAgbG9jYWwucm91bmQgPSByb3VuZDtcbiAgICBsb2NhbC5jZWlsID0gY2VpbDtcbiAgICBsb2NhbC5vZmZzZXQgPSBvZmZzZXQ7XG4gICAgbG9jYWwucmFuZ2UgPSByYW5nZTtcbiAgICB2YXIgdXRjID0gbG9jYWwudXRjID0gZDNfdGltZV9pbnRlcnZhbF91dGMobG9jYWwpO1xuICAgIHV0Yy5mbG9vciA9IHV0YztcbiAgICB1dGMucm91bmQgPSBkM190aW1lX2ludGVydmFsX3V0Yyhyb3VuZCk7XG4gICAgdXRjLmNlaWwgPSBkM190aW1lX2ludGVydmFsX3V0YyhjZWlsKTtcbiAgICB1dGMub2Zmc2V0ID0gZDNfdGltZV9pbnRlcnZhbF91dGMob2Zmc2V0KTtcbiAgICB1dGMucmFuZ2UgPSByYW5nZV91dGM7XG4gICAgcmV0dXJuIGxvY2FsO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfaW50ZXJ2YWxfdXRjKG1ldGhvZCkge1xuICAgIHJldHVybiBmdW5jdGlvbihkYXRlLCBrKSB7XG4gICAgICB0cnkge1xuICAgICAgICBkM19kYXRlID0gZDNfZGF0ZV91dGM7XG4gICAgICAgIHZhciB1dGMgPSBuZXcgZDNfZGF0ZV91dGMoKTtcbiAgICAgICAgdXRjLl8gPSBkYXRlO1xuICAgICAgICByZXR1cm4gbWV0aG9kKHV0YywgaykuXztcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIGQzX2RhdGUgPSBEYXRlO1xuICAgICAgfVxuICAgIH07XG4gIH1cbiAgZDNfdGltZS55ZWFyID0gZDNfdGltZV9pbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgZGF0ZSA9IGQzX3RpbWUuZGF5KGRhdGUpO1xuICAgIGRhdGUuc2V0TW9udGgoMCwgMSk7XG4gICAgcmV0dXJuIGRhdGU7XG4gIH0sIGZ1bmN0aW9uKGRhdGUsIG9mZnNldCkge1xuICAgIGRhdGUuc2V0RnVsbFllYXIoZGF0ZS5nZXRGdWxsWWVhcigpICsgb2Zmc2V0KTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSkge1xuICAgIHJldHVybiBkYXRlLmdldEZ1bGxZZWFyKCk7XG4gIH0pO1xuICBkM190aW1lLnllYXJzID0gZDNfdGltZS55ZWFyLnJhbmdlO1xuICBkM190aW1lLnllYXJzLnV0YyA9IGQzX3RpbWUueWVhci51dGMucmFuZ2U7XG4gIGQzX3RpbWUuZGF5ID0gZDNfdGltZV9pbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgdmFyIGRheSA9IG5ldyBkM19kYXRlKDJlMywgMCk7XG4gICAgZGF5LnNldEZ1bGxZZWFyKGRhdGUuZ2V0RnVsbFllYXIoKSwgZGF0ZS5nZXRNb250aCgpLCBkYXRlLmdldERhdGUoKSk7XG4gICAgcmV0dXJuIGRheTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSwgb2Zmc2V0KSB7XG4gICAgZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpICsgb2Zmc2V0KTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSkge1xuICAgIHJldHVybiBkYXRlLmdldERhdGUoKSAtIDE7XG4gIH0pO1xuICBkM190aW1lLmRheXMgPSBkM190aW1lLmRheS5yYW5nZTtcbiAgZDNfdGltZS5kYXlzLnV0YyA9IGQzX3RpbWUuZGF5LnV0Yy5yYW5nZTtcbiAgZDNfdGltZS5kYXlPZlllYXIgPSBmdW5jdGlvbihkYXRlKSB7XG4gICAgdmFyIHllYXIgPSBkM190aW1lLnllYXIoZGF0ZSk7XG4gICAgcmV0dXJuIE1hdGguZmxvb3IoKGRhdGUgLSB5ZWFyIC0gKGRhdGUuZ2V0VGltZXpvbmVPZmZzZXQoKSAtIHllYXIuZ2V0VGltZXpvbmVPZmZzZXQoKSkgKiA2ZTQpIC8gODY0ZTUpO1xuICB9O1xuICBbIFwic3VuZGF5XCIsIFwibW9uZGF5XCIsIFwidHVlc2RheVwiLCBcIndlZG5lc2RheVwiLCBcInRodXJzZGF5XCIsIFwiZnJpZGF5XCIsIFwic2F0dXJkYXlcIiBdLmZvckVhY2goZnVuY3Rpb24oZGF5LCBpKSB7XG4gICAgaSA9IDcgLSBpO1xuICAgIHZhciBpbnRlcnZhbCA9IGQzX3RpbWVbZGF5XSA9IGQzX3RpbWVfaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgICAgKGRhdGUgPSBkM190aW1lLmRheShkYXRlKSkuc2V0RGF0ZShkYXRlLmdldERhdGUoKSAtIChkYXRlLmdldERheSgpICsgaSkgJSA3KTtcbiAgICAgIHJldHVybiBkYXRlO1xuICAgIH0sIGZ1bmN0aW9uKGRhdGUsIG9mZnNldCkge1xuICAgICAgZGF0ZS5zZXREYXRlKGRhdGUuZ2V0RGF0ZSgpICsgTWF0aC5mbG9vcihvZmZzZXQpICogNyk7XG4gICAgfSwgZnVuY3Rpb24oZGF0ZSkge1xuICAgICAgdmFyIGRheSA9IGQzX3RpbWUueWVhcihkYXRlKS5nZXREYXkoKTtcbiAgICAgIHJldHVybiBNYXRoLmZsb29yKChkM190aW1lLmRheU9mWWVhcihkYXRlKSArIChkYXkgKyBpKSAlIDcpIC8gNykgLSAoZGF5ICE9PSBpKTtcbiAgICB9KTtcbiAgICBkM190aW1lW2RheSArIFwic1wiXSA9IGludGVydmFsLnJhbmdlO1xuICAgIGQzX3RpbWVbZGF5ICsgXCJzXCJdLnV0YyA9IGludGVydmFsLnV0Yy5yYW5nZTtcbiAgICBkM190aW1lW2RheSArIFwiT2ZZZWFyXCJdID0gZnVuY3Rpb24oZGF0ZSkge1xuICAgICAgdmFyIGRheSA9IGQzX3RpbWUueWVhcihkYXRlKS5nZXREYXkoKTtcbiAgICAgIHJldHVybiBNYXRoLmZsb29yKChkM190aW1lLmRheU9mWWVhcihkYXRlKSArIChkYXkgKyBpKSAlIDcpIC8gNyk7XG4gICAgfTtcbiAgfSk7XG4gIGQzX3RpbWUud2VlayA9IGQzX3RpbWUuc3VuZGF5O1xuICBkM190aW1lLndlZWtzID0gZDNfdGltZS5zdW5kYXkucmFuZ2U7XG4gIGQzX3RpbWUud2Vla3MudXRjID0gZDNfdGltZS5zdW5kYXkudXRjLnJhbmdlO1xuICBkM190aW1lLndlZWtPZlllYXIgPSBkM190aW1lLnN1bmRheU9mWWVhcjtcbiAgZnVuY3Rpb24gZDNfbG9jYWxlX3RpbWVGb3JtYXQobG9jYWxlKSB7XG4gICAgdmFyIGxvY2FsZV9kYXRlVGltZSA9IGxvY2FsZS5kYXRlVGltZSwgbG9jYWxlX2RhdGUgPSBsb2NhbGUuZGF0ZSwgbG9jYWxlX3RpbWUgPSBsb2NhbGUudGltZSwgbG9jYWxlX3BlcmlvZHMgPSBsb2NhbGUucGVyaW9kcywgbG9jYWxlX2RheXMgPSBsb2NhbGUuZGF5cywgbG9jYWxlX3Nob3J0RGF5cyA9IGxvY2FsZS5zaG9ydERheXMsIGxvY2FsZV9tb250aHMgPSBsb2NhbGUubW9udGhzLCBsb2NhbGVfc2hvcnRNb250aHMgPSBsb2NhbGUuc2hvcnRNb250aHM7XG4gICAgZnVuY3Rpb24gZDNfdGltZV9mb3JtYXQodGVtcGxhdGUpIHtcbiAgICAgIHZhciBuID0gdGVtcGxhdGUubGVuZ3RoO1xuICAgICAgZnVuY3Rpb24gZm9ybWF0KGRhdGUpIHtcbiAgICAgICAgdmFyIHN0cmluZyA9IFtdLCBpID0gLTEsIGogPSAwLCBjLCBwLCBmO1xuICAgICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICAgIGlmICh0ZW1wbGF0ZS5jaGFyQ29kZUF0KGkpID09PSAzNykge1xuICAgICAgICAgICAgc3RyaW5nLnB1c2godGVtcGxhdGUuc3Vic3RyaW5nKGosIGkpKTtcbiAgICAgICAgICAgIGlmICgocCA9IGQzX3RpbWVfZm9ybWF0UGFkc1tjID0gdGVtcGxhdGUuY2hhckF0KCsraSldKSAhPSBudWxsKSBjID0gdGVtcGxhdGUuY2hhckF0KCsraSk7XG4gICAgICAgICAgICBpZiAoZiA9IGQzX3RpbWVfZm9ybWF0c1tjXSkgYyA9IGYoZGF0ZSwgcCA9PSBudWxsID8gYyA9PT0gXCJlXCIgPyBcIiBcIiA6IFwiMFwiIDogcCk7XG4gICAgICAgICAgICBzdHJpbmcucHVzaChjKTtcbiAgICAgICAgICAgIGogPSBpICsgMTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgc3RyaW5nLnB1c2godGVtcGxhdGUuc3Vic3RyaW5nKGosIGkpKTtcbiAgICAgICAgcmV0dXJuIHN0cmluZy5qb2luKFwiXCIpO1xuICAgICAgfVxuICAgICAgZm9ybWF0LnBhcnNlID0gZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgICAgIHZhciBkID0ge1xuICAgICAgICAgIHk6IDE5MDAsXG4gICAgICAgICAgbTogMCxcbiAgICAgICAgICBkOiAxLFxuICAgICAgICAgIEg6IDAsXG4gICAgICAgICAgTTogMCxcbiAgICAgICAgICBTOiAwLFxuICAgICAgICAgIEw6IDAsXG4gICAgICAgICAgWjogbnVsbFxuICAgICAgICB9LCBpID0gZDNfdGltZV9wYXJzZShkLCB0ZW1wbGF0ZSwgc3RyaW5nLCAwKTtcbiAgICAgICAgaWYgKGkgIT0gc3RyaW5nLmxlbmd0aCkgcmV0dXJuIG51bGw7XG4gICAgICAgIGlmIChcInBcIiBpbiBkKSBkLkggPSBkLkggJSAxMiArIGQucCAqIDEyO1xuICAgICAgICB2YXIgbG9jYWxaID0gZC5aICE9IG51bGwgJiYgZDNfZGF0ZSAhPT0gZDNfZGF0ZV91dGMsIGRhdGUgPSBuZXcgKGxvY2FsWiA/IGQzX2RhdGVfdXRjIDogZDNfZGF0ZSkoKTtcbiAgICAgICAgaWYgKFwialwiIGluIGQpIGRhdGUuc2V0RnVsbFllYXIoZC55LCAwLCBkLmopOyBlbHNlIGlmIChcIndcIiBpbiBkICYmIChcIldcIiBpbiBkIHx8IFwiVVwiIGluIGQpKSB7XG4gICAgICAgICAgZGF0ZS5zZXRGdWxsWWVhcihkLnksIDAsIDEpO1xuICAgICAgICAgIGRhdGUuc2V0RnVsbFllYXIoZC55LCAwLCBcIldcIiBpbiBkID8gKGQudyArIDYpICUgNyArIGQuVyAqIDcgLSAoZGF0ZS5nZXREYXkoKSArIDUpICUgNyA6IGQudyArIGQuVSAqIDcgLSAoZGF0ZS5nZXREYXkoKSArIDYpICUgNyk7XG4gICAgICAgIH0gZWxzZSBkYXRlLnNldEZ1bGxZZWFyKGQueSwgZC5tLCBkLmQpO1xuICAgICAgICBkYXRlLnNldEhvdXJzKGQuSCArIE1hdGguZmxvb3IoZC5aIC8gMTAwKSwgZC5NICsgZC5aICUgMTAwLCBkLlMsIGQuTCk7XG4gICAgICAgIHJldHVybiBsb2NhbFogPyBkYXRlLl8gOiBkYXRlO1xuICAgICAgfTtcbiAgICAgIGZvcm1hdC50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdGVtcGxhdGU7XG4gICAgICB9O1xuICAgICAgcmV0dXJuIGZvcm1hdDtcbiAgICB9XG4gICAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZShkYXRlLCB0ZW1wbGF0ZSwgc3RyaW5nLCBqKSB7XG4gICAgICB2YXIgYywgcCwgdCwgaSA9IDAsIG4gPSB0ZW1wbGF0ZS5sZW5ndGgsIG0gPSBzdHJpbmcubGVuZ3RoO1xuICAgICAgd2hpbGUgKGkgPCBuKSB7XG4gICAgICAgIGlmIChqID49IG0pIHJldHVybiAtMTtcbiAgICAgICAgYyA9IHRlbXBsYXRlLmNoYXJDb2RlQXQoaSsrKTtcbiAgICAgICAgaWYgKGMgPT09IDM3KSB7XG4gICAgICAgICAgdCA9IHRlbXBsYXRlLmNoYXJBdChpKyspO1xuICAgICAgICAgIHAgPSBkM190aW1lX3BhcnNlcnNbdCBpbiBkM190aW1lX2Zvcm1hdFBhZHMgPyB0ZW1wbGF0ZS5jaGFyQXQoaSsrKSA6IHRdO1xuICAgICAgICAgIGlmICghcCB8fCAoaiA9IHAoZGF0ZSwgc3RyaW5nLCBqKSkgPCAwKSByZXR1cm4gLTE7XG4gICAgICAgIH0gZWxzZSBpZiAoYyAhPSBzdHJpbmcuY2hhckNvZGVBdChqKyspKSB7XG4gICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gajtcbiAgICB9XG4gICAgZDNfdGltZV9mb3JtYXQudXRjID0gZnVuY3Rpb24odGVtcGxhdGUpIHtcbiAgICAgIHZhciBsb2NhbCA9IGQzX3RpbWVfZm9ybWF0KHRlbXBsYXRlKTtcbiAgICAgIGZ1bmN0aW9uIGZvcm1hdChkYXRlKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgZDNfZGF0ZSA9IGQzX2RhdGVfdXRjO1xuICAgICAgICAgIHZhciB1dGMgPSBuZXcgZDNfZGF0ZSgpO1xuICAgICAgICAgIHV0Yy5fID0gZGF0ZTtcbiAgICAgICAgICByZXR1cm4gbG9jYWwodXRjKTtcbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICBkM19kYXRlID0gRGF0ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZm9ybWF0LnBhcnNlID0gZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgZDNfZGF0ZSA9IGQzX2RhdGVfdXRjO1xuICAgICAgICAgIHZhciBkYXRlID0gbG9jYWwucGFyc2Uoc3RyaW5nKTtcbiAgICAgICAgICByZXR1cm4gZGF0ZSAmJiBkYXRlLl87XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgZDNfZGF0ZSA9IERhdGU7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBmb3JtYXQudG9TdHJpbmcgPSBsb2NhbC50b1N0cmluZztcbiAgICAgIHJldHVybiBmb3JtYXQ7XG4gICAgfTtcbiAgICBkM190aW1lX2Zvcm1hdC5tdWx0aSA9IGQzX3RpbWVfZm9ybWF0LnV0Yy5tdWx0aSA9IGQzX3RpbWVfZm9ybWF0TXVsdGk7XG4gICAgdmFyIGQzX3RpbWVfcGVyaW9kTG9va3VwID0gZDMubWFwKCksIGQzX3RpbWVfZGF5UmUgPSBkM190aW1lX2Zvcm1hdFJlKGxvY2FsZV9kYXlzKSwgZDNfdGltZV9kYXlMb29rdXAgPSBkM190aW1lX2Zvcm1hdExvb2t1cChsb2NhbGVfZGF5cyksIGQzX3RpbWVfZGF5QWJicmV2UmUgPSBkM190aW1lX2Zvcm1hdFJlKGxvY2FsZV9zaG9ydERheXMpLCBkM190aW1lX2RheUFiYnJldkxvb2t1cCA9IGQzX3RpbWVfZm9ybWF0TG9va3VwKGxvY2FsZV9zaG9ydERheXMpLCBkM190aW1lX21vbnRoUmUgPSBkM190aW1lX2Zvcm1hdFJlKGxvY2FsZV9tb250aHMpLCBkM190aW1lX21vbnRoTG9va3VwID0gZDNfdGltZV9mb3JtYXRMb29rdXAobG9jYWxlX21vbnRocyksIGQzX3RpbWVfbW9udGhBYmJyZXZSZSA9IGQzX3RpbWVfZm9ybWF0UmUobG9jYWxlX3Nob3J0TW9udGhzKSwgZDNfdGltZV9tb250aEFiYnJldkxvb2t1cCA9IGQzX3RpbWVfZm9ybWF0TG9va3VwKGxvY2FsZV9zaG9ydE1vbnRocyk7XG4gICAgbG9jYWxlX3BlcmlvZHMuZm9yRWFjaChmdW5jdGlvbihwLCBpKSB7XG4gICAgICBkM190aW1lX3BlcmlvZExvb2t1cC5zZXQocC50b0xvd2VyQ2FzZSgpLCBpKTtcbiAgICB9KTtcbiAgICB2YXIgZDNfdGltZV9mb3JtYXRzID0ge1xuICAgICAgYTogZnVuY3Rpb24oZCkge1xuICAgICAgICByZXR1cm4gbG9jYWxlX3Nob3J0RGF5c1tkLmdldERheSgpXTtcbiAgICAgIH0sXG4gICAgICBBOiBmdW5jdGlvbihkKSB7XG4gICAgICAgIHJldHVybiBsb2NhbGVfZGF5c1tkLmdldERheSgpXTtcbiAgICAgIH0sXG4gICAgICBiOiBmdW5jdGlvbihkKSB7XG4gICAgICAgIHJldHVybiBsb2NhbGVfc2hvcnRNb250aHNbZC5nZXRNb250aCgpXTtcbiAgICAgIH0sXG4gICAgICBCOiBmdW5jdGlvbihkKSB7XG4gICAgICAgIHJldHVybiBsb2NhbGVfbW9udGhzW2QuZ2V0TW9udGgoKV07XG4gICAgICB9LFxuICAgICAgYzogZDNfdGltZV9mb3JtYXQobG9jYWxlX2RhdGVUaW1lKSxcbiAgICAgIGQ6IGZ1bmN0aW9uKGQsIHApIHtcbiAgICAgICAgcmV0dXJuIGQzX3RpbWVfZm9ybWF0UGFkKGQuZ2V0RGF0ZSgpLCBwLCAyKTtcbiAgICAgIH0sXG4gICAgICBlOiBmdW5jdGlvbihkLCBwKSB7XG4gICAgICAgIHJldHVybiBkM190aW1lX2Zvcm1hdFBhZChkLmdldERhdGUoKSwgcCwgMik7XG4gICAgICB9LFxuICAgICAgSDogZnVuY3Rpb24oZCwgcCkge1xuICAgICAgICByZXR1cm4gZDNfdGltZV9mb3JtYXRQYWQoZC5nZXRIb3VycygpLCBwLCAyKTtcbiAgICAgIH0sXG4gICAgICBJOiBmdW5jdGlvbihkLCBwKSB7XG4gICAgICAgIHJldHVybiBkM190aW1lX2Zvcm1hdFBhZChkLmdldEhvdXJzKCkgJSAxMiB8fCAxMiwgcCwgMik7XG4gICAgICB9LFxuICAgICAgajogZnVuY3Rpb24oZCwgcCkge1xuICAgICAgICByZXR1cm4gZDNfdGltZV9mb3JtYXRQYWQoMSArIGQzX3RpbWUuZGF5T2ZZZWFyKGQpLCBwLCAzKTtcbiAgICAgIH0sXG4gICAgICBMOiBmdW5jdGlvbihkLCBwKSB7XG4gICAgICAgIHJldHVybiBkM190aW1lX2Zvcm1hdFBhZChkLmdldE1pbGxpc2Vjb25kcygpLCBwLCAzKTtcbiAgICAgIH0sXG4gICAgICBtOiBmdW5jdGlvbihkLCBwKSB7XG4gICAgICAgIHJldHVybiBkM190aW1lX2Zvcm1hdFBhZChkLmdldE1vbnRoKCkgKyAxLCBwLCAyKTtcbiAgICAgIH0sXG4gICAgICBNOiBmdW5jdGlvbihkLCBwKSB7XG4gICAgICAgIHJldHVybiBkM190aW1lX2Zvcm1hdFBhZChkLmdldE1pbnV0ZXMoKSwgcCwgMik7XG4gICAgICB9LFxuICAgICAgcDogZnVuY3Rpb24oZCkge1xuICAgICAgICByZXR1cm4gbG9jYWxlX3BlcmlvZHNbKyhkLmdldEhvdXJzKCkgPj0gMTIpXTtcbiAgICAgIH0sXG4gICAgICBTOiBmdW5jdGlvbihkLCBwKSB7XG4gICAgICAgIHJldHVybiBkM190aW1lX2Zvcm1hdFBhZChkLmdldFNlY29uZHMoKSwgcCwgMik7XG4gICAgICB9LFxuICAgICAgVTogZnVuY3Rpb24oZCwgcCkge1xuICAgICAgICByZXR1cm4gZDNfdGltZV9mb3JtYXRQYWQoZDNfdGltZS5zdW5kYXlPZlllYXIoZCksIHAsIDIpO1xuICAgICAgfSxcbiAgICAgIHc6IGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgcmV0dXJuIGQuZ2V0RGF5KCk7XG4gICAgICB9LFxuICAgICAgVzogZnVuY3Rpb24oZCwgcCkge1xuICAgICAgICByZXR1cm4gZDNfdGltZV9mb3JtYXRQYWQoZDNfdGltZS5tb25kYXlPZlllYXIoZCksIHAsIDIpO1xuICAgICAgfSxcbiAgICAgIHg6IGQzX3RpbWVfZm9ybWF0KGxvY2FsZV9kYXRlKSxcbiAgICAgIFg6IGQzX3RpbWVfZm9ybWF0KGxvY2FsZV90aW1lKSxcbiAgICAgIHk6IGZ1bmN0aW9uKGQsIHApIHtcbiAgICAgICAgcmV0dXJuIGQzX3RpbWVfZm9ybWF0UGFkKGQuZ2V0RnVsbFllYXIoKSAlIDEwMCwgcCwgMik7XG4gICAgICB9LFxuICAgICAgWTogZnVuY3Rpb24oZCwgcCkge1xuICAgICAgICByZXR1cm4gZDNfdGltZV9mb3JtYXRQYWQoZC5nZXRGdWxsWWVhcigpICUgMWU0LCBwLCA0KTtcbiAgICAgIH0sXG4gICAgICBaOiBkM190aW1lX3pvbmUsXG4gICAgICBcIiVcIjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBcIiVcIjtcbiAgICAgIH1cbiAgICB9O1xuICAgIHZhciBkM190aW1lX3BhcnNlcnMgPSB7XG4gICAgICBhOiBkM190aW1lX3BhcnNlV2Vla2RheUFiYnJldixcbiAgICAgIEE6IGQzX3RpbWVfcGFyc2VXZWVrZGF5LFxuICAgICAgYjogZDNfdGltZV9wYXJzZU1vbnRoQWJicmV2LFxuICAgICAgQjogZDNfdGltZV9wYXJzZU1vbnRoLFxuICAgICAgYzogZDNfdGltZV9wYXJzZUxvY2FsZUZ1bGwsXG4gICAgICBkOiBkM190aW1lX3BhcnNlRGF5LFxuICAgICAgZTogZDNfdGltZV9wYXJzZURheSxcbiAgICAgIEg6IGQzX3RpbWVfcGFyc2VIb3VyMjQsXG4gICAgICBJOiBkM190aW1lX3BhcnNlSG91cjI0LFxuICAgICAgajogZDNfdGltZV9wYXJzZURheU9mWWVhcixcbiAgICAgIEw6IGQzX3RpbWVfcGFyc2VNaWxsaXNlY29uZHMsXG4gICAgICBtOiBkM190aW1lX3BhcnNlTW9udGhOdW1iZXIsXG4gICAgICBNOiBkM190aW1lX3BhcnNlTWludXRlcyxcbiAgICAgIHA6IGQzX3RpbWVfcGFyc2VBbVBtLFxuICAgICAgUzogZDNfdGltZV9wYXJzZVNlY29uZHMsXG4gICAgICBVOiBkM190aW1lX3BhcnNlV2Vla051bWJlclN1bmRheSxcbiAgICAgIHc6IGQzX3RpbWVfcGFyc2VXZWVrZGF5TnVtYmVyLFxuICAgICAgVzogZDNfdGltZV9wYXJzZVdlZWtOdW1iZXJNb25kYXksXG4gICAgICB4OiBkM190aW1lX3BhcnNlTG9jYWxlRGF0ZSxcbiAgICAgIFg6IGQzX3RpbWVfcGFyc2VMb2NhbGVUaW1lLFxuICAgICAgeTogZDNfdGltZV9wYXJzZVllYXIsXG4gICAgICBZOiBkM190aW1lX3BhcnNlRnVsbFllYXIsXG4gICAgICBaOiBkM190aW1lX3BhcnNlWm9uZSxcbiAgICAgIFwiJVwiOiBkM190aW1lX3BhcnNlTGl0ZXJhbFBlcmNlbnRcbiAgICB9O1xuICAgIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VXZWVrZGF5QWJicmV2KGRhdGUsIHN0cmluZywgaSkge1xuICAgICAgZDNfdGltZV9kYXlBYmJyZXZSZS5sYXN0SW5kZXggPSAwO1xuICAgICAgdmFyIG4gPSBkM190aW1lX2RheUFiYnJldlJlLmV4ZWMoc3RyaW5nLnN1YnN0cmluZyhpKSk7XG4gICAgICByZXR1cm4gbiA/IChkYXRlLncgPSBkM190aW1lX2RheUFiYnJldkxvb2t1cC5nZXQoblswXS50b0xvd2VyQ2FzZSgpKSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICAgIH1cbiAgICBmdW5jdGlvbiBkM190aW1lX3BhcnNlV2Vla2RheShkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICAgIGQzX3RpbWVfZGF5UmUubGFzdEluZGV4ID0gMDtcbiAgICAgIHZhciBuID0gZDNfdGltZV9kYXlSZS5leGVjKHN0cmluZy5zdWJzdHJpbmcoaSkpO1xuICAgICAgcmV0dXJuIG4gPyAoZGF0ZS53ID0gZDNfdGltZV9kYXlMb29rdXAuZ2V0KG5bMF0udG9Mb3dlckNhc2UoKSksIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZU1vbnRoQWJicmV2KGRhdGUsIHN0cmluZywgaSkge1xuICAgICAgZDNfdGltZV9tb250aEFiYnJldlJlLmxhc3RJbmRleCA9IDA7XG4gICAgICB2YXIgbiA9IGQzX3RpbWVfbW9udGhBYmJyZXZSZS5leGVjKHN0cmluZy5zdWJzdHJpbmcoaSkpO1xuICAgICAgcmV0dXJuIG4gPyAoZGF0ZS5tID0gZDNfdGltZV9tb250aEFiYnJldkxvb2t1cC5nZXQoblswXS50b0xvd2VyQ2FzZSgpKSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICAgIH1cbiAgICBmdW5jdGlvbiBkM190aW1lX3BhcnNlTW9udGgoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgICBkM190aW1lX21vbnRoUmUubGFzdEluZGV4ID0gMDtcbiAgICAgIHZhciBuID0gZDNfdGltZV9tb250aFJlLmV4ZWMoc3RyaW5nLnN1YnN0cmluZyhpKSk7XG4gICAgICByZXR1cm4gbiA/IChkYXRlLm0gPSBkM190aW1lX21vbnRoTG9va3VwLmdldChuWzBdLnRvTG93ZXJDYXNlKCkpLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VMb2NhbGVGdWxsKGRhdGUsIHN0cmluZywgaSkge1xuICAgICAgcmV0dXJuIGQzX3RpbWVfcGFyc2UoZGF0ZSwgZDNfdGltZV9mb3JtYXRzLmMudG9TdHJpbmcoKSwgc3RyaW5nLCBpKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZUxvY2FsZURhdGUoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgICByZXR1cm4gZDNfdGltZV9wYXJzZShkYXRlLCBkM190aW1lX2Zvcm1hdHMueC50b1N0cmluZygpLCBzdHJpbmcsIGkpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBkM190aW1lX3BhcnNlTG9jYWxlVGltZShkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICAgIHJldHVybiBkM190aW1lX3BhcnNlKGRhdGUsIGQzX3RpbWVfZm9ybWF0cy5YLnRvU3RyaW5nKCksIHN0cmluZywgaSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VBbVBtKGRhdGUsIHN0cmluZywgaSkge1xuICAgICAgdmFyIG4gPSBkM190aW1lX3BlcmlvZExvb2t1cC5nZXQoc3RyaW5nLnN1YnN0cmluZyhpLCBpICs9IDIpLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgcmV0dXJuIG4gPT0gbnVsbCA/IC0xIDogKGRhdGUucCA9IG4sIGkpO1xuICAgIH1cbiAgICByZXR1cm4gZDNfdGltZV9mb3JtYXQ7XG4gIH1cbiAgdmFyIGQzX3RpbWVfZm9ybWF0UGFkcyA9IHtcbiAgICBcIi1cIjogXCJcIixcbiAgICBfOiBcIiBcIixcbiAgICBcIjBcIjogXCIwXCJcbiAgfSwgZDNfdGltZV9udW1iZXJSZSA9IC9eXFxzKlxcZCsvLCBkM190aW1lX3BlcmNlbnRSZSA9IC9eJS87XG4gIGZ1bmN0aW9uIGQzX3RpbWVfZm9ybWF0UGFkKHZhbHVlLCBmaWxsLCB3aWR0aCkge1xuICAgIHZhciBzaWduID0gdmFsdWUgPCAwID8gXCItXCIgOiBcIlwiLCBzdHJpbmcgPSAoc2lnbiA/IC12YWx1ZSA6IHZhbHVlKSArIFwiXCIsIGxlbmd0aCA9IHN0cmluZy5sZW5ndGg7XG4gICAgcmV0dXJuIHNpZ24gKyAobGVuZ3RoIDwgd2lkdGggPyBuZXcgQXJyYXkod2lkdGggLSBsZW5ndGggKyAxKS5qb2luKGZpbGwpICsgc3RyaW5nIDogc3RyaW5nKTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX2Zvcm1hdFJlKG5hbWVzKSB7XG4gICAgcmV0dXJuIG5ldyBSZWdFeHAoXCJeKD86XCIgKyBuYW1lcy5tYXAoZDMucmVxdW90ZSkuam9pbihcInxcIikgKyBcIilcIiwgXCJpXCIpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfZm9ybWF0TG9va3VwKG5hbWVzKSB7XG4gICAgdmFyIG1hcCA9IG5ldyBkM19NYXAoKSwgaSA9IC0xLCBuID0gbmFtZXMubGVuZ3RoO1xuICAgIHdoaWxlICgrK2kgPCBuKSBtYXAuc2V0KG5hbWVzW2ldLnRvTG93ZXJDYXNlKCksIGkpO1xuICAgIHJldHVybiBtYXA7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZVdlZWtkYXlOdW1iZXIoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgZDNfdGltZV9udW1iZXJSZS5sYXN0SW5kZXggPSAwO1xuICAgIHZhciBuID0gZDNfdGltZV9udW1iZXJSZS5leGVjKHN0cmluZy5zdWJzdHJpbmcoaSwgaSArIDEpKTtcbiAgICByZXR1cm4gbiA/IChkYXRlLncgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VXZWVrTnVtYmVyU3VuZGF5KGRhdGUsIHN0cmluZywgaSkge1xuICAgIGQzX3RpbWVfbnVtYmVyUmUubGFzdEluZGV4ID0gMDtcbiAgICB2YXIgbiA9IGQzX3RpbWVfbnVtYmVyUmUuZXhlYyhzdHJpbmcuc3Vic3RyaW5nKGkpKTtcbiAgICByZXR1cm4gbiA/IChkYXRlLlUgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VXZWVrTnVtYmVyTW9uZGF5KGRhdGUsIHN0cmluZywgaSkge1xuICAgIGQzX3RpbWVfbnVtYmVyUmUubGFzdEluZGV4ID0gMDtcbiAgICB2YXIgbiA9IGQzX3RpbWVfbnVtYmVyUmUuZXhlYyhzdHJpbmcuc3Vic3RyaW5nKGkpKTtcbiAgICByZXR1cm4gbiA/IChkYXRlLlcgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VGdWxsWWVhcihkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICBkM190aW1lX251bWJlclJlLmxhc3RJbmRleCA9IDA7XG4gICAgdmFyIG4gPSBkM190aW1lX251bWJlclJlLmV4ZWMoc3RyaW5nLnN1YnN0cmluZyhpLCBpICsgNCkpO1xuICAgIHJldHVybiBuID8gKGRhdGUueSA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZVllYXIoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgZDNfdGltZV9udW1iZXJSZS5sYXN0SW5kZXggPSAwO1xuICAgIHZhciBuID0gZDNfdGltZV9udW1iZXJSZS5leGVjKHN0cmluZy5zdWJzdHJpbmcoaSwgaSArIDIpKTtcbiAgICByZXR1cm4gbiA/IChkYXRlLnkgPSBkM190aW1lX2V4cGFuZFllYXIoK25bMF0pLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZVpvbmUoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgcmV0dXJuIC9eWystXVxcZHs0fSQvLnRlc3Qoc3RyaW5nID0gc3RyaW5nLnN1YnN0cmluZyhpLCBpICsgNSkpID8gKGRhdGUuWiA9IC1zdHJpbmcsIFxuICAgIGkgKyA1KSA6IC0xO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfZXhwYW5kWWVhcihkKSB7XG4gICAgcmV0dXJuIGQgKyAoZCA+IDY4ID8gMTkwMCA6IDJlMyk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZU1vbnRoTnVtYmVyKGRhdGUsIHN0cmluZywgaSkge1xuICAgIGQzX3RpbWVfbnVtYmVyUmUubGFzdEluZGV4ID0gMDtcbiAgICB2YXIgbiA9IGQzX3RpbWVfbnVtYmVyUmUuZXhlYyhzdHJpbmcuc3Vic3RyaW5nKGksIGkgKyAyKSk7XG4gICAgcmV0dXJuIG4gPyAoZGF0ZS5tID0gblswXSAtIDEsIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3BhcnNlRGF5KGRhdGUsIHN0cmluZywgaSkge1xuICAgIGQzX3RpbWVfbnVtYmVyUmUubGFzdEluZGV4ID0gMDtcbiAgICB2YXIgbiA9IGQzX3RpbWVfbnVtYmVyUmUuZXhlYyhzdHJpbmcuc3Vic3RyaW5nKGksIGkgKyAyKSk7XG4gICAgcmV0dXJuIG4gPyAoZGF0ZS5kID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3BhcnNlRGF5T2ZZZWFyKGRhdGUsIHN0cmluZywgaSkge1xuICAgIGQzX3RpbWVfbnVtYmVyUmUubGFzdEluZGV4ID0gMDtcbiAgICB2YXIgbiA9IGQzX3RpbWVfbnVtYmVyUmUuZXhlYyhzdHJpbmcuc3Vic3RyaW5nKGksIGkgKyAzKSk7XG4gICAgcmV0dXJuIG4gPyAoZGF0ZS5qID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3BhcnNlSG91cjI0KGRhdGUsIHN0cmluZywgaSkge1xuICAgIGQzX3RpbWVfbnVtYmVyUmUubGFzdEluZGV4ID0gMDtcbiAgICB2YXIgbiA9IGQzX3RpbWVfbnVtYmVyUmUuZXhlYyhzdHJpbmcuc3Vic3RyaW5nKGksIGkgKyAyKSk7XG4gICAgcmV0dXJuIG4gPyAoZGF0ZS5IID0gK25bMF0sIGkgKyBuWzBdLmxlbmd0aCkgOiAtMTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3BhcnNlTWludXRlcyhkYXRlLCBzdHJpbmcsIGkpIHtcbiAgICBkM190aW1lX251bWJlclJlLmxhc3RJbmRleCA9IDA7XG4gICAgdmFyIG4gPSBkM190aW1lX251bWJlclJlLmV4ZWMoc3RyaW5nLnN1YnN0cmluZyhpLCBpICsgMikpO1xuICAgIHJldHVybiBuID8gKGRhdGUuTSA9ICtuWzBdLCBpICsgblswXS5sZW5ndGgpIDogLTE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9wYXJzZVNlY29uZHMoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgZDNfdGltZV9udW1iZXJSZS5sYXN0SW5kZXggPSAwO1xuICAgIHZhciBuID0gZDNfdGltZV9udW1iZXJSZS5leGVjKHN0cmluZy5zdWJzdHJpbmcoaSwgaSArIDIpKTtcbiAgICByZXR1cm4gbiA/IChkYXRlLlMgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfcGFyc2VNaWxsaXNlY29uZHMoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgZDNfdGltZV9udW1iZXJSZS5sYXN0SW5kZXggPSAwO1xuICAgIHZhciBuID0gZDNfdGltZV9udW1iZXJSZS5leGVjKHN0cmluZy5zdWJzdHJpbmcoaSwgaSArIDMpKTtcbiAgICByZXR1cm4gbiA/IChkYXRlLkwgPSArblswXSwgaSArIG5bMF0ubGVuZ3RoKSA6IC0xO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RpbWVfem9uZShkKSB7XG4gICAgdmFyIHogPSBkLmdldFRpbWV6b25lT2Zmc2V0KCksIHpzID0geiA+IDAgPyBcIi1cIiA6IFwiK1wiLCB6aCA9IH5+KGFicyh6KSAvIDYwKSwgem0gPSBhYnMoeikgJSA2MDtcbiAgICByZXR1cm4genMgKyBkM190aW1lX2Zvcm1hdFBhZCh6aCwgXCIwXCIsIDIpICsgZDNfdGltZV9mb3JtYXRQYWQoem0sIFwiMFwiLCAyKTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3BhcnNlTGl0ZXJhbFBlcmNlbnQoZGF0ZSwgc3RyaW5nLCBpKSB7XG4gICAgZDNfdGltZV9wZXJjZW50UmUubGFzdEluZGV4ID0gMDtcbiAgICB2YXIgbiA9IGQzX3RpbWVfcGVyY2VudFJlLmV4ZWMoc3RyaW5nLnN1YnN0cmluZyhpLCBpICsgMSkpO1xuICAgIHJldHVybiBuID8gaSArIG5bMF0ubGVuZ3RoIDogLTE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdGltZV9mb3JtYXRNdWx0aShmb3JtYXRzKSB7XG4gICAgdmFyIG4gPSBmb3JtYXRzLmxlbmd0aCwgaSA9IC0xO1xuICAgIHdoaWxlICgrK2kgPCBuKSBmb3JtYXRzW2ldWzBdID0gdGhpcyhmb3JtYXRzW2ldWzBdKTtcbiAgICByZXR1cm4gZnVuY3Rpb24oZGF0ZSkge1xuICAgICAgdmFyIGkgPSAwLCBmID0gZm9ybWF0c1tpXTtcbiAgICAgIHdoaWxlICghZlsxXShkYXRlKSkgZiA9IGZvcm1hdHNbKytpXTtcbiAgICAgIHJldHVybiBmWzBdKGRhdGUpO1xuICAgIH07XG4gIH1cbiAgZDMubG9jYWxlID0gZnVuY3Rpb24obG9jYWxlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG51bWJlckZvcm1hdDogZDNfbG9jYWxlX251bWJlckZvcm1hdChsb2NhbGUpLFxuICAgICAgdGltZUZvcm1hdDogZDNfbG9jYWxlX3RpbWVGb3JtYXQobG9jYWxlKVxuICAgIH07XG4gIH07XG4gIHZhciBkM19sb2NhbGVfZW5VUyA9IGQzLmxvY2FsZSh7XG4gICAgZGVjaW1hbDogXCIuXCIsXG4gICAgdGhvdXNhbmRzOiBcIixcIixcbiAgICBncm91cGluZzogWyAzIF0sXG4gICAgY3VycmVuY3k6IFsgXCIkXCIsIFwiXCIgXSxcbiAgICBkYXRlVGltZTogXCIlYSAlYiAlZSAlWCAlWVwiLFxuICAgIGRhdGU6IFwiJW0vJWQvJVlcIixcbiAgICB0aW1lOiBcIiVIOiVNOiVTXCIsXG4gICAgcGVyaW9kczogWyBcIkFNXCIsIFwiUE1cIiBdLFxuICAgIGRheXM6IFsgXCJTdW5kYXlcIiwgXCJNb25kYXlcIiwgXCJUdWVzZGF5XCIsIFwiV2VkbmVzZGF5XCIsIFwiVGh1cnNkYXlcIiwgXCJGcmlkYXlcIiwgXCJTYXR1cmRheVwiIF0sXG4gICAgc2hvcnREYXlzOiBbIFwiU3VuXCIsIFwiTW9uXCIsIFwiVHVlXCIsIFwiV2VkXCIsIFwiVGh1XCIsIFwiRnJpXCIsIFwiU2F0XCIgXSxcbiAgICBtb250aHM6IFsgXCJKYW51YXJ5XCIsIFwiRmVicnVhcnlcIiwgXCJNYXJjaFwiLCBcIkFwcmlsXCIsIFwiTWF5XCIsIFwiSnVuZVwiLCBcIkp1bHlcIiwgXCJBdWd1c3RcIiwgXCJTZXB0ZW1iZXJcIiwgXCJPY3RvYmVyXCIsIFwiTm92ZW1iZXJcIiwgXCJEZWNlbWJlclwiIF0sXG4gICAgc2hvcnRNb250aHM6IFsgXCJKYW5cIiwgXCJGZWJcIiwgXCJNYXJcIiwgXCJBcHJcIiwgXCJNYXlcIiwgXCJKdW5cIiwgXCJKdWxcIiwgXCJBdWdcIiwgXCJTZXBcIiwgXCJPY3RcIiwgXCJOb3ZcIiwgXCJEZWNcIiBdXG4gIH0pO1xuICBkMy5mb3JtYXQgPSBkM19sb2NhbGVfZW5VUy5udW1iZXJGb3JtYXQ7XG4gIGQzLmdlbyA9IHt9O1xuICBmdW5jdGlvbiBkM19hZGRlcigpIHt9XG4gIGQzX2FkZGVyLnByb3RvdHlwZSA9IHtcbiAgICBzOiAwLFxuICAgIHQ6IDAsXG4gICAgYWRkOiBmdW5jdGlvbih5KSB7XG4gICAgICBkM19hZGRlclN1bSh5LCB0aGlzLnQsIGQzX2FkZGVyVGVtcCk7XG4gICAgICBkM19hZGRlclN1bShkM19hZGRlclRlbXAucywgdGhpcy5zLCB0aGlzKTtcbiAgICAgIGlmICh0aGlzLnMpIHRoaXMudCArPSBkM19hZGRlclRlbXAudDsgZWxzZSB0aGlzLnMgPSBkM19hZGRlclRlbXAudDtcbiAgICB9LFxuICAgIHJlc2V0OiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMucyA9IHRoaXMudCA9IDA7XG4gICAgfSxcbiAgICB2YWx1ZU9mOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLnM7XG4gICAgfVxuICB9O1xuICB2YXIgZDNfYWRkZXJUZW1wID0gbmV3IGQzX2FkZGVyKCk7XG4gIGZ1bmN0aW9uIGQzX2FkZGVyU3VtKGEsIGIsIG8pIHtcbiAgICB2YXIgeCA9IG8ucyA9IGEgKyBiLCBidiA9IHggLSBhLCBhdiA9IHggLSBidjtcbiAgICBvLnQgPSBhIC0gYXYgKyAoYiAtIGJ2KTtcbiAgfVxuICBkMy5nZW8uc3RyZWFtID0gZnVuY3Rpb24ob2JqZWN0LCBsaXN0ZW5lcikge1xuICAgIGlmIChvYmplY3QgJiYgZDNfZ2VvX3N0cmVhbU9iamVjdFR5cGUuaGFzT3duUHJvcGVydHkob2JqZWN0LnR5cGUpKSB7XG4gICAgICBkM19nZW9fc3RyZWFtT2JqZWN0VHlwZVtvYmplY3QudHlwZV0ob2JqZWN0LCBsaXN0ZW5lcik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGQzX2dlb19zdHJlYW1HZW9tZXRyeShvYmplY3QsIGxpc3RlbmVyKTtcbiAgICB9XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb19zdHJlYW1HZW9tZXRyeShnZW9tZXRyeSwgbGlzdGVuZXIpIHtcbiAgICBpZiAoZ2VvbWV0cnkgJiYgZDNfZ2VvX3N0cmVhbUdlb21ldHJ5VHlwZS5oYXNPd25Qcm9wZXJ0eShnZW9tZXRyeS50eXBlKSkge1xuICAgICAgZDNfZ2VvX3N0cmVhbUdlb21ldHJ5VHlwZVtnZW9tZXRyeS50eXBlXShnZW9tZXRyeSwgbGlzdGVuZXIpO1xuICAgIH1cbiAgfVxuICB2YXIgZDNfZ2VvX3N0cmVhbU9iamVjdFR5cGUgPSB7XG4gICAgRmVhdHVyZTogZnVuY3Rpb24oZmVhdHVyZSwgbGlzdGVuZXIpIHtcbiAgICAgIGQzX2dlb19zdHJlYW1HZW9tZXRyeShmZWF0dXJlLmdlb21ldHJ5LCBsaXN0ZW5lcik7XG4gICAgfSxcbiAgICBGZWF0dXJlQ29sbGVjdGlvbjogZnVuY3Rpb24ob2JqZWN0LCBsaXN0ZW5lcikge1xuICAgICAgdmFyIGZlYXR1cmVzID0gb2JqZWN0LmZlYXR1cmVzLCBpID0gLTEsIG4gPSBmZWF0dXJlcy5sZW5ndGg7XG4gICAgICB3aGlsZSAoKytpIDwgbikgZDNfZ2VvX3N0cmVhbUdlb21ldHJ5KGZlYXR1cmVzW2ldLmdlb21ldHJ5LCBsaXN0ZW5lcik7XG4gICAgfVxuICB9O1xuICB2YXIgZDNfZ2VvX3N0cmVhbUdlb21ldHJ5VHlwZSA9IHtcbiAgICBTcGhlcmU6IGZ1bmN0aW9uKG9iamVjdCwgbGlzdGVuZXIpIHtcbiAgICAgIGxpc3RlbmVyLnNwaGVyZSgpO1xuICAgIH0sXG4gICAgUG9pbnQ6IGZ1bmN0aW9uKG9iamVjdCwgbGlzdGVuZXIpIHtcbiAgICAgIG9iamVjdCA9IG9iamVjdC5jb29yZGluYXRlcztcbiAgICAgIGxpc3RlbmVyLnBvaW50KG9iamVjdFswXSwgb2JqZWN0WzFdLCBvYmplY3RbMl0pO1xuICAgIH0sXG4gICAgTXVsdGlQb2ludDogZnVuY3Rpb24ob2JqZWN0LCBsaXN0ZW5lcikge1xuICAgICAgdmFyIGNvb3JkaW5hdGVzID0gb2JqZWN0LmNvb3JkaW5hdGVzLCBpID0gLTEsIG4gPSBjb29yZGluYXRlcy5sZW5ndGg7XG4gICAgICB3aGlsZSAoKytpIDwgbikgb2JqZWN0ID0gY29vcmRpbmF0ZXNbaV0sIGxpc3RlbmVyLnBvaW50KG9iamVjdFswXSwgb2JqZWN0WzFdLCBvYmplY3RbMl0pO1xuICAgIH0sXG4gICAgTGluZVN0cmluZzogZnVuY3Rpb24ob2JqZWN0LCBsaXN0ZW5lcikge1xuICAgICAgZDNfZ2VvX3N0cmVhbUxpbmUob2JqZWN0LmNvb3JkaW5hdGVzLCBsaXN0ZW5lciwgMCk7XG4gICAgfSxcbiAgICBNdWx0aUxpbmVTdHJpbmc6IGZ1bmN0aW9uKG9iamVjdCwgbGlzdGVuZXIpIHtcbiAgICAgIHZhciBjb29yZGluYXRlcyA9IG9iamVjdC5jb29yZGluYXRlcywgaSA9IC0xLCBuID0gY29vcmRpbmF0ZXMubGVuZ3RoO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIGQzX2dlb19zdHJlYW1MaW5lKGNvb3JkaW5hdGVzW2ldLCBsaXN0ZW5lciwgMCk7XG4gICAgfSxcbiAgICBQb2x5Z29uOiBmdW5jdGlvbihvYmplY3QsIGxpc3RlbmVyKSB7XG4gICAgICBkM19nZW9fc3RyZWFtUG9seWdvbihvYmplY3QuY29vcmRpbmF0ZXMsIGxpc3RlbmVyKTtcbiAgICB9LFxuICAgIE11bHRpUG9seWdvbjogZnVuY3Rpb24ob2JqZWN0LCBsaXN0ZW5lcikge1xuICAgICAgdmFyIGNvb3JkaW5hdGVzID0gb2JqZWN0LmNvb3JkaW5hdGVzLCBpID0gLTEsIG4gPSBjb29yZGluYXRlcy5sZW5ndGg7XG4gICAgICB3aGlsZSAoKytpIDwgbikgZDNfZ2VvX3N0cmVhbVBvbHlnb24oY29vcmRpbmF0ZXNbaV0sIGxpc3RlbmVyKTtcbiAgICB9LFxuICAgIEdlb21ldHJ5Q29sbGVjdGlvbjogZnVuY3Rpb24ob2JqZWN0LCBsaXN0ZW5lcikge1xuICAgICAgdmFyIGdlb21ldHJpZXMgPSBvYmplY3QuZ2VvbWV0cmllcywgaSA9IC0xLCBuID0gZ2VvbWV0cmllcy5sZW5ndGg7XG4gICAgICB3aGlsZSAoKytpIDwgbikgZDNfZ2VvX3N0cmVhbUdlb21ldHJ5KGdlb21ldHJpZXNbaV0sIGxpc3RlbmVyKTtcbiAgICB9XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb19zdHJlYW1MaW5lKGNvb3JkaW5hdGVzLCBsaXN0ZW5lciwgY2xvc2VkKSB7XG4gICAgdmFyIGkgPSAtMSwgbiA9IGNvb3JkaW5hdGVzLmxlbmd0aCAtIGNsb3NlZCwgY29vcmRpbmF0ZTtcbiAgICBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICB3aGlsZSAoKytpIDwgbikgY29vcmRpbmF0ZSA9IGNvb3JkaW5hdGVzW2ldLCBsaXN0ZW5lci5wb2ludChjb29yZGluYXRlWzBdLCBjb29yZGluYXRlWzFdLCBjb29yZGluYXRlWzJdKTtcbiAgICBsaXN0ZW5lci5saW5lRW5kKCk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX3N0cmVhbVBvbHlnb24oY29vcmRpbmF0ZXMsIGxpc3RlbmVyKSB7XG4gICAgdmFyIGkgPSAtMSwgbiA9IGNvb3JkaW5hdGVzLmxlbmd0aDtcbiAgICBsaXN0ZW5lci5wb2x5Z29uU3RhcnQoKTtcbiAgICB3aGlsZSAoKytpIDwgbikgZDNfZ2VvX3N0cmVhbUxpbmUoY29vcmRpbmF0ZXNbaV0sIGxpc3RlbmVyLCAxKTtcbiAgICBsaXN0ZW5lci5wb2x5Z29uRW5kKCk7XG4gIH1cbiAgZDMuZ2VvLmFyZWEgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICBkM19nZW9fYXJlYVN1bSA9IDA7XG4gICAgZDMuZ2VvLnN0cmVhbShvYmplY3QsIGQzX2dlb19hcmVhKTtcbiAgICByZXR1cm4gZDNfZ2VvX2FyZWFTdW07XG4gIH07XG4gIHZhciBkM19nZW9fYXJlYVN1bSwgZDNfZ2VvX2FyZWFSaW5nU3VtID0gbmV3IGQzX2FkZGVyKCk7XG4gIHZhciBkM19nZW9fYXJlYSA9IHtcbiAgICBzcGhlcmU6IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfZ2VvX2FyZWFTdW0gKz0gNCAqIM+AO1xuICAgIH0sXG4gICAgcG9pbnQ6IGQzX25vb3AsXG4gICAgbGluZVN0YXJ0OiBkM19ub29wLFxuICAgIGxpbmVFbmQ6IGQzX25vb3AsXG4gICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX2dlb19hcmVhUmluZ1N1bS5yZXNldCgpO1xuICAgICAgZDNfZ2VvX2FyZWEubGluZVN0YXJ0ID0gZDNfZ2VvX2FyZWFSaW5nU3RhcnQ7XG4gICAgfSxcbiAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBhcmVhID0gMiAqIGQzX2dlb19hcmVhUmluZ1N1bTtcbiAgICAgIGQzX2dlb19hcmVhU3VtICs9IGFyZWEgPCAwID8gNCAqIM+AICsgYXJlYSA6IGFyZWE7XG4gICAgICBkM19nZW9fYXJlYS5saW5lU3RhcnQgPSBkM19nZW9fYXJlYS5saW5lRW5kID0gZDNfZ2VvX2FyZWEucG9pbnQgPSBkM19ub29wO1xuICAgIH1cbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX2FyZWFSaW5nU3RhcnQoKSB7XG4gICAgdmFyIM67MDAsIM+GMDAsIM67MCwgY29zz4YwLCBzaW7PhjA7XG4gICAgZDNfZ2VvX2FyZWEucG9pbnQgPSBmdW5jdGlvbijOuywgz4YpIHtcbiAgICAgIGQzX2dlb19hcmVhLnBvaW50ID0gbmV4dFBvaW50O1xuICAgICAgzrswID0gKM67MDAgPSDOuykgKiBkM19yYWRpYW5zLCBjb3PPhjAgPSBNYXRoLmNvcyjPhiA9ICjPhjAwID0gz4YpICogZDNfcmFkaWFucyAvIDIgKyDPgCAvIDQpLCBcbiAgICAgIHNpbs+GMCA9IE1hdGguc2luKM+GKTtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIG5leHRQb2ludCjOuywgz4YpIHtcbiAgICAgIM67ICo9IGQzX3JhZGlhbnM7XG4gICAgICDPhiA9IM+GICogZDNfcmFkaWFucyAvIDIgKyDPgCAvIDQ7XG4gICAgICB2YXIgZM67ID0gzrsgLSDOuzAsIHNkzrsgPSBkzrsgPj0gMCA/IDEgOiAtMSwgYWTOuyA9IHNkzrsgKiBkzrssIGNvc8+GID0gTWF0aC5jb3Moz4YpLCBzaW7PhiA9IE1hdGguc2luKM+GKSwgayA9IHNpbs+GMCAqIHNpbs+GLCB1ID0gY29zz4YwICogY29zz4YgKyBrICogTWF0aC5jb3MoYWTOuyksIHYgPSBrICogc2TOuyAqIE1hdGguc2luKGFkzrspO1xuICAgICAgZDNfZ2VvX2FyZWFSaW5nU3VtLmFkZChNYXRoLmF0YW4yKHYsIHUpKTtcbiAgICAgIM67MCA9IM67LCBjb3PPhjAgPSBjb3PPhiwgc2luz4YwID0gc2luz4Y7XG4gICAgfVxuICAgIGQzX2dlb19hcmVhLmxpbmVFbmQgPSBmdW5jdGlvbigpIHtcbiAgICAgIG5leHRQb2ludCjOuzAwLCDPhjAwKTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jYXJ0ZXNpYW4oc3BoZXJpY2FsKSB7XG4gICAgdmFyIM67ID0gc3BoZXJpY2FsWzBdLCDPhiA9IHNwaGVyaWNhbFsxXSwgY29zz4YgPSBNYXRoLmNvcyjPhik7XG4gICAgcmV0dXJuIFsgY29zz4YgKiBNYXRoLmNvcyjOuyksIGNvc8+GICogTWF0aC5zaW4ozrspLCBNYXRoLnNpbijPhikgXTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2FydGVzaWFuRG90KGEsIGIpIHtcbiAgICByZXR1cm4gYVswXSAqIGJbMF0gKyBhWzFdICogYlsxXSArIGFbMl0gKiBiWzJdO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jYXJ0ZXNpYW5Dcm9zcyhhLCBiKSB7XG4gICAgcmV0dXJuIFsgYVsxXSAqIGJbMl0gLSBhWzJdICogYlsxXSwgYVsyXSAqIGJbMF0gLSBhWzBdICogYlsyXSwgYVswXSAqIGJbMV0gLSBhWzFdICogYlswXSBdO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jYXJ0ZXNpYW5BZGQoYSwgYikge1xuICAgIGFbMF0gKz0gYlswXTtcbiAgICBhWzFdICs9IGJbMV07XG4gICAgYVsyXSArPSBiWzJdO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jYXJ0ZXNpYW5TY2FsZSh2ZWN0b3IsIGspIHtcbiAgICByZXR1cm4gWyB2ZWN0b3JbMF0gKiBrLCB2ZWN0b3JbMV0gKiBrLCB2ZWN0b3JbMl0gKiBrIF07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NhcnRlc2lhbk5vcm1hbGl6ZShkKSB7XG4gICAgdmFyIGwgPSBNYXRoLnNxcnQoZFswXSAqIGRbMF0gKyBkWzFdICogZFsxXSArIGRbMl0gKiBkWzJdKTtcbiAgICBkWzBdIC89IGw7XG4gICAgZFsxXSAvPSBsO1xuICAgIGRbMl0gLz0gbDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fc3BoZXJpY2FsKGNhcnRlc2lhbikge1xuICAgIHJldHVybiBbIE1hdGguYXRhbjIoY2FydGVzaWFuWzFdLCBjYXJ0ZXNpYW5bMF0pLCBkM19hc2luKGNhcnRlc2lhblsyXSkgXTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fc3BoZXJpY2FsRXF1YWwoYSwgYikge1xuICAgIHJldHVybiBhYnMoYVswXSAtIGJbMF0pIDwgzrUgJiYgYWJzKGFbMV0gLSBiWzFdKSA8IM61O1xuICB9XG4gIGQzLmdlby5ib3VuZHMgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgzrswLCDPhjAsIM67MSwgz4YxLCDOu18sIM67X18sIM+GX18sIHAwLCBkzrtTdW0sIHJhbmdlcywgcmFuZ2U7XG4gICAgdmFyIGJvdW5kID0ge1xuICAgICAgcG9pbnQ6IHBvaW50LFxuICAgICAgbGluZVN0YXJ0OiBsaW5lU3RhcnQsXG4gICAgICBsaW5lRW5kOiBsaW5lRW5kLFxuICAgICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgYm91bmQucG9pbnQgPSByaW5nUG9pbnQ7XG4gICAgICAgIGJvdW5kLmxpbmVTdGFydCA9IHJpbmdTdGFydDtcbiAgICAgICAgYm91bmQubGluZUVuZCA9IHJpbmdFbmQ7XG4gICAgICAgIGTOu1N1bSA9IDA7XG4gICAgICAgIGQzX2dlb19hcmVhLnBvbHlnb25TdGFydCgpO1xuICAgICAgfSxcbiAgICAgIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBkM19nZW9fYXJlYS5wb2x5Z29uRW5kKCk7XG4gICAgICAgIGJvdW5kLnBvaW50ID0gcG9pbnQ7XG4gICAgICAgIGJvdW5kLmxpbmVTdGFydCA9IGxpbmVTdGFydDtcbiAgICAgICAgYm91bmQubGluZUVuZCA9IGxpbmVFbmQ7XG4gICAgICAgIGlmIChkM19nZW9fYXJlYVJpbmdTdW0gPCAwKSDOuzAgPSAtKM67MSA9IDE4MCksIM+GMCA9IC0oz4YxID0gOTApOyBlbHNlIGlmIChkzrtTdW0gPiDOtSkgz4YxID0gOTA7IGVsc2UgaWYgKGTOu1N1bSA8IC3OtSkgz4YwID0gLTkwO1xuICAgICAgICByYW5nZVswXSA9IM67MCwgcmFuZ2VbMV0gPSDOuzE7XG4gICAgICB9XG4gICAgfTtcbiAgICBmdW5jdGlvbiBwb2ludCjOuywgz4YpIHtcbiAgICAgIHJhbmdlcy5wdXNoKHJhbmdlID0gWyDOuzAgPSDOuywgzrsxID0gzrsgXSk7XG4gICAgICBpZiAoz4YgPCDPhjApIM+GMCA9IM+GO1xuICAgICAgaWYgKM+GID4gz4YxKSDPhjEgPSDPhjtcbiAgICB9XG4gICAgZnVuY3Rpb24gbGluZVBvaW50KM67LCDPhikge1xuICAgICAgdmFyIHAgPSBkM19nZW9fY2FydGVzaWFuKFsgzrsgKiBkM19yYWRpYW5zLCDPhiAqIGQzX3JhZGlhbnMgXSk7XG4gICAgICBpZiAocDApIHtcbiAgICAgICAgdmFyIG5vcm1hbCA9IGQzX2dlb19jYXJ0ZXNpYW5Dcm9zcyhwMCwgcCksIGVxdWF0b3JpYWwgPSBbIG5vcm1hbFsxXSwgLW5vcm1hbFswXSwgMCBdLCBpbmZsZWN0aW9uID0gZDNfZ2VvX2NhcnRlc2lhbkNyb3NzKGVxdWF0b3JpYWwsIG5vcm1hbCk7XG4gICAgICAgIGQzX2dlb19jYXJ0ZXNpYW5Ob3JtYWxpemUoaW5mbGVjdGlvbik7XG4gICAgICAgIGluZmxlY3Rpb24gPSBkM19nZW9fc3BoZXJpY2FsKGluZmxlY3Rpb24pO1xuICAgICAgICB2YXIgZM67ID0gzrsgLSDOu18sIHMgPSBkzrsgPiAwID8gMSA6IC0xLCDOu2kgPSBpbmZsZWN0aW9uWzBdICogZDNfZGVncmVlcyAqIHMsIGFudGltZXJpZGlhbiA9IGFicyhkzrspID4gMTgwO1xuICAgICAgICBpZiAoYW50aW1lcmlkaWFuIF4gKHMgKiDOu18gPCDOu2kgJiYgzrtpIDwgcyAqIM67KSkge1xuICAgICAgICAgIHZhciDPhmkgPSBpbmZsZWN0aW9uWzFdICogZDNfZGVncmVlcztcbiAgICAgICAgICBpZiAoz4ZpID4gz4YxKSDPhjEgPSDPhmk7XG4gICAgICAgIH0gZWxzZSBpZiAozrtpID0gKM67aSArIDM2MCkgJSAzNjAgLSAxODAsIGFudGltZXJpZGlhbiBeIChzICogzrtfIDwgzrtpICYmIM67aSA8IHMgKiDOuykpIHtcbiAgICAgICAgICB2YXIgz4ZpID0gLWluZmxlY3Rpb25bMV0gKiBkM19kZWdyZWVzO1xuICAgICAgICAgIGlmICjPhmkgPCDPhjApIM+GMCA9IM+GaTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoz4YgPCDPhjApIM+GMCA9IM+GO1xuICAgICAgICAgIGlmICjPhiA+IM+GMSkgz4YxID0gz4Y7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFudGltZXJpZGlhbikge1xuICAgICAgICAgIGlmICjOuyA8IM67Xykge1xuICAgICAgICAgICAgaWYgKGFuZ2xlKM67MCwgzrspID4gYW5nbGUozrswLCDOuzEpKSDOuzEgPSDOuztcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKGFuZ2xlKM67LCDOuzEpID4gYW5nbGUozrswLCDOuzEpKSDOuzAgPSDOuztcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKM67MSA+PSDOuzApIHtcbiAgICAgICAgICAgIGlmICjOuyA8IM67MCkgzrswID0gzrs7XG4gICAgICAgICAgICBpZiAozrsgPiDOuzEpIM67MSA9IM67O1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAozrsgPiDOu18pIHtcbiAgICAgICAgICAgICAgaWYgKGFuZ2xlKM67MCwgzrspID4gYW5nbGUozrswLCDOuzEpKSDOuzEgPSDOuztcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGlmIChhbmdsZSjOuywgzrsxKSA+IGFuZ2xlKM67MCwgzrsxKSkgzrswID0gzrs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwb2ludCjOuywgz4YpO1xuICAgICAgfVxuICAgICAgcDAgPSBwLCDOu18gPSDOuztcbiAgICB9XG4gICAgZnVuY3Rpb24gbGluZVN0YXJ0KCkge1xuICAgICAgYm91bmQucG9pbnQgPSBsaW5lUG9pbnQ7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGxpbmVFbmQoKSB7XG4gICAgICByYW5nZVswXSA9IM67MCwgcmFuZ2VbMV0gPSDOuzE7XG4gICAgICBib3VuZC5wb2ludCA9IHBvaW50O1xuICAgICAgcDAgPSBudWxsO1xuICAgIH1cbiAgICBmdW5jdGlvbiByaW5nUG9pbnQozrssIM+GKSB7XG4gICAgICBpZiAocDApIHtcbiAgICAgICAgdmFyIGTOuyA9IM67IC0gzrtfO1xuICAgICAgICBkzrtTdW0gKz0gYWJzKGTOuykgPiAxODAgPyBkzrsgKyAoZM67ID4gMCA/IDM2MCA6IC0zNjApIDogZM67O1xuICAgICAgfSBlbHNlIM67X18gPSDOuywgz4ZfXyA9IM+GO1xuICAgICAgZDNfZ2VvX2FyZWEucG9pbnQozrssIM+GKTtcbiAgICAgIGxpbmVQb2ludCjOuywgz4YpO1xuICAgIH1cbiAgICBmdW5jdGlvbiByaW5nU3RhcnQoKSB7XG4gICAgICBkM19nZW9fYXJlYS5saW5lU3RhcnQoKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcmluZ0VuZCgpIHtcbiAgICAgIHJpbmdQb2ludCjOu19fLCDPhl9fKTtcbiAgICAgIGQzX2dlb19hcmVhLmxpbmVFbmQoKTtcbiAgICAgIGlmIChhYnMoZM67U3VtKSA+IM61KSDOuzAgPSAtKM67MSA9IDE4MCk7XG4gICAgICByYW5nZVswXSA9IM67MCwgcmFuZ2VbMV0gPSDOuzE7XG4gICAgICBwMCA9IG51bGw7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGFuZ2xlKM67MCwgzrsxKSB7XG4gICAgICByZXR1cm4gKM67MSAtPSDOuzApIDwgMCA/IM67MSArIDM2MCA6IM67MTtcbiAgICB9XG4gICAgZnVuY3Rpb24gY29tcGFyZVJhbmdlcyhhLCBiKSB7XG4gICAgICByZXR1cm4gYVswXSAtIGJbMF07XG4gICAgfVxuICAgIGZ1bmN0aW9uIHdpdGhpblJhbmdlKHgsIHJhbmdlKSB7XG4gICAgICByZXR1cm4gcmFuZ2VbMF0gPD0gcmFuZ2VbMV0gPyByYW5nZVswXSA8PSB4ICYmIHggPD0gcmFuZ2VbMV0gOiB4IDwgcmFuZ2VbMF0gfHwgcmFuZ2VbMV0gPCB4O1xuICAgIH1cbiAgICByZXR1cm4gZnVuY3Rpb24oZmVhdHVyZSkge1xuICAgICAgz4YxID0gzrsxID0gLSjOuzAgPSDPhjAgPSBJbmZpbml0eSk7XG4gICAgICByYW5nZXMgPSBbXTtcbiAgICAgIGQzLmdlby5zdHJlYW0oZmVhdHVyZSwgYm91bmQpO1xuICAgICAgdmFyIG4gPSByYW5nZXMubGVuZ3RoO1xuICAgICAgaWYgKG4pIHtcbiAgICAgICAgcmFuZ2VzLnNvcnQoY29tcGFyZVJhbmdlcyk7XG4gICAgICAgIGZvciAodmFyIGkgPSAxLCBhID0gcmFuZ2VzWzBdLCBiLCBtZXJnZWQgPSBbIGEgXTsgaSA8IG47ICsraSkge1xuICAgICAgICAgIGIgPSByYW5nZXNbaV07XG4gICAgICAgICAgaWYgKHdpdGhpblJhbmdlKGJbMF0sIGEpIHx8IHdpdGhpblJhbmdlKGJbMV0sIGEpKSB7XG4gICAgICAgICAgICBpZiAoYW5nbGUoYVswXSwgYlsxXSkgPiBhbmdsZShhWzBdLCBhWzFdKSkgYVsxXSA9IGJbMV07XG4gICAgICAgICAgICBpZiAoYW5nbGUoYlswXSwgYVsxXSkgPiBhbmdsZShhWzBdLCBhWzFdKSkgYVswXSA9IGJbMF07XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG1lcmdlZC5wdXNoKGEgPSBiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGJlc3QgPSAtSW5maW5pdHksIGTOuztcbiAgICAgICAgZm9yICh2YXIgbiA9IG1lcmdlZC5sZW5ndGggLSAxLCBpID0gMCwgYSA9IG1lcmdlZFtuXSwgYjsgaSA8PSBuOyBhID0gYiwgKytpKSB7XG4gICAgICAgICAgYiA9IG1lcmdlZFtpXTtcbiAgICAgICAgICBpZiAoKGTOuyA9IGFuZ2xlKGFbMV0sIGJbMF0pKSA+IGJlc3QpIGJlc3QgPSBkzrssIM67MCA9IGJbMF0sIM67MSA9IGFbMV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJhbmdlcyA9IHJhbmdlID0gbnVsbDtcbiAgICAgIHJldHVybiDOuzAgPT09IEluZmluaXR5IHx8IM+GMCA9PT0gSW5maW5pdHkgPyBbIFsgTmFOLCBOYU4gXSwgWyBOYU4sIE5hTiBdIF0gOiBbIFsgzrswLCDPhjAgXSwgWyDOuzEsIM+GMSBdIF07XG4gICAgfTtcbiAgfSgpO1xuICBkMy5nZW8uY2VudHJvaWQgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICBkM19nZW9fY2VudHJvaWRXMCA9IGQzX2dlb19jZW50cm9pZFcxID0gZDNfZ2VvX2NlbnRyb2lkWDAgPSBkM19nZW9fY2VudHJvaWRZMCA9IGQzX2dlb19jZW50cm9pZFowID0gZDNfZ2VvX2NlbnRyb2lkWDEgPSBkM19nZW9fY2VudHJvaWRZMSA9IGQzX2dlb19jZW50cm9pZFoxID0gZDNfZ2VvX2NlbnRyb2lkWDIgPSBkM19nZW9fY2VudHJvaWRZMiA9IGQzX2dlb19jZW50cm9pZFoyID0gMDtcbiAgICBkMy5nZW8uc3RyZWFtKG9iamVjdCwgZDNfZ2VvX2NlbnRyb2lkKTtcbiAgICB2YXIgeCA9IGQzX2dlb19jZW50cm9pZFgyLCB5ID0gZDNfZ2VvX2NlbnRyb2lkWTIsIHogPSBkM19nZW9fY2VudHJvaWRaMiwgbSA9IHggKiB4ICsgeSAqIHkgKyB6ICogejtcbiAgICBpZiAobSA8IM61Mikge1xuICAgICAgeCA9IGQzX2dlb19jZW50cm9pZFgxLCB5ID0gZDNfZ2VvX2NlbnRyb2lkWTEsIHogPSBkM19nZW9fY2VudHJvaWRaMTtcbiAgICAgIGlmIChkM19nZW9fY2VudHJvaWRXMSA8IM61KSB4ID0gZDNfZ2VvX2NlbnRyb2lkWDAsIHkgPSBkM19nZW9fY2VudHJvaWRZMCwgeiA9IGQzX2dlb19jZW50cm9pZFowO1xuICAgICAgbSA9IHggKiB4ICsgeSAqIHkgKyB6ICogejtcbiAgICAgIGlmIChtIDwgzrUyKSByZXR1cm4gWyBOYU4sIE5hTiBdO1xuICAgIH1cbiAgICByZXR1cm4gWyBNYXRoLmF0YW4yKHksIHgpICogZDNfZGVncmVlcywgZDNfYXNpbih6IC8gTWF0aC5zcXJ0KG0pKSAqIGQzX2RlZ3JlZXMgXTtcbiAgfTtcbiAgdmFyIGQzX2dlb19jZW50cm9pZFcwLCBkM19nZW9fY2VudHJvaWRXMSwgZDNfZ2VvX2NlbnRyb2lkWDAsIGQzX2dlb19jZW50cm9pZFkwLCBkM19nZW9fY2VudHJvaWRaMCwgZDNfZ2VvX2NlbnRyb2lkWDEsIGQzX2dlb19jZW50cm9pZFkxLCBkM19nZW9fY2VudHJvaWRaMSwgZDNfZ2VvX2NlbnRyb2lkWDIsIGQzX2dlb19jZW50cm9pZFkyLCBkM19nZW9fY2VudHJvaWRaMjtcbiAgdmFyIGQzX2dlb19jZW50cm9pZCA9IHtcbiAgICBzcGhlcmU6IGQzX25vb3AsXG4gICAgcG9pbnQ6IGQzX2dlb19jZW50cm9pZFBvaW50LFxuICAgIGxpbmVTdGFydDogZDNfZ2VvX2NlbnRyb2lkTGluZVN0YXJ0LFxuICAgIGxpbmVFbmQ6IGQzX2dlb19jZW50cm9pZExpbmVFbmQsXG4gICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX2dlb19jZW50cm9pZC5saW5lU3RhcnQgPSBkM19nZW9fY2VudHJvaWRSaW5nU3RhcnQ7XG4gICAgfSxcbiAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX2dlb19jZW50cm9pZC5saW5lU3RhcnQgPSBkM19nZW9fY2VudHJvaWRMaW5lU3RhcnQ7XG4gICAgfVxuICB9O1xuICBmdW5jdGlvbiBkM19nZW9fY2VudHJvaWRQb2ludCjOuywgz4YpIHtcbiAgICDOuyAqPSBkM19yYWRpYW5zO1xuICAgIHZhciBjb3PPhiA9IE1hdGguY29zKM+GICo9IGQzX3JhZGlhbnMpO1xuICAgIGQzX2dlb19jZW50cm9pZFBvaW50WFlaKGNvc8+GICogTWF0aC5jb3MozrspLCBjb3PPhiAqIE1hdGguc2luKM67KSwgTWF0aC5zaW4oz4YpKTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2VudHJvaWRQb2ludFhZWih4LCB5LCB6KSB7XG4gICAgKytkM19nZW9fY2VudHJvaWRXMDtcbiAgICBkM19nZW9fY2VudHJvaWRYMCArPSAoeCAtIGQzX2dlb19jZW50cm9pZFgwKSAvIGQzX2dlb19jZW50cm9pZFcwO1xuICAgIGQzX2dlb19jZW50cm9pZFkwICs9ICh5IC0gZDNfZ2VvX2NlbnRyb2lkWTApIC8gZDNfZ2VvX2NlbnRyb2lkVzA7XG4gICAgZDNfZ2VvX2NlbnRyb2lkWjAgKz0gKHogLSBkM19nZW9fY2VudHJvaWRaMCkgLyBkM19nZW9fY2VudHJvaWRXMDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2VudHJvaWRMaW5lU3RhcnQoKSB7XG4gICAgdmFyIHgwLCB5MCwgejA7XG4gICAgZDNfZ2VvX2NlbnRyb2lkLnBvaW50ID0gZnVuY3Rpb24ozrssIM+GKSB7XG4gICAgICDOuyAqPSBkM19yYWRpYW5zO1xuICAgICAgdmFyIGNvc8+GID0gTWF0aC5jb3Moz4YgKj0gZDNfcmFkaWFucyk7XG4gICAgICB4MCA9IGNvc8+GICogTWF0aC5jb3MozrspO1xuICAgICAgeTAgPSBjb3PPhiAqIE1hdGguc2luKM67KTtcbiAgICAgIHowID0gTWF0aC5zaW4oz4YpO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkLnBvaW50ID0gbmV4dFBvaW50O1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkUG9pbnRYWVooeDAsIHkwLCB6MCk7XG4gICAgfTtcbiAgICBmdW5jdGlvbiBuZXh0UG9pbnQozrssIM+GKSB7XG4gICAgICDOuyAqPSBkM19yYWRpYW5zO1xuICAgICAgdmFyIGNvc8+GID0gTWF0aC5jb3Moz4YgKj0gZDNfcmFkaWFucyksIHggPSBjb3PPhiAqIE1hdGguY29zKM67KSwgeSA9IGNvc8+GICogTWF0aC5zaW4ozrspLCB6ID0gTWF0aC5zaW4oz4YpLCB3ID0gTWF0aC5hdGFuMihNYXRoLnNxcnQoKHcgPSB5MCAqIHogLSB6MCAqIHkpICogdyArICh3ID0gejAgKiB4IC0geDAgKiB6KSAqIHcgKyAodyA9IHgwICogeSAtIHkwICogeCkgKiB3KSwgeDAgKiB4ICsgeTAgKiB5ICsgejAgKiB6KTtcbiAgICAgIGQzX2dlb19jZW50cm9pZFcxICs9IHc7XG4gICAgICBkM19nZW9fY2VudHJvaWRYMSArPSB3ICogKHgwICsgKHgwID0geCkpO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWTEgKz0gdyAqICh5MCArICh5MCA9IHkpKTtcbiAgICAgIGQzX2dlb19jZW50cm9pZFoxICs9IHcgKiAoejAgKyAoejAgPSB6KSk7XG4gICAgICBkM19nZW9fY2VudHJvaWRQb2ludFhZWih4MCwgeTAsIHowKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NlbnRyb2lkTGluZUVuZCgpIHtcbiAgICBkM19nZW9fY2VudHJvaWQucG9pbnQgPSBkM19nZW9fY2VudHJvaWRQb2ludDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2VudHJvaWRSaW5nU3RhcnQoKSB7XG4gICAgdmFyIM67MDAsIM+GMDAsIHgwLCB5MCwgejA7XG4gICAgZDNfZ2VvX2NlbnRyb2lkLnBvaW50ID0gZnVuY3Rpb24ozrssIM+GKSB7XG4gICAgICDOuzAwID0gzrssIM+GMDAgPSDPhjtcbiAgICAgIGQzX2dlb19jZW50cm9pZC5wb2ludCA9IG5leHRQb2ludDtcbiAgICAgIM67ICo9IGQzX3JhZGlhbnM7XG4gICAgICB2YXIgY29zz4YgPSBNYXRoLmNvcyjPhiAqPSBkM19yYWRpYW5zKTtcbiAgICAgIHgwID0gY29zz4YgKiBNYXRoLmNvcyjOuyk7XG4gICAgICB5MCA9IGNvc8+GICogTWF0aC5zaW4ozrspO1xuICAgICAgejAgPSBNYXRoLnNpbijPhik7XG4gICAgICBkM19nZW9fY2VudHJvaWRQb2ludFhZWih4MCwgeTAsIHowKTtcbiAgICB9O1xuICAgIGQzX2dlb19jZW50cm9pZC5saW5lRW5kID0gZnVuY3Rpb24oKSB7XG4gICAgICBuZXh0UG9pbnQozrswMCwgz4YwMCk7XG4gICAgICBkM19nZW9fY2VudHJvaWQubGluZUVuZCA9IGQzX2dlb19jZW50cm9pZExpbmVFbmQ7XG4gICAgICBkM19nZW9fY2VudHJvaWQucG9pbnQgPSBkM19nZW9fY2VudHJvaWRQb2ludDtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIG5leHRQb2ludCjOuywgz4YpIHtcbiAgICAgIM67ICo9IGQzX3JhZGlhbnM7XG4gICAgICB2YXIgY29zz4YgPSBNYXRoLmNvcyjPhiAqPSBkM19yYWRpYW5zKSwgeCA9IGNvc8+GICogTWF0aC5jb3MozrspLCB5ID0gY29zz4YgKiBNYXRoLnNpbijOuyksIHogPSBNYXRoLnNpbijPhiksIGN4ID0geTAgKiB6IC0gejAgKiB5LCBjeSA9IHowICogeCAtIHgwICogeiwgY3ogPSB4MCAqIHkgLSB5MCAqIHgsIG0gPSBNYXRoLnNxcnQoY3ggKiBjeCArIGN5ICogY3kgKyBjeiAqIGN6KSwgdSA9IHgwICogeCArIHkwICogeSArIHowICogeiwgdiA9IG0gJiYgLWQzX2Fjb3ModSkgLyBtLCB3ID0gTWF0aC5hdGFuMihtLCB1KTtcbiAgICAgIGQzX2dlb19jZW50cm9pZFgyICs9IHYgKiBjeDtcbiAgICAgIGQzX2dlb19jZW50cm9pZFkyICs9IHYgKiBjeTtcbiAgICAgIGQzX2dlb19jZW50cm9pZFoyICs9IHYgKiBjejtcbiAgICAgIGQzX2dlb19jZW50cm9pZFcxICs9IHc7XG4gICAgICBkM19nZW9fY2VudHJvaWRYMSArPSB3ICogKHgwICsgKHgwID0geCkpO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWTEgKz0gdyAqICh5MCArICh5MCA9IHkpKTtcbiAgICAgIGQzX2dlb19jZW50cm9pZFoxICs9IHcgKiAoejAgKyAoejAgPSB6KSk7XG4gICAgICBkM19nZW9fY2VudHJvaWRQb2ludFhZWih4MCwgeTAsIHowKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfdHJ1ZSgpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2xpcFBvbHlnb24oc2VnbWVudHMsIGNvbXBhcmUsIGNsaXBTdGFydEluc2lkZSwgaW50ZXJwb2xhdGUsIGxpc3RlbmVyKSB7XG4gICAgdmFyIHN1YmplY3QgPSBbXSwgY2xpcCA9IFtdO1xuICAgIHNlZ21lbnRzLmZvckVhY2goZnVuY3Rpb24oc2VnbWVudCkge1xuICAgICAgaWYgKChuID0gc2VnbWVudC5sZW5ndGggLSAxKSA8PSAwKSByZXR1cm47XG4gICAgICB2YXIgbiwgcDAgPSBzZWdtZW50WzBdLCBwMSA9IHNlZ21lbnRbbl07XG4gICAgICBpZiAoZDNfZ2VvX3NwaGVyaWNhbEVxdWFsKHAwLCBwMSkpIHtcbiAgICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbjsgKytpKSBsaXN0ZW5lci5wb2ludCgocDAgPSBzZWdtZW50W2ldKVswXSwgcDBbMV0pO1xuICAgICAgICBsaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHZhciBhID0gbmV3IGQzX2dlb19jbGlwUG9seWdvbkludGVyc2VjdGlvbihwMCwgc2VnbWVudCwgbnVsbCwgdHJ1ZSksIGIgPSBuZXcgZDNfZ2VvX2NsaXBQb2x5Z29uSW50ZXJzZWN0aW9uKHAwLCBudWxsLCBhLCBmYWxzZSk7XG4gICAgICBhLm8gPSBiO1xuICAgICAgc3ViamVjdC5wdXNoKGEpO1xuICAgICAgY2xpcC5wdXNoKGIpO1xuICAgICAgYSA9IG5ldyBkM19nZW9fY2xpcFBvbHlnb25JbnRlcnNlY3Rpb24ocDEsIHNlZ21lbnQsIG51bGwsIGZhbHNlKTtcbiAgICAgIGIgPSBuZXcgZDNfZ2VvX2NsaXBQb2x5Z29uSW50ZXJzZWN0aW9uKHAxLCBudWxsLCBhLCB0cnVlKTtcbiAgICAgIGEubyA9IGI7XG4gICAgICBzdWJqZWN0LnB1c2goYSk7XG4gICAgICBjbGlwLnB1c2goYik7XG4gICAgfSk7XG4gICAgY2xpcC5zb3J0KGNvbXBhcmUpO1xuICAgIGQzX2dlb19jbGlwUG9seWdvbkxpbmtDaXJjdWxhcihzdWJqZWN0KTtcbiAgICBkM19nZW9fY2xpcFBvbHlnb25MaW5rQ2lyY3VsYXIoY2xpcCk7XG4gICAgaWYgKCFzdWJqZWN0Lmxlbmd0aCkgcmV0dXJuO1xuICAgIGZvciAodmFyIGkgPSAwLCBlbnRyeSA9IGNsaXBTdGFydEluc2lkZSwgbiA9IGNsaXAubGVuZ3RoOyBpIDwgbjsgKytpKSB7XG4gICAgICBjbGlwW2ldLmUgPSBlbnRyeSA9ICFlbnRyeTtcbiAgICB9XG4gICAgdmFyIHN0YXJ0ID0gc3ViamVjdFswXSwgcG9pbnRzLCBwb2ludDtcbiAgICB3aGlsZSAoMSkge1xuICAgICAgdmFyIGN1cnJlbnQgPSBzdGFydCwgaXNTdWJqZWN0ID0gdHJ1ZTtcbiAgICAgIHdoaWxlIChjdXJyZW50LnYpIGlmICgoY3VycmVudCA9IGN1cnJlbnQubikgPT09IHN0YXJ0KSByZXR1cm47XG4gICAgICBwb2ludHMgPSBjdXJyZW50Lno7XG4gICAgICBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgIGRvIHtcbiAgICAgICAgY3VycmVudC52ID0gY3VycmVudC5vLnYgPSB0cnVlO1xuICAgICAgICBpZiAoY3VycmVudC5lKSB7XG4gICAgICAgICAgaWYgKGlzU3ViamVjdCkge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIG4gPSBwb2ludHMubGVuZ3RoOyBpIDwgbjsgKytpKSBsaXN0ZW5lci5wb2ludCgocG9pbnQgPSBwb2ludHNbaV0pWzBdLCBwb2ludFsxXSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGludGVycG9sYXRlKGN1cnJlbnQueCwgY3VycmVudC5uLngsIDEsIGxpc3RlbmVyKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgY3VycmVudCA9IGN1cnJlbnQubjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoaXNTdWJqZWN0KSB7XG4gICAgICAgICAgICBwb2ludHMgPSBjdXJyZW50LnAuejtcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSBwb2ludHMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIGxpc3RlbmVyLnBvaW50KChwb2ludCA9IHBvaW50c1tpXSlbMF0sIHBvaW50WzFdKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaW50ZXJwb2xhdGUoY3VycmVudC54LCBjdXJyZW50LnAueCwgLTEsIGxpc3RlbmVyKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgY3VycmVudCA9IGN1cnJlbnQucDtcbiAgICAgICAgfVxuICAgICAgICBjdXJyZW50ID0gY3VycmVudC5vO1xuICAgICAgICBwb2ludHMgPSBjdXJyZW50Lno7XG4gICAgICAgIGlzU3ViamVjdCA9ICFpc1N1YmplY3Q7XG4gICAgICB9IHdoaWxlICghY3VycmVudC52KTtcbiAgICAgIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NsaXBQb2x5Z29uTGlua0NpcmN1bGFyKGFycmF5KSB7XG4gICAgaWYgKCEobiA9IGFycmF5Lmxlbmd0aCkpIHJldHVybjtcbiAgICB2YXIgbiwgaSA9IDAsIGEgPSBhcnJheVswXSwgYjtcbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgYS5uID0gYiA9IGFycmF5W2ldO1xuICAgICAgYi5wID0gYTtcbiAgICAgIGEgPSBiO1xuICAgIH1cbiAgICBhLm4gPSBiID0gYXJyYXlbMF07XG4gICAgYi5wID0gYTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2xpcFBvbHlnb25JbnRlcnNlY3Rpb24ocG9pbnQsIHBvaW50cywgb3RoZXIsIGVudHJ5KSB7XG4gICAgdGhpcy54ID0gcG9pbnQ7XG4gICAgdGhpcy56ID0gcG9pbnRzO1xuICAgIHRoaXMubyA9IG90aGVyO1xuICAgIHRoaXMuZSA9IGVudHJ5O1xuICAgIHRoaXMudiA9IGZhbHNlO1xuICAgIHRoaXMubiA9IHRoaXMucCA9IG51bGw7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NsaXAocG9pbnRWaXNpYmxlLCBjbGlwTGluZSwgaW50ZXJwb2xhdGUsIGNsaXBTdGFydCkge1xuICAgIHJldHVybiBmdW5jdGlvbihyb3RhdGUsIGxpc3RlbmVyKSB7XG4gICAgICB2YXIgbGluZSA9IGNsaXBMaW5lKGxpc3RlbmVyKSwgcm90YXRlZENsaXBTdGFydCA9IHJvdGF0ZS5pbnZlcnQoY2xpcFN0YXJ0WzBdLCBjbGlwU3RhcnRbMV0pO1xuICAgICAgdmFyIGNsaXAgPSB7XG4gICAgICAgIHBvaW50OiBwb2ludCxcbiAgICAgICAgbGluZVN0YXJ0OiBsaW5lU3RhcnQsXG4gICAgICAgIGxpbmVFbmQ6IGxpbmVFbmQsXG4gICAgICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgY2xpcC5wb2ludCA9IHBvaW50UmluZztcbiAgICAgICAgICBjbGlwLmxpbmVTdGFydCA9IHJpbmdTdGFydDtcbiAgICAgICAgICBjbGlwLmxpbmVFbmQgPSByaW5nRW5kO1xuICAgICAgICAgIHNlZ21lbnRzID0gW107XG4gICAgICAgICAgcG9seWdvbiA9IFtdO1xuICAgICAgICB9LFxuICAgICAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBjbGlwLnBvaW50ID0gcG9pbnQ7XG4gICAgICAgICAgY2xpcC5saW5lU3RhcnQgPSBsaW5lU3RhcnQ7XG4gICAgICAgICAgY2xpcC5saW5lRW5kID0gbGluZUVuZDtcbiAgICAgICAgICBzZWdtZW50cyA9IGQzLm1lcmdlKHNlZ21lbnRzKTtcbiAgICAgICAgICB2YXIgY2xpcFN0YXJ0SW5zaWRlID0gZDNfZ2VvX3BvaW50SW5Qb2x5Z29uKHJvdGF0ZWRDbGlwU3RhcnQsIHBvbHlnb24pO1xuICAgICAgICAgIGlmIChzZWdtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGlmICghcG9seWdvblN0YXJ0ZWQpIGxpc3RlbmVyLnBvbHlnb25TdGFydCgpLCBwb2x5Z29uU3RhcnRlZCA9IHRydWU7XG4gICAgICAgICAgICBkM19nZW9fY2xpcFBvbHlnb24oc2VnbWVudHMsIGQzX2dlb19jbGlwU29ydCwgY2xpcFN0YXJ0SW5zaWRlLCBpbnRlcnBvbGF0ZSwgbGlzdGVuZXIpO1xuICAgICAgICAgIH0gZWxzZSBpZiAoY2xpcFN0YXJ0SW5zaWRlKSB7XG4gICAgICAgICAgICBpZiAoIXBvbHlnb25TdGFydGVkKSBsaXN0ZW5lci5wb2x5Z29uU3RhcnQoKSwgcG9seWdvblN0YXJ0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgICAgICBpbnRlcnBvbGF0ZShudWxsLCBudWxsLCAxLCBsaXN0ZW5lcik7XG4gICAgICAgICAgICBsaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChwb2x5Z29uU3RhcnRlZCkgbGlzdGVuZXIucG9seWdvbkVuZCgpLCBwb2x5Z29uU3RhcnRlZCA9IGZhbHNlO1xuICAgICAgICAgIHNlZ21lbnRzID0gcG9seWdvbiA9IG51bGw7XG4gICAgICAgIH0sXG4gICAgICAgIHNwaGVyZTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgbGlzdGVuZXIucG9seWdvblN0YXJ0KCk7XG4gICAgICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgICAgaW50ZXJwb2xhdGUobnVsbCwgbnVsbCwgMSwgbGlzdGVuZXIpO1xuICAgICAgICAgIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICAgICAgICBsaXN0ZW5lci5wb2x5Z29uRW5kKCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICBmdW5jdGlvbiBwb2ludCjOuywgz4YpIHtcbiAgICAgICAgdmFyIHBvaW50ID0gcm90YXRlKM67LCDPhik7XG4gICAgICAgIGlmIChwb2ludFZpc2libGUozrsgPSBwb2ludFswXSwgz4YgPSBwb2ludFsxXSkpIGxpc3RlbmVyLnBvaW50KM67LCDPhik7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBwb2ludExpbmUozrssIM+GKSB7XG4gICAgICAgIHZhciBwb2ludCA9IHJvdGF0ZSjOuywgz4YpO1xuICAgICAgICBsaW5lLnBvaW50KHBvaW50WzBdLCBwb2ludFsxXSk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBsaW5lU3RhcnQoKSB7XG4gICAgICAgIGNsaXAucG9pbnQgPSBwb2ludExpbmU7XG4gICAgICAgIGxpbmUubGluZVN0YXJ0KCk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBsaW5lRW5kKCkge1xuICAgICAgICBjbGlwLnBvaW50ID0gcG9pbnQ7XG4gICAgICAgIGxpbmUubGluZUVuZCgpO1xuICAgICAgfVxuICAgICAgdmFyIHNlZ21lbnRzO1xuICAgICAgdmFyIGJ1ZmZlciA9IGQzX2dlb19jbGlwQnVmZmVyTGlzdGVuZXIoKSwgcmluZ0xpc3RlbmVyID0gY2xpcExpbmUoYnVmZmVyKSwgcG9seWdvblN0YXJ0ZWQgPSBmYWxzZSwgcG9seWdvbiwgcmluZztcbiAgICAgIGZ1bmN0aW9uIHBvaW50UmluZyjOuywgz4YpIHtcbiAgICAgICAgcmluZy5wdXNoKFsgzrssIM+GIF0pO1xuICAgICAgICB2YXIgcG9pbnQgPSByb3RhdGUozrssIM+GKTtcbiAgICAgICAgcmluZ0xpc3RlbmVyLnBvaW50KHBvaW50WzBdLCBwb2ludFsxXSk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiByaW5nU3RhcnQoKSB7XG4gICAgICAgIHJpbmdMaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgICAgcmluZyA9IFtdO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gcmluZ0VuZCgpIHtcbiAgICAgICAgcG9pbnRSaW5nKHJpbmdbMF1bMF0sIHJpbmdbMF1bMV0pO1xuICAgICAgICByaW5nTGlzdGVuZXIubGluZUVuZCgpO1xuICAgICAgICB2YXIgY2xlYW4gPSByaW5nTGlzdGVuZXIuY2xlYW4oKSwgcmluZ1NlZ21lbnRzID0gYnVmZmVyLmJ1ZmZlcigpLCBzZWdtZW50LCBuID0gcmluZ1NlZ21lbnRzLmxlbmd0aDtcbiAgICAgICAgcmluZy5wb3AoKTtcbiAgICAgICAgcG9seWdvbi5wdXNoKHJpbmcpO1xuICAgICAgICByaW5nID0gbnVsbDtcbiAgICAgICAgaWYgKCFuKSByZXR1cm47XG4gICAgICAgIGlmIChjbGVhbiAmIDEpIHtcbiAgICAgICAgICBzZWdtZW50ID0gcmluZ1NlZ21lbnRzWzBdO1xuICAgICAgICAgIHZhciBuID0gc2VnbWVudC5sZW5ndGggLSAxLCBpID0gLTEsIHBvaW50O1xuICAgICAgICAgIGlmIChuID4gMCkge1xuICAgICAgICAgICAgaWYgKCFwb2x5Z29uU3RhcnRlZCkgbGlzdGVuZXIucG9seWdvblN0YXJ0KCksIHBvbHlnb25TdGFydGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIGxpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgICAgICAgICAgd2hpbGUgKCsraSA8IG4pIGxpc3RlbmVyLnBvaW50KChwb2ludCA9IHNlZ21lbnRbaV0pWzBdLCBwb2ludFsxXSk7XG4gICAgICAgICAgICBsaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAobiA+IDEgJiYgY2xlYW4gJiAyKSByaW5nU2VnbWVudHMucHVzaChyaW5nU2VnbWVudHMucG9wKCkuY29uY2F0KHJpbmdTZWdtZW50cy5zaGlmdCgpKSk7XG4gICAgICAgIHNlZ21lbnRzLnB1c2gocmluZ1NlZ21lbnRzLmZpbHRlcihkM19nZW9fY2xpcFNlZ21lbnRMZW5ndGgxKSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gY2xpcDtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jbGlwU2VnbWVudExlbmd0aDEoc2VnbWVudCkge1xuICAgIHJldHVybiBzZWdtZW50Lmxlbmd0aCA+IDE7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NsaXBCdWZmZXJMaXN0ZW5lcigpIHtcbiAgICB2YXIgbGluZXMgPSBbXSwgbGluZTtcbiAgICByZXR1cm4ge1xuICAgICAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgbGluZXMucHVzaChsaW5lID0gW10pO1xuICAgICAgfSxcbiAgICAgIHBvaW50OiBmdW5jdGlvbijOuywgz4YpIHtcbiAgICAgICAgbGluZS5wdXNoKFsgzrssIM+GIF0pO1xuICAgICAgfSxcbiAgICAgIGxpbmVFbmQ6IGQzX25vb3AsXG4gICAgICBidWZmZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgYnVmZmVyID0gbGluZXM7XG4gICAgICAgIGxpbmVzID0gW107XG4gICAgICAgIGxpbmUgPSBudWxsO1xuICAgICAgICByZXR1cm4gYnVmZmVyO1xuICAgICAgfSxcbiAgICAgIHJlam9pbjogZnVuY3Rpb24oKSB7XG4gICAgICAgIGlmIChsaW5lcy5sZW5ndGggPiAxKSBsaW5lcy5wdXNoKGxpbmVzLnBvcCgpLmNvbmNhdChsaW5lcy5zaGlmdCgpKSk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2xpcFNvcnQoYSwgYikge1xuICAgIHJldHVybiAoKGEgPSBhLngpWzBdIDwgMCA/IGFbMV0gLSBoYWxmz4AgLSDOtSA6IGhhbGbPgCAtIGFbMV0pIC0gKChiID0gYi54KVswXSA8IDAgPyBiWzFdIC0gaGFsZs+AIC0gzrUgOiBoYWxmz4AgLSBiWzFdKTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fcG9pbnRJblBvbHlnb24ocG9pbnQsIHBvbHlnb24pIHtcbiAgICB2YXIgbWVyaWRpYW4gPSBwb2ludFswXSwgcGFyYWxsZWwgPSBwb2ludFsxXSwgbWVyaWRpYW5Ob3JtYWwgPSBbIE1hdGguc2luKG1lcmlkaWFuKSwgLU1hdGguY29zKG1lcmlkaWFuKSwgMCBdLCBwb2xhckFuZ2xlID0gMCwgd2luZGluZyA9IDA7XG4gICAgZDNfZ2VvX2FyZWFSaW5nU3VtLnJlc2V0KCk7XG4gICAgZm9yICh2YXIgaSA9IDAsIG4gPSBwb2x5Z29uLmxlbmd0aDsgaSA8IG47ICsraSkge1xuICAgICAgdmFyIHJpbmcgPSBwb2x5Z29uW2ldLCBtID0gcmluZy5sZW5ndGg7XG4gICAgICBpZiAoIW0pIGNvbnRpbnVlO1xuICAgICAgdmFyIHBvaW50MCA9IHJpbmdbMF0sIM67MCA9IHBvaW50MFswXSwgz4YwID0gcG9pbnQwWzFdIC8gMiArIM+AIC8gNCwgc2luz4YwID0gTWF0aC5zaW4oz4YwKSwgY29zz4YwID0gTWF0aC5jb3Moz4YwKSwgaiA9IDE7XG4gICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICBpZiAoaiA9PT0gbSkgaiA9IDA7XG4gICAgICAgIHBvaW50ID0gcmluZ1tqXTtcbiAgICAgICAgdmFyIM67ID0gcG9pbnRbMF0sIM+GID0gcG9pbnRbMV0gLyAyICsgz4AgLyA0LCBzaW7PhiA9IE1hdGguc2luKM+GKSwgY29zz4YgPSBNYXRoLmNvcyjPhiksIGTOuyA9IM67IC0gzrswLCBzZM67ID0gZM67ID49IDAgPyAxIDogLTEsIGFkzrsgPSBzZM67ICogZM67LCBhbnRpbWVyaWRpYW4gPSBhZM67ID4gz4AsIGsgPSBzaW7PhjAgKiBzaW7PhjtcbiAgICAgICAgZDNfZ2VvX2FyZWFSaW5nU3VtLmFkZChNYXRoLmF0YW4yKGsgKiBzZM67ICogTWF0aC5zaW4oYWTOuyksIGNvc8+GMCAqIGNvc8+GICsgayAqIE1hdGguY29zKGFkzrspKSk7XG4gICAgICAgIHBvbGFyQW5nbGUgKz0gYW50aW1lcmlkaWFuID8gZM67ICsgc2TOuyAqIM+EIDogZM67O1xuICAgICAgICBpZiAoYW50aW1lcmlkaWFuIF4gzrswID49IG1lcmlkaWFuIF4gzrsgPj0gbWVyaWRpYW4pIHtcbiAgICAgICAgICB2YXIgYXJjID0gZDNfZ2VvX2NhcnRlc2lhbkNyb3NzKGQzX2dlb19jYXJ0ZXNpYW4ocG9pbnQwKSwgZDNfZ2VvX2NhcnRlc2lhbihwb2ludCkpO1xuICAgICAgICAgIGQzX2dlb19jYXJ0ZXNpYW5Ob3JtYWxpemUoYXJjKTtcbiAgICAgICAgICB2YXIgaW50ZXJzZWN0aW9uID0gZDNfZ2VvX2NhcnRlc2lhbkNyb3NzKG1lcmlkaWFuTm9ybWFsLCBhcmMpO1xuICAgICAgICAgIGQzX2dlb19jYXJ0ZXNpYW5Ob3JtYWxpemUoaW50ZXJzZWN0aW9uKTtcbiAgICAgICAgICB2YXIgz4ZhcmMgPSAoYW50aW1lcmlkaWFuIF4gZM67ID49IDAgPyAtMSA6IDEpICogZDNfYXNpbihpbnRlcnNlY3Rpb25bMl0pO1xuICAgICAgICAgIGlmIChwYXJhbGxlbCA+IM+GYXJjIHx8IHBhcmFsbGVsID09PSDPhmFyYyAmJiAoYXJjWzBdIHx8IGFyY1sxXSkpIHtcbiAgICAgICAgICAgIHdpbmRpbmcgKz0gYW50aW1lcmlkaWFuIF4gZM67ID49IDAgPyAxIDogLTE7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICghaisrKSBicmVhaztcbiAgICAgICAgzrswID0gzrssIHNpbs+GMCA9IHNpbs+GLCBjb3PPhjAgPSBjb3PPhiwgcG9pbnQwID0gcG9pbnQ7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiAocG9sYXJBbmdsZSA8IC3OtSB8fCBwb2xhckFuZ2xlIDwgzrUgJiYgZDNfZ2VvX2FyZWFSaW5nU3VtIDwgMCkgXiB3aW5kaW5nICYgMTtcbiAgfVxuICB2YXIgZDNfZ2VvX2NsaXBBbnRpbWVyaWRpYW4gPSBkM19nZW9fY2xpcChkM190cnVlLCBkM19nZW9fY2xpcEFudGltZXJpZGlhbkxpbmUsIGQzX2dlb19jbGlwQW50aW1lcmlkaWFuSW50ZXJwb2xhdGUsIFsgLc+ALCAtz4AgLyAyIF0pO1xuICBmdW5jdGlvbiBkM19nZW9fY2xpcEFudGltZXJpZGlhbkxpbmUobGlzdGVuZXIpIHtcbiAgICB2YXIgzrswID0gTmFOLCDPhjAgPSBOYU4sIHPOuzAgPSBOYU4sIGNsZWFuO1xuICAgIHJldHVybiB7XG4gICAgICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgICAgY2xlYW4gPSAxO1xuICAgICAgfSxcbiAgICAgIHBvaW50OiBmdW5jdGlvbijOuzEsIM+GMSkge1xuICAgICAgICB2YXIgc867MSA9IM67MSA+IDAgPyDPgCA6IC3PgCwgZM67ID0gYWJzKM67MSAtIM67MCk7XG4gICAgICAgIGlmIChhYnMoZM67IC0gz4ApIDwgzrUpIHtcbiAgICAgICAgICBsaXN0ZW5lci5wb2ludCjOuzAsIM+GMCA9ICjPhjAgKyDPhjEpIC8gMiA+IDAgPyBoYWxmz4AgOiAtaGFsZs+AKTtcbiAgICAgICAgICBsaXN0ZW5lci5wb2ludChzzrswLCDPhjApO1xuICAgICAgICAgIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICAgICAgICBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgICAgICBsaXN0ZW5lci5wb2ludChzzrsxLCDPhjApO1xuICAgICAgICAgIGxpc3RlbmVyLnBvaW50KM67MSwgz4YwKTtcbiAgICAgICAgICBjbGVhbiA9IDA7XG4gICAgICAgIH0gZWxzZSBpZiAoc867MCAhPT0gc867MSAmJiBkzrsgPj0gz4ApIHtcbiAgICAgICAgICBpZiAoYWJzKM67MCAtIHPOuzApIDwgzrUpIM67MCAtPSBzzrswICogzrU7XG4gICAgICAgICAgaWYgKGFicyjOuzEgLSBzzrsxKSA8IM61KSDOuzEgLT0gc867MSAqIM61O1xuICAgICAgICAgIM+GMCA9IGQzX2dlb19jbGlwQW50aW1lcmlkaWFuSW50ZXJzZWN0KM67MCwgz4YwLCDOuzEsIM+GMSk7XG4gICAgICAgICAgbGlzdGVuZXIucG9pbnQoc867MCwgz4YwKTtcbiAgICAgICAgICBsaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgICAgbGlzdGVuZXIucG9pbnQoc867MSwgz4YwKTtcbiAgICAgICAgICBjbGVhbiA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgbGlzdGVuZXIucG9pbnQozrswID0gzrsxLCDPhjAgPSDPhjEpO1xuICAgICAgICBzzrswID0gc867MTtcbiAgICAgIH0sXG4gICAgICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgbGlzdGVuZXIubGluZUVuZCgpO1xuICAgICAgICDOuzAgPSDPhjAgPSBOYU47XG4gICAgICB9LFxuICAgICAgY2xlYW46IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gMiAtIGNsZWFuO1xuICAgICAgfVxuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NsaXBBbnRpbWVyaWRpYW5JbnRlcnNlY3QozrswLCDPhjAsIM67MSwgz4YxKSB7XG4gICAgdmFyIGNvc8+GMCwgY29zz4YxLCBzaW7OuzBfzrsxID0gTWF0aC5zaW4ozrswIC0gzrsxKTtcbiAgICByZXR1cm4gYWJzKHNpbs67MF/OuzEpID4gzrUgPyBNYXRoLmF0YW4oKE1hdGguc2luKM+GMCkgKiAoY29zz4YxID0gTWF0aC5jb3Moz4YxKSkgKiBNYXRoLnNpbijOuzEpIC0gTWF0aC5zaW4oz4YxKSAqIChjb3PPhjAgPSBNYXRoLmNvcyjPhjApKSAqIE1hdGguc2luKM67MCkpIC8gKGNvc8+GMCAqIGNvc8+GMSAqIHNpbs67MF/OuzEpKSA6ICjPhjAgKyDPhjEpIC8gMjtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2xpcEFudGltZXJpZGlhbkludGVycG9sYXRlKGZyb20sIHRvLCBkaXJlY3Rpb24sIGxpc3RlbmVyKSB7XG4gICAgdmFyIM+GO1xuICAgIGlmIChmcm9tID09IG51bGwpIHtcbiAgICAgIM+GID0gZGlyZWN0aW9uICogaGFsZs+AO1xuICAgICAgbGlzdGVuZXIucG9pbnQoLc+ALCDPhik7XG4gICAgICBsaXN0ZW5lci5wb2ludCgwLCDPhik7XG4gICAgICBsaXN0ZW5lci5wb2ludCjPgCwgz4YpO1xuICAgICAgbGlzdGVuZXIucG9pbnQoz4AsIDApO1xuICAgICAgbGlzdGVuZXIucG9pbnQoz4AsIC3Phik7XG4gICAgICBsaXN0ZW5lci5wb2ludCgwLCAtz4YpO1xuICAgICAgbGlzdGVuZXIucG9pbnQoLc+ALCAtz4YpO1xuICAgICAgbGlzdGVuZXIucG9pbnQoLc+ALCAwKTtcbiAgICAgIGxpc3RlbmVyLnBvaW50KC3PgCwgz4YpO1xuICAgIH0gZWxzZSBpZiAoYWJzKGZyb21bMF0gLSB0b1swXSkgPiDOtSkge1xuICAgICAgdmFyIHMgPSBmcm9tWzBdIDwgdG9bMF0gPyDPgCA6IC3PgDtcbiAgICAgIM+GID0gZGlyZWN0aW9uICogcyAvIDI7XG4gICAgICBsaXN0ZW5lci5wb2ludCgtcywgz4YpO1xuICAgICAgbGlzdGVuZXIucG9pbnQoMCwgz4YpO1xuICAgICAgbGlzdGVuZXIucG9pbnQocywgz4YpO1xuICAgIH0gZWxzZSB7XG4gICAgICBsaXN0ZW5lci5wb2ludCh0b1swXSwgdG9bMV0pO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2xpcENpcmNsZShyYWRpdXMpIHtcbiAgICB2YXIgY3IgPSBNYXRoLmNvcyhyYWRpdXMpLCBzbWFsbFJhZGl1cyA9IGNyID4gMCwgbm90SGVtaXNwaGVyZSA9IGFicyhjcikgPiDOtSwgaW50ZXJwb2xhdGUgPSBkM19nZW9fY2lyY2xlSW50ZXJwb2xhdGUocmFkaXVzLCA2ICogZDNfcmFkaWFucyk7XG4gICAgcmV0dXJuIGQzX2dlb19jbGlwKHZpc2libGUsIGNsaXBMaW5lLCBpbnRlcnBvbGF0ZSwgc21hbGxSYWRpdXMgPyBbIDAsIC1yYWRpdXMgXSA6IFsgLc+ALCByYWRpdXMgLSDPgCBdKTtcbiAgICBmdW5jdGlvbiB2aXNpYmxlKM67LCDPhikge1xuICAgICAgcmV0dXJuIE1hdGguY29zKM67KSAqIE1hdGguY29zKM+GKSA+IGNyO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjbGlwTGluZShsaXN0ZW5lcikge1xuICAgICAgdmFyIHBvaW50MCwgYzAsIHYwLCB2MDAsIGNsZWFuO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICB2MDAgPSB2MCA9IGZhbHNlO1xuICAgICAgICAgIGNsZWFuID0gMTtcbiAgICAgICAgfSxcbiAgICAgICAgcG9pbnQ6IGZ1bmN0aW9uKM67LCDPhikge1xuICAgICAgICAgIHZhciBwb2ludDEgPSBbIM67LCDPhiBdLCBwb2ludDIsIHYgPSB2aXNpYmxlKM67LCDPhiksIGMgPSBzbWFsbFJhZGl1cyA/IHYgPyAwIDogY29kZSjOuywgz4YpIDogdiA/IGNvZGUozrsgKyAozrsgPCAwID8gz4AgOiAtz4ApLCDPhikgOiAwO1xuICAgICAgICAgIGlmICghcG9pbnQwICYmICh2MDAgPSB2MCA9IHYpKSBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgICAgICBpZiAodiAhPT0gdjApIHtcbiAgICAgICAgICAgIHBvaW50MiA9IGludGVyc2VjdChwb2ludDAsIHBvaW50MSk7XG4gICAgICAgICAgICBpZiAoZDNfZ2VvX3NwaGVyaWNhbEVxdWFsKHBvaW50MCwgcG9pbnQyKSB8fCBkM19nZW9fc3BoZXJpY2FsRXF1YWwocG9pbnQxLCBwb2ludDIpKSB7XG4gICAgICAgICAgICAgIHBvaW50MVswXSArPSDOtTtcbiAgICAgICAgICAgICAgcG9pbnQxWzFdICs9IM61O1xuICAgICAgICAgICAgICB2ID0gdmlzaWJsZShwb2ludDFbMF0sIHBvaW50MVsxXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICh2ICE9PSB2MCkge1xuICAgICAgICAgICAgY2xlYW4gPSAwO1xuICAgICAgICAgICAgaWYgKHYpIHtcbiAgICAgICAgICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgICAgICAgIHBvaW50MiA9IGludGVyc2VjdChwb2ludDEsIHBvaW50MCk7XG4gICAgICAgICAgICAgIGxpc3RlbmVyLnBvaW50KHBvaW50MlswXSwgcG9pbnQyWzFdKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHBvaW50MiA9IGludGVyc2VjdChwb2ludDAsIHBvaW50MSk7XG4gICAgICAgICAgICAgIGxpc3RlbmVyLnBvaW50KHBvaW50MlswXSwgcG9pbnQyWzFdKTtcbiAgICAgICAgICAgICAgbGlzdGVuZXIubGluZUVuZCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcG9pbnQwID0gcG9pbnQyO1xuICAgICAgICAgIH0gZWxzZSBpZiAobm90SGVtaXNwaGVyZSAmJiBwb2ludDAgJiYgc21hbGxSYWRpdXMgXiB2KSB7XG4gICAgICAgICAgICB2YXIgdDtcbiAgICAgICAgICAgIGlmICghKGMgJiBjMCkgJiYgKHQgPSBpbnRlcnNlY3QocG9pbnQxLCBwb2ludDAsIHRydWUpKSkge1xuICAgICAgICAgICAgICBjbGVhbiA9IDA7XG4gICAgICAgICAgICAgIGlmIChzbWFsbFJhZGl1cykge1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyLnBvaW50KHRbMF1bMF0sIHRbMF1bMV0pO1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyLnBvaW50KHRbMV1bMF0sIHRbMV1bMV0pO1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBsaXN0ZW5lci5wb2ludCh0WzFdWzBdLCB0WzFdWzFdKTtcbiAgICAgICAgICAgICAgICBsaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgICAgICAgICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgICAgICAgICAgbGlzdGVuZXIucG9pbnQodFswXVswXSwgdFswXVsxXSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHYgJiYgKCFwb2ludDAgfHwgIWQzX2dlb19zcGhlcmljYWxFcXVhbChwb2ludDAsIHBvaW50MSkpKSB7XG4gICAgICAgICAgICBsaXN0ZW5lci5wb2ludChwb2ludDFbMF0sIHBvaW50MVsxXSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHBvaW50MCA9IHBvaW50MSwgdjAgPSB2LCBjMCA9IGM7XG4gICAgICAgIH0sXG4gICAgICAgIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGlmICh2MCkgbGlzdGVuZXIubGluZUVuZCgpO1xuICAgICAgICAgIHBvaW50MCA9IG51bGw7XG4gICAgICAgIH0sXG4gICAgICAgIGNsZWFuOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gY2xlYW4gfCAodjAwICYmIHYwKSA8PCAxO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBpbnRlcnNlY3QoYSwgYiwgdHdvKSB7XG4gICAgICB2YXIgcGEgPSBkM19nZW9fY2FydGVzaWFuKGEpLCBwYiA9IGQzX2dlb19jYXJ0ZXNpYW4oYik7XG4gICAgICB2YXIgbjEgPSBbIDEsIDAsIDAgXSwgbjIgPSBkM19nZW9fY2FydGVzaWFuQ3Jvc3MocGEsIHBiKSwgbjJuMiA9IGQzX2dlb19jYXJ0ZXNpYW5Eb3QobjIsIG4yKSwgbjFuMiA9IG4yWzBdLCBkZXRlcm1pbmFudCA9IG4ybjIgLSBuMW4yICogbjFuMjtcbiAgICAgIGlmICghZGV0ZXJtaW5hbnQpIHJldHVybiAhdHdvICYmIGE7XG4gICAgICB2YXIgYzEgPSBjciAqIG4ybjIgLyBkZXRlcm1pbmFudCwgYzIgPSAtY3IgKiBuMW4yIC8gZGV0ZXJtaW5hbnQsIG4xeG4yID0gZDNfZ2VvX2NhcnRlc2lhbkNyb3NzKG4xLCBuMiksIEEgPSBkM19nZW9fY2FydGVzaWFuU2NhbGUobjEsIGMxKSwgQiA9IGQzX2dlb19jYXJ0ZXNpYW5TY2FsZShuMiwgYzIpO1xuICAgICAgZDNfZ2VvX2NhcnRlc2lhbkFkZChBLCBCKTtcbiAgICAgIHZhciB1ID0gbjF4bjIsIHcgPSBkM19nZW9fY2FydGVzaWFuRG90KEEsIHUpLCB1dSA9IGQzX2dlb19jYXJ0ZXNpYW5Eb3QodSwgdSksIHQyID0gdyAqIHcgLSB1dSAqIChkM19nZW9fY2FydGVzaWFuRG90KEEsIEEpIC0gMSk7XG4gICAgICBpZiAodDIgPCAwKSByZXR1cm47XG4gICAgICB2YXIgdCA9IE1hdGguc3FydCh0MiksIHEgPSBkM19nZW9fY2FydGVzaWFuU2NhbGUodSwgKC13IC0gdCkgLyB1dSk7XG4gICAgICBkM19nZW9fY2FydGVzaWFuQWRkKHEsIEEpO1xuICAgICAgcSA9IGQzX2dlb19zcGhlcmljYWwocSk7XG4gICAgICBpZiAoIXR3bykgcmV0dXJuIHE7XG4gICAgICB2YXIgzrswID0gYVswXSwgzrsxID0gYlswXSwgz4YwID0gYVsxXSwgz4YxID0gYlsxXSwgejtcbiAgICAgIGlmICjOuzEgPCDOuzApIHogPSDOuzAsIM67MCA9IM67MSwgzrsxID0gejtcbiAgICAgIHZhciDOtM67ID0gzrsxIC0gzrswLCBwb2xhciA9IGFicyjOtM67IC0gz4ApIDwgzrUsIG1lcmlkaWFuID0gcG9sYXIgfHwgzrTOuyA8IM61O1xuICAgICAgaWYgKCFwb2xhciAmJiDPhjEgPCDPhjApIHogPSDPhjAsIM+GMCA9IM+GMSwgz4YxID0gejtcbiAgICAgIGlmIChtZXJpZGlhbiA/IHBvbGFyID8gz4YwICsgz4YxID4gMCBeIHFbMV0gPCAoYWJzKHFbMF0gLSDOuzApIDwgzrUgPyDPhjAgOiDPhjEpIDogz4YwIDw9IHFbMV0gJiYgcVsxXSA8PSDPhjEgOiDOtM67ID4gz4AgXiAozrswIDw9IHFbMF0gJiYgcVswXSA8PSDOuzEpKSB7XG4gICAgICAgIHZhciBxMSA9IGQzX2dlb19jYXJ0ZXNpYW5TY2FsZSh1LCAoLXcgKyB0KSAvIHV1KTtcbiAgICAgICAgZDNfZ2VvX2NhcnRlc2lhbkFkZChxMSwgQSk7XG4gICAgICAgIHJldHVybiBbIHEsIGQzX2dlb19zcGhlcmljYWwocTEpIF07XG4gICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNvZGUozrssIM+GKSB7XG4gICAgICB2YXIgciA9IHNtYWxsUmFkaXVzID8gcmFkaXVzIDogz4AgLSByYWRpdXMsIGNvZGUgPSAwO1xuICAgICAgaWYgKM67IDwgLXIpIGNvZGUgfD0gMTsgZWxzZSBpZiAozrsgPiByKSBjb2RlIHw9IDI7XG4gICAgICBpZiAoz4YgPCAtcikgY29kZSB8PSA0OyBlbHNlIGlmICjPhiA+IHIpIGNvZGUgfD0gODtcbiAgICAgIHJldHVybiBjb2RlO1xuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX2NsaXBMaW5lKHgwLCB5MCwgeDEsIHkxKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGxpbmUpIHtcbiAgICAgIHZhciBhID0gbGluZS5hLCBiID0gbGluZS5iLCBheCA9IGEueCwgYXkgPSBhLnksIGJ4ID0gYi54LCBieSA9IGIueSwgdDAgPSAwLCB0MSA9IDEsIGR4ID0gYnggLSBheCwgZHkgPSBieSAtIGF5LCByO1xuICAgICAgciA9IHgwIC0gYXg7XG4gICAgICBpZiAoIWR4ICYmIHIgPiAwKSByZXR1cm47XG4gICAgICByIC89IGR4O1xuICAgICAgaWYgKGR4IDwgMCkge1xuICAgICAgICBpZiAociA8IHQwKSByZXR1cm47XG4gICAgICAgIGlmIChyIDwgdDEpIHQxID0gcjtcbiAgICAgIH0gZWxzZSBpZiAoZHggPiAwKSB7XG4gICAgICAgIGlmIChyID4gdDEpIHJldHVybjtcbiAgICAgICAgaWYgKHIgPiB0MCkgdDAgPSByO1xuICAgICAgfVxuICAgICAgciA9IHgxIC0gYXg7XG4gICAgICBpZiAoIWR4ICYmIHIgPCAwKSByZXR1cm47XG4gICAgICByIC89IGR4O1xuICAgICAgaWYgKGR4IDwgMCkge1xuICAgICAgICBpZiAociA+IHQxKSByZXR1cm47XG4gICAgICAgIGlmIChyID4gdDApIHQwID0gcjtcbiAgICAgIH0gZWxzZSBpZiAoZHggPiAwKSB7XG4gICAgICAgIGlmIChyIDwgdDApIHJldHVybjtcbiAgICAgICAgaWYgKHIgPCB0MSkgdDEgPSByO1xuICAgICAgfVxuICAgICAgciA9IHkwIC0gYXk7XG4gICAgICBpZiAoIWR5ICYmIHIgPiAwKSByZXR1cm47XG4gICAgICByIC89IGR5O1xuICAgICAgaWYgKGR5IDwgMCkge1xuICAgICAgICBpZiAociA8IHQwKSByZXR1cm47XG4gICAgICAgIGlmIChyIDwgdDEpIHQxID0gcjtcbiAgICAgIH0gZWxzZSBpZiAoZHkgPiAwKSB7XG4gICAgICAgIGlmIChyID4gdDEpIHJldHVybjtcbiAgICAgICAgaWYgKHIgPiB0MCkgdDAgPSByO1xuICAgICAgfVxuICAgICAgciA9IHkxIC0gYXk7XG4gICAgICBpZiAoIWR5ICYmIHIgPCAwKSByZXR1cm47XG4gICAgICByIC89IGR5O1xuICAgICAgaWYgKGR5IDwgMCkge1xuICAgICAgICBpZiAociA+IHQxKSByZXR1cm47XG4gICAgICAgIGlmIChyID4gdDApIHQwID0gcjtcbiAgICAgIH0gZWxzZSBpZiAoZHkgPiAwKSB7XG4gICAgICAgIGlmIChyIDwgdDApIHJldHVybjtcbiAgICAgICAgaWYgKHIgPCB0MSkgdDEgPSByO1xuICAgICAgfVxuICAgICAgaWYgKHQwID4gMCkgbGluZS5hID0ge1xuICAgICAgICB4OiBheCArIHQwICogZHgsXG4gICAgICAgIHk6IGF5ICsgdDAgKiBkeVxuICAgICAgfTtcbiAgICAgIGlmICh0MSA8IDEpIGxpbmUuYiA9IHtcbiAgICAgICAgeDogYXggKyB0MSAqIGR4LFxuICAgICAgICB5OiBheSArIHQxICogZHlcbiAgICAgIH07XG4gICAgICByZXR1cm4gbGluZTtcbiAgICB9O1xuICB9XG4gIHZhciBkM19nZW9fY2xpcEV4dGVudE1BWCA9IDFlOTtcbiAgZDMuZ2VvLmNsaXBFeHRlbnQgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgeDAsIHkwLCB4MSwgeTEsIHN0cmVhbSwgY2xpcCwgY2xpcEV4dGVudCA9IHtcbiAgICAgIHN0cmVhbTogZnVuY3Rpb24ob3V0cHV0KSB7XG4gICAgICAgIGlmIChzdHJlYW0pIHN0cmVhbS52YWxpZCA9IGZhbHNlO1xuICAgICAgICBzdHJlYW0gPSBjbGlwKG91dHB1dCk7XG4gICAgICAgIHN0cmVhbS52YWxpZCA9IHRydWU7XG4gICAgICAgIHJldHVybiBzdHJlYW07XG4gICAgICB9LFxuICAgICAgZXh0ZW50OiBmdW5jdGlvbihfKSB7XG4gICAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFsgWyB4MCwgeTAgXSwgWyB4MSwgeTEgXSBdO1xuICAgICAgICBjbGlwID0gZDNfZ2VvX2NsaXBFeHRlbnQoeDAgPSArX1swXVswXSwgeTAgPSArX1swXVsxXSwgeDEgPSArX1sxXVswXSwgeTEgPSArX1sxXVsxXSk7XG4gICAgICAgIGlmIChzdHJlYW0pIHN0cmVhbS52YWxpZCA9IGZhbHNlLCBzdHJlYW0gPSBudWxsO1xuICAgICAgICByZXR1cm4gY2xpcEV4dGVudDtcbiAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiBjbGlwRXh0ZW50LmV4dGVudChbIFsgMCwgMCBdLCBbIDk2MCwgNTAwIF0gXSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb19jbGlwRXh0ZW50KHgwLCB5MCwgeDEsIHkxKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGxpc3RlbmVyKSB7XG4gICAgICB2YXIgbGlzdGVuZXJfID0gbGlzdGVuZXIsIGJ1ZmZlckxpc3RlbmVyID0gZDNfZ2VvX2NsaXBCdWZmZXJMaXN0ZW5lcigpLCBjbGlwTGluZSA9IGQzX2dlb21fY2xpcExpbmUoeDAsIHkwLCB4MSwgeTEpLCBzZWdtZW50cywgcG9seWdvbiwgcmluZztcbiAgICAgIHZhciBjbGlwID0ge1xuICAgICAgICBwb2ludDogcG9pbnQsXG4gICAgICAgIGxpbmVTdGFydDogbGluZVN0YXJ0LFxuICAgICAgICBsaW5lRW5kOiBsaW5lRW5kLFxuICAgICAgICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGxpc3RlbmVyID0gYnVmZmVyTGlzdGVuZXI7XG4gICAgICAgICAgc2VnbWVudHMgPSBbXTtcbiAgICAgICAgICBwb2x5Z29uID0gW107XG4gICAgICAgICAgY2xlYW4gPSB0cnVlO1xuICAgICAgICB9LFxuICAgICAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBsaXN0ZW5lciA9IGxpc3RlbmVyXztcbiAgICAgICAgICBzZWdtZW50cyA9IGQzLm1lcmdlKHNlZ21lbnRzKTtcbiAgICAgICAgICB2YXIgY2xpcFN0YXJ0SW5zaWRlID0gaW5zaWRlUG9seWdvbihbIHgwLCB5MSBdKSwgaW5zaWRlID0gY2xlYW4gJiYgY2xpcFN0YXJ0SW5zaWRlLCB2aXNpYmxlID0gc2VnbWVudHMubGVuZ3RoO1xuICAgICAgICAgIGlmIChpbnNpZGUgfHwgdmlzaWJsZSkge1xuICAgICAgICAgICAgbGlzdGVuZXIucG9seWdvblN0YXJ0KCk7XG4gICAgICAgICAgICBpZiAoaW5zaWRlKSB7XG4gICAgICAgICAgICAgIGxpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgICAgICAgICAgICBpbnRlcnBvbGF0ZShudWxsLCBudWxsLCAxLCBsaXN0ZW5lcik7XG4gICAgICAgICAgICAgIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh2aXNpYmxlKSB7XG4gICAgICAgICAgICAgIGQzX2dlb19jbGlwUG9seWdvbihzZWdtZW50cywgY29tcGFyZSwgY2xpcFN0YXJ0SW5zaWRlLCBpbnRlcnBvbGF0ZSwgbGlzdGVuZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGlzdGVuZXIucG9seWdvbkVuZCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzZWdtZW50cyA9IHBvbHlnb24gPSByaW5nID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIGZ1bmN0aW9uIGluc2lkZVBvbHlnb24ocCkge1xuICAgICAgICB2YXIgd24gPSAwLCBuID0gcG9seWdvbi5sZW5ndGgsIHkgPSBwWzFdO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgICAgIGZvciAodmFyIGogPSAxLCB2ID0gcG9seWdvbltpXSwgbSA9IHYubGVuZ3RoLCBhID0gdlswXSwgYjsgaiA8IG07ICsraikge1xuICAgICAgICAgICAgYiA9IHZbal07XG4gICAgICAgICAgICBpZiAoYVsxXSA8PSB5KSB7XG4gICAgICAgICAgICAgIGlmIChiWzFdID4geSAmJiBkM19jcm9zczJkKGEsIGIsIHApID4gMCkgKyt3bjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIGlmIChiWzFdIDw9IHkgJiYgZDNfY3Jvc3MyZChhLCBiLCBwKSA8IDApIC0td247XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhID0gYjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHduICE9PSAwO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gaW50ZXJwb2xhdGUoZnJvbSwgdG8sIGRpcmVjdGlvbiwgbGlzdGVuZXIpIHtcbiAgICAgICAgdmFyIGEgPSAwLCBhMSA9IDA7XG4gICAgICAgIGlmIChmcm9tID09IG51bGwgfHwgKGEgPSBjb3JuZXIoZnJvbSwgZGlyZWN0aW9uKSkgIT09IChhMSA9IGNvcm5lcih0bywgZGlyZWN0aW9uKSkgfHwgY29tcGFyZVBvaW50cyhmcm9tLCB0bykgPCAwIF4gZGlyZWN0aW9uID4gMCkge1xuICAgICAgICAgIGRvIHtcbiAgICAgICAgICAgIGxpc3RlbmVyLnBvaW50KGEgPT09IDAgfHwgYSA9PT0gMyA/IHgwIDogeDEsIGEgPiAxID8geTEgOiB5MCk7XG4gICAgICAgICAgfSB3aGlsZSAoKGEgPSAoYSArIGRpcmVjdGlvbiArIDQpICUgNCkgIT09IGExKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBsaXN0ZW5lci5wb2ludCh0b1swXSwgdG9bMV0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBwb2ludFZpc2libGUoeCwgeSkge1xuICAgICAgICByZXR1cm4geDAgPD0geCAmJiB4IDw9IHgxICYmIHkwIDw9IHkgJiYgeSA8PSB5MTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIHBvaW50KHgsIHkpIHtcbiAgICAgICAgaWYgKHBvaW50VmlzaWJsZSh4LCB5KSkgbGlzdGVuZXIucG9pbnQoeCwgeSk7XG4gICAgICB9XG4gICAgICB2YXIgeF9fLCB5X18sIHZfXywgeF8sIHlfLCB2XywgZmlyc3QsIGNsZWFuO1xuICAgICAgZnVuY3Rpb24gbGluZVN0YXJ0KCkge1xuICAgICAgICBjbGlwLnBvaW50ID0gbGluZVBvaW50O1xuICAgICAgICBpZiAocG9seWdvbikgcG9seWdvbi5wdXNoKHJpbmcgPSBbXSk7XG4gICAgICAgIGZpcnN0ID0gdHJ1ZTtcbiAgICAgICAgdl8gPSBmYWxzZTtcbiAgICAgICAgeF8gPSB5XyA9IE5hTjtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGxpbmVFbmQoKSB7XG4gICAgICAgIGlmIChzZWdtZW50cykge1xuICAgICAgICAgIGxpbmVQb2ludCh4X18sIHlfXyk7XG4gICAgICAgICAgaWYgKHZfXyAmJiB2XykgYnVmZmVyTGlzdGVuZXIucmVqb2luKCk7XG4gICAgICAgICAgc2VnbWVudHMucHVzaChidWZmZXJMaXN0ZW5lci5idWZmZXIoKSk7XG4gICAgICAgIH1cbiAgICAgICAgY2xpcC5wb2ludCA9IHBvaW50O1xuICAgICAgICBpZiAodl8pIGxpc3RlbmVyLmxpbmVFbmQoKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGxpbmVQb2ludCh4LCB5KSB7XG4gICAgICAgIHggPSBNYXRoLm1heCgtZDNfZ2VvX2NsaXBFeHRlbnRNQVgsIE1hdGgubWluKGQzX2dlb19jbGlwRXh0ZW50TUFYLCB4KSk7XG4gICAgICAgIHkgPSBNYXRoLm1heCgtZDNfZ2VvX2NsaXBFeHRlbnRNQVgsIE1hdGgubWluKGQzX2dlb19jbGlwRXh0ZW50TUFYLCB5KSk7XG4gICAgICAgIHZhciB2ID0gcG9pbnRWaXNpYmxlKHgsIHkpO1xuICAgICAgICBpZiAocG9seWdvbikgcmluZy5wdXNoKFsgeCwgeSBdKTtcbiAgICAgICAgaWYgKGZpcnN0KSB7XG4gICAgICAgICAgeF9fID0geCwgeV9fID0geSwgdl9fID0gdjtcbiAgICAgICAgICBmaXJzdCA9IGZhbHNlO1xuICAgICAgICAgIGlmICh2KSB7XG4gICAgICAgICAgICBsaXN0ZW5lci5saW5lU3RhcnQoKTtcbiAgICAgICAgICAgIGxpc3RlbmVyLnBvaW50KHgsIHkpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAodiAmJiB2XykgbGlzdGVuZXIucG9pbnQoeCwgeSk7IGVsc2Uge1xuICAgICAgICAgICAgdmFyIGwgPSB7XG4gICAgICAgICAgICAgIGE6IHtcbiAgICAgICAgICAgICAgICB4OiB4XyxcbiAgICAgICAgICAgICAgICB5OiB5X1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBiOiB7XG4gICAgICAgICAgICAgICAgeDogeCxcbiAgICAgICAgICAgICAgICB5OiB5XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBpZiAoY2xpcExpbmUobCkpIHtcbiAgICAgICAgICAgICAgaWYgKCF2Xykge1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyLmxpbmVTdGFydCgpO1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyLnBvaW50KGwuYS54LCBsLmEueSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgbGlzdGVuZXIucG9pbnQobC5iLngsIGwuYi55KTtcbiAgICAgICAgICAgICAgaWYgKCF2KSBsaXN0ZW5lci5saW5lRW5kKCk7XG4gICAgICAgICAgICAgIGNsZWFuID0gZmFsc2U7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHYpIHtcbiAgICAgICAgICAgICAgbGlzdGVuZXIubGluZVN0YXJ0KCk7XG4gICAgICAgICAgICAgIGxpc3RlbmVyLnBvaW50KHgsIHkpO1xuICAgICAgICAgICAgICBjbGVhbiA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB4XyA9IHgsIHlfID0geSwgdl8gPSB2O1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNsaXA7XG4gICAgfTtcbiAgICBmdW5jdGlvbiBjb3JuZXIocCwgZGlyZWN0aW9uKSB7XG4gICAgICByZXR1cm4gYWJzKHBbMF0gLSB4MCkgPCDOtSA/IGRpcmVjdGlvbiA+IDAgPyAwIDogMyA6IGFicyhwWzBdIC0geDEpIDwgzrUgPyBkaXJlY3Rpb24gPiAwID8gMiA6IDEgOiBhYnMocFsxXSAtIHkwKSA8IM61ID8gZGlyZWN0aW9uID4gMCA/IDEgOiAwIDogZGlyZWN0aW9uID4gMCA/IDMgOiAyO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjb21wYXJlKGEsIGIpIHtcbiAgICAgIHJldHVybiBjb21wYXJlUG9pbnRzKGEueCwgYi54KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gY29tcGFyZVBvaW50cyhhLCBiKSB7XG4gICAgICB2YXIgY2EgPSBjb3JuZXIoYSwgMSksIGNiID0gY29ybmVyKGIsIDEpO1xuICAgICAgcmV0dXJuIGNhICE9PSBjYiA/IGNhIC0gY2IgOiBjYSA9PT0gMCA/IGJbMV0gLSBhWzFdIDogY2EgPT09IDEgPyBhWzBdIC0gYlswXSA6IGNhID09PSAyID8gYVsxXSAtIGJbMV0gOiBiWzBdIC0gYVswXTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2NvbXBvc2UoYSwgYikge1xuICAgIGZ1bmN0aW9uIGNvbXBvc2UoeCwgeSkge1xuICAgICAgcmV0dXJuIHggPSBhKHgsIHkpLCBiKHhbMF0sIHhbMV0pO1xuICAgIH1cbiAgICBpZiAoYS5pbnZlcnQgJiYgYi5pbnZlcnQpIGNvbXBvc2UuaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICAgICAgcmV0dXJuIHggPSBiLmludmVydCh4LCB5KSwgeCAmJiBhLmludmVydCh4WzBdLCB4WzFdKTtcbiAgICB9O1xuICAgIHJldHVybiBjb21wb3NlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19jb25pYyhwcm9qZWN0QXQpIHtcbiAgICB2YXIgz4YwID0gMCwgz4YxID0gz4AgLyAzLCBtID0gZDNfZ2VvX3Byb2plY3Rpb25NdXRhdG9yKHByb2plY3RBdCksIHAgPSBtKM+GMCwgz4YxKTtcbiAgICBwLnBhcmFsbGVscyA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFsgz4YwIC8gz4AgKiAxODAsIM+GMSAvIM+AICogMTgwIF07XG4gICAgICByZXR1cm4gbSjPhjAgPSBfWzBdICogz4AgLyAxODAsIM+GMSA9IF9bMV0gKiDPgCAvIDE4MCk7XG4gICAgfTtcbiAgICByZXR1cm4gcDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY29uaWNFcXVhbEFyZWEoz4YwLCDPhjEpIHtcbiAgICB2YXIgc2luz4YwID0gTWF0aC5zaW4oz4YwKSwgbiA9IChzaW7PhjAgKyBNYXRoLnNpbijPhjEpKSAvIDIsIEMgPSAxICsgc2luz4YwICogKDIgKiBuIC0gc2luz4YwKSwgz4EwID0gTWF0aC5zcXJ0KEMpIC8gbjtcbiAgICBmdW5jdGlvbiBmb3J3YXJkKM67LCDPhikge1xuICAgICAgdmFyIM+BID0gTWF0aC5zcXJ0KEMgLSAyICogbiAqIE1hdGguc2luKM+GKSkgLyBuO1xuICAgICAgcmV0dXJuIFsgz4EgKiBNYXRoLnNpbijOuyAqPSBuKSwgz4EwIC0gz4EgKiBNYXRoLmNvcyjOuykgXTtcbiAgICB9XG4gICAgZm9yd2FyZC5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgICB2YXIgz4EwX3kgPSDPgTAgLSB5O1xuICAgICAgcmV0dXJuIFsgTWF0aC5hdGFuMih4LCDPgTBfeSkgLyBuLCBkM19hc2luKChDIC0gKHggKiB4ICsgz4EwX3kgKiDPgTBfeSkgKiBuICogbikgLyAoMiAqIG4pKSBdO1xuICAgIH07XG4gICAgcmV0dXJuIGZvcndhcmQ7XG4gIH1cbiAgKGQzLmdlby5jb25pY0VxdWFsQXJlYSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19nZW9fY29uaWMoZDNfZ2VvX2NvbmljRXF1YWxBcmVhKTtcbiAgfSkucmF3ID0gZDNfZ2VvX2NvbmljRXF1YWxBcmVhO1xuICBkMy5nZW8uYWxiZXJzID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzLmdlby5jb25pY0VxdWFsQXJlYSgpLnJvdGF0ZShbIDk2LCAwIF0pLmNlbnRlcihbIC0uNiwgMzguNyBdKS5wYXJhbGxlbHMoWyAyOS41LCA0NS41IF0pLnNjYWxlKDEwNzApO1xuICB9O1xuICBkMy5nZW8uYWxiZXJzVXNhID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGxvd2VyNDggPSBkMy5nZW8uYWxiZXJzKCk7XG4gICAgdmFyIGFsYXNrYSA9IGQzLmdlby5jb25pY0VxdWFsQXJlYSgpLnJvdGF0ZShbIDE1NCwgMCBdKS5jZW50ZXIoWyAtMiwgNTguNSBdKS5wYXJhbGxlbHMoWyA1NSwgNjUgXSk7XG4gICAgdmFyIGhhd2FpaSA9IGQzLmdlby5jb25pY0VxdWFsQXJlYSgpLnJvdGF0ZShbIDE1NywgMCBdKS5jZW50ZXIoWyAtMywgMTkuOSBdKS5wYXJhbGxlbHMoWyA4LCAxOCBdKTtcbiAgICB2YXIgcG9pbnQsIHBvaW50U3RyZWFtID0ge1xuICAgICAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgICAgcG9pbnQgPSBbIHgsIHkgXTtcbiAgICAgIH1cbiAgICB9LCBsb3dlcjQ4UG9pbnQsIGFsYXNrYVBvaW50LCBoYXdhaWlQb2ludDtcbiAgICBmdW5jdGlvbiBhbGJlcnNVc2EoY29vcmRpbmF0ZXMpIHtcbiAgICAgIHZhciB4ID0gY29vcmRpbmF0ZXNbMF0sIHkgPSBjb29yZGluYXRlc1sxXTtcbiAgICAgIHBvaW50ID0gbnVsbDtcbiAgICAgIChsb3dlcjQ4UG9pbnQoeCwgeSksIHBvaW50KSB8fCAoYWxhc2thUG9pbnQoeCwgeSksIHBvaW50KSB8fCBoYXdhaWlQb2ludCh4LCB5KTtcbiAgICAgIHJldHVybiBwb2ludDtcbiAgICB9XG4gICAgYWxiZXJzVXNhLmludmVydCA9IGZ1bmN0aW9uKGNvb3JkaW5hdGVzKSB7XG4gICAgICB2YXIgayA9IGxvd2VyNDguc2NhbGUoKSwgdCA9IGxvd2VyNDgudHJhbnNsYXRlKCksIHggPSAoY29vcmRpbmF0ZXNbMF0gLSB0WzBdKSAvIGssIHkgPSAoY29vcmRpbmF0ZXNbMV0gLSB0WzFdKSAvIGs7XG4gICAgICByZXR1cm4gKHkgPj0gLjEyICYmIHkgPCAuMjM0ICYmIHggPj0gLS40MjUgJiYgeCA8IC0uMjE0ID8gYWxhc2thIDogeSA+PSAuMTY2ICYmIHkgPCAuMjM0ICYmIHggPj0gLS4yMTQgJiYgeCA8IC0uMTE1ID8gaGF3YWlpIDogbG93ZXI0OCkuaW52ZXJ0KGNvb3JkaW5hdGVzKTtcbiAgICB9O1xuICAgIGFsYmVyc1VzYS5zdHJlYW0gPSBmdW5jdGlvbihzdHJlYW0pIHtcbiAgICAgIHZhciBsb3dlcjQ4U3RyZWFtID0gbG93ZXI0OC5zdHJlYW0oc3RyZWFtKSwgYWxhc2thU3RyZWFtID0gYWxhc2thLnN0cmVhbShzdHJlYW0pLCBoYXdhaWlTdHJlYW0gPSBoYXdhaWkuc3RyZWFtKHN0cmVhbSk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBwb2ludDogZnVuY3Rpb24oeCwgeSkge1xuICAgICAgICAgIGxvd2VyNDhTdHJlYW0ucG9pbnQoeCwgeSk7XG4gICAgICAgICAgYWxhc2thU3RyZWFtLnBvaW50KHgsIHkpO1xuICAgICAgICAgIGhhd2FpaVN0cmVhbS5wb2ludCh4LCB5KTtcbiAgICAgICAgfSxcbiAgICAgICAgc3BoZXJlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBsb3dlcjQ4U3RyZWFtLnNwaGVyZSgpO1xuICAgICAgICAgIGFsYXNrYVN0cmVhbS5zcGhlcmUoKTtcbiAgICAgICAgICBoYXdhaWlTdHJlYW0uc3BoZXJlKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgbG93ZXI0OFN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgICAgICBhbGFza2FTdHJlYW0ubGluZVN0YXJ0KCk7XG4gICAgICAgICAgaGF3YWlpU3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgICB9LFxuICAgICAgICBsaW5lRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBsb3dlcjQ4U3RyZWFtLmxpbmVFbmQoKTtcbiAgICAgICAgICBhbGFza2FTdHJlYW0ubGluZUVuZCgpO1xuICAgICAgICAgIGhhd2FpaVN0cmVhbS5saW5lRW5kKCk7XG4gICAgICAgIH0sXG4gICAgICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgbG93ZXI0OFN0cmVhbS5wb2x5Z29uU3RhcnQoKTtcbiAgICAgICAgICBhbGFza2FTdHJlYW0ucG9seWdvblN0YXJ0KCk7XG4gICAgICAgICAgaGF3YWlpU3RyZWFtLnBvbHlnb25TdGFydCgpO1xuICAgICAgICB9LFxuICAgICAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBsb3dlcjQ4U3RyZWFtLnBvbHlnb25FbmQoKTtcbiAgICAgICAgICBhbGFza2FTdHJlYW0ucG9seWdvbkVuZCgpO1xuICAgICAgICAgIGhhd2FpaVN0cmVhbS5wb2x5Z29uRW5kKCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfTtcbiAgICBhbGJlcnNVc2EucHJlY2lzaW9uID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbG93ZXI0OC5wcmVjaXNpb24oKTtcbiAgICAgIGxvd2VyNDgucHJlY2lzaW9uKF8pO1xuICAgICAgYWxhc2thLnByZWNpc2lvbihfKTtcbiAgICAgIGhhd2FpaS5wcmVjaXNpb24oXyk7XG4gICAgICByZXR1cm4gYWxiZXJzVXNhO1xuICAgIH07XG4gICAgYWxiZXJzVXNhLnNjYWxlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbG93ZXI0OC5zY2FsZSgpO1xuICAgICAgbG93ZXI0OC5zY2FsZShfKTtcbiAgICAgIGFsYXNrYS5zY2FsZShfICogLjM1KTtcbiAgICAgIGhhd2FpaS5zY2FsZShfKTtcbiAgICAgIHJldHVybiBhbGJlcnNVc2EudHJhbnNsYXRlKGxvd2VyNDgudHJhbnNsYXRlKCkpO1xuICAgIH07XG4gICAgYWxiZXJzVXNhLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGxvd2VyNDgudHJhbnNsYXRlKCk7XG4gICAgICB2YXIgayA9IGxvd2VyNDguc2NhbGUoKSwgeCA9ICtfWzBdLCB5ID0gK19bMV07XG4gICAgICBsb3dlcjQ4UG9pbnQgPSBsb3dlcjQ4LnRyYW5zbGF0ZShfKS5jbGlwRXh0ZW50KFsgWyB4IC0gLjQ1NSAqIGssIHkgLSAuMjM4ICogayBdLCBbIHggKyAuNDU1ICogaywgeSArIC4yMzggKiBrIF0gXSkuc3RyZWFtKHBvaW50U3RyZWFtKS5wb2ludDtcbiAgICAgIGFsYXNrYVBvaW50ID0gYWxhc2thLnRyYW5zbGF0ZShbIHggLSAuMzA3ICogaywgeSArIC4yMDEgKiBrIF0pLmNsaXBFeHRlbnQoWyBbIHggLSAuNDI1ICogayArIM61LCB5ICsgLjEyICogayArIM61IF0sIFsgeCAtIC4yMTQgKiBrIC0gzrUsIHkgKyAuMjM0ICogayAtIM61IF0gXSkuc3RyZWFtKHBvaW50U3RyZWFtKS5wb2ludDtcbiAgICAgIGhhd2FpaVBvaW50ID0gaGF3YWlpLnRyYW5zbGF0ZShbIHggLSAuMjA1ICogaywgeSArIC4yMTIgKiBrIF0pLmNsaXBFeHRlbnQoWyBbIHggLSAuMjE0ICogayArIM61LCB5ICsgLjE2NiAqIGsgKyDOtSBdLCBbIHggLSAuMTE1ICogayAtIM61LCB5ICsgLjIzNCAqIGsgLSDOtSBdIF0pLnN0cmVhbShwb2ludFN0cmVhbSkucG9pbnQ7XG4gICAgICByZXR1cm4gYWxiZXJzVXNhO1xuICAgIH07XG4gICAgcmV0dXJuIGFsYmVyc1VzYS5zY2FsZSgxMDcwKTtcbiAgfTtcbiAgdmFyIGQzX2dlb19wYXRoQXJlYVN1bSwgZDNfZ2VvX3BhdGhBcmVhUG9seWdvbiwgZDNfZ2VvX3BhdGhBcmVhID0ge1xuICAgIHBvaW50OiBkM19ub29wLFxuICAgIGxpbmVTdGFydDogZDNfbm9vcCxcbiAgICBsaW5lRW5kOiBkM19ub29wLFxuICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICBkM19nZW9fcGF0aEFyZWFQb2x5Z29uID0gMDtcbiAgICAgIGQzX2dlb19wYXRoQXJlYS5saW5lU3RhcnQgPSBkM19nZW9fcGF0aEFyZWFSaW5nU3RhcnQ7XG4gICAgfSxcbiAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX2dlb19wYXRoQXJlYS5saW5lU3RhcnQgPSBkM19nZW9fcGF0aEFyZWEubGluZUVuZCA9IGQzX2dlb19wYXRoQXJlYS5wb2ludCA9IGQzX25vb3A7XG4gICAgICBkM19nZW9fcGF0aEFyZWFTdW0gKz0gYWJzKGQzX2dlb19wYXRoQXJlYVBvbHlnb24gLyAyKTtcbiAgICB9XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb19wYXRoQXJlYVJpbmdTdGFydCgpIHtcbiAgICB2YXIgeDAwLCB5MDAsIHgwLCB5MDtcbiAgICBkM19nZW9fcGF0aEFyZWEucG9pbnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgICBkM19nZW9fcGF0aEFyZWEucG9pbnQgPSBuZXh0UG9pbnQ7XG4gICAgICB4MDAgPSB4MCA9IHgsIHkwMCA9IHkwID0geTtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIG5leHRQb2ludCh4LCB5KSB7XG4gICAgICBkM19nZW9fcGF0aEFyZWFQb2x5Z29uICs9IHkwICogeCAtIHgwICogeTtcbiAgICAgIHgwID0geCwgeTAgPSB5O1xuICAgIH1cbiAgICBkM19nZW9fcGF0aEFyZWEubGluZUVuZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgbmV4dFBvaW50KHgwMCwgeTAwKTtcbiAgICB9O1xuICB9XG4gIHZhciBkM19nZW9fcGF0aEJvdW5kc1gwLCBkM19nZW9fcGF0aEJvdW5kc1kwLCBkM19nZW9fcGF0aEJvdW5kc1gxLCBkM19nZW9fcGF0aEJvdW5kc1kxO1xuICB2YXIgZDNfZ2VvX3BhdGhCb3VuZHMgPSB7XG4gICAgcG9pbnQ6IGQzX2dlb19wYXRoQm91bmRzUG9pbnQsXG4gICAgbGluZVN0YXJ0OiBkM19ub29wLFxuICAgIGxpbmVFbmQ6IGQzX25vb3AsXG4gICAgcG9seWdvblN0YXJ0OiBkM19ub29wLFxuICAgIHBvbHlnb25FbmQ6IGQzX25vb3BcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX3BhdGhCb3VuZHNQb2ludCh4LCB5KSB7XG4gICAgaWYgKHggPCBkM19nZW9fcGF0aEJvdW5kc1gwKSBkM19nZW9fcGF0aEJvdW5kc1gwID0geDtcbiAgICBpZiAoeCA+IGQzX2dlb19wYXRoQm91bmRzWDEpIGQzX2dlb19wYXRoQm91bmRzWDEgPSB4O1xuICAgIGlmICh5IDwgZDNfZ2VvX3BhdGhCb3VuZHNZMCkgZDNfZ2VvX3BhdGhCb3VuZHNZMCA9IHk7XG4gICAgaWYgKHkgPiBkM19nZW9fcGF0aEJvdW5kc1kxKSBkM19nZW9fcGF0aEJvdW5kc1kxID0geTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fcGF0aEJ1ZmZlcigpIHtcbiAgICB2YXIgcG9pbnRDaXJjbGUgPSBkM19nZW9fcGF0aEJ1ZmZlckNpcmNsZSg0LjUpLCBidWZmZXIgPSBbXTtcbiAgICB2YXIgc3RyZWFtID0ge1xuICAgICAgcG9pbnQ6IHBvaW50LFxuICAgICAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgc3RyZWFtLnBvaW50ID0gcG9pbnRMaW5lU3RhcnQ7XG4gICAgICB9LFxuICAgICAgbGluZUVuZDogbGluZUVuZCxcbiAgICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHN0cmVhbS5saW5lRW5kID0gbGluZUVuZFBvbHlnb247XG4gICAgICB9LFxuICAgICAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHN0cmVhbS5saW5lRW5kID0gbGluZUVuZDtcbiAgICAgICAgc3RyZWFtLnBvaW50ID0gcG9pbnQ7XG4gICAgICB9LFxuICAgICAgcG9pbnRSYWRpdXM6IGZ1bmN0aW9uKF8pIHtcbiAgICAgICAgcG9pbnRDaXJjbGUgPSBkM19nZW9fcGF0aEJ1ZmZlckNpcmNsZShfKTtcbiAgICAgICAgcmV0dXJuIHN0cmVhbTtcbiAgICAgIH0sXG4gICAgICByZXN1bHQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoYnVmZmVyLmxlbmd0aCkge1xuICAgICAgICAgIHZhciByZXN1bHQgPSBidWZmZXIuam9pbihcIlwiKTtcbiAgICAgICAgICBidWZmZXIgPSBbXTtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcbiAgICBmdW5jdGlvbiBwb2ludCh4LCB5KSB7XG4gICAgICBidWZmZXIucHVzaChcIk1cIiwgeCwgXCIsXCIsIHksIHBvaW50Q2lyY2xlKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcG9pbnRMaW5lU3RhcnQoeCwgeSkge1xuICAgICAgYnVmZmVyLnB1c2goXCJNXCIsIHgsIFwiLFwiLCB5KTtcbiAgICAgIHN0cmVhbS5wb2ludCA9IHBvaW50TGluZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcG9pbnRMaW5lKHgsIHkpIHtcbiAgICAgIGJ1ZmZlci5wdXNoKFwiTFwiLCB4LCBcIixcIiwgeSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGxpbmVFbmQoKSB7XG4gICAgICBzdHJlYW0ucG9pbnQgPSBwb2ludDtcbiAgICB9XG4gICAgZnVuY3Rpb24gbGluZUVuZFBvbHlnb24oKSB7XG4gICAgICBidWZmZXIucHVzaChcIlpcIik7XG4gICAgfVxuICAgIHJldHVybiBzdHJlYW07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX3BhdGhCdWZmZXJDaXJjbGUocmFkaXVzKSB7XG4gICAgcmV0dXJuIFwibTAsXCIgKyByYWRpdXMgKyBcImFcIiArIHJhZGl1cyArIFwiLFwiICsgcmFkaXVzICsgXCIgMCAxLDEgMCxcIiArIC0yICogcmFkaXVzICsgXCJhXCIgKyByYWRpdXMgKyBcIixcIiArIHJhZGl1cyArIFwiIDAgMSwxIDAsXCIgKyAyICogcmFkaXVzICsgXCJ6XCI7XG4gIH1cbiAgdmFyIGQzX2dlb19wYXRoQ2VudHJvaWQgPSB7XG4gICAgcG9pbnQ6IGQzX2dlb19wYXRoQ2VudHJvaWRQb2ludCxcbiAgICBsaW5lU3RhcnQ6IGQzX2dlb19wYXRoQ2VudHJvaWRMaW5lU3RhcnQsXG4gICAgbGluZUVuZDogZDNfZ2VvX3BhdGhDZW50cm9pZExpbmVFbmQsXG4gICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgIGQzX2dlb19wYXRoQ2VudHJvaWQubGluZVN0YXJ0ID0gZDNfZ2VvX3BhdGhDZW50cm9pZFJpbmdTdGFydDtcbiAgICB9LFxuICAgIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgZDNfZ2VvX3BhdGhDZW50cm9pZC5wb2ludCA9IGQzX2dlb19wYXRoQ2VudHJvaWRQb2ludDtcbiAgICAgIGQzX2dlb19wYXRoQ2VudHJvaWQubGluZVN0YXJ0ID0gZDNfZ2VvX3BhdGhDZW50cm9pZExpbmVTdGFydDtcbiAgICAgIGQzX2dlb19wYXRoQ2VudHJvaWQubGluZUVuZCA9IGQzX2dlb19wYXRoQ2VudHJvaWRMaW5lRW5kO1xuICAgIH1cbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX3BhdGhDZW50cm9pZFBvaW50KHgsIHkpIHtcbiAgICBkM19nZW9fY2VudHJvaWRYMCArPSB4O1xuICAgIGQzX2dlb19jZW50cm9pZFkwICs9IHk7XG4gICAgKytkM19nZW9fY2VudHJvaWRaMDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fcGF0aENlbnRyb2lkTGluZVN0YXJ0KCkge1xuICAgIHZhciB4MCwgeTA7XG4gICAgZDNfZ2VvX3BhdGhDZW50cm9pZC5wb2ludCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgIGQzX2dlb19wYXRoQ2VudHJvaWQucG9pbnQgPSBuZXh0UG9pbnQ7XG4gICAgICBkM19nZW9fcGF0aENlbnRyb2lkUG9pbnQoeDAgPSB4LCB5MCA9IHkpO1xuICAgIH07XG4gICAgZnVuY3Rpb24gbmV4dFBvaW50KHgsIHkpIHtcbiAgICAgIHZhciBkeCA9IHggLSB4MCwgZHkgPSB5IC0geTAsIHogPSBNYXRoLnNxcnQoZHggKiBkeCArIGR5ICogZHkpO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWDEgKz0geiAqICh4MCArIHgpIC8gMjtcbiAgICAgIGQzX2dlb19jZW50cm9pZFkxICs9IHogKiAoeTAgKyB5KSAvIDI7XG4gICAgICBkM19nZW9fY2VudHJvaWRaMSArPSB6O1xuICAgICAgZDNfZ2VvX3BhdGhDZW50cm9pZFBvaW50KHgwID0geCwgeTAgPSB5KTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX3BhdGhDZW50cm9pZExpbmVFbmQoKSB7XG4gICAgZDNfZ2VvX3BhdGhDZW50cm9pZC5wb2ludCA9IGQzX2dlb19wYXRoQ2VudHJvaWRQb2ludDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fcGF0aENlbnRyb2lkUmluZ1N0YXJ0KCkge1xuICAgIHZhciB4MDAsIHkwMCwgeDAsIHkwO1xuICAgIGQzX2dlb19wYXRoQ2VudHJvaWQucG9pbnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgICBkM19nZW9fcGF0aENlbnRyb2lkLnBvaW50ID0gbmV4dFBvaW50O1xuICAgICAgZDNfZ2VvX3BhdGhDZW50cm9pZFBvaW50KHgwMCA9IHgwID0geCwgeTAwID0geTAgPSB5KTtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIG5leHRQb2ludCh4LCB5KSB7XG4gICAgICB2YXIgZHggPSB4IC0geDAsIGR5ID0geSAtIHkwLCB6ID0gTWF0aC5zcXJ0KGR4ICogZHggKyBkeSAqIGR5KTtcbiAgICAgIGQzX2dlb19jZW50cm9pZFgxICs9IHogKiAoeDAgKyB4KSAvIDI7XG4gICAgICBkM19nZW9fY2VudHJvaWRZMSArPSB6ICogKHkwICsgeSkgLyAyO1xuICAgICAgZDNfZ2VvX2NlbnRyb2lkWjEgKz0gejtcbiAgICAgIHogPSB5MCAqIHggLSB4MCAqIHk7XG4gICAgICBkM19nZW9fY2VudHJvaWRYMiArPSB6ICogKHgwICsgeCk7XG4gICAgICBkM19nZW9fY2VudHJvaWRZMiArPSB6ICogKHkwICsgeSk7XG4gICAgICBkM19nZW9fY2VudHJvaWRaMiArPSB6ICogMztcbiAgICAgIGQzX2dlb19wYXRoQ2VudHJvaWRQb2ludCh4MCA9IHgsIHkwID0geSk7XG4gICAgfVxuICAgIGQzX2dlb19wYXRoQ2VudHJvaWQubGluZUVuZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgbmV4dFBvaW50KHgwMCwgeTAwKTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19wYXRoQ29udGV4dChjb250ZXh0KSB7XG4gICAgdmFyIHBvaW50UmFkaXVzID0gNC41O1xuICAgIHZhciBzdHJlYW0gPSB7XG4gICAgICBwb2ludDogcG9pbnQsXG4gICAgICBsaW5lU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBzdHJlYW0ucG9pbnQgPSBwb2ludExpbmVTdGFydDtcbiAgICAgIH0sXG4gICAgICBsaW5lRW5kOiBsaW5lRW5kLFxuICAgICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgc3RyZWFtLmxpbmVFbmQgPSBsaW5lRW5kUG9seWdvbjtcbiAgICAgIH0sXG4gICAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgc3RyZWFtLmxpbmVFbmQgPSBsaW5lRW5kO1xuICAgICAgICBzdHJlYW0ucG9pbnQgPSBwb2ludDtcbiAgICAgIH0sXG4gICAgICBwb2ludFJhZGl1czogZnVuY3Rpb24oXykge1xuICAgICAgICBwb2ludFJhZGl1cyA9IF87XG4gICAgICAgIHJldHVybiBzdHJlYW07XG4gICAgICB9LFxuICAgICAgcmVzdWx0OiBkM19ub29wXG4gICAgfTtcbiAgICBmdW5jdGlvbiBwb2ludCh4LCB5KSB7XG4gICAgICBjb250ZXh0Lm1vdmVUbyh4LCB5KTtcbiAgICAgIGNvbnRleHQuYXJjKHgsIHksIHBvaW50UmFkaXVzLCAwLCDPhCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHBvaW50TGluZVN0YXJ0KHgsIHkpIHtcbiAgICAgIGNvbnRleHQubW92ZVRvKHgsIHkpO1xuICAgICAgc3RyZWFtLnBvaW50ID0gcG9pbnRMaW5lO1xuICAgIH1cbiAgICBmdW5jdGlvbiBwb2ludExpbmUoeCwgeSkge1xuICAgICAgY29udGV4dC5saW5lVG8oeCwgeSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGxpbmVFbmQoKSB7XG4gICAgICBzdHJlYW0ucG9pbnQgPSBwb2ludDtcbiAgICB9XG4gICAgZnVuY3Rpb24gbGluZUVuZFBvbHlnb24oKSB7XG4gICAgICBjb250ZXh0LmNsb3NlUGF0aCgpO1xuICAgIH1cbiAgICByZXR1cm4gc3RyZWFtO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19yZXNhbXBsZShwcm9qZWN0KSB7XG4gICAgdmFyIM60MiA9IC41LCBjb3NNaW5EaXN0YW5jZSA9IE1hdGguY29zKDMwICogZDNfcmFkaWFucyksIG1heERlcHRoID0gMTY7XG4gICAgZnVuY3Rpb24gcmVzYW1wbGUoc3RyZWFtKSB7XG4gICAgICByZXR1cm4gKG1heERlcHRoID8gcmVzYW1wbGVSZWN1cnNpdmUgOiByZXNhbXBsZU5vbmUpKHN0cmVhbSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJlc2FtcGxlTm9uZShzdHJlYW0pIHtcbiAgICAgIHJldHVybiBkM19nZW9fdHJhbnNmb3JtUG9pbnQoc3RyZWFtLCBmdW5jdGlvbih4LCB5KSB7XG4gICAgICAgIHggPSBwcm9qZWN0KHgsIHkpO1xuICAgICAgICBzdHJlYW0ucG9pbnQoeFswXSwgeFsxXSk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcmVzYW1wbGVSZWN1cnNpdmUoc3RyZWFtKSB7XG4gICAgICB2YXIgzrswMCwgz4YwMCwgeDAwLCB5MDAsIGEwMCwgYjAwLCBjMDAsIM67MCwgeDAsIHkwLCBhMCwgYjAsIGMwO1xuICAgICAgdmFyIHJlc2FtcGxlID0ge1xuICAgICAgICBwb2ludDogcG9pbnQsXG4gICAgICAgIGxpbmVTdGFydDogbGluZVN0YXJ0LFxuICAgICAgICBsaW5lRW5kOiBsaW5lRW5kLFxuICAgICAgICBwb2x5Z29uU3RhcnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHN0cmVhbS5wb2x5Z29uU3RhcnQoKTtcbiAgICAgICAgICByZXNhbXBsZS5saW5lU3RhcnQgPSByaW5nU3RhcnQ7XG4gICAgICAgIH0sXG4gICAgICAgIHBvbHlnb25FbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHN0cmVhbS5wb2x5Z29uRW5kKCk7XG4gICAgICAgICAgcmVzYW1wbGUubGluZVN0YXJ0ID0gbGluZVN0YXJ0O1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgZnVuY3Rpb24gcG9pbnQoeCwgeSkge1xuICAgICAgICB4ID0gcHJvamVjdCh4LCB5KTtcbiAgICAgICAgc3RyZWFtLnBvaW50KHhbMF0sIHhbMV0pO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gbGluZVN0YXJ0KCkge1xuICAgICAgICB4MCA9IE5hTjtcbiAgICAgICAgcmVzYW1wbGUucG9pbnQgPSBsaW5lUG9pbnQ7XG4gICAgICAgIHN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGxpbmVQb2ludCjOuywgz4YpIHtcbiAgICAgICAgdmFyIGMgPSBkM19nZW9fY2FydGVzaWFuKFsgzrssIM+GIF0pLCBwID0gcHJvamVjdCjOuywgz4YpO1xuICAgICAgICByZXNhbXBsZUxpbmVUbyh4MCwgeTAsIM67MCwgYTAsIGIwLCBjMCwgeDAgPSBwWzBdLCB5MCA9IHBbMV0sIM67MCA9IM67LCBhMCA9IGNbMF0sIGIwID0gY1sxXSwgYzAgPSBjWzJdLCBtYXhEZXB0aCwgc3RyZWFtKTtcbiAgICAgICAgc3RyZWFtLnBvaW50KHgwLCB5MCk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBsaW5lRW5kKCkge1xuICAgICAgICByZXNhbXBsZS5wb2ludCA9IHBvaW50O1xuICAgICAgICBzdHJlYW0ubGluZUVuZCgpO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gcmluZ1N0YXJ0KCkge1xuICAgICAgICBsaW5lU3RhcnQoKTtcbiAgICAgICAgcmVzYW1wbGUucG9pbnQgPSByaW5nUG9pbnQ7XG4gICAgICAgIHJlc2FtcGxlLmxpbmVFbmQgPSByaW5nRW5kO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gcmluZ1BvaW50KM67LCDPhikge1xuICAgICAgICBsaW5lUG9pbnQozrswMCA9IM67LCDPhjAwID0gz4YpLCB4MDAgPSB4MCwgeTAwID0geTAsIGEwMCA9IGEwLCBiMDAgPSBiMCwgYzAwID0gYzA7XG4gICAgICAgIHJlc2FtcGxlLnBvaW50ID0gbGluZVBvaW50O1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gcmluZ0VuZCgpIHtcbiAgICAgICAgcmVzYW1wbGVMaW5lVG8oeDAsIHkwLCDOuzAsIGEwLCBiMCwgYzAsIHgwMCwgeTAwLCDOuzAwLCBhMDAsIGIwMCwgYzAwLCBtYXhEZXB0aCwgc3RyZWFtKTtcbiAgICAgICAgcmVzYW1wbGUubGluZUVuZCA9IGxpbmVFbmQ7XG4gICAgICAgIGxpbmVFbmQoKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXNhbXBsZTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcmVzYW1wbGVMaW5lVG8oeDAsIHkwLCDOuzAsIGEwLCBiMCwgYzAsIHgxLCB5MSwgzrsxLCBhMSwgYjEsIGMxLCBkZXB0aCwgc3RyZWFtKSB7XG4gICAgICB2YXIgZHggPSB4MSAtIHgwLCBkeSA9IHkxIC0geTAsIGQyID0gZHggKiBkeCArIGR5ICogZHk7XG4gICAgICBpZiAoZDIgPiA0ICogzrQyICYmIGRlcHRoLS0pIHtcbiAgICAgICAgdmFyIGEgPSBhMCArIGExLCBiID0gYjAgKyBiMSwgYyA9IGMwICsgYzEsIG0gPSBNYXRoLnNxcnQoYSAqIGEgKyBiICogYiArIGMgKiBjKSwgz4YyID0gTWF0aC5hc2luKGMgLz0gbSksIM67MiA9IGFicyhhYnMoYykgLSAxKSA8IM61IHx8IGFicyjOuzAgLSDOuzEpIDwgzrUgPyAozrswICsgzrsxKSAvIDIgOiBNYXRoLmF0YW4yKGIsIGEpLCBwID0gcHJvamVjdCjOuzIsIM+GMiksIHgyID0gcFswXSwgeTIgPSBwWzFdLCBkeDIgPSB4MiAtIHgwLCBkeTIgPSB5MiAtIHkwLCBkeiA9IGR5ICogZHgyIC0gZHggKiBkeTI7XG4gICAgICAgIGlmIChkeiAqIGR6IC8gZDIgPiDOtDIgfHwgYWJzKChkeCAqIGR4MiArIGR5ICogZHkyKSAvIGQyIC0gLjUpID4gLjMgfHwgYTAgKiBhMSArIGIwICogYjEgKyBjMCAqIGMxIDwgY29zTWluRGlzdGFuY2UpIHtcbiAgICAgICAgICByZXNhbXBsZUxpbmVUbyh4MCwgeTAsIM67MCwgYTAsIGIwLCBjMCwgeDIsIHkyLCDOuzIsIGEgLz0gbSwgYiAvPSBtLCBjLCBkZXB0aCwgc3RyZWFtKTtcbiAgICAgICAgICBzdHJlYW0ucG9pbnQoeDIsIHkyKTtcbiAgICAgICAgICByZXNhbXBsZUxpbmVUbyh4MiwgeTIsIM67MiwgYSwgYiwgYywgeDEsIHkxLCDOuzEsIGExLCBiMSwgYzEsIGRlcHRoLCBzdHJlYW0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHJlc2FtcGxlLnByZWNpc2lvbiA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIE1hdGguc3FydCjOtDIpO1xuICAgICAgbWF4RGVwdGggPSAozrQyID0gXyAqIF8pID4gMCAmJiAxNjtcbiAgICAgIHJldHVybiByZXNhbXBsZTtcbiAgICB9O1xuICAgIHJldHVybiByZXNhbXBsZTtcbiAgfVxuICBkMy5nZW8ucGF0aCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBwb2ludFJhZGl1cyA9IDQuNSwgcHJvamVjdGlvbiwgY29udGV4dCwgcHJvamVjdFN0cmVhbSwgY29udGV4dFN0cmVhbSwgY2FjaGVTdHJlYW07XG4gICAgZnVuY3Rpb24gcGF0aChvYmplY3QpIHtcbiAgICAgIGlmIChvYmplY3QpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBwb2ludFJhZGl1cyA9PT0gXCJmdW5jdGlvblwiKSBjb250ZXh0U3RyZWFtLnBvaW50UmFkaXVzKCtwb2ludFJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgICAgICAgaWYgKCFjYWNoZVN0cmVhbSB8fCAhY2FjaGVTdHJlYW0udmFsaWQpIGNhY2hlU3RyZWFtID0gcHJvamVjdFN0cmVhbShjb250ZXh0U3RyZWFtKTtcbiAgICAgICAgZDMuZ2VvLnN0cmVhbShvYmplY3QsIGNhY2hlU3RyZWFtKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZXh0U3RyZWFtLnJlc3VsdCgpO1xuICAgIH1cbiAgICBwYXRoLmFyZWEgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICAgIGQzX2dlb19wYXRoQXJlYVN1bSA9IDA7XG4gICAgICBkMy5nZW8uc3RyZWFtKG9iamVjdCwgcHJvamVjdFN0cmVhbShkM19nZW9fcGF0aEFyZWEpKTtcbiAgICAgIHJldHVybiBkM19nZW9fcGF0aEFyZWFTdW07XG4gICAgfTtcbiAgICBwYXRoLmNlbnRyb2lkID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgICBkM19nZW9fY2VudHJvaWRYMCA9IGQzX2dlb19jZW50cm9pZFkwID0gZDNfZ2VvX2NlbnRyb2lkWjAgPSBkM19nZW9fY2VudHJvaWRYMSA9IGQzX2dlb19jZW50cm9pZFkxID0gZDNfZ2VvX2NlbnRyb2lkWjEgPSBkM19nZW9fY2VudHJvaWRYMiA9IGQzX2dlb19jZW50cm9pZFkyID0gZDNfZ2VvX2NlbnRyb2lkWjIgPSAwO1xuICAgICAgZDMuZ2VvLnN0cmVhbShvYmplY3QsIHByb2plY3RTdHJlYW0oZDNfZ2VvX3BhdGhDZW50cm9pZCkpO1xuICAgICAgcmV0dXJuIGQzX2dlb19jZW50cm9pZFoyID8gWyBkM19nZW9fY2VudHJvaWRYMiAvIGQzX2dlb19jZW50cm9pZFoyLCBkM19nZW9fY2VudHJvaWRZMiAvIGQzX2dlb19jZW50cm9pZFoyIF0gOiBkM19nZW9fY2VudHJvaWRaMSA/IFsgZDNfZ2VvX2NlbnRyb2lkWDEgLyBkM19nZW9fY2VudHJvaWRaMSwgZDNfZ2VvX2NlbnRyb2lkWTEgLyBkM19nZW9fY2VudHJvaWRaMSBdIDogZDNfZ2VvX2NlbnRyb2lkWjAgPyBbIGQzX2dlb19jZW50cm9pZFgwIC8gZDNfZ2VvX2NlbnRyb2lkWjAsIGQzX2dlb19jZW50cm9pZFkwIC8gZDNfZ2VvX2NlbnRyb2lkWjAgXSA6IFsgTmFOLCBOYU4gXTtcbiAgICB9O1xuICAgIHBhdGguYm91bmRzID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgICBkM19nZW9fcGF0aEJvdW5kc1gxID0gZDNfZ2VvX3BhdGhCb3VuZHNZMSA9IC0oZDNfZ2VvX3BhdGhCb3VuZHNYMCA9IGQzX2dlb19wYXRoQm91bmRzWTAgPSBJbmZpbml0eSk7XG4gICAgICBkMy5nZW8uc3RyZWFtKG9iamVjdCwgcHJvamVjdFN0cmVhbShkM19nZW9fcGF0aEJvdW5kcykpO1xuICAgICAgcmV0dXJuIFsgWyBkM19nZW9fcGF0aEJvdW5kc1gwLCBkM19nZW9fcGF0aEJvdW5kc1kwIF0sIFsgZDNfZ2VvX3BhdGhCb3VuZHNYMSwgZDNfZ2VvX3BhdGhCb3VuZHNZMSBdIF07XG4gICAgfTtcbiAgICBwYXRoLnByb2plY3Rpb24gPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBwcm9qZWN0aW9uO1xuICAgICAgcHJvamVjdFN0cmVhbSA9IChwcm9qZWN0aW9uID0gXykgPyBfLnN0cmVhbSB8fCBkM19nZW9fcGF0aFByb2plY3RTdHJlYW0oXykgOiBkM19pZGVudGl0eTtcbiAgICAgIHJldHVybiByZXNldCgpO1xuICAgIH07XG4gICAgcGF0aC5jb250ZXh0ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gY29udGV4dDtcbiAgICAgIGNvbnRleHRTdHJlYW0gPSAoY29udGV4dCA9IF8pID09IG51bGwgPyBuZXcgZDNfZ2VvX3BhdGhCdWZmZXIoKSA6IG5ldyBkM19nZW9fcGF0aENvbnRleHQoXyk7XG4gICAgICBpZiAodHlwZW9mIHBvaW50UmFkaXVzICE9PSBcImZ1bmN0aW9uXCIpIGNvbnRleHRTdHJlYW0ucG9pbnRSYWRpdXMocG9pbnRSYWRpdXMpO1xuICAgICAgcmV0dXJuIHJlc2V0KCk7XG4gICAgfTtcbiAgICBwYXRoLnBvaW50UmFkaXVzID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcG9pbnRSYWRpdXM7XG4gICAgICBwb2ludFJhZGl1cyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBfIDogKGNvbnRleHRTdHJlYW0ucG9pbnRSYWRpdXMoK18pLCArXyk7XG4gICAgICByZXR1cm4gcGF0aDtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIHJlc2V0KCkge1xuICAgICAgY2FjaGVTdHJlYW0gPSBudWxsO1xuICAgICAgcmV0dXJuIHBhdGg7XG4gICAgfVxuICAgIHJldHVybiBwYXRoLnByb2plY3Rpb24oZDMuZ2VvLmFsYmVyc1VzYSgpKS5jb250ZXh0KG51bGwpO1xuICB9O1xuICBmdW5jdGlvbiBkM19nZW9fcGF0aFByb2plY3RTdHJlYW0ocHJvamVjdCkge1xuICAgIHZhciByZXNhbXBsZSA9IGQzX2dlb19yZXNhbXBsZShmdW5jdGlvbih4LCB5KSB7XG4gICAgICByZXR1cm4gcHJvamVjdChbIHggKiBkM19kZWdyZWVzLCB5ICogZDNfZGVncmVlcyBdKTtcbiAgICB9KTtcbiAgICByZXR1cm4gZnVuY3Rpb24oc3RyZWFtKSB7XG4gICAgICByZXR1cm4gZDNfZ2VvX3Byb2plY3Rpb25SYWRpYW5zKHJlc2FtcGxlKHN0cmVhbSkpO1xuICAgIH07XG4gIH1cbiAgZDMuZ2VvLnRyYW5zZm9ybSA9IGZ1bmN0aW9uKG1ldGhvZHMpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc3RyZWFtOiBmdW5jdGlvbihzdHJlYW0pIHtcbiAgICAgICAgdmFyIHRyYW5zZm9ybSA9IG5ldyBkM19nZW9fdHJhbnNmb3JtKHN0cmVhbSk7XG4gICAgICAgIGZvciAodmFyIGsgaW4gbWV0aG9kcykgdHJhbnNmb3JtW2tdID0gbWV0aG9kc1trXTtcbiAgICAgICAgcmV0dXJuIHRyYW5zZm9ybTtcbiAgICAgIH1cbiAgICB9O1xuICB9O1xuICBmdW5jdGlvbiBkM19nZW9fdHJhbnNmb3JtKHN0cmVhbSkge1xuICAgIHRoaXMuc3RyZWFtID0gc3RyZWFtO1xuICB9XG4gIGQzX2dlb190cmFuc2Zvcm0ucHJvdG90eXBlID0ge1xuICAgIHBvaW50OiBmdW5jdGlvbih4LCB5KSB7XG4gICAgICB0aGlzLnN0cmVhbS5wb2ludCh4LCB5KTtcbiAgICB9LFxuICAgIHNwaGVyZTogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLnN0cmVhbS5zcGhlcmUoKTtcbiAgICB9LFxuICAgIGxpbmVTdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLnN0cmVhbS5saW5lU3RhcnQoKTtcbiAgICB9LFxuICAgIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5zdHJlYW0ubGluZUVuZCgpO1xuICAgIH0sXG4gICAgcG9seWdvblN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuc3RyZWFtLnBvbHlnb25TdGFydCgpO1xuICAgIH0sXG4gICAgcG9seWdvbkVuZDogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLnN0cmVhbS5wb2x5Z29uRW5kKCk7XG4gICAgfVxuICB9O1xuICBmdW5jdGlvbiBkM19nZW9fdHJhbnNmb3JtUG9pbnQoc3RyZWFtLCBwb2ludCkge1xuICAgIHJldHVybiB7XG4gICAgICBwb2ludDogcG9pbnQsXG4gICAgICBzcGhlcmU6IGZ1bmN0aW9uKCkge1xuICAgICAgICBzdHJlYW0uc3BoZXJlKCk7XG4gICAgICB9LFxuICAgICAgbGluZVN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgc3RyZWFtLmxpbmVTdGFydCgpO1xuICAgICAgfSxcbiAgICAgIGxpbmVFbmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICBzdHJlYW0ubGluZUVuZCgpO1xuICAgICAgfSxcbiAgICAgIHBvbHlnb25TdGFydDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHN0cmVhbS5wb2x5Z29uU3RhcnQoKTtcbiAgICAgIH0sXG4gICAgICBwb2x5Z29uRW5kOiBmdW5jdGlvbigpIHtcbiAgICAgICAgc3RyZWFtLnBvbHlnb25FbmQoKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG4gIGQzLmdlby5wcm9qZWN0aW9uID0gZDNfZ2VvX3Byb2plY3Rpb247XG4gIGQzLmdlby5wcm9qZWN0aW9uTXV0YXRvciA9IGQzX2dlb19wcm9qZWN0aW9uTXV0YXRvcjtcbiAgZnVuY3Rpb24gZDNfZ2VvX3Byb2plY3Rpb24ocHJvamVjdCkge1xuICAgIHJldHVybiBkM19nZW9fcHJvamVjdGlvbk11dGF0b3IoZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gcHJvamVjdDtcbiAgICB9KSgpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19wcm9qZWN0aW9uTXV0YXRvcihwcm9qZWN0QXQpIHtcbiAgICB2YXIgcHJvamVjdCwgcm90YXRlLCBwcm9qZWN0Um90YXRlLCBwcm9qZWN0UmVzYW1wbGUgPSBkM19nZW9fcmVzYW1wbGUoZnVuY3Rpb24oeCwgeSkge1xuICAgICAgeCA9IHByb2plY3QoeCwgeSk7XG4gICAgICByZXR1cm4gWyB4WzBdICogayArIM60eCwgzrR5IC0geFsxXSAqIGsgXTtcbiAgICB9KSwgayA9IDE1MCwgeCA9IDQ4MCwgeSA9IDI1MCwgzrsgPSAwLCDPhiA9IDAsIM60zrsgPSAwLCDOtM+GID0gMCwgzrTOsyA9IDAsIM60eCwgzrR5LCBwcmVjbGlwID0gZDNfZ2VvX2NsaXBBbnRpbWVyaWRpYW4sIHBvc3RjbGlwID0gZDNfaWRlbnRpdHksIGNsaXBBbmdsZSA9IG51bGwsIGNsaXBFeHRlbnQgPSBudWxsLCBzdHJlYW07XG4gICAgZnVuY3Rpb24gcHJvamVjdGlvbihwb2ludCkge1xuICAgICAgcG9pbnQgPSBwcm9qZWN0Um90YXRlKHBvaW50WzBdICogZDNfcmFkaWFucywgcG9pbnRbMV0gKiBkM19yYWRpYW5zKTtcbiAgICAgIHJldHVybiBbIHBvaW50WzBdICogayArIM60eCwgzrR5IC0gcG9pbnRbMV0gKiBrIF07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGludmVydChwb2ludCkge1xuICAgICAgcG9pbnQgPSBwcm9qZWN0Um90YXRlLmludmVydCgocG9pbnRbMF0gLSDOtHgpIC8gaywgKM60eSAtIHBvaW50WzFdKSAvIGspO1xuICAgICAgcmV0dXJuIHBvaW50ICYmIFsgcG9pbnRbMF0gKiBkM19kZWdyZWVzLCBwb2ludFsxXSAqIGQzX2RlZ3JlZXMgXTtcbiAgICB9XG4gICAgcHJvamVjdGlvbi5zdHJlYW0gPSBmdW5jdGlvbihvdXRwdXQpIHtcbiAgICAgIGlmIChzdHJlYW0pIHN0cmVhbS52YWxpZCA9IGZhbHNlO1xuICAgICAgc3RyZWFtID0gZDNfZ2VvX3Byb2plY3Rpb25SYWRpYW5zKHByZWNsaXAocm90YXRlLCBwcm9qZWN0UmVzYW1wbGUocG9zdGNsaXAob3V0cHV0KSkpKTtcbiAgICAgIHN0cmVhbS52YWxpZCA9IHRydWU7XG4gICAgICByZXR1cm4gc3RyZWFtO1xuICAgIH07XG4gICAgcHJvamVjdGlvbi5jbGlwQW5nbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBjbGlwQW5nbGU7XG4gICAgICBwcmVjbGlwID0gXyA9PSBudWxsID8gKGNsaXBBbmdsZSA9IF8sIGQzX2dlb19jbGlwQW50aW1lcmlkaWFuKSA6IGQzX2dlb19jbGlwQ2lyY2xlKChjbGlwQW5nbGUgPSArXykgKiBkM19yYWRpYW5zKTtcbiAgICAgIHJldHVybiBpbnZhbGlkYXRlKCk7XG4gICAgfTtcbiAgICBwcm9qZWN0aW9uLmNsaXBFeHRlbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBjbGlwRXh0ZW50O1xuICAgICAgY2xpcEV4dGVudCA9IF87XG4gICAgICBwb3N0Y2xpcCA9IF8gPyBkM19nZW9fY2xpcEV4dGVudChfWzBdWzBdLCBfWzBdWzFdLCBfWzFdWzBdLCBfWzFdWzFdKSA6IGQzX2lkZW50aXR5O1xuICAgICAgcmV0dXJuIGludmFsaWRhdGUoKTtcbiAgICB9O1xuICAgIHByb2plY3Rpb24uc2NhbGUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBrO1xuICAgICAgayA9ICtfO1xuICAgICAgcmV0dXJuIHJlc2V0KCk7XG4gICAgfTtcbiAgICBwcm9qZWN0aW9uLnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFsgeCwgeSBdO1xuICAgICAgeCA9ICtfWzBdO1xuICAgICAgeSA9ICtfWzFdO1xuICAgICAgcmV0dXJuIHJlc2V0KCk7XG4gICAgfTtcbiAgICBwcm9qZWN0aW9uLmNlbnRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFsgzrsgKiBkM19kZWdyZWVzLCDPhiAqIGQzX2RlZ3JlZXMgXTtcbiAgICAgIM67ID0gX1swXSAlIDM2MCAqIGQzX3JhZGlhbnM7XG4gICAgICDPhiA9IF9bMV0gJSAzNjAgKiBkM19yYWRpYW5zO1xuICAgICAgcmV0dXJuIHJlc2V0KCk7XG4gICAgfTtcbiAgICBwcm9qZWN0aW9uLnJvdGF0ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFsgzrTOuyAqIGQzX2RlZ3JlZXMsIM60z4YgKiBkM19kZWdyZWVzLCDOtM6zICogZDNfZGVncmVlcyBdO1xuICAgICAgzrTOuyA9IF9bMF0gJSAzNjAgKiBkM19yYWRpYW5zO1xuICAgICAgzrTPhiA9IF9bMV0gJSAzNjAgKiBkM19yYWRpYW5zO1xuICAgICAgzrTOsyA9IF8ubGVuZ3RoID4gMiA/IF9bMl0gJSAzNjAgKiBkM19yYWRpYW5zIDogMDtcbiAgICAgIHJldHVybiByZXNldCgpO1xuICAgIH07XG4gICAgZDMucmViaW5kKHByb2plY3Rpb24sIHByb2plY3RSZXNhbXBsZSwgXCJwcmVjaXNpb25cIik7XG4gICAgZnVuY3Rpb24gcmVzZXQoKSB7XG4gICAgICBwcm9qZWN0Um90YXRlID0gZDNfZ2VvX2NvbXBvc2Uocm90YXRlID0gZDNfZ2VvX3JvdGF0aW9uKM60zrssIM60z4YsIM60zrMpLCBwcm9qZWN0KTtcbiAgICAgIHZhciBjZW50ZXIgPSBwcm9qZWN0KM67LCDPhik7XG4gICAgICDOtHggPSB4IC0gY2VudGVyWzBdICogaztcbiAgICAgIM60eSA9IHkgKyBjZW50ZXJbMV0gKiBrO1xuICAgICAgcmV0dXJuIGludmFsaWRhdGUoKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gaW52YWxpZGF0ZSgpIHtcbiAgICAgIGlmIChzdHJlYW0pIHN0cmVhbS52YWxpZCA9IGZhbHNlLCBzdHJlYW0gPSBudWxsO1xuICAgICAgcmV0dXJuIHByb2plY3Rpb247XG4gICAgfVxuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHByb2plY3QgPSBwcm9qZWN0QXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIHByb2plY3Rpb24uaW52ZXJ0ID0gcHJvamVjdC5pbnZlcnQgJiYgaW52ZXJ0O1xuICAgICAgcmV0dXJuIHJlc2V0KCk7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fcHJvamVjdGlvblJhZGlhbnMoc3RyZWFtKSB7XG4gICAgcmV0dXJuIGQzX2dlb190cmFuc2Zvcm1Qb2ludChzdHJlYW0sIGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgIHN0cmVhbS5wb2ludCh4ICogZDNfcmFkaWFucywgeSAqIGQzX3JhZGlhbnMpO1xuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19lcXVpcmVjdGFuZ3VsYXIozrssIM+GKSB7XG4gICAgcmV0dXJuIFsgzrssIM+GIF07XG4gIH1cbiAgKGQzLmdlby5lcXVpcmVjdGFuZ3VsYXIgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfZ2VvX3Byb2plY3Rpb24oZDNfZ2VvX2VxdWlyZWN0YW5ndWxhcik7XG4gIH0pLnJhdyA9IGQzX2dlb19lcXVpcmVjdGFuZ3VsYXIuaW52ZXJ0ID0gZDNfZ2VvX2VxdWlyZWN0YW5ndWxhcjtcbiAgZDMuZ2VvLnJvdGF0aW9uID0gZnVuY3Rpb24ocm90YXRlKSB7XG4gICAgcm90YXRlID0gZDNfZ2VvX3JvdGF0aW9uKHJvdGF0ZVswXSAlIDM2MCAqIGQzX3JhZGlhbnMsIHJvdGF0ZVsxXSAqIGQzX3JhZGlhbnMsIHJvdGF0ZS5sZW5ndGggPiAyID8gcm90YXRlWzJdICogZDNfcmFkaWFucyA6IDApO1xuICAgIGZ1bmN0aW9uIGZvcndhcmQoY29vcmRpbmF0ZXMpIHtcbiAgICAgIGNvb3JkaW5hdGVzID0gcm90YXRlKGNvb3JkaW5hdGVzWzBdICogZDNfcmFkaWFucywgY29vcmRpbmF0ZXNbMV0gKiBkM19yYWRpYW5zKTtcbiAgICAgIHJldHVybiBjb29yZGluYXRlc1swXSAqPSBkM19kZWdyZWVzLCBjb29yZGluYXRlc1sxXSAqPSBkM19kZWdyZWVzLCBjb29yZGluYXRlcztcbiAgICB9XG4gICAgZm9yd2FyZC5pbnZlcnQgPSBmdW5jdGlvbihjb29yZGluYXRlcykge1xuICAgICAgY29vcmRpbmF0ZXMgPSByb3RhdGUuaW52ZXJ0KGNvb3JkaW5hdGVzWzBdICogZDNfcmFkaWFucywgY29vcmRpbmF0ZXNbMV0gKiBkM19yYWRpYW5zKTtcbiAgICAgIHJldHVybiBjb29yZGluYXRlc1swXSAqPSBkM19kZWdyZWVzLCBjb29yZGluYXRlc1sxXSAqPSBkM19kZWdyZWVzLCBjb29yZGluYXRlcztcbiAgICB9O1xuICAgIHJldHVybiBmb3J3YXJkO1xuICB9O1xuICBmdW5jdGlvbiBkM19nZW9faWRlbnRpdHlSb3RhdGlvbijOuywgz4YpIHtcbiAgICByZXR1cm4gWyDOuyA+IM+AID8gzrsgLSDPhCA6IM67IDwgLc+AID8gzrsgKyDPhCA6IM67LCDPhiBdO1xuICB9XG4gIGQzX2dlb19pZGVudGl0eVJvdGF0aW9uLmludmVydCA9IGQzX2dlb19lcXVpcmVjdGFuZ3VsYXI7XG4gIGZ1bmN0aW9uIGQzX2dlb19yb3RhdGlvbijOtM67LCDOtM+GLCDOtM6zKSB7XG4gICAgcmV0dXJuIM60zrsgPyDOtM+GIHx8IM60zrMgPyBkM19nZW9fY29tcG9zZShkM19nZW9fcm90YXRpb27OuyjOtM67KSwgZDNfZ2VvX3JvdGF0aW9uz4bOsyjOtM+GLCDOtM6zKSkgOiBkM19nZW9fcm90YXRpb27OuyjOtM67KSA6IM60z4YgfHwgzrTOsyA/IGQzX2dlb19yb3RhdGlvbs+GzrMozrTPhiwgzrTOsykgOiBkM19nZW9faWRlbnRpdHlSb3RhdGlvbjtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fZm9yd2FyZFJvdGF0aW9uzrsozrTOuykge1xuICAgIHJldHVybiBmdW5jdGlvbijOuywgz4YpIHtcbiAgICAgIHJldHVybiDOuyArPSDOtM67LCBbIM67ID4gz4AgPyDOuyAtIM+EIDogzrsgPCAtz4AgPyDOuyArIM+EIDogzrssIM+GIF07XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fcm90YXRpb27OuyjOtM67KSB7XG4gICAgdmFyIHJvdGF0aW9uID0gZDNfZ2VvX2ZvcndhcmRSb3RhdGlvbs67KM60zrspO1xuICAgIHJvdGF0aW9uLmludmVydCA9IGQzX2dlb19mb3J3YXJkUm90YXRpb27OuygtzrTOuyk7XG4gICAgcmV0dXJuIHJvdGF0aW9uO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb19yb3RhdGlvbs+GzrMozrTPhiwgzrTOsykge1xuICAgIHZhciBjb3POtM+GID0gTWF0aC5jb3MozrTPhiksIHNpbs60z4YgPSBNYXRoLnNpbijOtM+GKSwgY29zzrTOsyA9IE1hdGguY29zKM60zrMpLCBzaW7OtM6zID0gTWF0aC5zaW4ozrTOsyk7XG4gICAgZnVuY3Rpb24gcm90YXRpb24ozrssIM+GKSB7XG4gICAgICB2YXIgY29zz4YgPSBNYXRoLmNvcyjPhiksIHggPSBNYXRoLmNvcyjOuykgKiBjb3PPhiwgeSA9IE1hdGguc2luKM67KSAqIGNvc8+GLCB6ID0gTWF0aC5zaW4oz4YpLCBrID0geiAqIGNvc860z4YgKyB4ICogc2luzrTPhjtcbiAgICAgIHJldHVybiBbIE1hdGguYXRhbjIoeSAqIGNvc860zrMgLSBrICogc2luzrTOsywgeCAqIGNvc860z4YgLSB6ICogc2luzrTPhiksIGQzX2FzaW4oayAqIGNvc860zrMgKyB5ICogc2luzrTOsykgXTtcbiAgICB9XG4gICAgcm90YXRpb24uaW52ZXJ0ID0gZnVuY3Rpb24ozrssIM+GKSB7XG4gICAgICB2YXIgY29zz4YgPSBNYXRoLmNvcyjPhiksIHggPSBNYXRoLmNvcyjOuykgKiBjb3PPhiwgeSA9IE1hdGguc2luKM67KSAqIGNvc8+GLCB6ID0gTWF0aC5zaW4oz4YpLCBrID0geiAqIGNvc860zrMgLSB5ICogc2luzrTOsztcbiAgICAgIHJldHVybiBbIE1hdGguYXRhbjIoeSAqIGNvc860zrMgKyB6ICogc2luzrTOsywgeCAqIGNvc860z4YgKyBrICogc2luzrTPhiksIGQzX2FzaW4oayAqIGNvc860z4YgLSB4ICogc2luzrTPhikgXTtcbiAgICB9O1xuICAgIHJldHVybiByb3RhdGlvbjtcbiAgfVxuICBkMy5nZW8uY2lyY2xlID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIG9yaWdpbiA9IFsgMCwgMCBdLCBhbmdsZSwgcHJlY2lzaW9uID0gNiwgaW50ZXJwb2xhdGU7XG4gICAgZnVuY3Rpb24gY2lyY2xlKCkge1xuICAgICAgdmFyIGNlbnRlciA9IHR5cGVvZiBvcmlnaW4gPT09IFwiZnVuY3Rpb25cIiA/IG9yaWdpbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpIDogb3JpZ2luLCByb3RhdGUgPSBkM19nZW9fcm90YXRpb24oLWNlbnRlclswXSAqIGQzX3JhZGlhbnMsIC1jZW50ZXJbMV0gKiBkM19yYWRpYW5zLCAwKS5pbnZlcnQsIHJpbmcgPSBbXTtcbiAgICAgIGludGVycG9sYXRlKG51bGwsIG51bGwsIDEsIHtcbiAgICAgICAgcG9pbnQ6IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgICAgICByaW5nLnB1c2goeCA9IHJvdGF0ZSh4LCB5KSk7XG4gICAgICAgICAgeFswXSAqPSBkM19kZWdyZWVzLCB4WzFdICo9IGQzX2RlZ3JlZXM7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogXCJQb2x5Z29uXCIsXG4gICAgICAgIGNvb3JkaW5hdGVzOiBbIHJpbmcgXVxuICAgICAgfTtcbiAgICB9XG4gICAgY2lyY2xlLm9yaWdpbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG9yaWdpbjtcbiAgICAgIG9yaWdpbiA9IHg7XG4gICAgICByZXR1cm4gY2lyY2xlO1xuICAgIH07XG4gICAgY2lyY2xlLmFuZ2xlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gYW5nbGU7XG4gICAgICBpbnRlcnBvbGF0ZSA9IGQzX2dlb19jaXJjbGVJbnRlcnBvbGF0ZSgoYW5nbGUgPSAreCkgKiBkM19yYWRpYW5zLCBwcmVjaXNpb24gKiBkM19yYWRpYW5zKTtcbiAgICAgIHJldHVybiBjaXJjbGU7XG4gICAgfTtcbiAgICBjaXJjbGUucHJlY2lzaW9uID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcHJlY2lzaW9uO1xuICAgICAgaW50ZXJwb2xhdGUgPSBkM19nZW9fY2lyY2xlSW50ZXJwb2xhdGUoYW5nbGUgKiBkM19yYWRpYW5zLCAocHJlY2lzaW9uID0gK18pICogZDNfcmFkaWFucyk7XG4gICAgICByZXR1cm4gY2lyY2xlO1xuICAgIH07XG4gICAgcmV0dXJuIGNpcmNsZS5hbmdsZSg5MCk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb19jaXJjbGVJbnRlcnBvbGF0ZShyYWRpdXMsIHByZWNpc2lvbikge1xuICAgIHZhciBjciA9IE1hdGguY29zKHJhZGl1cyksIHNyID0gTWF0aC5zaW4ocmFkaXVzKTtcbiAgICByZXR1cm4gZnVuY3Rpb24oZnJvbSwgdG8sIGRpcmVjdGlvbiwgbGlzdGVuZXIpIHtcbiAgICAgIHZhciBzdGVwID0gZGlyZWN0aW9uICogcHJlY2lzaW9uO1xuICAgICAgaWYgKGZyb20gIT0gbnVsbCkge1xuICAgICAgICBmcm9tID0gZDNfZ2VvX2NpcmNsZUFuZ2xlKGNyLCBmcm9tKTtcbiAgICAgICAgdG8gPSBkM19nZW9fY2lyY2xlQW5nbGUoY3IsIHRvKTtcbiAgICAgICAgaWYgKGRpcmVjdGlvbiA+IDAgPyBmcm9tIDwgdG8gOiBmcm9tID4gdG8pIGZyb20gKz0gZGlyZWN0aW9uICogz4Q7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmcm9tID0gcmFkaXVzICsgZGlyZWN0aW9uICogz4Q7XG4gICAgICAgIHRvID0gcmFkaXVzIC0gLjUgKiBzdGVwO1xuICAgICAgfVxuICAgICAgZm9yICh2YXIgcG9pbnQsIHQgPSBmcm9tOyBkaXJlY3Rpb24gPiAwID8gdCA+IHRvIDogdCA8IHRvOyB0IC09IHN0ZXApIHtcbiAgICAgICAgbGlzdGVuZXIucG9pbnQoKHBvaW50ID0gZDNfZ2VvX3NwaGVyaWNhbChbIGNyLCAtc3IgKiBNYXRoLmNvcyh0KSwgLXNyICogTWF0aC5zaW4odCkgXSkpWzBdLCBwb2ludFsxXSk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9fY2lyY2xlQW5nbGUoY3IsIHBvaW50KSB7XG4gICAgdmFyIGEgPSBkM19nZW9fY2FydGVzaWFuKHBvaW50KTtcbiAgICBhWzBdIC09IGNyO1xuICAgIGQzX2dlb19jYXJ0ZXNpYW5Ob3JtYWxpemUoYSk7XG4gICAgdmFyIGFuZ2xlID0gZDNfYWNvcygtYVsxXSk7XG4gICAgcmV0dXJuICgoLWFbMl0gPCAwID8gLWFuZ2xlIDogYW5nbGUpICsgMiAqIE1hdGguUEkgLSDOtSkgJSAoMiAqIE1hdGguUEkpO1xuICB9XG4gIGQzLmdlby5kaXN0YW5jZSA9IGZ1bmN0aW9uKGEsIGIpIHtcbiAgICB2YXIgzpTOuyA9IChiWzBdIC0gYVswXSkgKiBkM19yYWRpYW5zLCDPhjAgPSBhWzFdICogZDNfcmFkaWFucywgz4YxID0gYlsxXSAqIGQzX3JhZGlhbnMsIHNpbs6UzrsgPSBNYXRoLnNpbijOlM67KSwgY29zzpTOuyA9IE1hdGguY29zKM6UzrspLCBzaW7PhjAgPSBNYXRoLnNpbijPhjApLCBjb3PPhjAgPSBNYXRoLmNvcyjPhjApLCBzaW7PhjEgPSBNYXRoLnNpbijPhjEpLCBjb3PPhjEgPSBNYXRoLmNvcyjPhjEpLCB0O1xuICAgIHJldHVybiBNYXRoLmF0YW4yKE1hdGguc3FydCgodCA9IGNvc8+GMSAqIHNpbs6UzrspICogdCArICh0ID0gY29zz4YwICogc2luz4YxIC0gc2luz4YwICogY29zz4YxICogY29zzpTOuykgKiB0KSwgc2luz4YwICogc2luz4YxICsgY29zz4YwICogY29zz4YxICogY29zzpTOuyk7XG4gIH07XG4gIGQzLmdlby5ncmF0aWN1bGUgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgeDEsIHgwLCBYMSwgWDAsIHkxLCB5MCwgWTEsIFkwLCBkeCA9IDEwLCBkeSA9IGR4LCBEWCA9IDkwLCBEWSA9IDM2MCwgeCwgeSwgWCwgWSwgcHJlY2lzaW9uID0gMi41O1xuICAgIGZ1bmN0aW9uIGdyYXRpY3VsZSgpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFwiTXVsdGlMaW5lU3RyaW5nXCIsXG4gICAgICAgIGNvb3JkaW5hdGVzOiBsaW5lcygpXG4gICAgICB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBsaW5lcygpIHtcbiAgICAgIHJldHVybiBkMy5yYW5nZShNYXRoLmNlaWwoWDAgLyBEWCkgKiBEWCwgWDEsIERYKS5tYXAoWCkuY29uY2F0KGQzLnJhbmdlKE1hdGguY2VpbChZMCAvIERZKSAqIERZLCBZMSwgRFkpLm1hcChZKSkuY29uY2F0KGQzLnJhbmdlKE1hdGguY2VpbCh4MCAvIGR4KSAqIGR4LCB4MSwgZHgpLmZpbHRlcihmdW5jdGlvbih4KSB7XG4gICAgICAgIHJldHVybiBhYnMoeCAlIERYKSA+IM61O1xuICAgICAgfSkubWFwKHgpKS5jb25jYXQoZDMucmFuZ2UoTWF0aC5jZWlsKHkwIC8gZHkpICogZHksIHkxLCBkeSkuZmlsdGVyKGZ1bmN0aW9uKHkpIHtcbiAgICAgICAgcmV0dXJuIGFicyh5ICUgRFkpID4gzrU7XG4gICAgICB9KS5tYXAoeSkpO1xuICAgIH1cbiAgICBncmF0aWN1bGUubGluZXMgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBsaW5lcygpLm1hcChmdW5jdGlvbihjb29yZGluYXRlcykge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHR5cGU6IFwiTGluZVN0cmluZ1wiLFxuICAgICAgICAgIGNvb3JkaW5hdGVzOiBjb29yZGluYXRlc1xuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgfTtcbiAgICBncmF0aWN1bGUub3V0bGluZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogXCJQb2x5Z29uXCIsXG4gICAgICAgIGNvb3JkaW5hdGVzOiBbIFgoWDApLmNvbmNhdChZKFkxKS5zbGljZSgxKSwgWChYMSkucmV2ZXJzZSgpLnNsaWNlKDEpLCBZKFkwKS5yZXZlcnNlKCkuc2xpY2UoMSkpIF1cbiAgICAgIH07XG4gICAgfTtcbiAgICBncmF0aWN1bGUuZXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZ3JhdGljdWxlLm1pbm9yRXh0ZW50KCk7XG4gICAgICByZXR1cm4gZ3JhdGljdWxlLm1ham9yRXh0ZW50KF8pLm1pbm9yRXh0ZW50KF8pO1xuICAgIH07XG4gICAgZ3JhdGljdWxlLm1ham9yRXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gWyBbIFgwLCBZMCBdLCBbIFgxLCBZMSBdIF07XG4gICAgICBYMCA9ICtfWzBdWzBdLCBYMSA9ICtfWzFdWzBdO1xuICAgICAgWTAgPSArX1swXVsxXSwgWTEgPSArX1sxXVsxXTtcbiAgICAgIGlmIChYMCA+IFgxKSBfID0gWDAsIFgwID0gWDEsIFgxID0gXztcbiAgICAgIGlmIChZMCA+IFkxKSBfID0gWTAsIFkwID0gWTEsIFkxID0gXztcbiAgICAgIHJldHVybiBncmF0aWN1bGUucHJlY2lzaW9uKHByZWNpc2lvbik7XG4gICAgfTtcbiAgICBncmF0aWN1bGUubWlub3JFeHRlbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbIFsgeDAsIHkwIF0sIFsgeDEsIHkxIF0gXTtcbiAgICAgIHgwID0gK19bMF1bMF0sIHgxID0gK19bMV1bMF07XG4gICAgICB5MCA9ICtfWzBdWzFdLCB5MSA9ICtfWzFdWzFdO1xuICAgICAgaWYgKHgwID4geDEpIF8gPSB4MCwgeDAgPSB4MSwgeDEgPSBfO1xuICAgICAgaWYgKHkwID4geTEpIF8gPSB5MCwgeTAgPSB5MSwgeTEgPSBfO1xuICAgICAgcmV0dXJuIGdyYXRpY3VsZS5wcmVjaXNpb24ocHJlY2lzaW9uKTtcbiAgICB9O1xuICAgIGdyYXRpY3VsZS5zdGVwID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZ3JhdGljdWxlLm1pbm9yU3RlcCgpO1xuICAgICAgcmV0dXJuIGdyYXRpY3VsZS5tYWpvclN0ZXAoXykubWlub3JTdGVwKF8pO1xuICAgIH07XG4gICAgZ3JhdGljdWxlLm1ham9yU3RlcCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIFsgRFgsIERZIF07XG4gICAgICBEWCA9ICtfWzBdLCBEWSA9ICtfWzFdO1xuICAgICAgcmV0dXJuIGdyYXRpY3VsZTtcbiAgICB9O1xuICAgIGdyYXRpY3VsZS5taW5vclN0ZXAgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbIGR4LCBkeSBdO1xuICAgICAgZHggPSArX1swXSwgZHkgPSArX1sxXTtcbiAgICAgIHJldHVybiBncmF0aWN1bGU7XG4gICAgfTtcbiAgICBncmF0aWN1bGUucHJlY2lzaW9uID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcHJlY2lzaW9uO1xuICAgICAgcHJlY2lzaW9uID0gK187XG4gICAgICB4ID0gZDNfZ2VvX2dyYXRpY3VsZVgoeTAsIHkxLCA5MCk7XG4gICAgICB5ID0gZDNfZ2VvX2dyYXRpY3VsZVkoeDAsIHgxLCBwcmVjaXNpb24pO1xuICAgICAgWCA9IGQzX2dlb19ncmF0aWN1bGVYKFkwLCBZMSwgOTApO1xuICAgICAgWSA9IGQzX2dlb19ncmF0aWN1bGVZKFgwLCBYMSwgcHJlY2lzaW9uKTtcbiAgICAgIHJldHVybiBncmF0aWN1bGU7XG4gICAgfTtcbiAgICByZXR1cm4gZ3JhdGljdWxlLm1ham9yRXh0ZW50KFsgWyAtMTgwLCAtOTAgKyDOtSBdLCBbIDE4MCwgOTAgLSDOtSBdIF0pLm1pbm9yRXh0ZW50KFsgWyAtMTgwLCAtODAgLSDOtSBdLCBbIDE4MCwgODAgKyDOtSBdIF0pO1xuICB9O1xuICBmdW5jdGlvbiBkM19nZW9fZ3JhdGljdWxlWCh5MCwgeTEsIGR5KSB7XG4gICAgdmFyIHkgPSBkMy5yYW5nZSh5MCwgeTEgLSDOtSwgZHkpLmNvbmNhdCh5MSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHgpIHtcbiAgICAgIHJldHVybiB5Lm1hcChmdW5jdGlvbih5KSB7XG4gICAgICAgIHJldHVybiBbIHgsIHkgXTtcbiAgICAgIH0pO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2dyYXRpY3VsZVkoeDAsIHgxLCBkeCkge1xuICAgIHZhciB4ID0gZDMucmFuZ2UoeDAsIHgxIC0gzrUsIGR4KS5jb25jYXQoeDEpO1xuICAgIHJldHVybiBmdW5jdGlvbih5KSB7XG4gICAgICByZXR1cm4geC5tYXAoZnVuY3Rpb24oeCkge1xuICAgICAgICByZXR1cm4gWyB4LCB5IF07XG4gICAgICB9KTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NvdXJjZShkKSB7XG4gICAgcmV0dXJuIGQuc291cmNlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3RhcmdldChkKSB7XG4gICAgcmV0dXJuIGQudGFyZ2V0O1xuICB9XG4gIGQzLmdlby5ncmVhdEFyYyA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBzb3VyY2UgPSBkM19zb3VyY2UsIHNvdXJjZV8sIHRhcmdldCA9IGQzX3RhcmdldCwgdGFyZ2V0XztcbiAgICBmdW5jdGlvbiBncmVhdEFyYygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFwiTGluZVN0cmluZ1wiLFxuICAgICAgICBjb29yZGluYXRlczogWyBzb3VyY2VfIHx8IHNvdXJjZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpLCB0YXJnZXRfIHx8IHRhcmdldC5hcHBseSh0aGlzLCBhcmd1bWVudHMpIF1cbiAgICAgIH07XG4gICAgfVxuICAgIGdyZWF0QXJjLmRpc3RhbmNlID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDMuZ2VvLmRpc3RhbmNlKHNvdXJjZV8gfHwgc291cmNlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksIHRhcmdldF8gfHwgdGFyZ2V0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICAgIH07XG4gICAgZ3JlYXRBcmMuc291cmNlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc291cmNlO1xuICAgICAgc291cmNlID0gXywgc291cmNlXyA9IHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIgPyBudWxsIDogXztcbiAgICAgIHJldHVybiBncmVhdEFyYztcbiAgICB9O1xuICAgIGdyZWF0QXJjLnRhcmdldCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHRhcmdldDtcbiAgICAgIHRhcmdldCA9IF8sIHRhcmdldF8gPSB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gbnVsbCA6IF87XG4gICAgICByZXR1cm4gZ3JlYXRBcmM7XG4gICAgfTtcbiAgICBncmVhdEFyYy5wcmVjaXNpb24gPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gZ3JlYXRBcmMgOiAwO1xuICAgIH07XG4gICAgcmV0dXJuIGdyZWF0QXJjO1xuICB9O1xuICBkMy5nZW8uaW50ZXJwb2xhdGUgPSBmdW5jdGlvbihzb3VyY2UsIHRhcmdldCkge1xuICAgIHJldHVybiBkM19nZW9faW50ZXJwb2xhdGUoc291cmNlWzBdICogZDNfcmFkaWFucywgc291cmNlWzFdICogZDNfcmFkaWFucywgdGFyZ2V0WzBdICogZDNfcmFkaWFucywgdGFyZ2V0WzFdICogZDNfcmFkaWFucyk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb19pbnRlcnBvbGF0ZSh4MCwgeTAsIHgxLCB5MSkge1xuICAgIHZhciBjeTAgPSBNYXRoLmNvcyh5MCksIHN5MCA9IE1hdGguc2luKHkwKSwgY3kxID0gTWF0aC5jb3MoeTEpLCBzeTEgPSBNYXRoLnNpbih5MSksIGt4MCA9IGN5MCAqIE1hdGguY29zKHgwKSwga3kwID0gY3kwICogTWF0aC5zaW4oeDApLCBreDEgPSBjeTEgKiBNYXRoLmNvcyh4MSksIGt5MSA9IGN5MSAqIE1hdGguc2luKHgxKSwgZCA9IDIgKiBNYXRoLmFzaW4oTWF0aC5zcXJ0KGQzX2hhdmVyc2luKHkxIC0geTApICsgY3kwICogY3kxICogZDNfaGF2ZXJzaW4oeDEgLSB4MCkpKSwgayA9IDEgLyBNYXRoLnNpbihkKTtcbiAgICB2YXIgaW50ZXJwb2xhdGUgPSBkID8gZnVuY3Rpb24odCkge1xuICAgICAgdmFyIEIgPSBNYXRoLnNpbih0ICo9IGQpICogaywgQSA9IE1hdGguc2luKGQgLSB0KSAqIGssIHggPSBBICoga3gwICsgQiAqIGt4MSwgeSA9IEEgKiBreTAgKyBCICoga3kxLCB6ID0gQSAqIHN5MCArIEIgKiBzeTE7XG4gICAgICByZXR1cm4gWyBNYXRoLmF0YW4yKHksIHgpICogZDNfZGVncmVlcywgTWF0aC5hdGFuMih6LCBNYXRoLnNxcnQoeCAqIHggKyB5ICogeSkpICogZDNfZGVncmVlcyBdO1xuICAgIH0gOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBbIHgwICogZDNfZGVncmVlcywgeTAgKiBkM19kZWdyZWVzIF07XG4gICAgfTtcbiAgICBpbnRlcnBvbGF0ZS5kaXN0YW5jZSA9IGQ7XG4gICAgcmV0dXJuIGludGVycG9sYXRlO1xuICB9XG4gIGQzLmdlby5sZW5ndGggPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICBkM19nZW9fbGVuZ3RoU3VtID0gMDtcbiAgICBkMy5nZW8uc3RyZWFtKG9iamVjdCwgZDNfZ2VvX2xlbmd0aCk7XG4gICAgcmV0dXJuIGQzX2dlb19sZW5ndGhTdW07XG4gIH07XG4gIHZhciBkM19nZW9fbGVuZ3RoU3VtO1xuICB2YXIgZDNfZ2VvX2xlbmd0aCA9IHtcbiAgICBzcGhlcmU6IGQzX25vb3AsXG4gICAgcG9pbnQ6IGQzX25vb3AsXG4gICAgbGluZVN0YXJ0OiBkM19nZW9fbGVuZ3RoTGluZVN0YXJ0LFxuICAgIGxpbmVFbmQ6IGQzX25vb3AsXG4gICAgcG9seWdvblN0YXJ0OiBkM19ub29wLFxuICAgIHBvbHlnb25FbmQ6IGQzX25vb3BcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX2xlbmd0aExpbmVTdGFydCgpIHtcbiAgICB2YXIgzrswLCBzaW7PhjAsIGNvc8+GMDtcbiAgICBkM19nZW9fbGVuZ3RoLnBvaW50ID0gZnVuY3Rpb24ozrssIM+GKSB7XG4gICAgICDOuzAgPSDOuyAqIGQzX3JhZGlhbnMsIHNpbs+GMCA9IE1hdGguc2luKM+GICo9IGQzX3JhZGlhbnMpLCBjb3PPhjAgPSBNYXRoLmNvcyjPhik7XG4gICAgICBkM19nZW9fbGVuZ3RoLnBvaW50ID0gbmV4dFBvaW50O1xuICAgIH07XG4gICAgZDNfZ2VvX2xlbmd0aC5saW5lRW5kID0gZnVuY3Rpb24oKSB7XG4gICAgICBkM19nZW9fbGVuZ3RoLnBvaW50ID0gZDNfZ2VvX2xlbmd0aC5saW5lRW5kID0gZDNfbm9vcDtcbiAgICB9O1xuICAgIGZ1bmN0aW9uIG5leHRQb2ludCjOuywgz4YpIHtcbiAgICAgIHZhciBzaW7PhiA9IE1hdGguc2luKM+GICo9IGQzX3JhZGlhbnMpLCBjb3PPhiA9IE1hdGguY29zKM+GKSwgdCA9IGFicygozrsgKj0gZDNfcmFkaWFucykgLSDOuzApLCBjb3POlM67ID0gTWF0aC5jb3ModCk7XG4gICAgICBkM19nZW9fbGVuZ3RoU3VtICs9IE1hdGguYXRhbjIoTWF0aC5zcXJ0KCh0ID0gY29zz4YgKiBNYXRoLnNpbih0KSkgKiB0ICsgKHQgPSBjb3PPhjAgKiBzaW7PhiAtIHNpbs+GMCAqIGNvc8+GICogY29zzpTOuykgKiB0KSwgc2luz4YwICogc2luz4YgKyBjb3PPhjAgKiBjb3PPhiAqIGNvc86UzrspO1xuICAgICAgzrswID0gzrssIHNpbs+GMCA9IHNpbs+GLCBjb3PPhjAgPSBjb3PPhjtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvX2F6aW11dGhhbChzY2FsZSwgYW5nbGUpIHtcbiAgICBmdW5jdGlvbiBhemltdXRoYWwozrssIM+GKSB7XG4gICAgICB2YXIgY29zzrsgPSBNYXRoLmNvcyjOuyksIGNvc8+GID0gTWF0aC5jb3Moz4YpLCBrID0gc2NhbGUoY29zzrsgKiBjb3PPhik7XG4gICAgICByZXR1cm4gWyBrICogY29zz4YgKiBNYXRoLnNpbijOuyksIGsgKiBNYXRoLnNpbijPhikgXTtcbiAgICB9XG4gICAgYXppbXV0aGFsLmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICAgIHZhciDPgSA9IE1hdGguc3FydCh4ICogeCArIHkgKiB5KSwgYyA9IGFuZ2xlKM+BKSwgc2luYyA9IE1hdGguc2luKGMpLCBjb3NjID0gTWF0aC5jb3MoYyk7XG4gICAgICByZXR1cm4gWyBNYXRoLmF0YW4yKHggKiBzaW5jLCDPgSAqIGNvc2MpLCBNYXRoLmFzaW4oz4EgJiYgeSAqIHNpbmMgLyDPgSkgXTtcbiAgICB9O1xuICAgIHJldHVybiBhemltdXRoYWw7XG4gIH1cbiAgdmFyIGQzX2dlb19hemltdXRoYWxFcXVhbEFyZWEgPSBkM19nZW9fYXppbXV0aGFsKGZ1bmN0aW9uKGNvc867Y29zz4YpIHtcbiAgICByZXR1cm4gTWF0aC5zcXJ0KDIgLyAoMSArIGNvc867Y29zz4YpKTtcbiAgfSwgZnVuY3Rpb24oz4EpIHtcbiAgICByZXR1cm4gMiAqIE1hdGguYXNpbijPgSAvIDIpO1xuICB9KTtcbiAgKGQzLmdlby5hemltdXRoYWxFcXVhbEFyZWEgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfZ2VvX3Byb2plY3Rpb24oZDNfZ2VvX2F6aW11dGhhbEVxdWFsQXJlYSk7XG4gIH0pLnJhdyA9IGQzX2dlb19hemltdXRoYWxFcXVhbEFyZWE7XG4gIHZhciBkM19nZW9fYXppbXV0aGFsRXF1aWRpc3RhbnQgPSBkM19nZW9fYXppbXV0aGFsKGZ1bmN0aW9uKGNvc867Y29zz4YpIHtcbiAgICB2YXIgYyA9IE1hdGguYWNvcyhjb3POu2Nvc8+GKTtcbiAgICByZXR1cm4gYyAmJiBjIC8gTWF0aC5zaW4oYyk7XG4gIH0sIGQzX2lkZW50aXR5KTtcbiAgKGQzLmdlby5hemltdXRoYWxFcXVpZGlzdGFudCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19nZW9fcHJvamVjdGlvbihkM19nZW9fYXppbXV0aGFsRXF1aWRpc3RhbnQpO1xuICB9KS5yYXcgPSBkM19nZW9fYXppbXV0aGFsRXF1aWRpc3RhbnQ7XG4gIGZ1bmN0aW9uIGQzX2dlb19jb25pY0NvbmZvcm1hbCjPhjAsIM+GMSkge1xuICAgIHZhciBjb3PPhjAgPSBNYXRoLmNvcyjPhjApLCB0ID0gZnVuY3Rpb24oz4YpIHtcbiAgICAgIHJldHVybiBNYXRoLnRhbijPgCAvIDQgKyDPhiAvIDIpO1xuICAgIH0sIG4gPSDPhjAgPT09IM+GMSA/IE1hdGguc2luKM+GMCkgOiBNYXRoLmxvZyhjb3PPhjAgLyBNYXRoLmNvcyjPhjEpKSAvIE1hdGgubG9nKHQoz4YxKSAvIHQoz4YwKSksIEYgPSBjb3PPhjAgKiBNYXRoLnBvdyh0KM+GMCksIG4pIC8gbjtcbiAgICBpZiAoIW4pIHJldHVybiBkM19nZW9fbWVyY2F0b3I7XG4gICAgZnVuY3Rpb24gZm9yd2FyZCjOuywgz4YpIHtcbiAgICAgIGlmIChGID4gMCkge1xuICAgICAgICBpZiAoz4YgPCAtaGFsZs+AICsgzrUpIM+GID0gLWhhbGbPgCArIM61O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKM+GID4gaGFsZs+AIC0gzrUpIM+GID0gaGFsZs+AIC0gzrU7XG4gICAgICB9XG4gICAgICB2YXIgz4EgPSBGIC8gTWF0aC5wb3codCjPhiksIG4pO1xuICAgICAgcmV0dXJuIFsgz4EgKiBNYXRoLnNpbihuICogzrspLCBGIC0gz4EgKiBNYXRoLmNvcyhuICogzrspIF07XG4gICAgfVxuICAgIGZvcndhcmQuaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICAgICAgdmFyIM+BMF95ID0gRiAtIHksIM+BID0gZDNfc2duKG4pICogTWF0aC5zcXJ0KHggKiB4ICsgz4EwX3kgKiDPgTBfeSk7XG4gICAgICByZXR1cm4gWyBNYXRoLmF0YW4yKHgsIM+BMF95KSAvIG4sIDIgKiBNYXRoLmF0YW4oTWF0aC5wb3coRiAvIM+BLCAxIC8gbikpIC0gaGFsZs+AIF07XG4gICAgfTtcbiAgICByZXR1cm4gZm9yd2FyZDtcbiAgfVxuICAoZDMuZ2VvLmNvbmljQ29uZm9ybWFsID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX2dlb19jb25pYyhkM19nZW9fY29uaWNDb25mb3JtYWwpO1xuICB9KS5yYXcgPSBkM19nZW9fY29uaWNDb25mb3JtYWw7XG4gIGZ1bmN0aW9uIGQzX2dlb19jb25pY0VxdWlkaXN0YW50KM+GMCwgz4YxKSB7XG4gICAgdmFyIGNvc8+GMCA9IE1hdGguY29zKM+GMCksIG4gPSDPhjAgPT09IM+GMSA/IE1hdGguc2luKM+GMCkgOiAoY29zz4YwIC0gTWF0aC5jb3Moz4YxKSkgLyAoz4YxIC0gz4YwKSwgRyA9IGNvc8+GMCAvIG4gKyDPhjA7XG4gICAgaWYgKGFicyhuKSA8IM61KSByZXR1cm4gZDNfZ2VvX2VxdWlyZWN0YW5ndWxhcjtcbiAgICBmdW5jdGlvbiBmb3J3YXJkKM67LCDPhikge1xuICAgICAgdmFyIM+BID0gRyAtIM+GO1xuICAgICAgcmV0dXJuIFsgz4EgKiBNYXRoLnNpbihuICogzrspLCBHIC0gz4EgKiBNYXRoLmNvcyhuICogzrspIF07XG4gICAgfVxuICAgIGZvcndhcmQuaW52ZXJ0ID0gZnVuY3Rpb24oeCwgeSkge1xuICAgICAgdmFyIM+BMF95ID0gRyAtIHk7XG4gICAgICByZXR1cm4gWyBNYXRoLmF0YW4yKHgsIM+BMF95KSAvIG4sIEcgLSBkM19zZ24obikgKiBNYXRoLnNxcnQoeCAqIHggKyDPgTBfeSAqIM+BMF95KSBdO1xuICAgIH07XG4gICAgcmV0dXJuIGZvcndhcmQ7XG4gIH1cbiAgKGQzLmdlby5jb25pY0VxdWlkaXN0YW50ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX2dlb19jb25pYyhkM19nZW9fY29uaWNFcXVpZGlzdGFudCk7XG4gIH0pLnJhdyA9IGQzX2dlb19jb25pY0VxdWlkaXN0YW50O1xuICB2YXIgZDNfZ2VvX2dub21vbmljID0gZDNfZ2VvX2F6aW11dGhhbChmdW5jdGlvbihjb3POu2Nvc8+GKSB7XG4gICAgcmV0dXJuIDEgLyBjb3POu2Nvc8+GO1xuICB9LCBNYXRoLmF0YW4pO1xuICAoZDMuZ2VvLmdub21vbmljID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX2dlb19wcm9qZWN0aW9uKGQzX2dlb19nbm9tb25pYyk7XG4gIH0pLnJhdyA9IGQzX2dlb19nbm9tb25pYztcbiAgZnVuY3Rpb24gZDNfZ2VvX21lcmNhdG9yKM67LCDPhikge1xuICAgIHJldHVybiBbIM67LCBNYXRoLmxvZyhNYXRoLnRhbijPgCAvIDQgKyDPhiAvIDIpKSBdO1xuICB9XG4gIGQzX2dlb19tZXJjYXRvci5pbnZlcnQgPSBmdW5jdGlvbih4LCB5KSB7XG4gICAgcmV0dXJuIFsgeCwgMiAqIE1hdGguYXRhbihNYXRoLmV4cCh5KSkgLSBoYWxmz4AgXTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvX21lcmNhdG9yUHJvamVjdGlvbihwcm9qZWN0KSB7XG4gICAgdmFyIG0gPSBkM19nZW9fcHJvamVjdGlvbihwcm9qZWN0KSwgc2NhbGUgPSBtLnNjYWxlLCB0cmFuc2xhdGUgPSBtLnRyYW5zbGF0ZSwgY2xpcEV4dGVudCA9IG0uY2xpcEV4dGVudCwgY2xpcEF1dG87XG4gICAgbS5zY2FsZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHYgPSBzY2FsZS5hcHBseShtLCBhcmd1bWVudHMpO1xuICAgICAgcmV0dXJuIHYgPT09IG0gPyBjbGlwQXV0byA/IG0uY2xpcEV4dGVudChudWxsKSA6IG0gOiB2O1xuICAgIH07XG4gICAgbS50cmFuc2xhdGUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB2ID0gdHJhbnNsYXRlLmFwcGx5KG0sIGFyZ3VtZW50cyk7XG4gICAgICByZXR1cm4gdiA9PT0gbSA/IGNsaXBBdXRvID8gbS5jbGlwRXh0ZW50KG51bGwpIDogbSA6IHY7XG4gICAgfTtcbiAgICBtLmNsaXBFeHRlbnQgPSBmdW5jdGlvbihfKSB7XG4gICAgICB2YXIgdiA9IGNsaXBFeHRlbnQuYXBwbHkobSwgYXJndW1lbnRzKTtcbiAgICAgIGlmICh2ID09PSBtKSB7XG4gICAgICAgIGlmIChjbGlwQXV0byA9IF8gPT0gbnVsbCkge1xuICAgICAgICAgIHZhciBrID0gz4AgKiBzY2FsZSgpLCB0ID0gdHJhbnNsYXRlKCk7XG4gICAgICAgICAgY2xpcEV4dGVudChbIFsgdFswXSAtIGssIHRbMV0gLSBrIF0sIFsgdFswXSArIGssIHRbMV0gKyBrIF0gXSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoY2xpcEF1dG8pIHtcbiAgICAgICAgdiA9IG51bGw7XG4gICAgICB9XG4gICAgICByZXR1cm4gdjtcbiAgICB9O1xuICAgIHJldHVybiBtLmNsaXBFeHRlbnQobnVsbCk7XG4gIH1cbiAgKGQzLmdlby5tZXJjYXRvciA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19nZW9fbWVyY2F0b3JQcm9qZWN0aW9uKGQzX2dlb19tZXJjYXRvcik7XG4gIH0pLnJhdyA9IGQzX2dlb19tZXJjYXRvcjtcbiAgdmFyIGQzX2dlb19vcnRob2dyYXBoaWMgPSBkM19nZW9fYXppbXV0aGFsKGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiAxO1xuICB9LCBNYXRoLmFzaW4pO1xuICAoZDMuZ2VvLm9ydGhvZ3JhcGhpYyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19nZW9fcHJvamVjdGlvbihkM19nZW9fb3J0aG9ncmFwaGljKTtcbiAgfSkucmF3ID0gZDNfZ2VvX29ydGhvZ3JhcGhpYztcbiAgdmFyIGQzX2dlb19zdGVyZW9ncmFwaGljID0gZDNfZ2VvX2F6aW11dGhhbChmdW5jdGlvbihjb3POu2Nvc8+GKSB7XG4gICAgcmV0dXJuIDEgLyAoMSArIGNvc867Y29zz4YpO1xuICB9LCBmdW5jdGlvbijPgSkge1xuICAgIHJldHVybiAyICogTWF0aC5hdGFuKM+BKTtcbiAgfSk7XG4gIChkMy5nZW8uc3RlcmVvZ3JhcGhpYyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19nZW9fcHJvamVjdGlvbihkM19nZW9fc3RlcmVvZ3JhcGhpYyk7XG4gIH0pLnJhdyA9IGQzX2dlb19zdGVyZW9ncmFwaGljO1xuICBmdW5jdGlvbiBkM19nZW9fdHJhbnN2ZXJzZU1lcmNhdG9yKM67LCDPhikge1xuICAgIHJldHVybiBbIE1hdGgubG9nKE1hdGgudGFuKM+AIC8gNCArIM+GIC8gMikpLCAtzrsgXTtcbiAgfVxuICBkM19nZW9fdHJhbnN2ZXJzZU1lcmNhdG9yLmludmVydCA9IGZ1bmN0aW9uKHgsIHkpIHtcbiAgICByZXR1cm4gWyAteSwgMiAqIE1hdGguYXRhbihNYXRoLmV4cCh4KSkgLSBoYWxmz4AgXTtcbiAgfTtcbiAgKGQzLmdlby50cmFuc3ZlcnNlTWVyY2F0b3IgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgcHJvamVjdGlvbiA9IGQzX2dlb19tZXJjYXRvclByb2plY3Rpb24oZDNfZ2VvX3RyYW5zdmVyc2VNZXJjYXRvciksIGNlbnRlciA9IHByb2plY3Rpb24uY2VudGVyLCByb3RhdGUgPSBwcm9qZWN0aW9uLnJvdGF0ZTtcbiAgICBwcm9qZWN0aW9uLmNlbnRlciA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBfID8gY2VudGVyKFsgLV9bMV0sIF9bMF0gXSkgOiAoXyA9IGNlbnRlcigpLCBbIC1fWzFdLCBfWzBdIF0pO1xuICAgIH07XG4gICAgcHJvamVjdGlvbi5yb3RhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gXyA/IHJvdGF0ZShbIF9bMF0sIF9bMV0sIF8ubGVuZ3RoID4gMiA/IF9bMl0gKyA5MCA6IDkwIF0pIDogKF8gPSByb3RhdGUoKSwgXG4gICAgICBbIF9bMF0sIF9bMV0sIF9bMl0gLSA5MCBdKTtcbiAgICB9O1xuICAgIHJldHVybiBwcm9qZWN0aW9uLnJvdGF0ZShbIDAsIDAgXSk7XG4gIH0pLnJhdyA9IGQzX2dlb190cmFuc3ZlcnNlTWVyY2F0b3I7XG4gIGQzLmdlb20gPSB7fTtcbiAgZnVuY3Rpb24gZDNfZ2VvbV9wb2ludFgoZCkge1xuICAgIHJldHVybiBkWzBdO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fcG9pbnRZKGQpIHtcbiAgICByZXR1cm4gZFsxXTtcbiAgfVxuICBkMy5nZW9tLmh1bGwgPSBmdW5jdGlvbih2ZXJ0aWNlcykge1xuICAgIHZhciB4ID0gZDNfZ2VvbV9wb2ludFgsIHkgPSBkM19nZW9tX3BvaW50WTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGh1bGwodmVydGljZXMpO1xuICAgIGZ1bmN0aW9uIGh1bGwoZGF0YSkge1xuICAgICAgaWYgKGRhdGEubGVuZ3RoIDwgMykgcmV0dXJuIFtdO1xuICAgICAgdmFyIGZ4ID0gZDNfZnVuY3Rvcih4KSwgZnkgPSBkM19mdW5jdG9yKHkpLCBpLCBuID0gZGF0YS5sZW5ndGgsIHBvaW50cyA9IFtdLCBmbGlwcGVkUG9pbnRzID0gW107XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIHBvaW50cy5wdXNoKFsgK2Z4LmNhbGwodGhpcywgZGF0YVtpXSwgaSksICtmeS5jYWxsKHRoaXMsIGRhdGFbaV0sIGkpLCBpIF0pO1xuICAgICAgfVxuICAgICAgcG9pbnRzLnNvcnQoZDNfZ2VvbV9odWxsT3JkZXIpO1xuICAgICAgZm9yIChpID0gMDsgaSA8IG47IGkrKykgZmxpcHBlZFBvaW50cy5wdXNoKFsgcG9pbnRzW2ldWzBdLCAtcG9pbnRzW2ldWzFdIF0pO1xuICAgICAgdmFyIHVwcGVyID0gZDNfZ2VvbV9odWxsVXBwZXIocG9pbnRzKSwgbG93ZXIgPSBkM19nZW9tX2h1bGxVcHBlcihmbGlwcGVkUG9pbnRzKTtcbiAgICAgIHZhciBza2lwTGVmdCA9IGxvd2VyWzBdID09PSB1cHBlclswXSwgc2tpcFJpZ2h0ID0gbG93ZXJbbG93ZXIubGVuZ3RoIC0gMV0gPT09IHVwcGVyW3VwcGVyLmxlbmd0aCAtIDFdLCBwb2x5Z29uID0gW107XG4gICAgICBmb3IgKGkgPSB1cHBlci5sZW5ndGggLSAxOyBpID49IDA7IC0taSkgcG9seWdvbi5wdXNoKGRhdGFbcG9pbnRzW3VwcGVyW2ldXVsyXV0pO1xuICAgICAgZm9yIChpID0gK3NraXBMZWZ0OyBpIDwgbG93ZXIubGVuZ3RoIC0gc2tpcFJpZ2h0OyArK2kpIHBvbHlnb24ucHVzaChkYXRhW3BvaW50c1tsb3dlcltpXV1bMl1dKTtcbiAgICAgIHJldHVybiBwb2x5Z29uO1xuICAgIH1cbiAgICBodWxsLnggPSBmdW5jdGlvbihfKSB7XG4gICAgICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA/ICh4ID0gXywgaHVsbCkgOiB4O1xuICAgIH07XG4gICAgaHVsbC55ID0gZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoeSA9IF8sIGh1bGwpIDogeTtcbiAgICB9O1xuICAgIHJldHVybiBodWxsO1xuICB9O1xuICBmdW5jdGlvbiBkM19nZW9tX2h1bGxVcHBlcihwb2ludHMpIHtcbiAgICB2YXIgbiA9IHBvaW50cy5sZW5ndGgsIGh1bGwgPSBbIDAsIDEgXSwgaHMgPSAyO1xuICAgIGZvciAodmFyIGkgPSAyOyBpIDwgbjsgaSsrKSB7XG4gICAgICB3aGlsZSAoaHMgPiAxICYmIGQzX2Nyb3NzMmQocG9pbnRzW2h1bGxbaHMgLSAyXV0sIHBvaW50c1todWxsW2hzIC0gMV1dLCBwb2ludHNbaV0pIDw9IDApIC0taHM7XG4gICAgICBodWxsW2hzKytdID0gaTtcbiAgICB9XG4gICAgcmV0dXJuIGh1bGwuc2xpY2UoMCwgaHMpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21faHVsbE9yZGVyKGEsIGIpIHtcbiAgICByZXR1cm4gYVswXSAtIGJbMF0gfHwgYVsxXSAtIGJbMV07XG4gIH1cbiAgZDMuZ2VvbS5wb2x5Z29uID0gZnVuY3Rpb24oY29vcmRpbmF0ZXMpIHtcbiAgICBkM19zdWJjbGFzcyhjb29yZGluYXRlcywgZDNfZ2VvbV9wb2x5Z29uUHJvdG90eXBlKTtcbiAgICByZXR1cm4gY29vcmRpbmF0ZXM7XG4gIH07XG4gIHZhciBkM19nZW9tX3BvbHlnb25Qcm90b3R5cGUgPSBkMy5nZW9tLnBvbHlnb24ucHJvdG90eXBlID0gW107XG4gIGQzX2dlb21fcG9seWdvblByb3RvdHlwZS5hcmVhID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGkgPSAtMSwgbiA9IHRoaXMubGVuZ3RoLCBhLCBiID0gdGhpc1tuIC0gMV0sIGFyZWEgPSAwO1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBhID0gYjtcbiAgICAgIGIgPSB0aGlzW2ldO1xuICAgICAgYXJlYSArPSBhWzFdICogYlswXSAtIGFbMF0gKiBiWzFdO1xuICAgIH1cbiAgICByZXR1cm4gYXJlYSAqIC41O1xuICB9O1xuICBkM19nZW9tX3BvbHlnb25Qcm90b3R5cGUuY2VudHJvaWQgPSBmdW5jdGlvbihrKSB7XG4gICAgdmFyIGkgPSAtMSwgbiA9IHRoaXMubGVuZ3RoLCB4ID0gMCwgeSA9IDAsIGEsIGIgPSB0aGlzW24gLSAxXSwgYztcbiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIGsgPSAtMSAvICg2ICogdGhpcy5hcmVhKCkpO1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBhID0gYjtcbiAgICAgIGIgPSB0aGlzW2ldO1xuICAgICAgYyA9IGFbMF0gKiBiWzFdIC0gYlswXSAqIGFbMV07XG4gICAgICB4ICs9IChhWzBdICsgYlswXSkgKiBjO1xuICAgICAgeSArPSAoYVsxXSArIGJbMV0pICogYztcbiAgICB9XG4gICAgcmV0dXJuIFsgeCAqIGssIHkgKiBrIF07XG4gIH07XG4gIGQzX2dlb21fcG9seWdvblByb3RvdHlwZS5jbGlwID0gZnVuY3Rpb24oc3ViamVjdCkge1xuICAgIHZhciBpbnB1dCwgY2xvc2VkID0gZDNfZ2VvbV9wb2x5Z29uQ2xvc2VkKHN1YmplY3QpLCBpID0gLTEsIG4gPSB0aGlzLmxlbmd0aCAtIGQzX2dlb21fcG9seWdvbkNsb3NlZCh0aGlzKSwgaiwgbSwgYSA9IHRoaXNbbiAtIDFdLCBiLCBjLCBkO1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBpbnB1dCA9IHN1YmplY3Quc2xpY2UoKTtcbiAgICAgIHN1YmplY3QubGVuZ3RoID0gMDtcbiAgICAgIGIgPSB0aGlzW2ldO1xuICAgICAgYyA9IGlucHV0WyhtID0gaW5wdXQubGVuZ3RoIC0gY2xvc2VkKSAtIDFdO1xuICAgICAgaiA9IC0xO1xuICAgICAgd2hpbGUgKCsraiA8IG0pIHtcbiAgICAgICAgZCA9IGlucHV0W2pdO1xuICAgICAgICBpZiAoZDNfZ2VvbV9wb2x5Z29uSW5zaWRlKGQsIGEsIGIpKSB7XG4gICAgICAgICAgaWYgKCFkM19nZW9tX3BvbHlnb25JbnNpZGUoYywgYSwgYikpIHtcbiAgICAgICAgICAgIHN1YmplY3QucHVzaChkM19nZW9tX3BvbHlnb25JbnRlcnNlY3QoYywgZCwgYSwgYikpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzdWJqZWN0LnB1c2goZCk7XG4gICAgICAgIH0gZWxzZSBpZiAoZDNfZ2VvbV9wb2x5Z29uSW5zaWRlKGMsIGEsIGIpKSB7XG4gICAgICAgICAgc3ViamVjdC5wdXNoKGQzX2dlb21fcG9seWdvbkludGVyc2VjdChjLCBkLCBhLCBiKSk7XG4gICAgICAgIH1cbiAgICAgICAgYyA9IGQ7XG4gICAgICB9XG4gICAgICBpZiAoY2xvc2VkKSBzdWJqZWN0LnB1c2goc3ViamVjdFswXSk7XG4gICAgICBhID0gYjtcbiAgICB9XG4gICAgcmV0dXJuIHN1YmplY3Q7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb21fcG9seWdvbkluc2lkZShwLCBhLCBiKSB7XG4gICAgcmV0dXJuIChiWzBdIC0gYVswXSkgKiAocFsxXSAtIGFbMV0pIDwgKGJbMV0gLSBhWzFdKSAqIChwWzBdIC0gYVswXSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV9wb2x5Z29uSW50ZXJzZWN0KGMsIGQsIGEsIGIpIHtcbiAgICB2YXIgeDEgPSBjWzBdLCB4MyA9IGFbMF0sIHgyMSA9IGRbMF0gLSB4MSwgeDQzID0gYlswXSAtIHgzLCB5MSA9IGNbMV0sIHkzID0gYVsxXSwgeTIxID0gZFsxXSAtIHkxLCB5NDMgPSBiWzFdIC0geTMsIHVhID0gKHg0MyAqICh5MSAtIHkzKSAtIHk0MyAqICh4MSAtIHgzKSkgLyAoeTQzICogeDIxIC0geDQzICogeTIxKTtcbiAgICByZXR1cm4gWyB4MSArIHVhICogeDIxLCB5MSArIHVhICogeTIxIF07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV9wb2x5Z29uQ2xvc2VkKGNvb3JkaW5hdGVzKSB7XG4gICAgdmFyIGEgPSBjb29yZGluYXRlc1swXSwgYiA9IGNvb3JkaW5hdGVzW2Nvb3JkaW5hdGVzLmxlbmd0aCAtIDFdO1xuICAgIHJldHVybiAhKGFbMF0gLSBiWzBdIHx8IGFbMV0gLSBiWzFdKTtcbiAgfVxuICB2YXIgZDNfZ2VvbV92b3Jvbm9pRWRnZXMsIGQzX2dlb21fdm9yb25vaUNlbGxzLCBkM19nZW9tX3Zvcm9ub2lCZWFjaGVzLCBkM19nZW9tX3Zvcm9ub2lCZWFjaFBvb2wgPSBbXSwgZDNfZ2VvbV92b3Jvbm9pRmlyc3RDaXJjbGUsIGQzX2dlb21fdm9yb25vaUNpcmNsZXMsIGQzX2dlb21fdm9yb25vaUNpcmNsZVBvb2wgPSBbXTtcbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pQmVhY2goKSB7XG4gICAgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tOb2RlKHRoaXMpO1xuICAgIHRoaXMuZWRnZSA9IHRoaXMuc2l0ZSA9IHRoaXMuY2lyY2xlID0gbnVsbDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lDcmVhdGVCZWFjaChzaXRlKSB7XG4gICAgdmFyIGJlYWNoID0gZDNfZ2VvbV92b3Jvbm9pQmVhY2hQb29sLnBvcCgpIHx8IG5ldyBkM19nZW9tX3Zvcm9ub2lCZWFjaCgpO1xuICAgIGJlYWNoLnNpdGUgPSBzaXRlO1xuICAgIHJldHVybiBiZWFjaDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lEZXRhY2hCZWFjaChiZWFjaCkge1xuICAgIGQzX2dlb21fdm9yb25vaURldGFjaENpcmNsZShiZWFjaCk7XG4gICAgZDNfZ2VvbV92b3Jvbm9pQmVhY2hlcy5yZW1vdmUoYmVhY2gpO1xuICAgIGQzX2dlb21fdm9yb25vaUJlYWNoUG9vbC5wdXNoKGJlYWNoKTtcbiAgICBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja05vZGUoYmVhY2gpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaVJlbW92ZUJlYWNoKGJlYWNoKSB7XG4gICAgdmFyIGNpcmNsZSA9IGJlYWNoLmNpcmNsZSwgeCA9IGNpcmNsZS54LCB5ID0gY2lyY2xlLmN5LCB2ZXJ0ZXggPSB7XG4gICAgICB4OiB4LFxuICAgICAgeTogeVxuICAgIH0sIHByZXZpb3VzID0gYmVhY2guUCwgbmV4dCA9IGJlYWNoLk4sIGRpc2FwcGVhcmluZyA9IFsgYmVhY2ggXTtcbiAgICBkM19nZW9tX3Zvcm9ub2lEZXRhY2hCZWFjaChiZWFjaCk7XG4gICAgdmFyIGxBcmMgPSBwcmV2aW91cztcbiAgICB3aGlsZSAobEFyYy5jaXJjbGUgJiYgYWJzKHggLSBsQXJjLmNpcmNsZS54KSA8IM61ICYmIGFicyh5IC0gbEFyYy5jaXJjbGUuY3kpIDwgzrUpIHtcbiAgICAgIHByZXZpb3VzID0gbEFyYy5QO1xuICAgICAgZGlzYXBwZWFyaW5nLnVuc2hpZnQobEFyYyk7XG4gICAgICBkM19nZW9tX3Zvcm9ub2lEZXRhY2hCZWFjaChsQXJjKTtcbiAgICAgIGxBcmMgPSBwcmV2aW91cztcbiAgICB9XG4gICAgZGlzYXBwZWFyaW5nLnVuc2hpZnQobEFyYyk7XG4gICAgZDNfZ2VvbV92b3Jvbm9pRGV0YWNoQ2lyY2xlKGxBcmMpO1xuICAgIHZhciByQXJjID0gbmV4dDtcbiAgICB3aGlsZSAockFyYy5jaXJjbGUgJiYgYWJzKHggLSByQXJjLmNpcmNsZS54KSA8IM61ICYmIGFicyh5IC0gckFyYy5jaXJjbGUuY3kpIDwgzrUpIHtcbiAgICAgIG5leHQgPSByQXJjLk47XG4gICAgICBkaXNhcHBlYXJpbmcucHVzaChyQXJjKTtcbiAgICAgIGQzX2dlb21fdm9yb25vaURldGFjaEJlYWNoKHJBcmMpO1xuICAgICAgckFyYyA9IG5leHQ7XG4gICAgfVxuICAgIGRpc2FwcGVhcmluZy5wdXNoKHJBcmMpO1xuICAgIGQzX2dlb21fdm9yb25vaURldGFjaENpcmNsZShyQXJjKTtcbiAgICB2YXIgbkFyY3MgPSBkaXNhcHBlYXJpbmcubGVuZ3RoLCBpQXJjO1xuICAgIGZvciAoaUFyYyA9IDE7IGlBcmMgPCBuQXJjczsgKytpQXJjKSB7XG4gICAgICByQXJjID0gZGlzYXBwZWFyaW5nW2lBcmNdO1xuICAgICAgbEFyYyA9IGRpc2FwcGVhcmluZ1tpQXJjIC0gMV07XG4gICAgICBkM19nZW9tX3Zvcm9ub2lTZXRFZGdlRW5kKHJBcmMuZWRnZSwgbEFyYy5zaXRlLCByQXJjLnNpdGUsIHZlcnRleCk7XG4gICAgfVxuICAgIGxBcmMgPSBkaXNhcHBlYXJpbmdbMF07XG4gICAgckFyYyA9IGRpc2FwcGVhcmluZ1tuQXJjcyAtIDFdO1xuICAgIHJBcmMuZWRnZSA9IGQzX2dlb21fdm9yb25vaUNyZWF0ZUVkZ2UobEFyYy5zaXRlLCByQXJjLnNpdGUsIG51bGwsIHZlcnRleCk7XG4gICAgZDNfZ2VvbV92b3Jvbm9pQXR0YWNoQ2lyY2xlKGxBcmMpO1xuICAgIGQzX2dlb21fdm9yb25vaUF0dGFjaENpcmNsZShyQXJjKTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lBZGRCZWFjaChzaXRlKSB7XG4gICAgdmFyIHggPSBzaXRlLngsIGRpcmVjdHJpeCA9IHNpdGUueSwgbEFyYywgckFyYywgZHhsLCBkeHIsIG5vZGUgPSBkM19nZW9tX3Zvcm9ub2lCZWFjaGVzLl87XG4gICAgd2hpbGUgKG5vZGUpIHtcbiAgICAgIGR4bCA9IGQzX2dlb21fdm9yb25vaUxlZnRCcmVha1BvaW50KG5vZGUsIGRpcmVjdHJpeCkgLSB4O1xuICAgICAgaWYgKGR4bCA+IM61KSBub2RlID0gbm9kZS5MOyBlbHNlIHtcbiAgICAgICAgZHhyID0geCAtIGQzX2dlb21fdm9yb25vaVJpZ2h0QnJlYWtQb2ludChub2RlLCBkaXJlY3RyaXgpO1xuICAgICAgICBpZiAoZHhyID4gzrUpIHtcbiAgICAgICAgICBpZiAoIW5vZGUuUikge1xuICAgICAgICAgICAgbEFyYyA9IG5vZGU7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgICAgbm9kZSA9IG5vZGUuUjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoZHhsID4gLc61KSB7XG4gICAgICAgICAgICBsQXJjID0gbm9kZS5QO1xuICAgICAgICAgICAgckFyYyA9IG5vZGU7XG4gICAgICAgICAgfSBlbHNlIGlmIChkeHIgPiAtzrUpIHtcbiAgICAgICAgICAgIGxBcmMgPSBub2RlO1xuICAgICAgICAgICAgckFyYyA9IG5vZGUuTjtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbEFyYyA9IHJBcmMgPSBub2RlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICB2YXIgbmV3QXJjID0gZDNfZ2VvbV92b3Jvbm9pQ3JlYXRlQmVhY2goc2l0ZSk7XG4gICAgZDNfZ2VvbV92b3Jvbm9pQmVhY2hlcy5pbnNlcnQobEFyYywgbmV3QXJjKTtcbiAgICBpZiAoIWxBcmMgJiYgIXJBcmMpIHJldHVybjtcbiAgICBpZiAobEFyYyA9PT0gckFyYykge1xuICAgICAgZDNfZ2VvbV92b3Jvbm9pRGV0YWNoQ2lyY2xlKGxBcmMpO1xuICAgICAgckFyYyA9IGQzX2dlb21fdm9yb25vaUNyZWF0ZUJlYWNoKGxBcmMuc2l0ZSk7XG4gICAgICBkM19nZW9tX3Zvcm9ub2lCZWFjaGVzLmluc2VydChuZXdBcmMsIHJBcmMpO1xuICAgICAgbmV3QXJjLmVkZ2UgPSByQXJjLmVkZ2UgPSBkM19nZW9tX3Zvcm9ub2lDcmVhdGVFZGdlKGxBcmMuc2l0ZSwgbmV3QXJjLnNpdGUpO1xuICAgICAgZDNfZ2VvbV92b3Jvbm9pQXR0YWNoQ2lyY2xlKGxBcmMpO1xuICAgICAgZDNfZ2VvbV92b3Jvbm9pQXR0YWNoQ2lyY2xlKHJBcmMpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoIXJBcmMpIHtcbiAgICAgIG5ld0FyYy5lZGdlID0gZDNfZ2VvbV92b3Jvbm9pQ3JlYXRlRWRnZShsQXJjLnNpdGUsIG5ld0FyYy5zaXRlKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZDNfZ2VvbV92b3Jvbm9pRGV0YWNoQ2lyY2xlKGxBcmMpO1xuICAgIGQzX2dlb21fdm9yb25vaURldGFjaENpcmNsZShyQXJjKTtcbiAgICB2YXIgbFNpdGUgPSBsQXJjLnNpdGUsIGF4ID0gbFNpdGUueCwgYXkgPSBsU2l0ZS55LCBieCA9IHNpdGUueCAtIGF4LCBieSA9IHNpdGUueSAtIGF5LCByU2l0ZSA9IHJBcmMuc2l0ZSwgY3ggPSByU2l0ZS54IC0gYXgsIGN5ID0gclNpdGUueSAtIGF5LCBkID0gMiAqIChieCAqIGN5IC0gYnkgKiBjeCksIGhiID0gYnggKiBieCArIGJ5ICogYnksIGhjID0gY3ggKiBjeCArIGN5ICogY3ksIHZlcnRleCA9IHtcbiAgICAgIHg6IChjeSAqIGhiIC0gYnkgKiBoYykgLyBkICsgYXgsXG4gICAgICB5OiAoYnggKiBoYyAtIGN4ICogaGIpIC8gZCArIGF5XG4gICAgfTtcbiAgICBkM19nZW9tX3Zvcm9ub2lTZXRFZGdlRW5kKHJBcmMuZWRnZSwgbFNpdGUsIHJTaXRlLCB2ZXJ0ZXgpO1xuICAgIG5ld0FyYy5lZGdlID0gZDNfZ2VvbV92b3Jvbm9pQ3JlYXRlRWRnZShsU2l0ZSwgc2l0ZSwgbnVsbCwgdmVydGV4KTtcbiAgICByQXJjLmVkZ2UgPSBkM19nZW9tX3Zvcm9ub2lDcmVhdGVFZGdlKHNpdGUsIHJTaXRlLCBudWxsLCB2ZXJ0ZXgpO1xuICAgIGQzX2dlb21fdm9yb25vaUF0dGFjaENpcmNsZShsQXJjKTtcbiAgICBkM19nZW9tX3Zvcm9ub2lBdHRhY2hDaXJjbGUockFyYyk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pTGVmdEJyZWFrUG9pbnQoYXJjLCBkaXJlY3RyaXgpIHtcbiAgICB2YXIgc2l0ZSA9IGFyYy5zaXRlLCByZm9jeCA9IHNpdGUueCwgcmZvY3kgPSBzaXRlLnksIHBieTIgPSByZm9jeSAtIGRpcmVjdHJpeDtcbiAgICBpZiAoIXBieTIpIHJldHVybiByZm9jeDtcbiAgICB2YXIgbEFyYyA9IGFyYy5QO1xuICAgIGlmICghbEFyYykgcmV0dXJuIC1JbmZpbml0eTtcbiAgICBzaXRlID0gbEFyYy5zaXRlO1xuICAgIHZhciBsZm9jeCA9IHNpdGUueCwgbGZvY3kgPSBzaXRlLnksIHBsYnkyID0gbGZvY3kgLSBkaXJlY3RyaXg7XG4gICAgaWYgKCFwbGJ5MikgcmV0dXJuIGxmb2N4O1xuICAgIHZhciBobCA9IGxmb2N4IC0gcmZvY3gsIGFieTIgPSAxIC8gcGJ5MiAtIDEgLyBwbGJ5MiwgYiA9IGhsIC8gcGxieTI7XG4gICAgaWYgKGFieTIpIHJldHVybiAoLWIgKyBNYXRoLnNxcnQoYiAqIGIgLSAyICogYWJ5MiAqIChobCAqIGhsIC8gKC0yICogcGxieTIpIC0gbGZvY3kgKyBwbGJ5MiAvIDIgKyByZm9jeSAtIHBieTIgLyAyKSkpIC8gYWJ5MiArIHJmb2N4O1xuICAgIHJldHVybiAocmZvY3ggKyBsZm9jeCkgLyAyO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaVJpZ2h0QnJlYWtQb2ludChhcmMsIGRpcmVjdHJpeCkge1xuICAgIHZhciByQXJjID0gYXJjLk47XG4gICAgaWYgKHJBcmMpIHJldHVybiBkM19nZW9tX3Zvcm9ub2lMZWZ0QnJlYWtQb2ludChyQXJjLCBkaXJlY3RyaXgpO1xuICAgIHZhciBzaXRlID0gYXJjLnNpdGU7XG4gICAgcmV0dXJuIHNpdGUueSA9PT0gZGlyZWN0cml4ID8gc2l0ZS54IDogSW5maW5pdHk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pQ2VsbChzaXRlKSB7XG4gICAgdGhpcy5zaXRlID0gc2l0ZTtcbiAgICB0aGlzLmVkZ2VzID0gW107XG4gIH1cbiAgZDNfZ2VvbV92b3Jvbm9pQ2VsbC5wcm90b3R5cGUucHJlcGFyZSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBoYWxmRWRnZXMgPSB0aGlzLmVkZ2VzLCBpSGFsZkVkZ2UgPSBoYWxmRWRnZXMubGVuZ3RoLCBlZGdlO1xuICAgIHdoaWxlIChpSGFsZkVkZ2UtLSkge1xuICAgICAgZWRnZSA9IGhhbGZFZGdlc1tpSGFsZkVkZ2VdLmVkZ2U7XG4gICAgICBpZiAoIWVkZ2UuYiB8fCAhZWRnZS5hKSBoYWxmRWRnZXMuc3BsaWNlKGlIYWxmRWRnZSwgMSk7XG4gICAgfVxuICAgIGhhbGZFZGdlcy5zb3J0KGQzX2dlb21fdm9yb25vaUhhbGZFZGdlT3JkZXIpO1xuICAgIHJldHVybiBoYWxmRWRnZXMubGVuZ3RoO1xuICB9O1xuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lDbG9zZUNlbGxzKGV4dGVudCkge1xuICAgIHZhciB4MCA9IGV4dGVudFswXVswXSwgeDEgPSBleHRlbnRbMV1bMF0sIHkwID0gZXh0ZW50WzBdWzFdLCB5MSA9IGV4dGVudFsxXVsxXSwgeDIsIHkyLCB4MywgeTMsIGNlbGxzID0gZDNfZ2VvbV92b3Jvbm9pQ2VsbHMsIGlDZWxsID0gY2VsbHMubGVuZ3RoLCBjZWxsLCBpSGFsZkVkZ2UsIGhhbGZFZGdlcywgbkhhbGZFZGdlcywgc3RhcnQsIGVuZDtcbiAgICB3aGlsZSAoaUNlbGwtLSkge1xuICAgICAgY2VsbCA9IGNlbGxzW2lDZWxsXTtcbiAgICAgIGlmICghY2VsbCB8fCAhY2VsbC5wcmVwYXJlKCkpIGNvbnRpbnVlO1xuICAgICAgaGFsZkVkZ2VzID0gY2VsbC5lZGdlcztcbiAgICAgIG5IYWxmRWRnZXMgPSBoYWxmRWRnZXMubGVuZ3RoO1xuICAgICAgaUhhbGZFZGdlID0gMDtcbiAgICAgIHdoaWxlIChpSGFsZkVkZ2UgPCBuSGFsZkVkZ2VzKSB7XG4gICAgICAgIGVuZCA9IGhhbGZFZGdlc1tpSGFsZkVkZ2VdLmVuZCgpLCB4MyA9IGVuZC54LCB5MyA9IGVuZC55O1xuICAgICAgICBzdGFydCA9IGhhbGZFZGdlc1srK2lIYWxmRWRnZSAlIG5IYWxmRWRnZXNdLnN0YXJ0KCksIHgyID0gc3RhcnQueCwgeTIgPSBzdGFydC55O1xuICAgICAgICBpZiAoYWJzKHgzIC0geDIpID4gzrUgfHwgYWJzKHkzIC0geTIpID4gzrUpIHtcbiAgICAgICAgICBoYWxmRWRnZXMuc3BsaWNlKGlIYWxmRWRnZSwgMCwgbmV3IGQzX2dlb21fdm9yb25vaUhhbGZFZGdlKGQzX2dlb21fdm9yb25vaUNyZWF0ZUJvcmRlckVkZ2UoY2VsbC5zaXRlLCBlbmQsIGFicyh4MyAtIHgwKSA8IM61ICYmIHkxIC0geTMgPiDOtSA/IHtcbiAgICAgICAgICAgIHg6IHgwLFxuICAgICAgICAgICAgeTogYWJzKHgyIC0geDApIDwgzrUgPyB5MiA6IHkxXG4gICAgICAgICAgfSA6IGFicyh5MyAtIHkxKSA8IM61ICYmIHgxIC0geDMgPiDOtSA/IHtcbiAgICAgICAgICAgIHg6IGFicyh5MiAtIHkxKSA8IM61ID8geDIgOiB4MSxcbiAgICAgICAgICAgIHk6IHkxXG4gICAgICAgICAgfSA6IGFicyh4MyAtIHgxKSA8IM61ICYmIHkzIC0geTAgPiDOtSA/IHtcbiAgICAgICAgICAgIHg6IHgxLFxuICAgICAgICAgICAgeTogYWJzKHgyIC0geDEpIDwgzrUgPyB5MiA6IHkwXG4gICAgICAgICAgfSA6IGFicyh5MyAtIHkwKSA8IM61ICYmIHgzIC0geDAgPiDOtSA/IHtcbiAgICAgICAgICAgIHg6IGFicyh5MiAtIHkwKSA8IM61ID8geDIgOiB4MCxcbiAgICAgICAgICAgIHk6IHkwXG4gICAgICAgICAgfSA6IG51bGwpLCBjZWxsLnNpdGUsIG51bGwpKTtcbiAgICAgICAgICArK25IYWxmRWRnZXM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pSGFsZkVkZ2VPcmRlcihhLCBiKSB7XG4gICAgcmV0dXJuIGIuYW5nbGUgLSBhLmFuZ2xlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaUNpcmNsZSgpIHtcbiAgICBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja05vZGUodGhpcyk7XG4gICAgdGhpcy54ID0gdGhpcy55ID0gdGhpcy5hcmMgPSB0aGlzLnNpdGUgPSB0aGlzLmN5ID0gbnVsbDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lBdHRhY2hDaXJjbGUoYXJjKSB7XG4gICAgdmFyIGxBcmMgPSBhcmMuUCwgckFyYyA9IGFyYy5OO1xuICAgIGlmICghbEFyYyB8fCAhckFyYykgcmV0dXJuO1xuICAgIHZhciBsU2l0ZSA9IGxBcmMuc2l0ZSwgY1NpdGUgPSBhcmMuc2l0ZSwgclNpdGUgPSByQXJjLnNpdGU7XG4gICAgaWYgKGxTaXRlID09PSByU2l0ZSkgcmV0dXJuO1xuICAgIHZhciBieCA9IGNTaXRlLngsIGJ5ID0gY1NpdGUueSwgYXggPSBsU2l0ZS54IC0gYngsIGF5ID0gbFNpdGUueSAtIGJ5LCBjeCA9IHJTaXRlLnggLSBieCwgY3kgPSByU2l0ZS55IC0gYnk7XG4gICAgdmFyIGQgPSAyICogKGF4ICogY3kgLSBheSAqIGN4KTtcbiAgICBpZiAoZCA+PSAtzrUyKSByZXR1cm47XG4gICAgdmFyIGhhID0gYXggKiBheCArIGF5ICogYXksIGhjID0gY3ggKiBjeCArIGN5ICogY3ksIHggPSAoY3kgKiBoYSAtIGF5ICogaGMpIC8gZCwgeSA9IChheCAqIGhjIC0gY3ggKiBoYSkgLyBkLCBjeSA9IHkgKyBieTtcbiAgICB2YXIgY2lyY2xlID0gZDNfZ2VvbV92b3Jvbm9pQ2lyY2xlUG9vbC5wb3AoKSB8fCBuZXcgZDNfZ2VvbV92b3Jvbm9pQ2lyY2xlKCk7XG4gICAgY2lyY2xlLmFyYyA9IGFyYztcbiAgICBjaXJjbGUuc2l0ZSA9IGNTaXRlO1xuICAgIGNpcmNsZS54ID0geCArIGJ4O1xuICAgIGNpcmNsZS55ID0gY3kgKyBNYXRoLnNxcnQoeCAqIHggKyB5ICogeSk7XG4gICAgY2lyY2xlLmN5ID0gY3k7XG4gICAgYXJjLmNpcmNsZSA9IGNpcmNsZTtcbiAgICB2YXIgYmVmb3JlID0gbnVsbCwgbm9kZSA9IGQzX2dlb21fdm9yb25vaUNpcmNsZXMuXztcbiAgICB3aGlsZSAobm9kZSkge1xuICAgICAgaWYgKGNpcmNsZS55IDwgbm9kZS55IHx8IGNpcmNsZS55ID09PSBub2RlLnkgJiYgY2lyY2xlLnggPD0gbm9kZS54KSB7XG4gICAgICAgIGlmIChub2RlLkwpIG5vZGUgPSBub2RlLkw7IGVsc2Uge1xuICAgICAgICAgIGJlZm9yZSA9IG5vZGUuUDtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKG5vZGUuUikgbm9kZSA9IG5vZGUuUjsgZWxzZSB7XG4gICAgICAgICAgYmVmb3JlID0gbm9kZTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBkM19nZW9tX3Zvcm9ub2lDaXJjbGVzLmluc2VydChiZWZvcmUsIGNpcmNsZSk7XG4gICAgaWYgKCFiZWZvcmUpIGQzX2dlb21fdm9yb25vaUZpcnN0Q2lyY2xlID0gY2lyY2xlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaURldGFjaENpcmNsZShhcmMpIHtcbiAgICB2YXIgY2lyY2xlID0gYXJjLmNpcmNsZTtcbiAgICBpZiAoY2lyY2xlKSB7XG4gICAgICBpZiAoIWNpcmNsZS5QKSBkM19nZW9tX3Zvcm9ub2lGaXJzdENpcmNsZSA9IGNpcmNsZS5OO1xuICAgICAgZDNfZ2VvbV92b3Jvbm9pQ2lyY2xlcy5yZW1vdmUoY2lyY2xlKTtcbiAgICAgIGQzX2dlb21fdm9yb25vaUNpcmNsZVBvb2wucHVzaChjaXJjbGUpO1xuICAgICAgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tOb2RlKGNpcmNsZSk7XG4gICAgICBhcmMuY2lyY2xlID0gbnVsbDtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pQ2xpcEVkZ2VzKGV4dGVudCkge1xuICAgIHZhciBlZGdlcyA9IGQzX2dlb21fdm9yb25vaUVkZ2VzLCBjbGlwID0gZDNfZ2VvbV9jbGlwTGluZShleHRlbnRbMF1bMF0sIGV4dGVudFswXVsxXSwgZXh0ZW50WzFdWzBdLCBleHRlbnRbMV1bMV0pLCBpID0gZWRnZXMubGVuZ3RoLCBlO1xuICAgIHdoaWxlIChpLS0pIHtcbiAgICAgIGUgPSBlZGdlc1tpXTtcbiAgICAgIGlmICghZDNfZ2VvbV92b3Jvbm9pQ29ubmVjdEVkZ2UoZSwgZXh0ZW50KSB8fCAhY2xpcChlKSB8fCBhYnMoZS5hLnggLSBlLmIueCkgPCDOtSAmJiBhYnMoZS5hLnkgLSBlLmIueSkgPCDOtSkge1xuICAgICAgICBlLmEgPSBlLmIgPSBudWxsO1xuICAgICAgICBlZGdlcy5zcGxpY2UoaSwgMSk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaUNvbm5lY3RFZGdlKGVkZ2UsIGV4dGVudCkge1xuICAgIHZhciB2YiA9IGVkZ2UuYjtcbiAgICBpZiAodmIpIHJldHVybiB0cnVlO1xuICAgIHZhciB2YSA9IGVkZ2UuYSwgeDAgPSBleHRlbnRbMF1bMF0sIHgxID0gZXh0ZW50WzFdWzBdLCB5MCA9IGV4dGVudFswXVsxXSwgeTEgPSBleHRlbnRbMV1bMV0sIGxTaXRlID0gZWRnZS5sLCByU2l0ZSA9IGVkZ2UuciwgbHggPSBsU2l0ZS54LCBseSA9IGxTaXRlLnksIHJ4ID0gclNpdGUueCwgcnkgPSByU2l0ZS55LCBmeCA9IChseCArIHJ4KSAvIDIsIGZ5ID0gKGx5ICsgcnkpIC8gMiwgZm0sIGZiO1xuICAgIGlmIChyeSA9PT0gbHkpIHtcbiAgICAgIGlmIChmeCA8IHgwIHx8IGZ4ID49IHgxKSByZXR1cm47XG4gICAgICBpZiAobHggPiByeCkge1xuICAgICAgICBpZiAoIXZhKSB2YSA9IHtcbiAgICAgICAgICB4OiBmeCxcbiAgICAgICAgICB5OiB5MFxuICAgICAgICB9OyBlbHNlIGlmICh2YS55ID49IHkxKSByZXR1cm47XG4gICAgICAgIHZiID0ge1xuICAgICAgICAgIHg6IGZ4LFxuICAgICAgICAgIHk6IHkxXG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoIXZhKSB2YSA9IHtcbiAgICAgICAgICB4OiBmeCxcbiAgICAgICAgICB5OiB5MVxuICAgICAgICB9OyBlbHNlIGlmICh2YS55IDwgeTApIHJldHVybjtcbiAgICAgICAgdmIgPSB7XG4gICAgICAgICAgeDogZngsXG4gICAgICAgICAgeTogeTBcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgZm0gPSAobHggLSByeCkgLyAocnkgLSBseSk7XG4gICAgICBmYiA9IGZ5IC0gZm0gKiBmeDtcbiAgICAgIGlmIChmbSA8IC0xIHx8IGZtID4gMSkge1xuICAgICAgICBpZiAobHggPiByeCkge1xuICAgICAgICAgIGlmICghdmEpIHZhID0ge1xuICAgICAgICAgICAgeDogKHkwIC0gZmIpIC8gZm0sXG4gICAgICAgICAgICB5OiB5MFxuICAgICAgICAgIH07IGVsc2UgaWYgKHZhLnkgPj0geTEpIHJldHVybjtcbiAgICAgICAgICB2YiA9IHtcbiAgICAgICAgICAgIHg6ICh5MSAtIGZiKSAvIGZtLFxuICAgICAgICAgICAgeTogeTFcbiAgICAgICAgICB9O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmICghdmEpIHZhID0ge1xuICAgICAgICAgICAgeDogKHkxIC0gZmIpIC8gZm0sXG4gICAgICAgICAgICB5OiB5MVxuICAgICAgICAgIH07IGVsc2UgaWYgKHZhLnkgPCB5MCkgcmV0dXJuO1xuICAgICAgICAgIHZiID0ge1xuICAgICAgICAgICAgeDogKHkwIC0gZmIpIC8gZm0sXG4gICAgICAgICAgICB5OiB5MFxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChseSA8IHJ5KSB7XG4gICAgICAgICAgaWYgKCF2YSkgdmEgPSB7XG4gICAgICAgICAgICB4OiB4MCxcbiAgICAgICAgICAgIHk6IGZtICogeDAgKyBmYlxuICAgICAgICAgIH07IGVsc2UgaWYgKHZhLnggPj0geDEpIHJldHVybjtcbiAgICAgICAgICB2YiA9IHtcbiAgICAgICAgICAgIHg6IHgxLFxuICAgICAgICAgICAgeTogZm0gKiB4MSArIGZiXG4gICAgICAgICAgfTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAoIXZhKSB2YSA9IHtcbiAgICAgICAgICAgIHg6IHgxLFxuICAgICAgICAgICAgeTogZm0gKiB4MSArIGZiXG4gICAgICAgICAgfTsgZWxzZSBpZiAodmEueCA8IHgwKSByZXR1cm47XG4gICAgICAgICAgdmIgPSB7XG4gICAgICAgICAgICB4OiB4MCxcbiAgICAgICAgICAgIHk6IGZtICogeDAgKyBmYlxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZWRnZS5hID0gdmE7XG4gICAgZWRnZS5iID0gdmI7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pRWRnZShsU2l0ZSwgclNpdGUpIHtcbiAgICB0aGlzLmwgPSBsU2l0ZTtcbiAgICB0aGlzLnIgPSByU2l0ZTtcbiAgICB0aGlzLmEgPSB0aGlzLmIgPSBudWxsO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaUNyZWF0ZUVkZ2UobFNpdGUsIHJTaXRlLCB2YSwgdmIpIHtcbiAgICB2YXIgZWRnZSA9IG5ldyBkM19nZW9tX3Zvcm9ub2lFZGdlKGxTaXRlLCByU2l0ZSk7XG4gICAgZDNfZ2VvbV92b3Jvbm9pRWRnZXMucHVzaChlZGdlKTtcbiAgICBpZiAodmEpIGQzX2dlb21fdm9yb25vaVNldEVkZ2VFbmQoZWRnZSwgbFNpdGUsIHJTaXRlLCB2YSk7XG4gICAgaWYgKHZiKSBkM19nZW9tX3Zvcm9ub2lTZXRFZGdlRW5kKGVkZ2UsIHJTaXRlLCBsU2l0ZSwgdmIpO1xuICAgIGQzX2dlb21fdm9yb25vaUNlbGxzW2xTaXRlLmldLmVkZ2VzLnB1c2gobmV3IGQzX2dlb21fdm9yb25vaUhhbGZFZGdlKGVkZ2UsIGxTaXRlLCByU2l0ZSkpO1xuICAgIGQzX2dlb21fdm9yb25vaUNlbGxzW3JTaXRlLmldLmVkZ2VzLnB1c2gobmV3IGQzX2dlb21fdm9yb25vaUhhbGZFZGdlKGVkZ2UsIHJTaXRlLCBsU2l0ZSkpO1xuICAgIHJldHVybiBlZGdlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaUNyZWF0ZUJvcmRlckVkZ2UobFNpdGUsIHZhLCB2Yikge1xuICAgIHZhciBlZGdlID0gbmV3IGQzX2dlb21fdm9yb25vaUVkZ2UobFNpdGUsIG51bGwpO1xuICAgIGVkZ2UuYSA9IHZhO1xuICAgIGVkZ2UuYiA9IHZiO1xuICAgIGQzX2dlb21fdm9yb25vaUVkZ2VzLnB1c2goZWRnZSk7XG4gICAgcmV0dXJuIGVkZ2U7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pU2V0RWRnZUVuZChlZGdlLCBsU2l0ZSwgclNpdGUsIHZlcnRleCkge1xuICAgIGlmICghZWRnZS5hICYmICFlZGdlLmIpIHtcbiAgICAgIGVkZ2UuYSA9IHZlcnRleDtcbiAgICAgIGVkZ2UubCA9IGxTaXRlO1xuICAgICAgZWRnZS5yID0gclNpdGU7XG4gICAgfSBlbHNlIGlmIChlZGdlLmwgPT09IHJTaXRlKSB7XG4gICAgICBlZGdlLmIgPSB2ZXJ0ZXg7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVkZ2UuYSA9IHZlcnRleDtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pSGFsZkVkZ2UoZWRnZSwgbFNpdGUsIHJTaXRlKSB7XG4gICAgdmFyIHZhID0gZWRnZS5hLCB2YiA9IGVkZ2UuYjtcbiAgICB0aGlzLmVkZ2UgPSBlZGdlO1xuICAgIHRoaXMuc2l0ZSA9IGxTaXRlO1xuICAgIHRoaXMuYW5nbGUgPSByU2l0ZSA/IE1hdGguYXRhbjIoclNpdGUueSAtIGxTaXRlLnksIHJTaXRlLnggLSBsU2l0ZS54KSA6IGVkZ2UubCA9PT0gbFNpdGUgPyBNYXRoLmF0YW4yKHZiLnggLSB2YS54LCB2YS55IC0gdmIueSkgOiBNYXRoLmF0YW4yKHZhLnggLSB2Yi54LCB2Yi55IC0gdmEueSk7XG4gIH1cbiAgZDNfZ2VvbV92b3Jvbm9pSGFsZkVkZ2UucHJvdG90eXBlID0ge1xuICAgIHN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiB0aGlzLmVkZ2UubCA9PT0gdGhpcy5zaXRlID8gdGhpcy5lZGdlLmEgOiB0aGlzLmVkZ2UuYjtcbiAgICB9LFxuICAgIGVuZDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5lZGdlLmwgPT09IHRoaXMuc2l0ZSA/IHRoaXMuZWRnZS5iIDogdGhpcy5lZGdlLmE7XG4gICAgfVxuICB9O1xuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1RyZWUoKSB7XG4gICAgdGhpcy5fID0gbnVsbDtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja05vZGUobm9kZSkge1xuICAgIG5vZGUuVSA9IG5vZGUuQyA9IG5vZGUuTCA9IG5vZGUuUiA9IG5vZGUuUCA9IG5vZGUuTiA9IG51bGw7XG4gIH1cbiAgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tUcmVlLnByb3RvdHlwZSA9IHtcbiAgICBpbnNlcnQ6IGZ1bmN0aW9uKGFmdGVyLCBub2RlKSB7XG4gICAgICB2YXIgcGFyZW50LCBncmFuZHBhLCB1bmNsZTtcbiAgICAgIGlmIChhZnRlcikge1xuICAgICAgICBub2RlLlAgPSBhZnRlcjtcbiAgICAgICAgbm9kZS5OID0gYWZ0ZXIuTjtcbiAgICAgICAgaWYgKGFmdGVyLk4pIGFmdGVyLk4uUCA9IG5vZGU7XG4gICAgICAgIGFmdGVyLk4gPSBub2RlO1xuICAgICAgICBpZiAoYWZ0ZXIuUikge1xuICAgICAgICAgIGFmdGVyID0gYWZ0ZXIuUjtcbiAgICAgICAgICB3aGlsZSAoYWZ0ZXIuTCkgYWZ0ZXIgPSBhZnRlci5MO1xuICAgICAgICAgIGFmdGVyLkwgPSBub2RlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGFmdGVyLlIgPSBub2RlO1xuICAgICAgICB9XG4gICAgICAgIHBhcmVudCA9IGFmdGVyO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLl8pIHtcbiAgICAgICAgYWZ0ZXIgPSBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja0ZpcnN0KHRoaXMuXyk7XG4gICAgICAgIG5vZGUuUCA9IG51bGw7XG4gICAgICAgIG5vZGUuTiA9IGFmdGVyO1xuICAgICAgICBhZnRlci5QID0gYWZ0ZXIuTCA9IG5vZGU7XG4gICAgICAgIHBhcmVudCA9IGFmdGVyO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbm9kZS5QID0gbm9kZS5OID0gbnVsbDtcbiAgICAgICAgdGhpcy5fID0gbm9kZTtcbiAgICAgICAgcGFyZW50ID0gbnVsbDtcbiAgICAgIH1cbiAgICAgIG5vZGUuTCA9IG5vZGUuUiA9IG51bGw7XG4gICAgICBub2RlLlUgPSBwYXJlbnQ7XG4gICAgICBub2RlLkMgPSB0cnVlO1xuICAgICAgYWZ0ZXIgPSBub2RlO1xuICAgICAgd2hpbGUgKHBhcmVudCAmJiBwYXJlbnQuQykge1xuICAgICAgICBncmFuZHBhID0gcGFyZW50LlU7XG4gICAgICAgIGlmIChwYXJlbnQgPT09IGdyYW5kcGEuTCkge1xuICAgICAgICAgIHVuY2xlID0gZ3JhbmRwYS5SO1xuICAgICAgICAgIGlmICh1bmNsZSAmJiB1bmNsZS5DKSB7XG4gICAgICAgICAgICBwYXJlbnQuQyA9IHVuY2xlLkMgPSBmYWxzZTtcbiAgICAgICAgICAgIGdyYW5kcGEuQyA9IHRydWU7XG4gICAgICAgICAgICBhZnRlciA9IGdyYW5kcGE7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmIChhZnRlciA9PT0gcGFyZW50LlIpIHtcbiAgICAgICAgICAgICAgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tSb3RhdGVMZWZ0KHRoaXMsIHBhcmVudCk7XG4gICAgICAgICAgICAgIGFmdGVyID0gcGFyZW50O1xuICAgICAgICAgICAgICBwYXJlbnQgPSBhZnRlci5VO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcGFyZW50LkMgPSBmYWxzZTtcbiAgICAgICAgICAgIGdyYW5kcGEuQyA9IHRydWU7XG4gICAgICAgICAgICBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1JvdGF0ZVJpZ2h0KHRoaXMsIGdyYW5kcGEpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB1bmNsZSA9IGdyYW5kcGEuTDtcbiAgICAgICAgICBpZiAodW5jbGUgJiYgdW5jbGUuQykge1xuICAgICAgICAgICAgcGFyZW50LkMgPSB1bmNsZS5DID0gZmFsc2U7XG4gICAgICAgICAgICBncmFuZHBhLkMgPSB0cnVlO1xuICAgICAgICAgICAgYWZ0ZXIgPSBncmFuZHBhO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAoYWZ0ZXIgPT09IHBhcmVudC5MKSB7XG4gICAgICAgICAgICAgIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrUm90YXRlUmlnaHQodGhpcywgcGFyZW50KTtcbiAgICAgICAgICAgICAgYWZ0ZXIgPSBwYXJlbnQ7XG4gICAgICAgICAgICAgIHBhcmVudCA9IGFmdGVyLlU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwYXJlbnQuQyA9IGZhbHNlO1xuICAgICAgICAgICAgZ3JhbmRwYS5DID0gdHJ1ZTtcbiAgICAgICAgICAgIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrUm90YXRlTGVmdCh0aGlzLCBncmFuZHBhKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcGFyZW50ID0gYWZ0ZXIuVTtcbiAgICAgIH1cbiAgICAgIHRoaXMuXy5DID0gZmFsc2U7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgIGlmIChub2RlLk4pIG5vZGUuTi5QID0gbm9kZS5QO1xuICAgICAgaWYgKG5vZGUuUCkgbm9kZS5QLk4gPSBub2RlLk47XG4gICAgICBub2RlLk4gPSBub2RlLlAgPSBudWxsO1xuICAgICAgdmFyIHBhcmVudCA9IG5vZGUuVSwgc2libGluZywgbGVmdCA9IG5vZGUuTCwgcmlnaHQgPSBub2RlLlIsIG5leHQsIHJlZDtcbiAgICAgIGlmICghbGVmdCkgbmV4dCA9IHJpZ2h0OyBlbHNlIGlmICghcmlnaHQpIG5leHQgPSBsZWZ0OyBlbHNlIG5leHQgPSBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja0ZpcnN0KHJpZ2h0KTtcbiAgICAgIGlmIChwYXJlbnQpIHtcbiAgICAgICAgaWYgKHBhcmVudC5MID09PSBub2RlKSBwYXJlbnQuTCA9IG5leHQ7IGVsc2UgcGFyZW50LlIgPSBuZXh0O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5fID0gbmV4dDtcbiAgICAgIH1cbiAgICAgIGlmIChsZWZ0ICYmIHJpZ2h0KSB7XG4gICAgICAgIHJlZCA9IG5leHQuQztcbiAgICAgICAgbmV4dC5DID0gbm9kZS5DO1xuICAgICAgICBuZXh0LkwgPSBsZWZ0O1xuICAgICAgICBsZWZ0LlUgPSBuZXh0O1xuICAgICAgICBpZiAobmV4dCAhPT0gcmlnaHQpIHtcbiAgICAgICAgICBwYXJlbnQgPSBuZXh0LlU7XG4gICAgICAgICAgbmV4dC5VID0gbm9kZS5VO1xuICAgICAgICAgIG5vZGUgPSBuZXh0LlI7XG4gICAgICAgICAgcGFyZW50LkwgPSBub2RlO1xuICAgICAgICAgIG5leHQuUiA9IHJpZ2h0O1xuICAgICAgICAgIHJpZ2h0LlUgPSBuZXh0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIG5leHQuVSA9IHBhcmVudDtcbiAgICAgICAgICBwYXJlbnQgPSBuZXh0O1xuICAgICAgICAgIG5vZGUgPSBuZXh0LlI7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlZCA9IG5vZGUuQztcbiAgICAgICAgbm9kZSA9IG5leHQ7XG4gICAgICB9XG4gICAgICBpZiAobm9kZSkgbm9kZS5VID0gcGFyZW50O1xuICAgICAgaWYgKHJlZCkgcmV0dXJuO1xuICAgICAgaWYgKG5vZGUgJiYgbm9kZS5DKSB7XG4gICAgICAgIG5vZGUuQyA9IGZhbHNlO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBkbyB7XG4gICAgICAgIGlmIChub2RlID09PSB0aGlzLl8pIGJyZWFrO1xuICAgICAgICBpZiAobm9kZSA9PT0gcGFyZW50LkwpIHtcbiAgICAgICAgICBzaWJsaW5nID0gcGFyZW50LlI7XG4gICAgICAgICAgaWYgKHNpYmxpbmcuQykge1xuICAgICAgICAgICAgc2libGluZy5DID0gZmFsc2U7XG4gICAgICAgICAgICBwYXJlbnQuQyA9IHRydWU7XG4gICAgICAgICAgICBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1JvdGF0ZUxlZnQodGhpcywgcGFyZW50KTtcbiAgICAgICAgICAgIHNpYmxpbmcgPSBwYXJlbnQuUjtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHNpYmxpbmcuTCAmJiBzaWJsaW5nLkwuQyB8fCBzaWJsaW5nLlIgJiYgc2libGluZy5SLkMpIHtcbiAgICAgICAgICAgIGlmICghc2libGluZy5SIHx8ICFzaWJsaW5nLlIuQykge1xuICAgICAgICAgICAgICBzaWJsaW5nLkwuQyA9IGZhbHNlO1xuICAgICAgICAgICAgICBzaWJsaW5nLkMgPSB0cnVlO1xuICAgICAgICAgICAgICBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1JvdGF0ZVJpZ2h0KHRoaXMsIHNpYmxpbmcpO1xuICAgICAgICAgICAgICBzaWJsaW5nID0gcGFyZW50LlI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzaWJsaW5nLkMgPSBwYXJlbnQuQztcbiAgICAgICAgICAgIHBhcmVudC5DID0gc2libGluZy5SLkMgPSBmYWxzZTtcbiAgICAgICAgICAgIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrUm90YXRlTGVmdCh0aGlzLCBwYXJlbnQpO1xuICAgICAgICAgICAgbm9kZSA9IHRoaXMuXztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzaWJsaW5nID0gcGFyZW50Lkw7XG4gICAgICAgICAgaWYgKHNpYmxpbmcuQykge1xuICAgICAgICAgICAgc2libGluZy5DID0gZmFsc2U7XG4gICAgICAgICAgICBwYXJlbnQuQyA9IHRydWU7XG4gICAgICAgICAgICBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1JvdGF0ZVJpZ2h0KHRoaXMsIHBhcmVudCk7XG4gICAgICAgICAgICBzaWJsaW5nID0gcGFyZW50Lkw7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChzaWJsaW5nLkwgJiYgc2libGluZy5MLkMgfHwgc2libGluZy5SICYmIHNpYmxpbmcuUi5DKSB7XG4gICAgICAgICAgICBpZiAoIXNpYmxpbmcuTCB8fCAhc2libGluZy5MLkMpIHtcbiAgICAgICAgICAgICAgc2libGluZy5SLkMgPSBmYWxzZTtcbiAgICAgICAgICAgICAgc2libGluZy5DID0gdHJ1ZTtcbiAgICAgICAgICAgICAgZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tSb3RhdGVMZWZ0KHRoaXMsIHNpYmxpbmcpO1xuICAgICAgICAgICAgICBzaWJsaW5nID0gcGFyZW50Lkw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzaWJsaW5nLkMgPSBwYXJlbnQuQztcbiAgICAgICAgICAgIHBhcmVudC5DID0gc2libGluZy5MLkMgPSBmYWxzZTtcbiAgICAgICAgICAgIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrUm90YXRlUmlnaHQodGhpcywgcGFyZW50KTtcbiAgICAgICAgICAgIG5vZGUgPSB0aGlzLl87XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgc2libGluZy5DID0gdHJ1ZTtcbiAgICAgICAgbm9kZSA9IHBhcmVudDtcbiAgICAgICAgcGFyZW50ID0gcGFyZW50LlU7XG4gICAgICB9IHdoaWxlICghbm9kZS5DKTtcbiAgICAgIGlmIChub2RlKSBub2RlLkMgPSBmYWxzZTtcbiAgICB9XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaVJlZEJsYWNrUm90YXRlTGVmdCh0cmVlLCBub2RlKSB7XG4gICAgdmFyIHAgPSBub2RlLCBxID0gbm9kZS5SLCBwYXJlbnQgPSBwLlU7XG4gICAgaWYgKHBhcmVudCkge1xuICAgICAgaWYgKHBhcmVudC5MID09PSBwKSBwYXJlbnQuTCA9IHE7IGVsc2UgcGFyZW50LlIgPSBxO1xuICAgIH0gZWxzZSB7XG4gICAgICB0cmVlLl8gPSBxO1xuICAgIH1cbiAgICBxLlUgPSBwYXJlbnQ7XG4gICAgcC5VID0gcTtcbiAgICBwLlIgPSBxLkw7XG4gICAgaWYgKHAuUikgcC5SLlUgPSBwO1xuICAgIHEuTCA9IHA7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tSb3RhdGVSaWdodCh0cmVlLCBub2RlKSB7XG4gICAgdmFyIHAgPSBub2RlLCBxID0gbm9kZS5MLCBwYXJlbnQgPSBwLlU7XG4gICAgaWYgKHBhcmVudCkge1xuICAgICAgaWYgKHBhcmVudC5MID09PSBwKSBwYXJlbnQuTCA9IHE7IGVsc2UgcGFyZW50LlIgPSBxO1xuICAgIH0gZWxzZSB7XG4gICAgICB0cmVlLl8gPSBxO1xuICAgIH1cbiAgICBxLlUgPSBwYXJlbnQ7XG4gICAgcC5VID0gcTtcbiAgICBwLkwgPSBxLlI7XG4gICAgaWYgKHAuTCkgcC5MLlUgPSBwO1xuICAgIHEuUiA9IHA7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pUmVkQmxhY2tGaXJzdChub2RlKSB7XG4gICAgd2hpbGUgKG5vZGUuTCkgbm9kZSA9IG5vZGUuTDtcbiAgICByZXR1cm4gbm9kZTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3Zvcm9ub2koc2l0ZXMsIGJib3gpIHtcbiAgICB2YXIgc2l0ZSA9IHNpdGVzLnNvcnQoZDNfZ2VvbV92b3Jvbm9pVmVydGV4T3JkZXIpLnBvcCgpLCB4MCwgeTAsIGNpcmNsZTtcbiAgICBkM19nZW9tX3Zvcm9ub2lFZGdlcyA9IFtdO1xuICAgIGQzX2dlb21fdm9yb25vaUNlbGxzID0gbmV3IEFycmF5KHNpdGVzLmxlbmd0aCk7XG4gICAgZDNfZ2VvbV92b3Jvbm9pQmVhY2hlcyA9IG5ldyBkM19nZW9tX3Zvcm9ub2lSZWRCbGFja1RyZWUoKTtcbiAgICBkM19nZW9tX3Zvcm9ub2lDaXJjbGVzID0gbmV3IGQzX2dlb21fdm9yb25vaVJlZEJsYWNrVHJlZSgpO1xuICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICBjaXJjbGUgPSBkM19nZW9tX3Zvcm9ub2lGaXJzdENpcmNsZTtcbiAgICAgIGlmIChzaXRlICYmICghY2lyY2xlIHx8IHNpdGUueSA8IGNpcmNsZS55IHx8IHNpdGUueSA9PT0gY2lyY2xlLnkgJiYgc2l0ZS54IDwgY2lyY2xlLngpKSB7XG4gICAgICAgIGlmIChzaXRlLnggIT09IHgwIHx8IHNpdGUueSAhPT0geTApIHtcbiAgICAgICAgICBkM19nZW9tX3Zvcm9ub2lDZWxsc1tzaXRlLmldID0gbmV3IGQzX2dlb21fdm9yb25vaUNlbGwoc2l0ZSk7XG4gICAgICAgICAgZDNfZ2VvbV92b3Jvbm9pQWRkQmVhY2goc2l0ZSk7XG4gICAgICAgICAgeDAgPSBzaXRlLngsIHkwID0gc2l0ZS55O1xuICAgICAgICB9XG4gICAgICAgIHNpdGUgPSBzaXRlcy5wb3AoKTtcbiAgICAgIH0gZWxzZSBpZiAoY2lyY2xlKSB7XG4gICAgICAgIGQzX2dlb21fdm9yb25vaVJlbW92ZUJlYWNoKGNpcmNsZS5hcmMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChiYm94KSBkM19nZW9tX3Zvcm9ub2lDbGlwRWRnZXMoYmJveCksIGQzX2dlb21fdm9yb25vaUNsb3NlQ2VsbHMoYmJveCk7XG4gICAgdmFyIGRpYWdyYW0gPSB7XG4gICAgICBjZWxsczogZDNfZ2VvbV92b3Jvbm9pQ2VsbHMsXG4gICAgICBlZGdlczogZDNfZ2VvbV92b3Jvbm9pRWRnZXNcbiAgICB9O1xuICAgIGQzX2dlb21fdm9yb25vaUJlYWNoZXMgPSBkM19nZW9tX3Zvcm9ub2lDaXJjbGVzID0gZDNfZ2VvbV92b3Jvbm9pRWRnZXMgPSBkM19nZW9tX3Zvcm9ub2lDZWxscyA9IG51bGw7XG4gICAgcmV0dXJuIGRpYWdyYW07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV92b3Jvbm9pVmVydGV4T3JkZXIoYSwgYikge1xuICAgIHJldHVybiBiLnkgLSBhLnkgfHwgYi54IC0gYS54O1xuICB9XG4gIGQzLmdlb20udm9yb25vaSA9IGZ1bmN0aW9uKHBvaW50cykge1xuICAgIHZhciB4ID0gZDNfZ2VvbV9wb2ludFgsIHkgPSBkM19nZW9tX3BvaW50WSwgZnggPSB4LCBmeSA9IHksIGNsaXBFeHRlbnQgPSBkM19nZW9tX3Zvcm9ub2lDbGlwRXh0ZW50O1xuICAgIGlmIChwb2ludHMpIHJldHVybiB2b3Jvbm9pKHBvaW50cyk7XG4gICAgZnVuY3Rpb24gdm9yb25vaShkYXRhKSB7XG4gICAgICB2YXIgcG9seWdvbnMgPSBuZXcgQXJyYXkoZGF0YS5sZW5ndGgpLCB4MCA9IGNsaXBFeHRlbnRbMF1bMF0sIHkwID0gY2xpcEV4dGVudFswXVsxXSwgeDEgPSBjbGlwRXh0ZW50WzFdWzBdLCB5MSA9IGNsaXBFeHRlbnRbMV1bMV07XG4gICAgICBkM19nZW9tX3Zvcm9ub2koc2l0ZXMoZGF0YSksIGNsaXBFeHRlbnQpLmNlbGxzLmZvckVhY2goZnVuY3Rpb24oY2VsbCwgaSkge1xuICAgICAgICB2YXIgZWRnZXMgPSBjZWxsLmVkZ2VzLCBzaXRlID0gY2VsbC5zaXRlLCBwb2x5Z29uID0gcG9seWdvbnNbaV0gPSBlZGdlcy5sZW5ndGggPyBlZGdlcy5tYXAoZnVuY3Rpb24oZSkge1xuICAgICAgICAgIHZhciBzID0gZS5zdGFydCgpO1xuICAgICAgICAgIHJldHVybiBbIHMueCwgcy55IF07XG4gICAgICAgIH0pIDogc2l0ZS54ID49IHgwICYmIHNpdGUueCA8PSB4MSAmJiBzaXRlLnkgPj0geTAgJiYgc2l0ZS55IDw9IHkxID8gWyBbIHgwLCB5MSBdLCBbIHgxLCB5MSBdLCBbIHgxLCB5MCBdLCBbIHgwLCB5MCBdIF0gOiBbXTtcbiAgICAgICAgcG9seWdvbi5wb2ludCA9IGRhdGFbaV07XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBwb2x5Z29ucztcbiAgICB9XG4gICAgZnVuY3Rpb24gc2l0ZXMoZGF0YSkge1xuICAgICAgcmV0dXJuIGRhdGEubWFwKGZ1bmN0aW9uKGQsIGkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB4OiBNYXRoLnJvdW5kKGZ4KGQsIGkpIC8gzrUpICogzrUsXG4gICAgICAgICAgeTogTWF0aC5yb3VuZChmeShkLCBpKSAvIM61KSAqIM61LFxuICAgICAgICAgIGk6IGlcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICB2b3Jvbm9pLmxpbmtzID0gZnVuY3Rpb24oZGF0YSkge1xuICAgICAgcmV0dXJuIGQzX2dlb21fdm9yb25vaShzaXRlcyhkYXRhKSkuZWRnZXMuZmlsdGVyKGZ1bmN0aW9uKGVkZ2UpIHtcbiAgICAgICAgcmV0dXJuIGVkZ2UubCAmJiBlZGdlLnI7XG4gICAgICB9KS5tYXAoZnVuY3Rpb24oZWRnZSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHNvdXJjZTogZGF0YVtlZGdlLmwuaV0sXG4gICAgICAgICAgdGFyZ2V0OiBkYXRhW2VkZ2Uuci5pXVxuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgfTtcbiAgICB2b3Jvbm9pLnRyaWFuZ2xlcyA9IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgIHZhciB0cmlhbmdsZXMgPSBbXTtcbiAgICAgIGQzX2dlb21fdm9yb25vaShzaXRlcyhkYXRhKSkuY2VsbHMuZm9yRWFjaChmdW5jdGlvbihjZWxsLCBpKSB7XG4gICAgICAgIHZhciBzaXRlID0gY2VsbC5zaXRlLCBlZGdlcyA9IGNlbGwuZWRnZXMuc29ydChkM19nZW9tX3Zvcm9ub2lIYWxmRWRnZU9yZGVyKSwgaiA9IC0xLCBtID0gZWRnZXMubGVuZ3RoLCBlMCwgczAsIGUxID0gZWRnZXNbbSAtIDFdLmVkZ2UsIHMxID0gZTEubCA9PT0gc2l0ZSA/IGUxLnIgOiBlMS5sO1xuICAgICAgICB3aGlsZSAoKytqIDwgbSkge1xuICAgICAgICAgIGUwID0gZTE7XG4gICAgICAgICAgczAgPSBzMTtcbiAgICAgICAgICBlMSA9IGVkZ2VzW2pdLmVkZ2U7XG4gICAgICAgICAgczEgPSBlMS5sID09PSBzaXRlID8gZTEuciA6IGUxLmw7XG4gICAgICAgICAgaWYgKGkgPCBzMC5pICYmIGkgPCBzMS5pICYmIGQzX2dlb21fdm9yb25vaVRyaWFuZ2xlQXJlYShzaXRlLCBzMCwgczEpIDwgMCkge1xuICAgICAgICAgICAgdHJpYW5nbGVzLnB1c2goWyBkYXRhW2ldLCBkYXRhW3MwLmldLCBkYXRhW3MxLmldIF0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gdHJpYW5nbGVzO1xuICAgIH07XG4gICAgdm9yb25vaS54ID0gZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZnggPSBkM19mdW5jdG9yKHggPSBfKSwgdm9yb25vaSkgOiB4O1xuICAgIH07XG4gICAgdm9yb25vaS55ID0gZnVuY3Rpb24oXykge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyAoZnkgPSBkM19mdW5jdG9yKHkgPSBfKSwgdm9yb25vaSkgOiB5O1xuICAgIH07XG4gICAgdm9yb25vaS5jbGlwRXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gY2xpcEV4dGVudCA9PT0gZDNfZ2VvbV92b3Jvbm9pQ2xpcEV4dGVudCA/IG51bGwgOiBjbGlwRXh0ZW50O1xuICAgICAgY2xpcEV4dGVudCA9IF8gPT0gbnVsbCA/IGQzX2dlb21fdm9yb25vaUNsaXBFeHRlbnQgOiBfO1xuICAgICAgcmV0dXJuIHZvcm9ub2k7XG4gICAgfTtcbiAgICB2b3Jvbm9pLnNpemUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBjbGlwRXh0ZW50ID09PSBkM19nZW9tX3Zvcm9ub2lDbGlwRXh0ZW50ID8gbnVsbCA6IGNsaXBFeHRlbnQgJiYgY2xpcEV4dGVudFsxXTtcbiAgICAgIHJldHVybiB2b3Jvbm9pLmNsaXBFeHRlbnQoXyAmJiBbIFsgMCwgMCBdLCBfIF0pO1xuICAgIH07XG4gICAgcmV0dXJuIHZvcm9ub2k7XG4gIH07XG4gIHZhciBkM19nZW9tX3Zvcm9ub2lDbGlwRXh0ZW50ID0gWyBbIC0xZTYsIC0xZTYgXSwgWyAxZTYsIDFlNiBdIF07XG4gIGZ1bmN0aW9uIGQzX2dlb21fdm9yb25vaVRyaWFuZ2xlQXJlYShhLCBiLCBjKSB7XG4gICAgcmV0dXJuIChhLnggLSBjLngpICogKGIueSAtIGEueSkgLSAoYS54IC0gYi54KSAqIChjLnkgLSBhLnkpO1xuICB9XG4gIGQzLmdlb20uZGVsYXVuYXkgPSBmdW5jdGlvbih2ZXJ0aWNlcykge1xuICAgIHJldHVybiBkMy5nZW9tLnZvcm9ub2koKS50cmlhbmdsZXModmVydGljZXMpO1xuICB9O1xuICBkMy5nZW9tLnF1YWR0cmVlID0gZnVuY3Rpb24ocG9pbnRzLCB4MSwgeTEsIHgyLCB5Mikge1xuICAgIHZhciB4ID0gZDNfZ2VvbV9wb2ludFgsIHkgPSBkM19nZW9tX3BvaW50WSwgY29tcGF0O1xuICAgIGlmIChjb21wYXQgPSBhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICB4ID0gZDNfZ2VvbV9xdWFkdHJlZUNvbXBhdFg7XG4gICAgICB5ID0gZDNfZ2VvbV9xdWFkdHJlZUNvbXBhdFk7XG4gICAgICBpZiAoY29tcGF0ID09PSAzKSB7XG4gICAgICAgIHkyID0geTE7XG4gICAgICAgIHgyID0geDE7XG4gICAgICAgIHkxID0geDEgPSAwO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHF1YWR0cmVlKHBvaW50cyk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHF1YWR0cmVlKGRhdGEpIHtcbiAgICAgIHZhciBkLCBmeCA9IGQzX2Z1bmN0b3IoeCksIGZ5ID0gZDNfZnVuY3Rvcih5KSwgeHMsIHlzLCBpLCBuLCB4MV8sIHkxXywgeDJfLCB5Ml87XG4gICAgICBpZiAoeDEgIT0gbnVsbCkge1xuICAgICAgICB4MV8gPSB4MSwgeTFfID0geTEsIHgyXyA9IHgyLCB5Ml8gPSB5MjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHgyXyA9IHkyXyA9IC0oeDFfID0geTFfID0gSW5maW5pdHkpO1xuICAgICAgICB4cyA9IFtdLCB5cyA9IFtdO1xuICAgICAgICBuID0gZGF0YS5sZW5ndGg7XG4gICAgICAgIGlmIChjb21wYXQpIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgICBkID0gZGF0YVtpXTtcbiAgICAgICAgICBpZiAoZC54IDwgeDFfKSB4MV8gPSBkLng7XG4gICAgICAgICAgaWYgKGQueSA8IHkxXykgeTFfID0gZC55O1xuICAgICAgICAgIGlmIChkLnggPiB4Ml8pIHgyXyA9IGQueDtcbiAgICAgICAgICBpZiAoZC55ID4geTJfKSB5Ml8gPSBkLnk7XG4gICAgICAgICAgeHMucHVzaChkLngpO1xuICAgICAgICAgIHlzLnB1c2goZC55KTtcbiAgICAgICAgfSBlbHNlIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgICB2YXIgeF8gPSArZngoZCA9IGRhdGFbaV0sIGkpLCB5XyA9ICtmeShkLCBpKTtcbiAgICAgICAgICBpZiAoeF8gPCB4MV8pIHgxXyA9IHhfO1xuICAgICAgICAgIGlmICh5XyA8IHkxXykgeTFfID0geV87XG4gICAgICAgICAgaWYgKHhfID4geDJfKSB4Ml8gPSB4XztcbiAgICAgICAgICBpZiAoeV8gPiB5Ml8pIHkyXyA9IHlfO1xuICAgICAgICAgIHhzLnB1c2goeF8pO1xuICAgICAgICAgIHlzLnB1c2goeV8pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB2YXIgZHggPSB4Ml8gLSB4MV8sIGR5ID0geTJfIC0geTFfO1xuICAgICAgaWYgKGR4ID4gZHkpIHkyXyA9IHkxXyArIGR4OyBlbHNlIHgyXyA9IHgxXyArIGR5O1xuICAgICAgZnVuY3Rpb24gaW5zZXJ0KG4sIGQsIHgsIHksIHgxLCB5MSwgeDIsIHkyKSB7XG4gICAgICAgIGlmIChpc05hTih4KSB8fCBpc05hTih5KSkgcmV0dXJuO1xuICAgICAgICBpZiAobi5sZWFmKSB7XG4gICAgICAgICAgdmFyIG54ID0gbi54LCBueSA9IG4ueTtcbiAgICAgICAgICBpZiAobnggIT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKGFicyhueCAtIHgpICsgYWJzKG55IC0geSkgPCAuMDEpIHtcbiAgICAgICAgICAgICAgaW5zZXJ0Q2hpbGQobiwgZCwgeCwgeSwgeDEsIHkxLCB4MiwgeTIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdmFyIG5Qb2ludCA9IG4ucG9pbnQ7XG4gICAgICAgICAgICAgIG4ueCA9IG4ueSA9IG4ucG9pbnQgPSBudWxsO1xuICAgICAgICAgICAgICBpbnNlcnRDaGlsZChuLCBuUG9pbnQsIG54LCBueSwgeDEsIHkxLCB4MiwgeTIpO1xuICAgICAgICAgICAgICBpbnNlcnRDaGlsZChuLCBkLCB4LCB5LCB4MSwgeTEsIHgyLCB5Mik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG4ueCA9IHgsIG4ueSA9IHksIG4ucG9pbnQgPSBkO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpbnNlcnRDaGlsZChuLCBkLCB4LCB5LCB4MSwgeTEsIHgyLCB5Mik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGluc2VydENoaWxkKG4sIGQsIHgsIHksIHgxLCB5MSwgeDIsIHkyKSB7XG4gICAgICAgIHZhciBzeCA9ICh4MSArIHgyKSAqIC41LCBzeSA9ICh5MSArIHkyKSAqIC41LCByaWdodCA9IHggPj0gc3gsIGJvdHRvbSA9IHkgPj0gc3ksIGkgPSAoYm90dG9tIDw8IDEpICsgcmlnaHQ7XG4gICAgICAgIG4ubGVhZiA9IGZhbHNlO1xuICAgICAgICBuID0gbi5ub2Rlc1tpXSB8fCAobi5ub2Rlc1tpXSA9IGQzX2dlb21fcXVhZHRyZWVOb2RlKCkpO1xuICAgICAgICBpZiAocmlnaHQpIHgxID0gc3g7IGVsc2UgeDIgPSBzeDtcbiAgICAgICAgaWYgKGJvdHRvbSkgeTEgPSBzeTsgZWxzZSB5MiA9IHN5O1xuICAgICAgICBpbnNlcnQobiwgZCwgeCwgeSwgeDEsIHkxLCB4MiwgeTIpO1xuICAgICAgfVxuICAgICAgdmFyIHJvb3QgPSBkM19nZW9tX3F1YWR0cmVlTm9kZSgpO1xuICAgICAgcm9vdC5hZGQgPSBmdW5jdGlvbihkKSB7XG4gICAgICAgIGluc2VydChyb290LCBkLCArZngoZCwgKytpKSwgK2Z5KGQsIGkpLCB4MV8sIHkxXywgeDJfLCB5Ml8pO1xuICAgICAgfTtcbiAgICAgIHJvb3QudmlzaXQgPSBmdW5jdGlvbihmKSB7XG4gICAgICAgIGQzX2dlb21fcXVhZHRyZWVWaXNpdChmLCByb290LCB4MV8sIHkxXywgeDJfLCB5Ml8pO1xuICAgICAgfTtcbiAgICAgIGkgPSAtMTtcbiAgICAgIGlmICh4MSA9PSBudWxsKSB7XG4gICAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgICAgaW5zZXJ0KHJvb3QsIGRhdGFbaV0sIHhzW2ldLCB5c1tpXSwgeDFfLCB5MV8sIHgyXywgeTJfKTtcbiAgICAgICAgfVxuICAgICAgICAtLWk7XG4gICAgICB9IGVsc2UgZGF0YS5mb3JFYWNoKHJvb3QuYWRkKTtcbiAgICAgIHhzID0geXMgPSBkYXRhID0gZCA9IG51bGw7XG4gICAgICByZXR1cm4gcm9vdDtcbiAgICB9XG4gICAgcXVhZHRyZWUueCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHggPSBfLCBxdWFkdHJlZSkgOiB4O1xuICAgIH07XG4gICAgcXVhZHRyZWUueSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIHJldHVybiBhcmd1bWVudHMubGVuZ3RoID8gKHkgPSBfLCBxdWFkdHJlZSkgOiB5O1xuICAgIH07XG4gICAgcXVhZHRyZWUuZXh0ZW50ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geDEgPT0gbnVsbCA/IG51bGwgOiBbIFsgeDEsIHkxIF0sIFsgeDIsIHkyIF0gXTtcbiAgICAgIGlmIChfID09IG51bGwpIHgxID0geTEgPSB4MiA9IHkyID0gbnVsbDsgZWxzZSB4MSA9ICtfWzBdWzBdLCB5MSA9ICtfWzBdWzFdLCB4MiA9ICtfWzFdWzBdLCBcbiAgICAgIHkyID0gK19bMV1bMV07XG4gICAgICByZXR1cm4gcXVhZHRyZWU7XG4gICAgfTtcbiAgICBxdWFkdHJlZS5zaXplID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geDEgPT0gbnVsbCA/IG51bGwgOiBbIHgyIC0geDEsIHkyIC0geTEgXTtcbiAgICAgIGlmIChfID09IG51bGwpIHgxID0geTEgPSB4MiA9IHkyID0gbnVsbDsgZWxzZSB4MSA9IHkxID0gMCwgeDIgPSArX1swXSwgeTIgPSArX1sxXTtcbiAgICAgIHJldHVybiBxdWFkdHJlZTtcbiAgICB9O1xuICAgIHJldHVybiBxdWFkdHJlZTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZ2VvbV9xdWFkdHJlZUNvbXBhdFgoZCkge1xuICAgIHJldHVybiBkLng7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV9xdWFkdHJlZUNvbXBhdFkoZCkge1xuICAgIHJldHVybiBkLnk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfZ2VvbV9xdWFkdHJlZU5vZGUoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGxlYWY6IHRydWUsXG4gICAgICBub2RlczogW10sXG4gICAgICBwb2ludDogbnVsbCxcbiAgICAgIHg6IG51bGwsXG4gICAgICB5OiBudWxsXG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19nZW9tX3F1YWR0cmVlVmlzaXQoZiwgbm9kZSwgeDEsIHkxLCB4MiwgeTIpIHtcbiAgICBpZiAoIWYobm9kZSwgeDEsIHkxLCB4MiwgeTIpKSB7XG4gICAgICB2YXIgc3ggPSAoeDEgKyB4MikgKiAuNSwgc3kgPSAoeTEgKyB5MikgKiAuNSwgY2hpbGRyZW4gPSBub2RlLm5vZGVzO1xuICAgICAgaWYgKGNoaWxkcmVuWzBdKSBkM19nZW9tX3F1YWR0cmVlVmlzaXQoZiwgY2hpbGRyZW5bMF0sIHgxLCB5MSwgc3gsIHN5KTtcbiAgICAgIGlmIChjaGlsZHJlblsxXSkgZDNfZ2VvbV9xdWFkdHJlZVZpc2l0KGYsIGNoaWxkcmVuWzFdLCBzeCwgeTEsIHgyLCBzeSk7XG4gICAgICBpZiAoY2hpbGRyZW5bMl0pIGQzX2dlb21fcXVhZHRyZWVWaXNpdChmLCBjaGlsZHJlblsyXSwgeDEsIHN5LCBzeCwgeTIpO1xuICAgICAgaWYgKGNoaWxkcmVuWzNdKSBkM19nZW9tX3F1YWR0cmVlVmlzaXQoZiwgY2hpbGRyZW5bM10sIHN4LCBzeSwgeDIsIHkyKTtcbiAgICB9XG4gIH1cbiAgZDMuaW50ZXJwb2xhdGVSZ2IgPSBkM19pbnRlcnBvbGF0ZVJnYjtcbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGVSZ2IoYSwgYikge1xuICAgIGEgPSBkMy5yZ2IoYSk7XG4gICAgYiA9IGQzLnJnYihiKTtcbiAgICB2YXIgYXIgPSBhLnIsIGFnID0gYS5nLCBhYiA9IGEuYiwgYnIgPSBiLnIgLSBhciwgYmcgPSBiLmcgLSBhZywgYmIgPSBiLmIgLSBhYjtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIFwiI1wiICsgZDNfcmdiX2hleChNYXRoLnJvdW5kKGFyICsgYnIgKiB0KSkgKyBkM19yZ2JfaGV4KE1hdGgucm91bmQoYWcgKyBiZyAqIHQpKSArIGQzX3JnYl9oZXgoTWF0aC5yb3VuZChhYiArIGJiICogdCkpO1xuICAgIH07XG4gIH1cbiAgZDMuaW50ZXJwb2xhdGVPYmplY3QgPSBkM19pbnRlcnBvbGF0ZU9iamVjdDtcbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGVPYmplY3QoYSwgYikge1xuICAgIHZhciBpID0ge30sIGMgPSB7fSwgaztcbiAgICBmb3IgKGsgaW4gYSkge1xuICAgICAgaWYgKGsgaW4gYikge1xuICAgICAgICBpW2tdID0gZDNfaW50ZXJwb2xhdGUoYVtrXSwgYltrXSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjW2tdID0gYVtrXTtcbiAgICAgIH1cbiAgICB9XG4gICAgZm9yIChrIGluIGIpIHtcbiAgICAgIGlmICghKGsgaW4gYSkpIHtcbiAgICAgICAgY1trXSA9IGJba107XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICBmb3IgKGsgaW4gaSkgY1trXSA9IGlba10odCk7XG4gICAgICByZXR1cm4gYztcbiAgICB9O1xuICB9XG4gIGQzLmludGVycG9sYXRlTnVtYmVyID0gZDNfaW50ZXJwb2xhdGVOdW1iZXI7XG4gIGZ1bmN0aW9uIGQzX2ludGVycG9sYXRlTnVtYmVyKGEsIGIpIHtcbiAgICBiIC09IGEgPSArYTtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIGEgKyBiICogdDtcbiAgICB9O1xuICB9XG4gIGQzLmludGVycG9sYXRlU3RyaW5nID0gZDNfaW50ZXJwb2xhdGVTdHJpbmc7XG4gIGZ1bmN0aW9uIGQzX2ludGVycG9sYXRlU3RyaW5nKGEsIGIpIHtcbiAgICB2YXIgYmkgPSBkM19pbnRlcnBvbGF0ZV9udW1iZXJBLmxhc3RJbmRleCA9IGQzX2ludGVycG9sYXRlX251bWJlckIubGFzdEluZGV4ID0gMCwgYW0sIGJtLCBicywgaSA9IC0xLCBzID0gW10sIHEgPSBbXTtcbiAgICBhID0gYSArIFwiXCIsIGIgPSBiICsgXCJcIjtcbiAgICB3aGlsZSAoKGFtID0gZDNfaW50ZXJwb2xhdGVfbnVtYmVyQS5leGVjKGEpKSAmJiAoYm0gPSBkM19pbnRlcnBvbGF0ZV9udW1iZXJCLmV4ZWMoYikpKSB7XG4gICAgICBpZiAoKGJzID0gYm0uaW5kZXgpID4gYmkpIHtcbiAgICAgICAgYnMgPSBiLnN1YnN0cmluZyhiaSwgYnMpO1xuICAgICAgICBpZiAoc1tpXSkgc1tpXSArPSBiczsgZWxzZSBzWysraV0gPSBicztcbiAgICAgIH1cbiAgICAgIGlmICgoYW0gPSBhbVswXSkgPT09IChibSA9IGJtWzBdKSkge1xuICAgICAgICBpZiAoc1tpXSkgc1tpXSArPSBibTsgZWxzZSBzWysraV0gPSBibTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNbKytpXSA9IG51bGw7XG4gICAgICAgIHEucHVzaCh7XG4gICAgICAgICAgaTogaSxcbiAgICAgICAgICB4OiBkM19pbnRlcnBvbGF0ZU51bWJlcihhbSwgYm0pXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgICAgYmkgPSBkM19pbnRlcnBvbGF0ZV9udW1iZXJCLmxhc3RJbmRleDtcbiAgICB9XG4gICAgaWYgKGJpIDwgYi5sZW5ndGgpIHtcbiAgICAgIGJzID0gYi5zdWJzdHJpbmcoYmkpO1xuICAgICAgaWYgKHNbaV0pIHNbaV0gKz0gYnM7IGVsc2Ugc1srK2ldID0gYnM7XG4gICAgfVxuICAgIHJldHVybiBzLmxlbmd0aCA8IDIgPyBxWzBdID8gKGIgPSBxWzBdLngsIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHJldHVybiBiKHQpICsgXCJcIjtcbiAgICB9KSA6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGI7XG4gICAgfSA6IChiID0gcS5sZW5ndGgsIGZ1bmN0aW9uKHQpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwLCBvOyBpIDwgYjsgKytpKSBzWyhvID0gcVtpXSkuaV0gPSBvLngodCk7XG4gICAgICByZXR1cm4gcy5qb2luKFwiXCIpO1xuICAgIH0pO1xuICB9XG4gIHZhciBkM19pbnRlcnBvbGF0ZV9udW1iZXJBID0gL1stK10/KD86XFxkK1xcLj9cXGQqfFxcLj9cXGQrKSg/OltlRV1bLStdP1xcZCspPy9nLCBkM19pbnRlcnBvbGF0ZV9udW1iZXJCID0gbmV3IFJlZ0V4cChkM19pbnRlcnBvbGF0ZV9udW1iZXJBLnNvdXJjZSwgXCJnXCIpO1xuICBkMy5pbnRlcnBvbGF0ZSA9IGQzX2ludGVycG9sYXRlO1xuICBmdW5jdGlvbiBkM19pbnRlcnBvbGF0ZShhLCBiKSB7XG4gICAgdmFyIGkgPSBkMy5pbnRlcnBvbGF0b3JzLmxlbmd0aCwgZjtcbiAgICB3aGlsZSAoLS1pID49IDAgJiYgIShmID0gZDMuaW50ZXJwb2xhdG9yc1tpXShhLCBiKSkpIDtcbiAgICByZXR1cm4gZjtcbiAgfVxuICBkMy5pbnRlcnBvbGF0b3JzID0gWyBmdW5jdGlvbihhLCBiKSB7XG4gICAgdmFyIHQgPSB0eXBlb2YgYjtcbiAgICByZXR1cm4gKHQgPT09IFwic3RyaW5nXCIgPyBkM19yZ2JfbmFtZXMuaGFzKGIpIHx8IC9eKCN8cmdiXFwofGhzbFxcKCkvLnRlc3QoYikgPyBkM19pbnRlcnBvbGF0ZVJnYiA6IGQzX2ludGVycG9sYXRlU3RyaW5nIDogYiBpbnN0YW5jZW9mIGQzX0NvbG9yID8gZDNfaW50ZXJwb2xhdGVSZ2IgOiBBcnJheS5pc0FycmF5KGIpID8gZDNfaW50ZXJwb2xhdGVBcnJheSA6IHQgPT09IFwib2JqZWN0XCIgJiYgaXNOYU4oYikgPyBkM19pbnRlcnBvbGF0ZU9iamVjdCA6IGQzX2ludGVycG9sYXRlTnVtYmVyKShhLCBiKTtcbiAgfSBdO1xuICBkMy5pbnRlcnBvbGF0ZUFycmF5ID0gZDNfaW50ZXJwb2xhdGVBcnJheTtcbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGVBcnJheShhLCBiKSB7XG4gICAgdmFyIHggPSBbXSwgYyA9IFtdLCBuYSA9IGEubGVuZ3RoLCBuYiA9IGIubGVuZ3RoLCBuMCA9IE1hdGgubWluKGEubGVuZ3RoLCBiLmxlbmd0aCksIGk7XG4gICAgZm9yIChpID0gMDsgaSA8IG4wOyArK2kpIHgucHVzaChkM19pbnRlcnBvbGF0ZShhW2ldLCBiW2ldKSk7XG4gICAgZm9yICg7aSA8IG5hOyArK2kpIGNbaV0gPSBhW2ldO1xuICAgIGZvciAoO2kgPCBuYjsgKytpKSBjW2ldID0gYltpXTtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgZm9yIChpID0gMDsgaSA8IG4wOyArK2kpIGNbaV0gPSB4W2ldKHQpO1xuICAgICAgcmV0dXJuIGM7XG4gICAgfTtcbiAgfVxuICB2YXIgZDNfZWFzZV9kZWZhdWx0ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX2lkZW50aXR5O1xuICB9O1xuICB2YXIgZDNfZWFzZSA9IGQzLm1hcCh7XG4gICAgbGluZWFyOiBkM19lYXNlX2RlZmF1bHQsXG4gICAgcG9seTogZDNfZWFzZV9wb2x5LFxuICAgIHF1YWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX2Vhc2VfcXVhZDtcbiAgICB9LFxuICAgIGN1YmljOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19lYXNlX2N1YmljO1xuICAgIH0sXG4gICAgc2luOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19lYXNlX3NpbjtcbiAgICB9LFxuICAgIGV4cDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfZWFzZV9leHA7XG4gICAgfSxcbiAgICBjaXJjbGU6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX2Vhc2VfY2lyY2xlO1xuICAgIH0sXG4gICAgZWxhc3RpYzogZDNfZWFzZV9lbGFzdGljLFxuICAgIGJhY2s6IGQzX2Vhc2VfYmFjayxcbiAgICBib3VuY2U6IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX2Vhc2VfYm91bmNlO1xuICAgIH1cbiAgfSk7XG4gIHZhciBkM19lYXNlX21vZGUgPSBkMy5tYXAoe1xuICAgIFwiaW5cIjogZDNfaWRlbnRpdHksXG4gICAgb3V0OiBkM19lYXNlX3JldmVyc2UsXG4gICAgXCJpbi1vdXRcIjogZDNfZWFzZV9yZWZsZWN0LFxuICAgIFwib3V0LWluXCI6IGZ1bmN0aW9uKGYpIHtcbiAgICAgIHJldHVybiBkM19lYXNlX3JlZmxlY3QoZDNfZWFzZV9yZXZlcnNlKGYpKTtcbiAgICB9XG4gIH0pO1xuICBkMy5lYXNlID0gZnVuY3Rpb24obmFtZSkge1xuICAgIHZhciBpID0gbmFtZS5pbmRleE9mKFwiLVwiKSwgdCA9IGkgPj0gMCA/IG5hbWUuc3Vic3RyaW5nKDAsIGkpIDogbmFtZSwgbSA9IGkgPj0gMCA/IG5hbWUuc3Vic3RyaW5nKGkgKyAxKSA6IFwiaW5cIjtcbiAgICB0ID0gZDNfZWFzZS5nZXQodCkgfHwgZDNfZWFzZV9kZWZhdWx0O1xuICAgIG0gPSBkM19lYXNlX21vZGUuZ2V0KG0pIHx8IGQzX2lkZW50aXR5O1xuICAgIHJldHVybiBkM19lYXNlX2NsYW1wKG0odC5hcHBseShudWxsLCBkM19hcnJheVNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKSkpKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfZWFzZV9jbGFtcChmKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHJldHVybiB0IDw9IDAgPyAwIDogdCA+PSAxID8gMSA6IGYodCk7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19lYXNlX3JldmVyc2UoZikge1xuICAgIHJldHVybiBmdW5jdGlvbih0KSB7XG4gICAgICByZXR1cm4gMSAtIGYoMSAtIHQpO1xuICAgIH07XG4gIH1cbiAgZnVuY3Rpb24gZDNfZWFzZV9yZWZsZWN0KGYpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIC41ICogKHQgPCAuNSA/IGYoMiAqIHQpIDogMiAtIGYoMiAtIDIgKiB0KSk7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19lYXNlX3F1YWQodCkge1xuICAgIHJldHVybiB0ICogdDtcbiAgfVxuICBmdW5jdGlvbiBkM19lYXNlX2N1YmljKHQpIHtcbiAgICByZXR1cm4gdCAqIHQgKiB0O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2Vhc2VfY3ViaWNJbk91dCh0KSB7XG4gICAgaWYgKHQgPD0gMCkgcmV0dXJuIDA7XG4gICAgaWYgKHQgPj0gMSkgcmV0dXJuIDE7XG4gICAgdmFyIHQyID0gdCAqIHQsIHQzID0gdDIgKiB0O1xuICAgIHJldHVybiA0ICogKHQgPCAuNSA/IHQzIDogMyAqICh0IC0gdDIpICsgdDMgLSAuNzUpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2Vhc2VfcG9seShlKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHJldHVybiBNYXRoLnBvdyh0LCBlKTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2Vhc2Vfc2luKHQpIHtcbiAgICByZXR1cm4gMSAtIE1hdGguY29zKHQgKiBoYWxmz4ApO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2Vhc2VfZXhwKHQpIHtcbiAgICByZXR1cm4gTWF0aC5wb3coMiwgMTAgKiAodCAtIDEpKTtcbiAgfVxuICBmdW5jdGlvbiBkM19lYXNlX2NpcmNsZSh0KSB7XG4gICAgcmV0dXJuIDEgLSBNYXRoLnNxcnQoMSAtIHQgKiB0KTtcbiAgfVxuICBmdW5jdGlvbiBkM19lYXNlX2VsYXN0aWMoYSwgcCkge1xuICAgIHZhciBzO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikgcCA9IC40NTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCkgcyA9IHAgLyDPhCAqIE1hdGguYXNpbigxIC8gYSk7IGVsc2UgYSA9IDEsIHMgPSBwIC8gNDtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIDEgKyBhICogTWF0aC5wb3coMiwgLTEwICogdCkgKiBNYXRoLnNpbigodCAtIHMpICogz4QgLyBwKTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2Vhc2VfYmFjayhzKSB7XG4gICAgaWYgKCFzKSBzID0gMS43MDE1ODtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIHQgKiB0ICogKChzICsgMSkgKiB0IC0gcyk7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19lYXNlX2JvdW5jZSh0KSB7XG4gICAgcmV0dXJuIHQgPCAxIC8gMi43NSA/IDcuNTYyNSAqIHQgKiB0IDogdCA8IDIgLyAyLjc1ID8gNy41NjI1ICogKHQgLT0gMS41IC8gMi43NSkgKiB0ICsgLjc1IDogdCA8IDIuNSAvIDIuNzUgPyA3LjU2MjUgKiAodCAtPSAyLjI1IC8gMi43NSkgKiB0ICsgLjkzNzUgOiA3LjU2MjUgKiAodCAtPSAyLjYyNSAvIDIuNzUpICogdCArIC45ODQzNzU7XG4gIH1cbiAgZDMuaW50ZXJwb2xhdGVIY2wgPSBkM19pbnRlcnBvbGF0ZUhjbDtcbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGVIY2woYSwgYikge1xuICAgIGEgPSBkMy5oY2woYSk7XG4gICAgYiA9IGQzLmhjbChiKTtcbiAgICB2YXIgYWggPSBhLmgsIGFjID0gYS5jLCBhbCA9IGEubCwgYmggPSBiLmggLSBhaCwgYmMgPSBiLmMgLSBhYywgYmwgPSBiLmwgLSBhbDtcbiAgICBpZiAoaXNOYU4oYmMpKSBiYyA9IDAsIGFjID0gaXNOYU4oYWMpID8gYi5jIDogYWM7XG4gICAgaWYgKGlzTmFOKGJoKSkgYmggPSAwLCBhaCA9IGlzTmFOKGFoKSA/IGIuaCA6IGFoOyBlbHNlIGlmIChiaCA+IDE4MCkgYmggLT0gMzYwOyBlbHNlIGlmIChiaCA8IC0xODApIGJoICs9IDM2MDtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIGQzX2hjbF9sYWIoYWggKyBiaCAqIHQsIGFjICsgYmMgKiB0LCBhbCArIGJsICogdCkgKyBcIlwiO1xuICAgIH07XG4gIH1cbiAgZDMuaW50ZXJwb2xhdGVIc2wgPSBkM19pbnRlcnBvbGF0ZUhzbDtcbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGVIc2woYSwgYikge1xuICAgIGEgPSBkMy5oc2woYSk7XG4gICAgYiA9IGQzLmhzbChiKTtcbiAgICB2YXIgYWggPSBhLmgsIGFzID0gYS5zLCBhbCA9IGEubCwgYmggPSBiLmggLSBhaCwgYnMgPSBiLnMgLSBhcywgYmwgPSBiLmwgLSBhbDtcbiAgICBpZiAoaXNOYU4oYnMpKSBicyA9IDAsIGFzID0gaXNOYU4oYXMpID8gYi5zIDogYXM7XG4gICAgaWYgKGlzTmFOKGJoKSkgYmggPSAwLCBhaCA9IGlzTmFOKGFoKSA/IGIuaCA6IGFoOyBlbHNlIGlmIChiaCA+IDE4MCkgYmggLT0gMzYwOyBlbHNlIGlmIChiaCA8IC0xODApIGJoICs9IDM2MDtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIGQzX2hzbF9yZ2IoYWggKyBiaCAqIHQsIGFzICsgYnMgKiB0LCBhbCArIGJsICogdCkgKyBcIlwiO1xuICAgIH07XG4gIH1cbiAgZDMuaW50ZXJwb2xhdGVMYWIgPSBkM19pbnRlcnBvbGF0ZUxhYjtcbiAgZnVuY3Rpb24gZDNfaW50ZXJwb2xhdGVMYWIoYSwgYikge1xuICAgIGEgPSBkMy5sYWIoYSk7XG4gICAgYiA9IGQzLmxhYihiKTtcbiAgICB2YXIgYWwgPSBhLmwsIGFhID0gYS5hLCBhYiA9IGEuYiwgYmwgPSBiLmwgLSBhbCwgYmEgPSBiLmEgLSBhYSwgYmIgPSBiLmIgLSBhYjtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIGQzX2xhYl9yZ2IoYWwgKyBibCAqIHQsIGFhICsgYmEgKiB0LCBhYiArIGJiICogdCkgKyBcIlwiO1xuICAgIH07XG4gIH1cbiAgZDMuaW50ZXJwb2xhdGVSb3VuZCA9IGQzX2ludGVycG9sYXRlUm91bmQ7XG4gIGZ1bmN0aW9uIGQzX2ludGVycG9sYXRlUm91bmQoYSwgYikge1xuICAgIGIgLT0gYTtcbiAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgcmV0dXJuIE1hdGgucm91bmQoYSArIGIgKiB0KTtcbiAgICB9O1xuICB9XG4gIGQzLnRyYW5zZm9ybSA9IGZ1bmN0aW9uKHN0cmluZykge1xuICAgIHZhciBnID0gZDNfZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKGQzLm5zLnByZWZpeC5zdmcsIFwiZ1wiKTtcbiAgICByZXR1cm4gKGQzLnRyYW5zZm9ybSA9IGZ1bmN0aW9uKHN0cmluZykge1xuICAgICAgaWYgKHN0cmluZyAhPSBudWxsKSB7XG4gICAgICAgIGcuc2V0QXR0cmlidXRlKFwidHJhbnNmb3JtXCIsIHN0cmluZyk7XG4gICAgICAgIHZhciB0ID0gZy50cmFuc2Zvcm0uYmFzZVZhbC5jb25zb2xpZGF0ZSgpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIG5ldyBkM190cmFuc2Zvcm0odCA/IHQubWF0cml4IDogZDNfdHJhbnNmb3JtSWRlbnRpdHkpO1xuICAgIH0pKHN0cmluZyk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3RyYW5zZm9ybShtKSB7XG4gICAgdmFyIHIwID0gWyBtLmEsIG0uYiBdLCByMSA9IFsgbS5jLCBtLmQgXSwga3ggPSBkM190cmFuc2Zvcm1Ob3JtYWxpemUocjApLCBreiA9IGQzX3RyYW5zZm9ybURvdChyMCwgcjEpLCBreSA9IGQzX3RyYW5zZm9ybU5vcm1hbGl6ZShkM190cmFuc2Zvcm1Db21iaW5lKHIxLCByMCwgLWt6KSkgfHwgMDtcbiAgICBpZiAocjBbMF0gKiByMVsxXSA8IHIxWzBdICogcjBbMV0pIHtcbiAgICAgIHIwWzBdICo9IC0xO1xuICAgICAgcjBbMV0gKj0gLTE7XG4gICAgICBreCAqPSAtMTtcbiAgICAgIGt6ICo9IC0xO1xuICAgIH1cbiAgICB0aGlzLnJvdGF0ZSA9IChreCA/IE1hdGguYXRhbjIocjBbMV0sIHIwWzBdKSA6IE1hdGguYXRhbjIoLXIxWzBdLCByMVsxXSkpICogZDNfZGVncmVlcztcbiAgICB0aGlzLnRyYW5zbGF0ZSA9IFsgbS5lLCBtLmYgXTtcbiAgICB0aGlzLnNjYWxlID0gWyBreCwga3kgXTtcbiAgICB0aGlzLnNrZXcgPSBreSA/IE1hdGguYXRhbjIoa3osIGt5KSAqIGQzX2RlZ3JlZXMgOiAwO1xuICB9XG4gIGQzX3RyYW5zZm9ybS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gXCJ0cmFuc2xhdGUoXCIgKyB0aGlzLnRyYW5zbGF0ZSArIFwiKXJvdGF0ZShcIiArIHRoaXMucm90YXRlICsgXCIpc2tld1goXCIgKyB0aGlzLnNrZXcgKyBcIilzY2FsZShcIiArIHRoaXMuc2NhbGUgKyBcIilcIjtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfdHJhbnNmb3JtRG90KGEsIGIpIHtcbiAgICByZXR1cm4gYVswXSAqIGJbMF0gKyBhWzFdICogYlsxXTtcbiAgfVxuICBmdW5jdGlvbiBkM190cmFuc2Zvcm1Ob3JtYWxpemUoYSkge1xuICAgIHZhciBrID0gTWF0aC5zcXJ0KGQzX3RyYW5zZm9ybURvdChhLCBhKSk7XG4gICAgaWYgKGspIHtcbiAgICAgIGFbMF0gLz0gaztcbiAgICAgIGFbMV0gLz0gaztcbiAgICB9XG4gICAgcmV0dXJuIGs7XG4gIH1cbiAgZnVuY3Rpb24gZDNfdHJhbnNmb3JtQ29tYmluZShhLCBiLCBrKSB7XG4gICAgYVswXSArPSBrICogYlswXTtcbiAgICBhWzFdICs9IGsgKiBiWzFdO1xuICAgIHJldHVybiBhO1xuICB9XG4gIHZhciBkM190cmFuc2Zvcm1JZGVudGl0eSA9IHtcbiAgICBhOiAxLFxuICAgIGI6IDAsXG4gICAgYzogMCxcbiAgICBkOiAxLFxuICAgIGU6IDAsXG4gICAgZjogMFxuICB9O1xuICBkMy5pbnRlcnBvbGF0ZVRyYW5zZm9ybSA9IGQzX2ludGVycG9sYXRlVHJhbnNmb3JtO1xuICBmdW5jdGlvbiBkM19pbnRlcnBvbGF0ZVRyYW5zZm9ybShhLCBiKSB7XG4gICAgdmFyIHMgPSBbXSwgcSA9IFtdLCBuLCBBID0gZDMudHJhbnNmb3JtKGEpLCBCID0gZDMudHJhbnNmb3JtKGIpLCB0YSA9IEEudHJhbnNsYXRlLCB0YiA9IEIudHJhbnNsYXRlLCByYSA9IEEucm90YXRlLCByYiA9IEIucm90YXRlLCB3YSA9IEEuc2tldywgd2IgPSBCLnNrZXcsIGthID0gQS5zY2FsZSwga2IgPSBCLnNjYWxlO1xuICAgIGlmICh0YVswXSAhPSB0YlswXSB8fCB0YVsxXSAhPSB0YlsxXSkge1xuICAgICAgcy5wdXNoKFwidHJhbnNsYXRlKFwiLCBudWxsLCBcIixcIiwgbnVsbCwgXCIpXCIpO1xuICAgICAgcS5wdXNoKHtcbiAgICAgICAgaTogMSxcbiAgICAgICAgeDogZDNfaW50ZXJwb2xhdGVOdW1iZXIodGFbMF0sIHRiWzBdKVxuICAgICAgfSwge1xuICAgICAgICBpOiAzLFxuICAgICAgICB4OiBkM19pbnRlcnBvbGF0ZU51bWJlcih0YVsxXSwgdGJbMV0pXG4gICAgICB9KTtcbiAgICB9IGVsc2UgaWYgKHRiWzBdIHx8IHRiWzFdKSB7XG4gICAgICBzLnB1c2goXCJ0cmFuc2xhdGUoXCIgKyB0YiArIFwiKVwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcy5wdXNoKFwiXCIpO1xuICAgIH1cbiAgICBpZiAocmEgIT0gcmIpIHtcbiAgICAgIGlmIChyYSAtIHJiID4gMTgwKSByYiArPSAzNjA7IGVsc2UgaWYgKHJiIC0gcmEgPiAxODApIHJhICs9IDM2MDtcbiAgICAgIHEucHVzaCh7XG4gICAgICAgIGk6IHMucHVzaChzLnBvcCgpICsgXCJyb3RhdGUoXCIsIG51bGwsIFwiKVwiKSAtIDIsXG4gICAgICAgIHg6IGQzX2ludGVycG9sYXRlTnVtYmVyKHJhLCByYilcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAocmIpIHtcbiAgICAgIHMucHVzaChzLnBvcCgpICsgXCJyb3RhdGUoXCIgKyByYiArIFwiKVwiKTtcbiAgICB9XG4gICAgaWYgKHdhICE9IHdiKSB7XG4gICAgICBxLnB1c2goe1xuICAgICAgICBpOiBzLnB1c2gocy5wb3AoKSArIFwic2tld1goXCIsIG51bGwsIFwiKVwiKSAtIDIsXG4gICAgICAgIHg6IGQzX2ludGVycG9sYXRlTnVtYmVyKHdhLCB3YilcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAod2IpIHtcbiAgICAgIHMucHVzaChzLnBvcCgpICsgXCJza2V3WChcIiArIHdiICsgXCIpXCIpO1xuICAgIH1cbiAgICBpZiAoa2FbMF0gIT0ga2JbMF0gfHwga2FbMV0gIT0ga2JbMV0pIHtcbiAgICAgIG4gPSBzLnB1c2gocy5wb3AoKSArIFwic2NhbGUoXCIsIG51bGwsIFwiLFwiLCBudWxsLCBcIilcIik7XG4gICAgICBxLnB1c2goe1xuICAgICAgICBpOiBuIC0gNCxcbiAgICAgICAgeDogZDNfaW50ZXJwb2xhdGVOdW1iZXIoa2FbMF0sIGtiWzBdKVxuICAgICAgfSwge1xuICAgICAgICBpOiBuIC0gMixcbiAgICAgICAgeDogZDNfaW50ZXJwb2xhdGVOdW1iZXIoa2FbMV0sIGtiWzFdKVxuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChrYlswXSAhPSAxIHx8IGtiWzFdICE9IDEpIHtcbiAgICAgIHMucHVzaChzLnBvcCgpICsgXCJzY2FsZShcIiArIGtiICsgXCIpXCIpO1xuICAgIH1cbiAgICBuID0gcS5sZW5ndGg7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHQpIHtcbiAgICAgIHZhciBpID0gLTEsIG87XG4gICAgICB3aGlsZSAoKytpIDwgbikgc1sobyA9IHFbaV0pLmldID0gby54KHQpO1xuICAgICAgcmV0dXJuIHMuam9pbihcIlwiKTtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX3VuaW50ZXJwb2xhdGVOdW1iZXIoYSwgYikge1xuICAgIGIgPSBiIC0gKGEgPSArYSkgPyAxIC8gKGIgLSBhKSA6IDA7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKHgpIHtcbiAgICAgIHJldHVybiAoeCAtIGEpICogYjtcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX3VuaW50ZXJwb2xhdGVDbGFtcChhLCBiKSB7XG4gICAgYiA9IGIgLSAoYSA9ICthKSA/IDEgLyAoYiAtIGEpIDogMDtcbiAgICByZXR1cm4gZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgubWluKDEsICh4IC0gYSkgKiBiKSk7XG4gICAgfTtcbiAgfVxuICBkMy5sYXlvdXQgPSB7fTtcbiAgZDMubGF5b3V0LmJ1bmRsZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBmdW5jdGlvbihsaW5rcykge1xuICAgICAgdmFyIHBhdGhzID0gW10sIGkgPSAtMSwgbiA9IGxpbmtzLmxlbmd0aDtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBwYXRocy5wdXNoKGQzX2xheW91dF9idW5kbGVQYXRoKGxpbmtzW2ldKSk7XG4gICAgICByZXR1cm4gcGF0aHM7XG4gICAgfTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2J1bmRsZVBhdGgobGluaykge1xuICAgIHZhciBzdGFydCA9IGxpbmsuc291cmNlLCBlbmQgPSBsaW5rLnRhcmdldCwgbGNhID0gZDNfbGF5b3V0X2J1bmRsZUxlYXN0Q29tbW9uQW5jZXN0b3Ioc3RhcnQsIGVuZCksIHBvaW50cyA9IFsgc3RhcnQgXTtcbiAgICB3aGlsZSAoc3RhcnQgIT09IGxjYSkge1xuICAgICAgc3RhcnQgPSBzdGFydC5wYXJlbnQ7XG4gICAgICBwb2ludHMucHVzaChzdGFydCk7XG4gICAgfVxuICAgIHZhciBrID0gcG9pbnRzLmxlbmd0aDtcbiAgICB3aGlsZSAoZW5kICE9PSBsY2EpIHtcbiAgICAgIHBvaW50cy5zcGxpY2UoaywgMCwgZW5kKTtcbiAgICAgIGVuZCA9IGVuZC5wYXJlbnQ7XG4gICAgfVxuICAgIHJldHVybiBwb2ludHM7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2J1bmRsZUFuY2VzdG9ycyhub2RlKSB7XG4gICAgdmFyIGFuY2VzdG9ycyA9IFtdLCBwYXJlbnQgPSBub2RlLnBhcmVudDtcbiAgICB3aGlsZSAocGFyZW50ICE9IG51bGwpIHtcbiAgICAgIGFuY2VzdG9ycy5wdXNoKG5vZGUpO1xuICAgICAgbm9kZSA9IHBhcmVudDtcbiAgICAgIHBhcmVudCA9IHBhcmVudC5wYXJlbnQ7XG4gICAgfVxuICAgIGFuY2VzdG9ycy5wdXNoKG5vZGUpO1xuICAgIHJldHVybiBhbmNlc3RvcnM7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2J1bmRsZUxlYXN0Q29tbW9uQW5jZXN0b3IoYSwgYikge1xuICAgIGlmIChhID09PSBiKSByZXR1cm4gYTtcbiAgICB2YXIgYU5vZGVzID0gZDNfbGF5b3V0X2J1bmRsZUFuY2VzdG9ycyhhKSwgYk5vZGVzID0gZDNfbGF5b3V0X2J1bmRsZUFuY2VzdG9ycyhiKSwgYU5vZGUgPSBhTm9kZXMucG9wKCksIGJOb2RlID0gYk5vZGVzLnBvcCgpLCBzaGFyZWROb2RlID0gbnVsbDtcbiAgICB3aGlsZSAoYU5vZGUgPT09IGJOb2RlKSB7XG4gICAgICBzaGFyZWROb2RlID0gYU5vZGU7XG4gICAgICBhTm9kZSA9IGFOb2Rlcy5wb3AoKTtcbiAgICAgIGJOb2RlID0gYk5vZGVzLnBvcCgpO1xuICAgIH1cbiAgICByZXR1cm4gc2hhcmVkTm9kZTtcbiAgfVxuICBkMy5sYXlvdXQuY2hvcmQgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgY2hvcmQgPSB7fSwgY2hvcmRzLCBncm91cHMsIG1hdHJpeCwgbiwgcGFkZGluZyA9IDAsIHNvcnRHcm91cHMsIHNvcnRTdWJncm91cHMsIHNvcnRDaG9yZHM7XG4gICAgZnVuY3Rpb24gcmVsYXlvdXQoKSB7XG4gICAgICB2YXIgc3ViZ3JvdXBzID0ge30sIGdyb3VwU3VtcyA9IFtdLCBncm91cEluZGV4ID0gZDMucmFuZ2UobiksIHN1Ymdyb3VwSW5kZXggPSBbXSwgaywgeCwgeDAsIGksIGo7XG4gICAgICBjaG9yZHMgPSBbXTtcbiAgICAgIGdyb3VwcyA9IFtdO1xuICAgICAgayA9IDAsIGkgPSAtMTtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgIHggPSAwLCBqID0gLTE7XG4gICAgICAgIHdoaWxlICgrK2ogPCBuKSB7XG4gICAgICAgICAgeCArPSBtYXRyaXhbaV1bal07XG4gICAgICAgIH1cbiAgICAgICAgZ3JvdXBTdW1zLnB1c2goeCk7XG4gICAgICAgIHN1Ymdyb3VwSW5kZXgucHVzaChkMy5yYW5nZShuKSk7XG4gICAgICAgIGsgKz0geDtcbiAgICAgIH1cbiAgICAgIGlmIChzb3J0R3JvdXBzKSB7XG4gICAgICAgIGdyb3VwSW5kZXguc29ydChmdW5jdGlvbihhLCBiKSB7XG4gICAgICAgICAgcmV0dXJuIHNvcnRHcm91cHMoZ3JvdXBTdW1zW2FdLCBncm91cFN1bXNbYl0pO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGlmIChzb3J0U3ViZ3JvdXBzKSB7XG4gICAgICAgIHN1Ymdyb3VwSW5kZXguZm9yRWFjaChmdW5jdGlvbihkLCBpKSB7XG4gICAgICAgICAgZC5zb3J0KGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgICAgICAgIHJldHVybiBzb3J0U3ViZ3JvdXBzKG1hdHJpeFtpXVthXSwgbWF0cml4W2ldW2JdKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBrID0gKM+EIC0gcGFkZGluZyAqIG4pIC8gaztcbiAgICAgIHggPSAwLCBpID0gLTE7XG4gICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICB4MCA9IHgsIGogPSAtMTtcbiAgICAgICAgd2hpbGUgKCsraiA8IG4pIHtcbiAgICAgICAgICB2YXIgZGkgPSBncm91cEluZGV4W2ldLCBkaiA9IHN1Ymdyb3VwSW5kZXhbZGldW2pdLCB2ID0gbWF0cml4W2RpXVtkal0sIGEwID0geCwgYTEgPSB4ICs9IHYgKiBrO1xuICAgICAgICAgIHN1Ymdyb3Vwc1tkaSArIFwiLVwiICsgZGpdID0ge1xuICAgICAgICAgICAgaW5kZXg6IGRpLFxuICAgICAgICAgICAgc3ViaW5kZXg6IGRqLFxuICAgICAgICAgICAgc3RhcnRBbmdsZTogYTAsXG4gICAgICAgICAgICBlbmRBbmdsZTogYTEsXG4gICAgICAgICAgICB2YWx1ZTogdlxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZ3JvdXBzW2RpXSA9IHtcbiAgICAgICAgICBpbmRleDogZGksXG4gICAgICAgICAgc3RhcnRBbmdsZTogeDAsXG4gICAgICAgICAgZW5kQW5nbGU6IHgsXG4gICAgICAgICAgdmFsdWU6ICh4IC0geDApIC8ga1xuICAgICAgICB9O1xuICAgICAgICB4ICs9IHBhZGRpbmc7XG4gICAgICB9XG4gICAgICBpID0gLTE7XG4gICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICBqID0gaSAtIDE7XG4gICAgICAgIHdoaWxlICgrK2ogPCBuKSB7XG4gICAgICAgICAgdmFyIHNvdXJjZSA9IHN1Ymdyb3Vwc1tpICsgXCItXCIgKyBqXSwgdGFyZ2V0ID0gc3ViZ3JvdXBzW2ogKyBcIi1cIiArIGldO1xuICAgICAgICAgIGlmIChzb3VyY2UudmFsdWUgfHwgdGFyZ2V0LnZhbHVlKSB7XG4gICAgICAgICAgICBjaG9yZHMucHVzaChzb3VyY2UudmFsdWUgPCB0YXJnZXQudmFsdWUgPyB7XG4gICAgICAgICAgICAgIHNvdXJjZTogdGFyZ2V0LFxuICAgICAgICAgICAgICB0YXJnZXQ6IHNvdXJjZVxuICAgICAgICAgICAgfSA6IHtcbiAgICAgICAgICAgICAgc291cmNlOiBzb3VyY2UsXG4gICAgICAgICAgICAgIHRhcmdldDogdGFyZ2V0XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzb3J0Q2hvcmRzKSByZXNvcnQoKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcmVzb3J0KCkge1xuICAgICAgY2hvcmRzLnNvcnQoZnVuY3Rpb24oYSwgYikge1xuICAgICAgICByZXR1cm4gc29ydENob3JkcygoYS5zb3VyY2UudmFsdWUgKyBhLnRhcmdldC52YWx1ZSkgLyAyLCAoYi5zb3VyY2UudmFsdWUgKyBiLnRhcmdldC52YWx1ZSkgLyAyKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICBjaG9yZC5tYXRyaXggPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBtYXRyaXg7XG4gICAgICBuID0gKG1hdHJpeCA9IHgpICYmIG1hdHJpeC5sZW5ndGg7XG4gICAgICBjaG9yZHMgPSBncm91cHMgPSBudWxsO1xuICAgICAgcmV0dXJuIGNob3JkO1xuICAgIH07XG4gICAgY2hvcmQucGFkZGluZyA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHBhZGRpbmc7XG4gICAgICBwYWRkaW5nID0geDtcbiAgICAgIGNob3JkcyA9IGdyb3VwcyA9IG51bGw7XG4gICAgICByZXR1cm4gY2hvcmQ7XG4gICAgfTtcbiAgICBjaG9yZC5zb3J0R3JvdXBzID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc29ydEdyb3VwcztcbiAgICAgIHNvcnRHcm91cHMgPSB4O1xuICAgICAgY2hvcmRzID0gZ3JvdXBzID0gbnVsbDtcbiAgICAgIHJldHVybiBjaG9yZDtcbiAgICB9O1xuICAgIGNob3JkLnNvcnRTdWJncm91cHMgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzb3J0U3ViZ3JvdXBzO1xuICAgICAgc29ydFN1Ymdyb3VwcyA9IHg7XG4gICAgICBjaG9yZHMgPSBudWxsO1xuICAgICAgcmV0dXJuIGNob3JkO1xuICAgIH07XG4gICAgY2hvcmQuc29ydENob3JkcyA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNvcnRDaG9yZHM7XG4gICAgICBzb3J0Q2hvcmRzID0geDtcbiAgICAgIGlmIChjaG9yZHMpIHJlc29ydCgpO1xuICAgICAgcmV0dXJuIGNob3JkO1xuICAgIH07XG4gICAgY2hvcmQuY2hvcmRzID0gZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoIWNob3JkcykgcmVsYXlvdXQoKTtcbiAgICAgIHJldHVybiBjaG9yZHM7XG4gICAgfTtcbiAgICBjaG9yZC5ncm91cHMgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmICghZ3JvdXBzKSByZWxheW91dCgpO1xuICAgICAgcmV0dXJuIGdyb3VwcztcbiAgICB9O1xuICAgIHJldHVybiBjaG9yZDtcbiAgfTtcbiAgZDMubGF5b3V0LmZvcmNlID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGZvcmNlID0ge30sIGV2ZW50ID0gZDMuZGlzcGF0Y2goXCJzdGFydFwiLCBcInRpY2tcIiwgXCJlbmRcIiksIHNpemUgPSBbIDEsIDEgXSwgZHJhZywgYWxwaGEsIGZyaWN0aW9uID0gLjksIGxpbmtEaXN0YW5jZSA9IGQzX2xheW91dF9mb3JjZUxpbmtEaXN0YW5jZSwgbGlua1N0cmVuZ3RoID0gZDNfbGF5b3V0X2ZvcmNlTGlua1N0cmVuZ3RoLCBjaGFyZ2UgPSAtMzAsIGNoYXJnZURpc3RhbmNlMiA9IGQzX2xheW91dF9mb3JjZUNoYXJnZURpc3RhbmNlMiwgZ3Jhdml0eSA9IC4xLCB0aGV0YTIgPSAuNjQsIG5vZGVzID0gW10sIGxpbmtzID0gW10sIGRpc3RhbmNlcywgc3RyZW5ndGhzLCBjaGFyZ2VzO1xuICAgIGZ1bmN0aW9uIHJlcHVsc2Uobm9kZSkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKHF1YWQsIHgxLCBfLCB4Mikge1xuICAgICAgICBpZiAocXVhZC5wb2ludCAhPT0gbm9kZSkge1xuICAgICAgICAgIHZhciBkeCA9IHF1YWQuY3ggLSBub2RlLngsIGR5ID0gcXVhZC5jeSAtIG5vZGUueSwgZHcgPSB4MiAtIHgxLCBkbiA9IGR4ICogZHggKyBkeSAqIGR5O1xuICAgICAgICAgIGlmIChkdyAqIGR3IC8gdGhldGEyIDwgZG4pIHtcbiAgICAgICAgICAgIGlmIChkbiA8IGNoYXJnZURpc3RhbmNlMikge1xuICAgICAgICAgICAgICB2YXIgayA9IHF1YWQuY2hhcmdlIC8gZG47XG4gICAgICAgICAgICAgIG5vZGUucHggLT0gZHggKiBrO1xuICAgICAgICAgICAgICBub2RlLnB5IC09IGR5ICogaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAocXVhZC5wb2ludCAmJiBkbiAmJiBkbiA8IGNoYXJnZURpc3RhbmNlMikge1xuICAgICAgICAgICAgdmFyIGsgPSBxdWFkLnBvaW50Q2hhcmdlIC8gZG47XG4gICAgICAgICAgICBub2RlLnB4IC09IGR4ICogaztcbiAgICAgICAgICAgIG5vZGUucHkgLT0gZHkgKiBrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gIXF1YWQuY2hhcmdlO1xuICAgICAgfTtcbiAgICB9XG4gICAgZm9yY2UudGljayA9IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKChhbHBoYSAqPSAuOTkpIDwgLjAwNSkge1xuICAgICAgICBldmVudC5lbmQoe1xuICAgICAgICAgIHR5cGU6IFwiZW5kXCIsXG4gICAgICAgICAgYWxwaGE6IGFscGhhID0gMFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgICB2YXIgbiA9IG5vZGVzLmxlbmd0aCwgbSA9IGxpbmtzLmxlbmd0aCwgcSwgaSwgbywgcywgdCwgbCwgaywgeCwgeTtcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBtOyArK2kpIHtcbiAgICAgICAgbyA9IGxpbmtzW2ldO1xuICAgICAgICBzID0gby5zb3VyY2U7XG4gICAgICAgIHQgPSBvLnRhcmdldDtcbiAgICAgICAgeCA9IHQueCAtIHMueDtcbiAgICAgICAgeSA9IHQueSAtIHMueTtcbiAgICAgICAgaWYgKGwgPSB4ICogeCArIHkgKiB5KSB7XG4gICAgICAgICAgbCA9IGFscGhhICogc3RyZW5ndGhzW2ldICogKChsID0gTWF0aC5zcXJ0KGwpKSAtIGRpc3RhbmNlc1tpXSkgLyBsO1xuICAgICAgICAgIHggKj0gbDtcbiAgICAgICAgICB5ICo9IGw7XG4gICAgICAgICAgdC54IC09IHggKiAoayA9IHMud2VpZ2h0IC8gKHQud2VpZ2h0ICsgcy53ZWlnaHQpKTtcbiAgICAgICAgICB0LnkgLT0geSAqIGs7XG4gICAgICAgICAgcy54ICs9IHggKiAoayA9IDEgLSBrKTtcbiAgICAgICAgICBzLnkgKz0geSAqIGs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChrID0gYWxwaGEgKiBncmF2aXR5KSB7XG4gICAgICAgIHggPSBzaXplWzBdIC8gMjtcbiAgICAgICAgeSA9IHNpemVbMV0gLyAyO1xuICAgICAgICBpID0gLTE7XG4gICAgICAgIGlmIChrKSB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICAgIG8gPSBub2Rlc1tpXTtcbiAgICAgICAgICBvLnggKz0gKHggLSBvLngpICogaztcbiAgICAgICAgICBvLnkgKz0gKHkgLSBvLnkpICogaztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKGNoYXJnZSkge1xuICAgICAgICBkM19sYXlvdXRfZm9yY2VBY2N1bXVsYXRlKHEgPSBkMy5nZW9tLnF1YWR0cmVlKG5vZGVzKSwgYWxwaGEsIGNoYXJnZXMpO1xuICAgICAgICBpID0gLTE7XG4gICAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgICAgaWYgKCEobyA9IG5vZGVzW2ldKS5maXhlZCkge1xuICAgICAgICAgICAgcS52aXNpdChyZXB1bHNlKG8pKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGkgPSAtMTtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgIG8gPSBub2Rlc1tpXTtcbiAgICAgICAgaWYgKG8uZml4ZWQpIHtcbiAgICAgICAgICBvLnggPSBvLnB4O1xuICAgICAgICAgIG8ueSA9IG8ucHk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgby54IC09IChvLnB4IC0gKG8ucHggPSBvLngpKSAqIGZyaWN0aW9uO1xuICAgICAgICAgIG8ueSAtPSAoby5weSAtIChvLnB5ID0gby55KSkgKiBmcmljdGlvbjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZXZlbnQudGljayh7XG4gICAgICAgIHR5cGU6IFwidGlja1wiLFxuICAgICAgICBhbHBoYTogYWxwaGFcbiAgICAgIH0pO1xuICAgIH07XG4gICAgZm9yY2Uubm9kZXMgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBub2RlcztcbiAgICAgIG5vZGVzID0geDtcbiAgICAgIHJldHVybiBmb3JjZTtcbiAgICB9O1xuICAgIGZvcmNlLmxpbmtzID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbGlua3M7XG4gICAgICBsaW5rcyA9IHg7XG4gICAgICByZXR1cm4gZm9yY2U7XG4gICAgfTtcbiAgICBmb3JjZS5zaXplID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc2l6ZTtcbiAgICAgIHNpemUgPSB4O1xuICAgICAgcmV0dXJuIGZvcmNlO1xuICAgIH07XG4gICAgZm9yY2UubGlua0Rpc3RhbmNlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbGlua0Rpc3RhbmNlO1xuICAgICAgbGlua0Rpc3RhbmNlID0gdHlwZW9mIHggPT09IFwiZnVuY3Rpb25cIiA/IHggOiAreDtcbiAgICAgIHJldHVybiBmb3JjZTtcbiAgICB9O1xuICAgIGZvcmNlLmRpc3RhbmNlID0gZm9yY2UubGlua0Rpc3RhbmNlO1xuICAgIGZvcmNlLmxpbmtTdHJlbmd0aCA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGxpbmtTdHJlbmd0aDtcbiAgICAgIGxpbmtTdHJlbmd0aCA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogK3g7XG4gICAgICByZXR1cm4gZm9yY2U7XG4gICAgfTtcbiAgICBmb3JjZS5mcmljdGlvbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGZyaWN0aW9uO1xuICAgICAgZnJpY3Rpb24gPSAreDtcbiAgICAgIHJldHVybiBmb3JjZTtcbiAgICB9O1xuICAgIGZvcmNlLmNoYXJnZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGNoYXJnZTtcbiAgICAgIGNoYXJnZSA9IHR5cGVvZiB4ID09PSBcImZ1bmN0aW9uXCIgPyB4IDogK3g7XG4gICAgICByZXR1cm4gZm9yY2U7XG4gICAgfTtcbiAgICBmb3JjZS5jaGFyZ2VEaXN0YW5jZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIE1hdGguc3FydChjaGFyZ2VEaXN0YW5jZTIpO1xuICAgICAgY2hhcmdlRGlzdGFuY2UyID0geCAqIHg7XG4gICAgICByZXR1cm4gZm9yY2U7XG4gICAgfTtcbiAgICBmb3JjZS5ncmF2aXR5ID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZ3Jhdml0eTtcbiAgICAgIGdyYXZpdHkgPSAreDtcbiAgICAgIHJldHVybiBmb3JjZTtcbiAgICB9O1xuICAgIGZvcmNlLnRoZXRhID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gTWF0aC5zcXJ0KHRoZXRhMik7XG4gICAgICB0aGV0YTIgPSB4ICogeDtcbiAgICAgIHJldHVybiBmb3JjZTtcbiAgICB9O1xuICAgIGZvcmNlLmFscGhhID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gYWxwaGE7XG4gICAgICB4ID0gK3g7XG4gICAgICBpZiAoYWxwaGEpIHtcbiAgICAgICAgaWYgKHggPiAwKSBhbHBoYSA9IHg7IGVsc2UgYWxwaGEgPSAwO1xuICAgICAgfSBlbHNlIGlmICh4ID4gMCkge1xuICAgICAgICBldmVudC5zdGFydCh7XG4gICAgICAgICAgdHlwZTogXCJzdGFydFwiLFxuICAgICAgICAgIGFscGhhOiBhbHBoYSA9IHhcbiAgICAgICAgfSk7XG4gICAgICAgIGQzLnRpbWVyKGZvcmNlLnRpY2spO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGZvcmNlO1xuICAgIH07XG4gICAgZm9yY2Uuc3RhcnQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBpLCBuID0gbm9kZXMubGVuZ3RoLCBtID0gbGlua3MubGVuZ3RoLCB3ID0gc2l6ZVswXSwgaCA9IHNpemVbMV0sIG5laWdoYm9ycywgbztcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgKG8gPSBub2Rlc1tpXSkuaW5kZXggPSBpO1xuICAgICAgICBvLndlaWdodCA9IDA7XG4gICAgICB9XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgbTsgKytpKSB7XG4gICAgICAgIG8gPSBsaW5rc1tpXTtcbiAgICAgICAgaWYgKHR5cGVvZiBvLnNvdXJjZSA9PSBcIm51bWJlclwiKSBvLnNvdXJjZSA9IG5vZGVzW28uc291cmNlXTtcbiAgICAgICAgaWYgKHR5cGVvZiBvLnRhcmdldCA9PSBcIm51bWJlclwiKSBvLnRhcmdldCA9IG5vZGVzW28udGFyZ2V0XTtcbiAgICAgICAgKytvLnNvdXJjZS53ZWlnaHQ7XG4gICAgICAgICsrby50YXJnZXQud2VpZ2h0O1xuICAgICAgfVxuICAgICAgZm9yIChpID0gMDsgaSA8IG47ICsraSkge1xuICAgICAgICBvID0gbm9kZXNbaV07XG4gICAgICAgIGlmIChpc05hTihvLngpKSBvLnggPSBwb3NpdGlvbihcInhcIiwgdyk7XG4gICAgICAgIGlmIChpc05hTihvLnkpKSBvLnkgPSBwb3NpdGlvbihcInlcIiwgaCk7XG4gICAgICAgIGlmIChpc05hTihvLnB4KSkgby5weCA9IG8ueDtcbiAgICAgICAgaWYgKGlzTmFOKG8ucHkpKSBvLnB5ID0gby55O1xuICAgICAgfVxuICAgICAgZGlzdGFuY2VzID0gW107XG4gICAgICBpZiAodHlwZW9mIGxpbmtEaXN0YW5jZSA9PT0gXCJmdW5jdGlvblwiKSBmb3IgKGkgPSAwOyBpIDwgbTsgKytpKSBkaXN0YW5jZXNbaV0gPSArbGlua0Rpc3RhbmNlLmNhbGwodGhpcywgbGlua3NbaV0sIGkpOyBlbHNlIGZvciAoaSA9IDA7IGkgPCBtOyArK2kpIGRpc3RhbmNlc1tpXSA9IGxpbmtEaXN0YW5jZTtcbiAgICAgIHN0cmVuZ3RocyA9IFtdO1xuICAgICAgaWYgKHR5cGVvZiBsaW5rU3RyZW5ndGggPT09IFwiZnVuY3Rpb25cIikgZm9yIChpID0gMDsgaSA8IG07ICsraSkgc3RyZW5ndGhzW2ldID0gK2xpbmtTdHJlbmd0aC5jYWxsKHRoaXMsIGxpbmtzW2ldLCBpKTsgZWxzZSBmb3IgKGkgPSAwOyBpIDwgbTsgKytpKSBzdHJlbmd0aHNbaV0gPSBsaW5rU3RyZW5ndGg7XG4gICAgICBjaGFyZ2VzID0gW107XG4gICAgICBpZiAodHlwZW9mIGNoYXJnZSA9PT0gXCJmdW5jdGlvblwiKSBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSBjaGFyZ2VzW2ldID0gK2NoYXJnZS5jYWxsKHRoaXMsIG5vZGVzW2ldLCBpKTsgZWxzZSBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSBjaGFyZ2VzW2ldID0gY2hhcmdlO1xuICAgICAgZnVuY3Rpb24gcG9zaXRpb24oZGltZW5zaW9uLCBzaXplKSB7XG4gICAgICAgIGlmICghbmVpZ2hib3JzKSB7XG4gICAgICAgICAgbmVpZ2hib3JzID0gbmV3IEFycmF5KG4pO1xuICAgICAgICAgIGZvciAoaiA9IDA7IGogPCBuOyArK2opIHtcbiAgICAgICAgICAgIG5laWdoYm9yc1tqXSA9IFtdO1xuICAgICAgICAgIH1cbiAgICAgICAgICBmb3IgKGogPSAwOyBqIDwgbTsgKytqKSB7XG4gICAgICAgICAgICB2YXIgbyA9IGxpbmtzW2pdO1xuICAgICAgICAgICAgbmVpZ2hib3JzW28uc291cmNlLmluZGV4XS5wdXNoKG8udGFyZ2V0KTtcbiAgICAgICAgICAgIG5laWdoYm9yc1tvLnRhcmdldC5pbmRleF0ucHVzaChvLnNvdXJjZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHZhciBjYW5kaWRhdGVzID0gbmVpZ2hib3JzW2ldLCBqID0gLTEsIG0gPSBjYW5kaWRhdGVzLmxlbmd0aCwgeDtcbiAgICAgICAgd2hpbGUgKCsraiA8IG0pIGlmICghaXNOYU4oeCA9IGNhbmRpZGF0ZXNbal1bZGltZW5zaW9uXSkpIHJldHVybiB4O1xuICAgICAgICByZXR1cm4gTWF0aC5yYW5kb20oKSAqIHNpemU7XG4gICAgICB9XG4gICAgICByZXR1cm4gZm9yY2UucmVzdW1lKCk7XG4gICAgfTtcbiAgICBmb3JjZS5yZXN1bWUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBmb3JjZS5hbHBoYSguMSk7XG4gICAgfTtcbiAgICBmb3JjZS5zdG9wID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZm9yY2UuYWxwaGEoMCk7XG4gICAgfTtcbiAgICBmb3JjZS5kcmFnID0gZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoIWRyYWcpIGRyYWcgPSBkMy5iZWhhdmlvci5kcmFnKCkub3JpZ2luKGQzX2lkZW50aXR5KS5vbihcImRyYWdzdGFydC5mb3JjZVwiLCBkM19sYXlvdXRfZm9yY2VEcmFnc3RhcnQpLm9uKFwiZHJhZy5mb3JjZVwiLCBkcmFnbW92ZSkub24oXCJkcmFnZW5kLmZvcmNlXCIsIGQzX2xheW91dF9mb3JjZURyYWdlbmQpO1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZHJhZztcbiAgICAgIHRoaXMub24oXCJtb3VzZW92ZXIuZm9yY2VcIiwgZDNfbGF5b3V0X2ZvcmNlTW91c2VvdmVyKS5vbihcIm1vdXNlb3V0LmZvcmNlXCIsIGQzX2xheW91dF9mb3JjZU1vdXNlb3V0KS5jYWxsKGRyYWcpO1xuICAgIH07XG4gICAgZnVuY3Rpb24gZHJhZ21vdmUoZCkge1xuICAgICAgZC5weCA9IGQzLmV2ZW50LngsIGQucHkgPSBkMy5ldmVudC55O1xuICAgICAgZm9yY2UucmVzdW1lKCk7XG4gICAgfVxuICAgIHJldHVybiBkMy5yZWJpbmQoZm9yY2UsIGV2ZW50LCBcIm9uXCIpO1xuICB9O1xuICBmdW5jdGlvbiBkM19sYXlvdXRfZm9yY2VEcmFnc3RhcnQoZCkge1xuICAgIGQuZml4ZWQgfD0gMjtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfZm9yY2VEcmFnZW5kKGQpIHtcbiAgICBkLmZpeGVkICY9IH42O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9mb3JjZU1vdXNlb3ZlcihkKSB7XG4gICAgZC5maXhlZCB8PSA0O1xuICAgIGQucHggPSBkLngsIGQucHkgPSBkLnk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2ZvcmNlTW91c2VvdXQoZCkge1xuICAgIGQuZml4ZWQgJj0gfjQ7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2ZvcmNlQWNjdW11bGF0ZShxdWFkLCBhbHBoYSwgY2hhcmdlcykge1xuICAgIHZhciBjeCA9IDAsIGN5ID0gMDtcbiAgICBxdWFkLmNoYXJnZSA9IDA7XG4gICAgaWYgKCFxdWFkLmxlYWYpIHtcbiAgICAgIHZhciBub2RlcyA9IHF1YWQubm9kZXMsIG4gPSBub2Rlcy5sZW5ndGgsIGkgPSAtMSwgYztcbiAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgIGMgPSBub2Rlc1tpXTtcbiAgICAgICAgaWYgKGMgPT0gbnVsbCkgY29udGludWU7XG4gICAgICAgIGQzX2xheW91dF9mb3JjZUFjY3VtdWxhdGUoYywgYWxwaGEsIGNoYXJnZXMpO1xuICAgICAgICBxdWFkLmNoYXJnZSArPSBjLmNoYXJnZTtcbiAgICAgICAgY3ggKz0gYy5jaGFyZ2UgKiBjLmN4O1xuICAgICAgICBjeSArPSBjLmNoYXJnZSAqIGMuY3k7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChxdWFkLnBvaW50KSB7XG4gICAgICBpZiAoIXF1YWQubGVhZikge1xuICAgICAgICBxdWFkLnBvaW50LnggKz0gTWF0aC5yYW5kb20oKSAtIC41O1xuICAgICAgICBxdWFkLnBvaW50LnkgKz0gTWF0aC5yYW5kb20oKSAtIC41O1xuICAgICAgfVxuICAgICAgdmFyIGsgPSBhbHBoYSAqIGNoYXJnZXNbcXVhZC5wb2ludC5pbmRleF07XG4gICAgICBxdWFkLmNoYXJnZSArPSBxdWFkLnBvaW50Q2hhcmdlID0gaztcbiAgICAgIGN4ICs9IGsgKiBxdWFkLnBvaW50Lng7XG4gICAgICBjeSArPSBrICogcXVhZC5wb2ludC55O1xuICAgIH1cbiAgICBxdWFkLmN4ID0gY3ggLyBxdWFkLmNoYXJnZTtcbiAgICBxdWFkLmN5ID0gY3kgLyBxdWFkLmNoYXJnZTtcbiAgfVxuICB2YXIgZDNfbGF5b3V0X2ZvcmNlTGlua0Rpc3RhbmNlID0gMjAsIGQzX2xheW91dF9mb3JjZUxpbmtTdHJlbmd0aCA9IDEsIGQzX2xheW91dF9mb3JjZUNoYXJnZURpc3RhbmNlMiA9IEluZmluaXR5O1xuICBkMy5sYXlvdXQuaGllcmFyY2h5ID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNvcnQgPSBkM19sYXlvdXRfaGllcmFyY2h5U29ydCwgY2hpbGRyZW4gPSBkM19sYXlvdXRfaGllcmFyY2h5Q2hpbGRyZW4sIHZhbHVlID0gZDNfbGF5b3V0X2hpZXJhcmNoeVZhbHVlO1xuICAgIGZ1bmN0aW9uIGhpZXJhcmNoeShyb290KSB7XG4gICAgICB2YXIgc3RhY2sgPSBbIHJvb3QgXSwgbm9kZXMgPSBbXSwgbm9kZTtcbiAgICAgIHJvb3QuZGVwdGggPSAwO1xuICAgICAgd2hpbGUgKChub2RlID0gc3RhY2sucG9wKCkpICE9IG51bGwpIHtcbiAgICAgICAgbm9kZXMucHVzaChub2RlKTtcbiAgICAgICAgaWYgKChjaGlsZHMgPSBjaGlsZHJlbi5jYWxsKGhpZXJhcmNoeSwgbm9kZSwgbm9kZS5kZXB0aCkpICYmIChuID0gY2hpbGRzLmxlbmd0aCkpIHtcbiAgICAgICAgICB2YXIgbiwgY2hpbGRzLCBjaGlsZDtcbiAgICAgICAgICB3aGlsZSAoLS1uID49IDApIHtcbiAgICAgICAgICAgIHN0YWNrLnB1c2goY2hpbGQgPSBjaGlsZHNbbl0pO1xuICAgICAgICAgICAgY2hpbGQucGFyZW50ID0gbm9kZTtcbiAgICAgICAgICAgIGNoaWxkLmRlcHRoID0gbm9kZS5kZXB0aCArIDE7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICh2YWx1ZSkgbm9kZS52YWx1ZSA9IDA7XG4gICAgICAgICAgbm9kZS5jaGlsZHJlbiA9IGNoaWxkcztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpZiAodmFsdWUpIG5vZGUudmFsdWUgPSArdmFsdWUuY2FsbChoaWVyYXJjaHksIG5vZGUsIG5vZGUuZGVwdGgpIHx8IDA7XG4gICAgICAgICAgZGVsZXRlIG5vZGUuY2hpbGRyZW47XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEFmdGVyKHJvb3QsIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgdmFyIGNoaWxkcywgcGFyZW50O1xuICAgICAgICBpZiAoc29ydCAmJiAoY2hpbGRzID0gbm9kZS5jaGlsZHJlbikpIGNoaWxkcy5zb3J0KHNvcnQpO1xuICAgICAgICBpZiAodmFsdWUgJiYgKHBhcmVudCA9IG5vZGUucGFyZW50KSkgcGFyZW50LnZhbHVlICs9IG5vZGUudmFsdWU7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBub2RlcztcbiAgICB9XG4gICAgaGllcmFyY2h5LnNvcnQgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzb3J0O1xuICAgICAgc29ydCA9IHg7XG4gICAgICByZXR1cm4gaGllcmFyY2h5O1xuICAgIH07XG4gICAgaGllcmFyY2h5LmNoaWxkcmVuID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gY2hpbGRyZW47XG4gICAgICBjaGlsZHJlbiA9IHg7XG4gICAgICByZXR1cm4gaGllcmFyY2h5O1xuICAgIH07XG4gICAgaGllcmFyY2h5LnZhbHVlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdmFsdWU7XG4gICAgICB2YWx1ZSA9IHg7XG4gICAgICByZXR1cm4gaGllcmFyY2h5O1xuICAgIH07XG4gICAgaGllcmFyY2h5LnJldmFsdWUgPSBmdW5jdGlvbihyb290KSB7XG4gICAgICBpZiAodmFsdWUpIHtcbiAgICAgICAgZDNfbGF5b3V0X2hpZXJhcmNoeVZpc2l0QmVmb3JlKHJvb3QsIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgICBpZiAobm9kZS5jaGlsZHJlbikgbm9kZS52YWx1ZSA9IDA7XG4gICAgICAgIH0pO1xuICAgICAgICBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRBZnRlcihyb290LCBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgICAgdmFyIHBhcmVudDtcbiAgICAgICAgICBpZiAoIW5vZGUuY2hpbGRyZW4pIG5vZGUudmFsdWUgPSArdmFsdWUuY2FsbChoaWVyYXJjaHksIG5vZGUsIG5vZGUuZGVwdGgpIHx8IDA7XG4gICAgICAgICAgaWYgKHBhcmVudCA9IG5vZGUucGFyZW50KSBwYXJlbnQudmFsdWUgKz0gbm9kZS52YWx1ZTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gcm9vdDtcbiAgICB9O1xuICAgIHJldHVybiBoaWVyYXJjaHk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9oaWVyYXJjaHlSZWJpbmQob2JqZWN0LCBoaWVyYXJjaHkpIHtcbiAgICBkMy5yZWJpbmQob2JqZWN0LCBoaWVyYXJjaHksIFwic29ydFwiLCBcImNoaWxkcmVuXCIsIFwidmFsdWVcIik7XG4gICAgb2JqZWN0Lm5vZGVzID0gb2JqZWN0O1xuICAgIG9iamVjdC5saW5rcyA9IGQzX2xheW91dF9oaWVyYXJjaHlMaW5rcztcbiAgICByZXR1cm4gb2JqZWN0O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEJlZm9yZShub2RlLCBjYWxsYmFjaykge1xuICAgIHZhciBub2RlcyA9IFsgbm9kZSBdO1xuICAgIHdoaWxlICgobm9kZSA9IG5vZGVzLnBvcCgpKSAhPSBudWxsKSB7XG4gICAgICBjYWxsYmFjayhub2RlKTtcbiAgICAgIGlmICgoY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuKSAmJiAobiA9IGNoaWxkcmVuLmxlbmd0aCkpIHtcbiAgICAgICAgdmFyIG4sIGNoaWxkcmVuO1xuICAgICAgICB3aGlsZSAoLS1uID49IDApIG5vZGVzLnB1c2goY2hpbGRyZW5bbl0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRBZnRlcihub2RlLCBjYWxsYmFjaykge1xuICAgIHZhciBub2RlcyA9IFsgbm9kZSBdLCBub2RlczIgPSBbXTtcbiAgICB3aGlsZSAoKG5vZGUgPSBub2Rlcy5wb3AoKSkgIT0gbnVsbCkge1xuICAgICAgbm9kZXMyLnB1c2gobm9kZSk7XG4gICAgICBpZiAoKGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbikgJiYgKG4gPSBjaGlsZHJlbi5sZW5ndGgpKSB7XG4gICAgICAgIHZhciBpID0gLTEsIG4sIGNoaWxkcmVuO1xuICAgICAgICB3aGlsZSAoKytpIDwgbikgbm9kZXMucHVzaChjaGlsZHJlbltpXSk7XG4gICAgICB9XG4gICAgfVxuICAgIHdoaWxlICgobm9kZSA9IG5vZGVzMi5wb3AoKSkgIT0gbnVsbCkge1xuICAgICAgY2FsbGJhY2sobm9kZSk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9oaWVyYXJjaHlDaGlsZHJlbihkKSB7XG4gICAgcmV0dXJuIGQuY2hpbGRyZW47XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2hpZXJhcmNoeVZhbHVlKGQpIHtcbiAgICByZXR1cm4gZC52YWx1ZTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfaGllcmFyY2h5U29ydChhLCBiKSB7XG4gICAgcmV0dXJuIGIudmFsdWUgLSBhLnZhbHVlO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9oaWVyYXJjaHlMaW5rcyhub2Rlcykge1xuICAgIHJldHVybiBkMy5tZXJnZShub2Rlcy5tYXAoZnVuY3Rpb24ocGFyZW50KSB7XG4gICAgICByZXR1cm4gKHBhcmVudC5jaGlsZHJlbiB8fCBbXSkubWFwKGZ1bmN0aW9uKGNoaWxkKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgc291cmNlOiBwYXJlbnQsXG4gICAgICAgICAgdGFyZ2V0OiBjaGlsZFxuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgfSkpO1xuICB9XG4gIGQzLmxheW91dC5wYXJ0aXRpb24gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaGllcmFyY2h5ID0gZDMubGF5b3V0LmhpZXJhcmNoeSgpLCBzaXplID0gWyAxLCAxIF07XG4gICAgZnVuY3Rpb24gcG9zaXRpb24obm9kZSwgeCwgZHgsIGR5KSB7XG4gICAgICB2YXIgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuO1xuICAgICAgbm9kZS54ID0geDtcbiAgICAgIG5vZGUueSA9IG5vZGUuZGVwdGggKiBkeTtcbiAgICAgIG5vZGUuZHggPSBkeDtcbiAgICAgIG5vZGUuZHkgPSBkeTtcbiAgICAgIGlmIChjaGlsZHJlbiAmJiAobiA9IGNoaWxkcmVuLmxlbmd0aCkpIHtcbiAgICAgICAgdmFyIGkgPSAtMSwgbiwgYywgZDtcbiAgICAgICAgZHggPSBub2RlLnZhbHVlID8gZHggLyBub2RlLnZhbHVlIDogMDtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgICBwb3NpdGlvbihjID0gY2hpbGRyZW5baV0sIHgsIGQgPSBjLnZhbHVlICogZHgsIGR5KTtcbiAgICAgICAgICB4ICs9IGQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gZGVwdGgobm9kZSkge1xuICAgICAgdmFyIGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbiwgZCA9IDA7XG4gICAgICBpZiAoY2hpbGRyZW4gJiYgKG4gPSBjaGlsZHJlbi5sZW5ndGgpKSB7XG4gICAgICAgIHZhciBpID0gLTEsIG47XG4gICAgICAgIHdoaWxlICgrK2kgPCBuKSBkID0gTWF0aC5tYXgoZCwgZGVwdGgoY2hpbGRyZW5baV0pKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiAxICsgZDtcbiAgICB9XG4gICAgZnVuY3Rpb24gcGFydGl0aW9uKGQsIGkpIHtcbiAgICAgIHZhciBub2RlcyA9IGhpZXJhcmNoeS5jYWxsKHRoaXMsIGQsIGkpO1xuICAgICAgcG9zaXRpb24obm9kZXNbMF0sIDAsIHNpemVbMF0sIHNpemVbMV0gLyBkZXB0aChub2Rlc1swXSkpO1xuICAgICAgcmV0dXJuIG5vZGVzO1xuICAgIH1cbiAgICBwYXJ0aXRpb24uc2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNpemU7XG4gICAgICBzaXplID0geDtcbiAgICAgIHJldHVybiBwYXJ0aXRpb247XG4gICAgfTtcbiAgICByZXR1cm4gZDNfbGF5b3V0X2hpZXJhcmNoeVJlYmluZChwYXJ0aXRpb24sIGhpZXJhcmNoeSk7XG4gIH07XG4gIGQzLmxheW91dC5waWUgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgdmFsdWUgPSBOdW1iZXIsIHNvcnQgPSBkM19sYXlvdXRfcGllU29ydEJ5VmFsdWUsIHN0YXJ0QW5nbGUgPSAwLCBlbmRBbmdsZSA9IM+EO1xuICAgIGZ1bmN0aW9uIHBpZShkYXRhKSB7XG4gICAgICB2YXIgdmFsdWVzID0gZGF0YS5tYXAoZnVuY3Rpb24oZCwgaSkge1xuICAgICAgICByZXR1cm4gK3ZhbHVlLmNhbGwocGllLCBkLCBpKTtcbiAgICAgIH0pO1xuICAgICAgdmFyIGEgPSArKHR5cGVvZiBzdGFydEFuZ2xlID09PSBcImZ1bmN0aW9uXCIgPyBzdGFydEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiBzdGFydEFuZ2xlKTtcbiAgICAgIHZhciBrID0gKCh0eXBlb2YgZW5kQW5nbGUgPT09IFwiZnVuY3Rpb25cIiA/IGVuZEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgOiBlbmRBbmdsZSkgLSBhKSAvIGQzLnN1bSh2YWx1ZXMpO1xuICAgICAgdmFyIGluZGV4ID0gZDMucmFuZ2UoZGF0YS5sZW5ndGgpO1xuICAgICAgaWYgKHNvcnQgIT0gbnVsbCkgaW5kZXguc29ydChzb3J0ID09PSBkM19sYXlvdXRfcGllU29ydEJ5VmFsdWUgPyBmdW5jdGlvbihpLCBqKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZXNbal0gLSB2YWx1ZXNbaV07XG4gICAgICB9IDogZnVuY3Rpb24oaSwgaikge1xuICAgICAgICByZXR1cm4gc29ydChkYXRhW2ldLCBkYXRhW2pdKTtcbiAgICAgIH0pO1xuICAgICAgdmFyIGFyY3MgPSBbXTtcbiAgICAgIGluZGV4LmZvckVhY2goZnVuY3Rpb24oaSkge1xuICAgICAgICB2YXIgZDtcbiAgICAgICAgYXJjc1tpXSA9IHtcbiAgICAgICAgICBkYXRhOiBkYXRhW2ldLFxuICAgICAgICAgIHZhbHVlOiBkID0gdmFsdWVzW2ldLFxuICAgICAgICAgIHN0YXJ0QW5nbGU6IGEsXG4gICAgICAgICAgZW5kQW5nbGU6IGEgKz0gZCAqIGtcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGFyY3M7XG4gICAgfVxuICAgIHBpZS52YWx1ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHZhbHVlO1xuICAgICAgdmFsdWUgPSB4O1xuICAgICAgcmV0dXJuIHBpZTtcbiAgICB9O1xuICAgIHBpZS5zb3J0ID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc29ydDtcbiAgICAgIHNvcnQgPSB4O1xuICAgICAgcmV0dXJuIHBpZTtcbiAgICB9O1xuICAgIHBpZS5zdGFydEFuZ2xlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc3RhcnRBbmdsZTtcbiAgICAgIHN0YXJ0QW5nbGUgPSB4O1xuICAgICAgcmV0dXJuIHBpZTtcbiAgICB9O1xuICAgIHBpZS5lbmRBbmdsZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGVuZEFuZ2xlO1xuICAgICAgZW5kQW5nbGUgPSB4O1xuICAgICAgcmV0dXJuIHBpZTtcbiAgICB9O1xuICAgIHJldHVybiBwaWU7XG4gIH07XG4gIHZhciBkM19sYXlvdXRfcGllU29ydEJ5VmFsdWUgPSB7fTtcbiAgZDMubGF5b3V0LnN0YWNrID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHZhbHVlcyA9IGQzX2lkZW50aXR5LCBvcmRlciA9IGQzX2xheW91dF9zdGFja09yZGVyRGVmYXVsdCwgb2Zmc2V0ID0gZDNfbGF5b3V0X3N0YWNrT2Zmc2V0WmVybywgb3V0ID0gZDNfbGF5b3V0X3N0YWNrT3V0LCB4ID0gZDNfbGF5b3V0X3N0YWNrWCwgeSA9IGQzX2xheW91dF9zdGFja1k7XG4gICAgZnVuY3Rpb24gc3RhY2soZGF0YSwgaW5kZXgpIHtcbiAgICAgIHZhciBzZXJpZXMgPSBkYXRhLm1hcChmdW5jdGlvbihkLCBpKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZXMuY2FsbChzdGFjaywgZCwgaSk7XG4gICAgICB9KTtcbiAgICAgIHZhciBwb2ludHMgPSBzZXJpZXMubWFwKGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgcmV0dXJuIGQubWFwKGZ1bmN0aW9uKHYsIGkpIHtcbiAgICAgICAgICByZXR1cm4gWyB4LmNhbGwoc3RhY2ssIHYsIGkpLCB5LmNhbGwoc3RhY2ssIHYsIGkpIF07XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgICB2YXIgb3JkZXJzID0gb3JkZXIuY2FsbChzdGFjaywgcG9pbnRzLCBpbmRleCk7XG4gICAgICBzZXJpZXMgPSBkMy5wZXJtdXRlKHNlcmllcywgb3JkZXJzKTtcbiAgICAgIHBvaW50cyA9IGQzLnBlcm11dGUocG9pbnRzLCBvcmRlcnMpO1xuICAgICAgdmFyIG9mZnNldHMgPSBvZmZzZXQuY2FsbChzdGFjaywgcG9pbnRzLCBpbmRleCk7XG4gICAgICB2YXIgbiA9IHNlcmllcy5sZW5ndGgsIG0gPSBzZXJpZXNbMF0ubGVuZ3RoLCBpLCBqLCBvO1xuICAgICAgZm9yIChqID0gMDsgaiA8IG07ICsraikge1xuICAgICAgICBvdXQuY2FsbChzdGFjaywgc2VyaWVzWzBdW2pdLCBvID0gb2Zmc2V0c1tqXSwgcG9pbnRzWzBdW2pdWzFdKTtcbiAgICAgICAgZm9yIChpID0gMTsgaSA8IG47ICsraSkge1xuICAgICAgICAgIG91dC5jYWxsKHN0YWNrLCBzZXJpZXNbaV1bal0sIG8gKz0gcG9pbnRzW2kgLSAxXVtqXVsxXSwgcG9pbnRzW2ldW2pdWzFdKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfVxuICAgIHN0YWNrLnZhbHVlcyA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHZhbHVlcztcbiAgICAgIHZhbHVlcyA9IHg7XG4gICAgICByZXR1cm4gc3RhY2s7XG4gICAgfTtcbiAgICBzdGFjay5vcmRlciA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG9yZGVyO1xuICAgICAgb3JkZXIgPSB0eXBlb2YgeCA9PT0gXCJmdW5jdGlvblwiID8geCA6IGQzX2xheW91dF9zdGFja09yZGVycy5nZXQoeCkgfHwgZDNfbGF5b3V0X3N0YWNrT3JkZXJEZWZhdWx0O1xuICAgICAgcmV0dXJuIHN0YWNrO1xuICAgIH07XG4gICAgc3RhY2sub2Zmc2V0ID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gb2Zmc2V0O1xuICAgICAgb2Zmc2V0ID0gdHlwZW9mIHggPT09IFwiZnVuY3Rpb25cIiA/IHggOiBkM19sYXlvdXRfc3RhY2tPZmZzZXRzLmdldCh4KSB8fCBkM19sYXlvdXRfc3RhY2tPZmZzZXRaZXJvO1xuICAgICAgcmV0dXJuIHN0YWNrO1xuICAgIH07XG4gICAgc3RhY2sueCA9IGZ1bmN0aW9uKHopIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHg7XG4gICAgICB4ID0gejtcbiAgICAgIHJldHVybiBzdGFjaztcbiAgICB9O1xuICAgIHN0YWNrLnkgPSBmdW5jdGlvbih6KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB5O1xuICAgICAgeSA9IHo7XG4gICAgICByZXR1cm4gc3RhY2s7XG4gICAgfTtcbiAgICBzdGFjay5vdXQgPSBmdW5jdGlvbih6KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBvdXQ7XG4gICAgICBvdXQgPSB6O1xuICAgICAgcmV0dXJuIHN0YWNrO1xuICAgIH07XG4gICAgcmV0dXJuIHN0YWNrO1xuICB9O1xuICBmdW5jdGlvbiBkM19sYXlvdXRfc3RhY2tYKGQpIHtcbiAgICByZXR1cm4gZC54O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9zdGFja1koZCkge1xuICAgIHJldHVybiBkLnk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3N0YWNrT3V0KGQsIHkwLCB5KSB7XG4gICAgZC55MCA9IHkwO1xuICAgIGQueSA9IHk7XG4gIH1cbiAgdmFyIGQzX2xheW91dF9zdGFja09yZGVycyA9IGQzLm1hcCh7XG4gICAgXCJpbnNpZGUtb3V0XCI6IGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgIHZhciBuID0gZGF0YS5sZW5ndGgsIGksIGosIG1heCA9IGRhdGEubWFwKGQzX2xheW91dF9zdGFja01heEluZGV4KSwgc3VtcyA9IGRhdGEubWFwKGQzX2xheW91dF9zdGFja1JlZHVjZVN1bSksIGluZGV4ID0gZDMucmFuZ2Uobikuc29ydChmdW5jdGlvbihhLCBiKSB7XG4gICAgICAgIHJldHVybiBtYXhbYV0gLSBtYXhbYl07XG4gICAgICB9KSwgdG9wID0gMCwgYm90dG9tID0gMCwgdG9wcyA9IFtdLCBib3R0b21zID0gW107XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgbjsgKytpKSB7XG4gICAgICAgIGogPSBpbmRleFtpXTtcbiAgICAgICAgaWYgKHRvcCA8IGJvdHRvbSkge1xuICAgICAgICAgIHRvcCArPSBzdW1zW2pdO1xuICAgICAgICAgIHRvcHMucHVzaChqKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBib3R0b20gKz0gc3Vtc1tqXTtcbiAgICAgICAgICBib3R0b21zLnB1c2goaik7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBib3R0b21zLnJldmVyc2UoKS5jb25jYXQodG9wcyk7XG4gICAgfSxcbiAgICByZXZlcnNlOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICByZXR1cm4gZDMucmFuZ2UoZGF0YS5sZW5ndGgpLnJldmVyc2UoKTtcbiAgICB9LFxuICAgIFwiZGVmYXVsdFwiOiBkM19sYXlvdXRfc3RhY2tPcmRlckRlZmF1bHRcbiAgfSk7XG4gIHZhciBkM19sYXlvdXRfc3RhY2tPZmZzZXRzID0gZDMubWFwKHtcbiAgICBzaWxob3VldHRlOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICB2YXIgbiA9IGRhdGEubGVuZ3RoLCBtID0gZGF0YVswXS5sZW5ndGgsIHN1bXMgPSBbXSwgbWF4ID0gMCwgaSwgaiwgbywgeTAgPSBbXTtcbiAgICAgIGZvciAoaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICAgICAgZm9yIChpID0gMCwgbyA9IDA7IGkgPCBuOyBpKyspIG8gKz0gZGF0YVtpXVtqXVsxXTtcbiAgICAgICAgaWYgKG8gPiBtYXgpIG1heCA9IG87XG4gICAgICAgIHN1bXMucHVzaChvKTtcbiAgICAgIH1cbiAgICAgIGZvciAoaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICAgICAgeTBbal0gPSAobWF4IC0gc3Vtc1tqXSkgLyAyO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHkwO1xuICAgIH0sXG4gICAgd2lnZ2xlOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICB2YXIgbiA9IGRhdGEubGVuZ3RoLCB4ID0gZGF0YVswXSwgbSA9IHgubGVuZ3RoLCBpLCBqLCBrLCBzMSwgczIsIHMzLCBkeCwgbywgbzAsIHkwID0gW107XG4gICAgICB5MFswXSA9IG8gPSBvMCA9IDA7XG4gICAgICBmb3IgKGogPSAxOyBqIDwgbTsgKytqKSB7XG4gICAgICAgIGZvciAoaSA9IDAsIHMxID0gMDsgaSA8IG47ICsraSkgczEgKz0gZGF0YVtpXVtqXVsxXTtcbiAgICAgICAgZm9yIChpID0gMCwgczIgPSAwLCBkeCA9IHhbal1bMF0gLSB4W2ogLSAxXVswXTsgaSA8IG47ICsraSkge1xuICAgICAgICAgIGZvciAoayA9IDAsIHMzID0gKGRhdGFbaV1bal1bMV0gLSBkYXRhW2ldW2ogLSAxXVsxXSkgLyAoMiAqIGR4KTsgayA8IGk7ICsraykge1xuICAgICAgICAgICAgczMgKz0gKGRhdGFba11bal1bMV0gLSBkYXRhW2tdW2ogLSAxXVsxXSkgLyBkeDtcbiAgICAgICAgICB9XG4gICAgICAgICAgczIgKz0gczMgKiBkYXRhW2ldW2pdWzFdO1xuICAgICAgICB9XG4gICAgICAgIHkwW2pdID0gbyAtPSBzMSA/IHMyIC8gczEgKiBkeCA6IDA7XG4gICAgICAgIGlmIChvIDwgbzApIG8wID0gbztcbiAgICAgIH1cbiAgICAgIGZvciAoaiA9IDA7IGogPCBtOyArK2opIHkwW2pdIC09IG8wO1xuICAgICAgcmV0dXJuIHkwO1xuICAgIH0sXG4gICAgZXhwYW5kOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICB2YXIgbiA9IGRhdGEubGVuZ3RoLCBtID0gZGF0YVswXS5sZW5ndGgsIGsgPSAxIC8gbiwgaSwgaiwgbywgeTAgPSBbXTtcbiAgICAgIGZvciAoaiA9IDA7IGogPCBtOyArK2opIHtcbiAgICAgICAgZm9yIChpID0gMCwgbyA9IDA7IGkgPCBuOyBpKyspIG8gKz0gZGF0YVtpXVtqXVsxXTtcbiAgICAgICAgaWYgKG8pIGZvciAoaSA9IDA7IGkgPCBuOyBpKyspIGRhdGFbaV1bal1bMV0gLz0gbzsgZWxzZSBmb3IgKGkgPSAwOyBpIDwgbjsgaSsrKSBkYXRhW2ldW2pdWzFdID0gaztcbiAgICAgIH1cbiAgICAgIGZvciAoaiA9IDA7IGogPCBtOyArK2opIHkwW2pdID0gMDtcbiAgICAgIHJldHVybiB5MDtcbiAgICB9LFxuICAgIHplcm86IGQzX2xheW91dF9zdGFja09mZnNldFplcm9cbiAgfSk7XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9zdGFja09yZGVyRGVmYXVsdChkYXRhKSB7XG4gICAgcmV0dXJuIGQzLnJhbmdlKGRhdGEubGVuZ3RoKTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfc3RhY2tPZmZzZXRaZXJvKGRhdGEpIHtcbiAgICB2YXIgaiA9IC0xLCBtID0gZGF0YVswXS5sZW5ndGgsIHkwID0gW107XG4gICAgd2hpbGUgKCsraiA8IG0pIHkwW2pdID0gMDtcbiAgICByZXR1cm4geTA7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3N0YWNrTWF4SW5kZXgoYXJyYXkpIHtcbiAgICB2YXIgaSA9IDEsIGogPSAwLCB2ID0gYXJyYXlbMF1bMV0sIGssIG4gPSBhcnJheS5sZW5ndGg7XG4gICAgZm9yICg7aSA8IG47ICsraSkge1xuICAgICAgaWYgKChrID0gYXJyYXlbaV1bMV0pID4gdikge1xuICAgICAgICBqID0gaTtcbiAgICAgICAgdiA9IGs7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBqO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9zdGFja1JlZHVjZVN1bShkKSB7XG4gICAgcmV0dXJuIGQucmVkdWNlKGQzX2xheW91dF9zdGFja1N1bSwgMCk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3N0YWNrU3VtKHAsIGQpIHtcbiAgICByZXR1cm4gcCArIGRbMV07XG4gIH1cbiAgZDMubGF5b3V0Lmhpc3RvZ3JhbSA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBmcmVxdWVuY3kgPSB0cnVlLCB2YWx1ZXIgPSBOdW1iZXIsIHJhbmdlciA9IGQzX2xheW91dF9oaXN0b2dyYW1SYW5nZSwgYmlubmVyID0gZDNfbGF5b3V0X2hpc3RvZ3JhbUJpblN0dXJnZXM7XG4gICAgZnVuY3Rpb24gaGlzdG9ncmFtKGRhdGEsIGkpIHtcbiAgICAgIHZhciBiaW5zID0gW10sIHZhbHVlcyA9IGRhdGEubWFwKHZhbHVlciwgdGhpcyksIHJhbmdlID0gcmFuZ2VyLmNhbGwodGhpcywgdmFsdWVzLCBpKSwgdGhyZXNob2xkcyA9IGJpbm5lci5jYWxsKHRoaXMsIHJhbmdlLCB2YWx1ZXMsIGkpLCBiaW4sIGkgPSAtMSwgbiA9IHZhbHVlcy5sZW5ndGgsIG0gPSB0aHJlc2hvbGRzLmxlbmd0aCAtIDEsIGsgPSBmcmVxdWVuY3kgPyAxIDogMSAvIG4sIHg7XG4gICAgICB3aGlsZSAoKytpIDwgbSkge1xuICAgICAgICBiaW4gPSBiaW5zW2ldID0gW107XG4gICAgICAgIGJpbi5keCA9IHRocmVzaG9sZHNbaSArIDFdIC0gKGJpbi54ID0gdGhyZXNob2xkc1tpXSk7XG4gICAgICAgIGJpbi55ID0gMDtcbiAgICAgIH1cbiAgICAgIGlmIChtID4gMCkge1xuICAgICAgICBpID0gLTE7XG4gICAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgICAgeCA9IHZhbHVlc1tpXTtcbiAgICAgICAgICBpZiAoeCA+PSByYW5nZVswXSAmJiB4IDw9IHJhbmdlWzFdKSB7XG4gICAgICAgICAgICBiaW4gPSBiaW5zW2QzLmJpc2VjdCh0aHJlc2hvbGRzLCB4LCAxLCBtKSAtIDFdO1xuICAgICAgICAgICAgYmluLnkgKz0gaztcbiAgICAgICAgICAgIGJpbi5wdXNoKGRhdGFbaV0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIGJpbnM7XG4gICAgfVxuICAgIGhpc3RvZ3JhbS52YWx1ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHZhbHVlcjtcbiAgICAgIHZhbHVlciA9IHg7XG4gICAgICByZXR1cm4gaGlzdG9ncmFtO1xuICAgIH07XG4gICAgaGlzdG9ncmFtLnJhbmdlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcmFuZ2VyO1xuICAgICAgcmFuZ2VyID0gZDNfZnVuY3Rvcih4KTtcbiAgICAgIHJldHVybiBoaXN0b2dyYW07XG4gICAgfTtcbiAgICBoaXN0b2dyYW0uYmlucyA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGJpbm5lcjtcbiAgICAgIGJpbm5lciA9IHR5cGVvZiB4ID09PSBcIm51bWJlclwiID8gZnVuY3Rpb24ocmFuZ2UpIHtcbiAgICAgICAgcmV0dXJuIGQzX2xheW91dF9oaXN0b2dyYW1CaW5GaXhlZChyYW5nZSwgeCk7XG4gICAgICB9IDogZDNfZnVuY3Rvcih4KTtcbiAgICAgIHJldHVybiBoaXN0b2dyYW07XG4gICAgfTtcbiAgICBoaXN0b2dyYW0uZnJlcXVlbmN5ID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZnJlcXVlbmN5O1xuICAgICAgZnJlcXVlbmN5ID0gISF4O1xuICAgICAgcmV0dXJuIGhpc3RvZ3JhbTtcbiAgICB9O1xuICAgIHJldHVybiBoaXN0b2dyYW07XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9oaXN0b2dyYW1CaW5TdHVyZ2VzKHJhbmdlLCB2YWx1ZXMpIHtcbiAgICByZXR1cm4gZDNfbGF5b3V0X2hpc3RvZ3JhbUJpbkZpeGVkKHJhbmdlLCBNYXRoLmNlaWwoTWF0aC5sb2codmFsdWVzLmxlbmd0aCkgLyBNYXRoLkxOMiArIDEpKTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfaGlzdG9ncmFtQmluRml4ZWQocmFuZ2UsIG4pIHtcbiAgICB2YXIgeCA9IC0xLCBiID0gK3JhbmdlWzBdLCBtID0gKHJhbmdlWzFdIC0gYikgLyBuLCBmID0gW107XG4gICAgd2hpbGUgKCsreCA8PSBuKSBmW3hdID0gbSAqIHggKyBiO1xuICAgIHJldHVybiBmO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9oaXN0b2dyYW1SYW5nZSh2YWx1ZXMpIHtcbiAgICByZXR1cm4gWyBkMy5taW4odmFsdWVzKSwgZDMubWF4KHZhbHVlcykgXTtcbiAgfVxuICBkMy5sYXlvdXQucGFjayA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBoaWVyYXJjaHkgPSBkMy5sYXlvdXQuaGllcmFyY2h5KCkuc29ydChkM19sYXlvdXRfcGFja1NvcnQpLCBwYWRkaW5nID0gMCwgc2l6ZSA9IFsgMSwgMSBdLCByYWRpdXM7XG4gICAgZnVuY3Rpb24gcGFjayhkLCBpKSB7XG4gICAgICB2YXIgbm9kZXMgPSBoaWVyYXJjaHkuY2FsbCh0aGlzLCBkLCBpKSwgcm9vdCA9IG5vZGVzWzBdLCB3ID0gc2l6ZVswXSwgaCA9IHNpemVbMV0sIHIgPSByYWRpdXMgPT0gbnVsbCA/IE1hdGguc3FydCA6IHR5cGVvZiByYWRpdXMgPT09IFwiZnVuY3Rpb25cIiA/IHJhZGl1cyA6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gcmFkaXVzO1xuICAgICAgfTtcbiAgICAgIHJvb3QueCA9IHJvb3QueSA9IDA7XG4gICAgICBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRBZnRlcihyb290LCBmdW5jdGlvbihkKSB7XG4gICAgICAgIGQuciA9ICtyKGQudmFsdWUpO1xuICAgICAgfSk7XG4gICAgICBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRBZnRlcihyb290LCBkM19sYXlvdXRfcGFja1NpYmxpbmdzKTtcbiAgICAgIGlmIChwYWRkaW5nKSB7XG4gICAgICAgIHZhciBkciA9IHBhZGRpbmcgKiAocmFkaXVzID8gMSA6IE1hdGgubWF4KDIgKiByb290LnIgLyB3LCAyICogcm9vdC5yIC8gaCkpIC8gMjtcbiAgICAgICAgZDNfbGF5b3V0X2hpZXJhcmNoeVZpc2l0QWZ0ZXIocm9vdCwgZnVuY3Rpb24oZCkge1xuICAgICAgICAgIGQuciArPSBkcjtcbiAgICAgICAgfSk7XG4gICAgICAgIGQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEFmdGVyKHJvb3QsIGQzX2xheW91dF9wYWNrU2libGluZ3MpO1xuICAgICAgICBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRBZnRlcihyb290LCBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgZC5yIC09IGRyO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGQzX2xheW91dF9wYWNrVHJhbnNmb3JtKHJvb3QsIHcgLyAyLCBoIC8gMiwgcmFkaXVzID8gMSA6IDEgLyBNYXRoLm1heCgyICogcm9vdC5yIC8gdywgMiAqIHJvb3QuciAvIGgpKTtcbiAgICAgIHJldHVybiBub2RlcztcbiAgICB9XG4gICAgcGFjay5zaXplID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc2l6ZTtcbiAgICAgIHNpemUgPSBfO1xuICAgICAgcmV0dXJuIHBhY2s7XG4gICAgfTtcbiAgICBwYWNrLnJhZGl1cyA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHJhZGl1cztcbiAgICAgIHJhZGl1cyA9IF8gPT0gbnVsbCB8fCB0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiID8gXyA6ICtfO1xuICAgICAgcmV0dXJuIHBhY2s7XG4gICAgfTtcbiAgICBwYWNrLnBhZGRpbmcgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBwYWRkaW5nO1xuICAgICAgcGFkZGluZyA9ICtfO1xuICAgICAgcmV0dXJuIHBhY2s7XG4gICAgfTtcbiAgICByZXR1cm4gZDNfbGF5b3V0X2hpZXJhcmNoeVJlYmluZChwYWNrLCBoaWVyYXJjaHkpO1xuICB9O1xuICBmdW5jdGlvbiBkM19sYXlvdXRfcGFja1NvcnQoYSwgYikge1xuICAgIHJldHVybiBhLnZhbHVlIC0gYi52YWx1ZTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfcGFja0luc2VydChhLCBiKSB7XG4gICAgdmFyIGMgPSBhLl9wYWNrX25leHQ7XG4gICAgYS5fcGFja19uZXh0ID0gYjtcbiAgICBiLl9wYWNrX3ByZXYgPSBhO1xuICAgIGIuX3BhY2tfbmV4dCA9IGM7XG4gICAgYy5fcGFja19wcmV2ID0gYjtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfcGFja1NwbGljZShhLCBiKSB7XG4gICAgYS5fcGFja19uZXh0ID0gYjtcbiAgICBiLl9wYWNrX3ByZXYgPSBhO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9wYWNrSW50ZXJzZWN0cyhhLCBiKSB7XG4gICAgdmFyIGR4ID0gYi54IC0gYS54LCBkeSA9IGIueSAtIGEueSwgZHIgPSBhLnIgKyBiLnI7XG4gICAgcmV0dXJuIC45OTkgKiBkciAqIGRyID4gZHggKiBkeCArIGR5ICogZHk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3BhY2tTaWJsaW5ncyhub2RlKSB7XG4gICAgaWYgKCEobm9kZXMgPSBub2RlLmNoaWxkcmVuKSB8fCAhKG4gPSBub2Rlcy5sZW5ndGgpKSByZXR1cm47XG4gICAgdmFyIG5vZGVzLCB4TWluID0gSW5maW5pdHksIHhNYXggPSAtSW5maW5pdHksIHlNaW4gPSBJbmZpbml0eSwgeU1heCA9IC1JbmZpbml0eSwgYSwgYiwgYywgaSwgaiwgaywgbjtcbiAgICBmdW5jdGlvbiBib3VuZChub2RlKSB7XG4gICAgICB4TWluID0gTWF0aC5taW4obm9kZS54IC0gbm9kZS5yLCB4TWluKTtcbiAgICAgIHhNYXggPSBNYXRoLm1heChub2RlLnggKyBub2RlLnIsIHhNYXgpO1xuICAgICAgeU1pbiA9IE1hdGgubWluKG5vZGUueSAtIG5vZGUuciwgeU1pbik7XG4gICAgICB5TWF4ID0gTWF0aC5tYXgobm9kZS55ICsgbm9kZS5yLCB5TWF4KTtcbiAgICB9XG4gICAgbm9kZXMuZm9yRWFjaChkM19sYXlvdXRfcGFja0xpbmspO1xuICAgIGEgPSBub2Rlc1swXTtcbiAgICBhLnggPSAtYS5yO1xuICAgIGEueSA9IDA7XG4gICAgYm91bmQoYSk7XG4gICAgaWYgKG4gPiAxKSB7XG4gICAgICBiID0gbm9kZXNbMV07XG4gICAgICBiLnggPSBiLnI7XG4gICAgICBiLnkgPSAwO1xuICAgICAgYm91bmQoYik7XG4gICAgICBpZiAobiA+IDIpIHtcbiAgICAgICAgYyA9IG5vZGVzWzJdO1xuICAgICAgICBkM19sYXlvdXRfcGFja1BsYWNlKGEsIGIsIGMpO1xuICAgICAgICBib3VuZChjKTtcbiAgICAgICAgZDNfbGF5b3V0X3BhY2tJbnNlcnQoYSwgYyk7XG4gICAgICAgIGEuX3BhY2tfcHJldiA9IGM7XG4gICAgICAgIGQzX2xheW91dF9wYWNrSW5zZXJ0KGMsIGIpO1xuICAgICAgICBiID0gYS5fcGFja19uZXh0O1xuICAgICAgICBmb3IgKGkgPSAzOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgICAgZDNfbGF5b3V0X3BhY2tQbGFjZShhLCBiLCBjID0gbm9kZXNbaV0pO1xuICAgICAgICAgIHZhciBpc2VjdCA9IDAsIHMxID0gMSwgczIgPSAxO1xuICAgICAgICAgIGZvciAoaiA9IGIuX3BhY2tfbmV4dDsgaiAhPT0gYjsgaiA9IGouX3BhY2tfbmV4dCwgczErKykge1xuICAgICAgICAgICAgaWYgKGQzX2xheW91dF9wYWNrSW50ZXJzZWN0cyhqLCBjKSkge1xuICAgICAgICAgICAgICBpc2VjdCA9IDE7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoaXNlY3QgPT0gMSkge1xuICAgICAgICAgICAgZm9yIChrID0gYS5fcGFja19wcmV2OyBrICE9PSBqLl9wYWNrX3ByZXY7IGsgPSBrLl9wYWNrX3ByZXYsIHMyKyspIHtcbiAgICAgICAgICAgICAgaWYgKGQzX2xheW91dF9wYWNrSW50ZXJzZWN0cyhrLCBjKSkge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChpc2VjdCkge1xuICAgICAgICAgICAgaWYgKHMxIDwgczIgfHwgczEgPT0gczIgJiYgYi5yIDwgYS5yKSBkM19sYXlvdXRfcGFja1NwbGljZShhLCBiID0gaik7IGVsc2UgZDNfbGF5b3V0X3BhY2tTcGxpY2UoYSA9IGssIGIpO1xuICAgICAgICAgICAgaS0tO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBkM19sYXlvdXRfcGFja0luc2VydChhLCBjKTtcbiAgICAgICAgICAgIGIgPSBjO1xuICAgICAgICAgICAgYm91bmQoYyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHZhciBjeCA9ICh4TWluICsgeE1heCkgLyAyLCBjeSA9ICh5TWluICsgeU1heCkgLyAyLCBjciA9IDA7XG4gICAgZm9yIChpID0gMDsgaSA8IG47IGkrKykge1xuICAgICAgYyA9IG5vZGVzW2ldO1xuICAgICAgYy54IC09IGN4O1xuICAgICAgYy55IC09IGN5O1xuICAgICAgY3IgPSBNYXRoLm1heChjciwgYy5yICsgTWF0aC5zcXJ0KGMueCAqIGMueCArIGMueSAqIGMueSkpO1xuICAgIH1cbiAgICBub2RlLnIgPSBjcjtcbiAgICBub2Rlcy5mb3JFYWNoKGQzX2xheW91dF9wYWNrVW5saW5rKTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfcGFja0xpbmsobm9kZSkge1xuICAgIG5vZGUuX3BhY2tfbmV4dCA9IG5vZGUuX3BhY2tfcHJldiA9IG5vZGU7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3BhY2tVbmxpbmsobm9kZSkge1xuICAgIGRlbGV0ZSBub2RlLl9wYWNrX25leHQ7XG4gICAgZGVsZXRlIG5vZGUuX3BhY2tfcHJldjtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfcGFja1RyYW5zZm9ybShub2RlLCB4LCB5LCBrKSB7XG4gICAgdmFyIGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbjtcbiAgICBub2RlLnggPSB4ICs9IGsgKiBub2RlLng7XG4gICAgbm9kZS55ID0geSArPSBrICogbm9kZS55O1xuICAgIG5vZGUuciAqPSBrO1xuICAgIGlmIChjaGlsZHJlbikge1xuICAgICAgdmFyIGkgPSAtMSwgbiA9IGNoaWxkcmVuLmxlbmd0aDtcbiAgICAgIHdoaWxlICgrK2kgPCBuKSBkM19sYXlvdXRfcGFja1RyYW5zZm9ybShjaGlsZHJlbltpXSwgeCwgeSwgayk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF9wYWNrUGxhY2UoYSwgYiwgYykge1xuICAgIHZhciBkYiA9IGEuciArIGMuciwgZHggPSBiLnggLSBhLngsIGR5ID0gYi55IC0gYS55O1xuICAgIGlmIChkYiAmJiAoZHggfHwgZHkpKSB7XG4gICAgICB2YXIgZGEgPSBiLnIgKyBjLnIsIGRjID0gZHggKiBkeCArIGR5ICogZHk7XG4gICAgICBkYSAqPSBkYTtcbiAgICAgIGRiICo9IGRiO1xuICAgICAgdmFyIHggPSAuNSArIChkYiAtIGRhKSAvICgyICogZGMpLCB5ID0gTWF0aC5zcXJ0KE1hdGgubWF4KDAsIDIgKiBkYSAqIChkYiArIGRjKSAtIChkYiAtPSBkYykgKiBkYiAtIGRhICogZGEpKSAvICgyICogZGMpO1xuICAgICAgYy54ID0gYS54ICsgeCAqIGR4ICsgeSAqIGR5O1xuICAgICAgYy55ID0gYS55ICsgeCAqIGR5IC0geSAqIGR4O1xuICAgIH0gZWxzZSB7XG4gICAgICBjLnggPSBhLnggKyBkYjtcbiAgICAgIGMueSA9IGEueTtcbiAgICB9XG4gIH1cbiAgZDMubGF5b3V0LnRyZWUgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaGllcmFyY2h5ID0gZDMubGF5b3V0LmhpZXJhcmNoeSgpLnNvcnQobnVsbCkudmFsdWUobnVsbCksIHNlcGFyYXRpb24gPSBkM19sYXlvdXRfdHJlZVNlcGFyYXRpb24sIHNpemUgPSBbIDEsIDEgXSwgbm9kZVNpemUgPSBudWxsO1xuICAgIGZ1bmN0aW9uIHRyZWUoZCwgaSkge1xuICAgICAgdmFyIG5vZGVzID0gaGllcmFyY2h5LmNhbGwodGhpcywgZCwgaSksIHJvb3QwID0gbm9kZXNbMF0sIHJvb3QxID0gd3JhcFRyZWUocm9vdDApO1xuICAgICAgZDNfbGF5b3V0X2hpZXJhcmNoeVZpc2l0QWZ0ZXIocm9vdDEsIGZpcnN0V2FsayksIHJvb3QxLnBhcmVudC5tID0gLXJvb3QxLno7XG4gICAgICBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRCZWZvcmUocm9vdDEsIHNlY29uZFdhbGspO1xuICAgICAgaWYgKG5vZGVTaXplKSBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRCZWZvcmUocm9vdDAsIHNpemVOb2RlKTsgZWxzZSB7XG4gICAgICAgIHZhciBsZWZ0ID0gcm9vdDAsIHJpZ2h0ID0gcm9vdDAsIGJvdHRvbSA9IHJvb3QwO1xuICAgICAgICBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRCZWZvcmUocm9vdDAsIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgICBpZiAobm9kZS54IDwgbGVmdC54KSBsZWZ0ID0gbm9kZTtcbiAgICAgICAgICBpZiAobm9kZS54ID4gcmlnaHQueCkgcmlnaHQgPSBub2RlO1xuICAgICAgICAgIGlmIChub2RlLmRlcHRoID4gYm90dG9tLmRlcHRoKSBib3R0b20gPSBub2RlO1xuICAgICAgICB9KTtcbiAgICAgICAgdmFyIHR4ID0gc2VwYXJhdGlvbihsZWZ0LCByaWdodCkgLyAyIC0gbGVmdC54LCBreCA9IHNpemVbMF0gLyAocmlnaHQueCArIHNlcGFyYXRpb24ocmlnaHQsIGxlZnQpIC8gMiArIHR4KSwga3kgPSBzaXplWzFdIC8gKGJvdHRvbS5kZXB0aCB8fCAxKTtcbiAgICAgICAgZDNfbGF5b3V0X2hpZXJhcmNoeVZpc2l0QmVmb3JlKHJvb3QwLCBmdW5jdGlvbihub2RlKSB7XG4gICAgICAgICAgbm9kZS54ID0gKG5vZGUueCArIHR4KSAqIGt4O1xuICAgICAgICAgIG5vZGUueSA9IG5vZGUuZGVwdGggKiBreTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbm9kZXM7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHdyYXBUcmVlKHJvb3QwKSB7XG4gICAgICB2YXIgcm9vdDEgPSB7XG4gICAgICAgIEE6IG51bGwsXG4gICAgICAgIGNoaWxkcmVuOiBbIHJvb3QwIF1cbiAgICAgIH0sIHF1ZXVlID0gWyByb290MSBdLCBub2RlMTtcbiAgICAgIHdoaWxlICgobm9kZTEgPSBxdWV1ZS5wb3AoKSkgIT0gbnVsbCkge1xuICAgICAgICBmb3IgKHZhciBjaGlsZHJlbiA9IG5vZGUxLmNoaWxkcmVuLCBjaGlsZCwgaSA9IDAsIG4gPSBjaGlsZHJlbi5sZW5ndGg7IGkgPCBuOyArK2kpIHtcbiAgICAgICAgICBxdWV1ZS5wdXNoKChjaGlsZHJlbltpXSA9IGNoaWxkID0ge1xuICAgICAgICAgICAgXzogY2hpbGRyZW5baV0sXG4gICAgICAgICAgICBwYXJlbnQ6IG5vZGUxLFxuICAgICAgICAgICAgY2hpbGRyZW46IChjaGlsZCA9IGNoaWxkcmVuW2ldLmNoaWxkcmVuKSAmJiBjaGlsZC5zbGljZSgpIHx8IFtdLFxuICAgICAgICAgICAgQTogbnVsbCxcbiAgICAgICAgICAgIGE6IG51bGwsXG4gICAgICAgICAgICB6OiAwLFxuICAgICAgICAgICAgbTogMCxcbiAgICAgICAgICAgIGM6IDAsXG4gICAgICAgICAgICBzOiAwLFxuICAgICAgICAgICAgdDogbnVsbCxcbiAgICAgICAgICAgIGk6IGlcbiAgICAgICAgICB9KS5hID0gY2hpbGQpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gcm9vdDEuY2hpbGRyZW5bMF07XG4gICAgfVxuICAgIGZ1bmN0aW9uIGZpcnN0V2Fsayh2KSB7XG4gICAgICB2YXIgY2hpbGRyZW4gPSB2LmNoaWxkcmVuLCBzaWJsaW5ncyA9IHYucGFyZW50LmNoaWxkcmVuLCB3ID0gdi5pID8gc2libGluZ3Nbdi5pIC0gMV0gOiBudWxsO1xuICAgICAgaWYgKGNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICBkM19sYXlvdXRfdHJlZVNoaWZ0KHYpO1xuICAgICAgICB2YXIgbWlkcG9pbnQgPSAoY2hpbGRyZW5bMF0ueiArIGNoaWxkcmVuW2NoaWxkcmVuLmxlbmd0aCAtIDFdLnopIC8gMjtcbiAgICAgICAgaWYgKHcpIHtcbiAgICAgICAgICB2LnogPSB3LnogKyBzZXBhcmF0aW9uKHYuXywgdy5fKTtcbiAgICAgICAgICB2Lm0gPSB2LnogLSBtaWRwb2ludDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2LnogPSBtaWRwb2ludDtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmICh3KSB7XG4gICAgICAgIHYueiA9IHcueiArIHNlcGFyYXRpb24odi5fLCB3Ll8pO1xuICAgICAgfVxuICAgICAgdi5wYXJlbnQuQSA9IGFwcG9ydGlvbih2LCB3LCB2LnBhcmVudC5BIHx8IHNpYmxpbmdzWzBdKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc2Vjb25kV2Fsayh2KSB7XG4gICAgICB2Ll8ueCA9IHYueiArIHYucGFyZW50Lm07XG4gICAgICB2Lm0gKz0gdi5wYXJlbnQubTtcbiAgICB9XG4gICAgZnVuY3Rpb24gYXBwb3J0aW9uKHYsIHcsIGFuY2VzdG9yKSB7XG4gICAgICBpZiAodykge1xuICAgICAgICB2YXIgdmlwID0gdiwgdm9wID0gdiwgdmltID0gdywgdm9tID0gdmlwLnBhcmVudC5jaGlsZHJlblswXSwgc2lwID0gdmlwLm0sIHNvcCA9IHZvcC5tLCBzaW0gPSB2aW0ubSwgc29tID0gdm9tLm0sIHNoaWZ0O1xuICAgICAgICB3aGlsZSAodmltID0gZDNfbGF5b3V0X3RyZWVSaWdodCh2aW0pLCB2aXAgPSBkM19sYXlvdXRfdHJlZUxlZnQodmlwKSwgdmltICYmIHZpcCkge1xuICAgICAgICAgIHZvbSA9IGQzX2xheW91dF90cmVlTGVmdCh2b20pO1xuICAgICAgICAgIHZvcCA9IGQzX2xheW91dF90cmVlUmlnaHQodm9wKTtcbiAgICAgICAgICB2b3AuYSA9IHY7XG4gICAgICAgICAgc2hpZnQgPSB2aW0ueiArIHNpbSAtIHZpcC56IC0gc2lwICsgc2VwYXJhdGlvbih2aW0uXywgdmlwLl8pO1xuICAgICAgICAgIGlmIChzaGlmdCA+IDApIHtcbiAgICAgICAgICAgIGQzX2xheW91dF90cmVlTW92ZShkM19sYXlvdXRfdHJlZUFuY2VzdG9yKHZpbSwgdiwgYW5jZXN0b3IpLCB2LCBzaGlmdCk7XG4gICAgICAgICAgICBzaXAgKz0gc2hpZnQ7XG4gICAgICAgICAgICBzb3AgKz0gc2hpZnQ7XG4gICAgICAgICAgfVxuICAgICAgICAgIHNpbSArPSB2aW0ubTtcbiAgICAgICAgICBzaXAgKz0gdmlwLm07XG4gICAgICAgICAgc29tICs9IHZvbS5tO1xuICAgICAgICAgIHNvcCArPSB2b3AubTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmltICYmICFkM19sYXlvdXRfdHJlZVJpZ2h0KHZvcCkpIHtcbiAgICAgICAgICB2b3AudCA9IHZpbTtcbiAgICAgICAgICB2b3AubSArPSBzaW0gLSBzb3A7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZpcCAmJiAhZDNfbGF5b3V0X3RyZWVMZWZ0KHZvbSkpIHtcbiAgICAgICAgICB2b20udCA9IHZpcDtcbiAgICAgICAgICB2b20ubSArPSBzaXAgLSBzb207XG4gICAgICAgICAgYW5jZXN0b3IgPSB2O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gYW5jZXN0b3I7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNpemVOb2RlKG5vZGUpIHtcbiAgICAgIG5vZGUueCAqPSBzaXplWzBdO1xuICAgICAgbm9kZS55ID0gbm9kZS5kZXB0aCAqIHNpemVbMV07XG4gICAgfVxuICAgIHRyZWUuc2VwYXJhdGlvbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNlcGFyYXRpb247XG4gICAgICBzZXBhcmF0aW9uID0geDtcbiAgICAgIHJldHVybiB0cmVlO1xuICAgIH07XG4gICAgdHJlZS5zaXplID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbm9kZVNpemUgPyBudWxsIDogc2l6ZTtcbiAgICAgIG5vZGVTaXplID0gKHNpemUgPSB4KSA9PSBudWxsID8gc2l6ZU5vZGUgOiBudWxsO1xuICAgICAgcmV0dXJuIHRyZWU7XG4gICAgfTtcbiAgICB0cmVlLm5vZGVTaXplID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbm9kZVNpemUgPyBzaXplIDogbnVsbDtcbiAgICAgIG5vZGVTaXplID0gKHNpemUgPSB4KSA9PSBudWxsID8gbnVsbCA6IHNpemVOb2RlO1xuICAgICAgcmV0dXJuIHRyZWU7XG4gICAgfTtcbiAgICByZXR1cm4gZDNfbGF5b3V0X2hpZXJhcmNoeVJlYmluZCh0cmVlLCBoaWVyYXJjaHkpO1xuICB9O1xuICBmdW5jdGlvbiBkM19sYXlvdXRfdHJlZVNlcGFyYXRpb24oYSwgYikge1xuICAgIHJldHVybiBhLnBhcmVudCA9PSBiLnBhcmVudCA/IDEgOiAyO1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF90cmVlTGVmdCh2KSB7XG4gICAgdmFyIGNoaWxkcmVuID0gdi5jaGlsZHJlbjtcbiAgICByZXR1cm4gY2hpbGRyZW4ubGVuZ3RoID8gY2hpbGRyZW5bMF0gOiB2LnQ7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X3RyZWVSaWdodCh2KSB7XG4gICAgdmFyIGNoaWxkcmVuID0gdi5jaGlsZHJlbiwgbjtcbiAgICByZXR1cm4gKG4gPSBjaGlsZHJlbi5sZW5ndGgpID8gY2hpbGRyZW5bbiAtIDFdIDogdi50O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF90cmVlTW92ZSh3bSwgd3AsIHNoaWZ0KSB7XG4gICAgdmFyIGNoYW5nZSA9IHNoaWZ0IC8gKHdwLmkgLSB3bS5pKTtcbiAgICB3cC5jIC09IGNoYW5nZTtcbiAgICB3cC5zICs9IHNoaWZ0O1xuICAgIHdtLmMgKz0gY2hhbmdlO1xuICAgIHdwLnogKz0gc2hpZnQ7XG4gICAgd3AubSArPSBzaGlmdDtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfdHJlZVNoaWZ0KHYpIHtcbiAgICB2YXIgc2hpZnQgPSAwLCBjaGFuZ2UgPSAwLCBjaGlsZHJlbiA9IHYuY2hpbGRyZW4sIGkgPSBjaGlsZHJlbi5sZW5ndGgsIHc7XG4gICAgd2hpbGUgKC0taSA+PSAwKSB7XG4gICAgICB3ID0gY2hpbGRyZW5baV07XG4gICAgICB3LnogKz0gc2hpZnQ7XG4gICAgICB3Lm0gKz0gc2hpZnQ7XG4gICAgICBzaGlmdCArPSB3LnMgKyAoY2hhbmdlICs9IHcuYyk7XG4gICAgfVxuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF90cmVlQW5jZXN0b3IodmltLCB2LCBhbmNlc3Rvcikge1xuICAgIHJldHVybiB2aW0uYS5wYXJlbnQgPT09IHYucGFyZW50ID8gdmltLmEgOiBhbmNlc3RvcjtcbiAgfVxuICBkMy5sYXlvdXQuY2x1c3RlciA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBoaWVyYXJjaHkgPSBkMy5sYXlvdXQuaGllcmFyY2h5KCkuc29ydChudWxsKS52YWx1ZShudWxsKSwgc2VwYXJhdGlvbiA9IGQzX2xheW91dF90cmVlU2VwYXJhdGlvbiwgc2l6ZSA9IFsgMSwgMSBdLCBub2RlU2l6ZSA9IGZhbHNlO1xuICAgIGZ1bmN0aW9uIGNsdXN0ZXIoZCwgaSkge1xuICAgICAgdmFyIG5vZGVzID0gaGllcmFyY2h5LmNhbGwodGhpcywgZCwgaSksIHJvb3QgPSBub2Rlc1swXSwgcHJldmlvdXNOb2RlLCB4ID0gMDtcbiAgICAgIGQzX2xheW91dF9oaWVyYXJjaHlWaXNpdEFmdGVyKHJvb3QsIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgdmFyIGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbjtcbiAgICAgICAgaWYgKGNoaWxkcmVuICYmIGNoaWxkcmVuLmxlbmd0aCkge1xuICAgICAgICAgIG5vZGUueCA9IGQzX2xheW91dF9jbHVzdGVyWChjaGlsZHJlbik7XG4gICAgICAgICAgbm9kZS55ID0gZDNfbGF5b3V0X2NsdXN0ZXJZKGNoaWxkcmVuKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBub2RlLnggPSBwcmV2aW91c05vZGUgPyB4ICs9IHNlcGFyYXRpb24obm9kZSwgcHJldmlvdXNOb2RlKSA6IDA7XG4gICAgICAgICAgbm9kZS55ID0gMDtcbiAgICAgICAgICBwcmV2aW91c05vZGUgPSBub2RlO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHZhciBsZWZ0ID0gZDNfbGF5b3V0X2NsdXN0ZXJMZWZ0KHJvb3QpLCByaWdodCA9IGQzX2xheW91dF9jbHVzdGVyUmlnaHQocm9vdCksIHgwID0gbGVmdC54IC0gc2VwYXJhdGlvbihsZWZ0LCByaWdodCkgLyAyLCB4MSA9IHJpZ2h0LnggKyBzZXBhcmF0aW9uKHJpZ2h0LCBsZWZ0KSAvIDI7XG4gICAgICBkM19sYXlvdXRfaGllcmFyY2h5VmlzaXRBZnRlcihyb290LCBub2RlU2l6ZSA/IGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgbm9kZS54ID0gKG5vZGUueCAtIHJvb3QueCkgKiBzaXplWzBdO1xuICAgICAgICBub2RlLnkgPSAocm9vdC55IC0gbm9kZS55KSAqIHNpemVbMV07XG4gICAgICB9IDogZnVuY3Rpb24obm9kZSkge1xuICAgICAgICBub2RlLnggPSAobm9kZS54IC0geDApIC8gKHgxIC0geDApICogc2l6ZVswXTtcbiAgICAgICAgbm9kZS55ID0gKDEgLSAocm9vdC55ID8gbm9kZS55IC8gcm9vdC55IDogMSkpICogc2l6ZVsxXTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIG5vZGVzO1xuICAgIH1cbiAgICBjbHVzdGVyLnNlcGFyYXRpb24gPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzZXBhcmF0aW9uO1xuICAgICAgc2VwYXJhdGlvbiA9IHg7XG4gICAgICByZXR1cm4gY2x1c3RlcjtcbiAgICB9O1xuICAgIGNsdXN0ZXIuc2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG5vZGVTaXplID8gbnVsbCA6IHNpemU7XG4gICAgICBub2RlU2l6ZSA9IChzaXplID0geCkgPT0gbnVsbDtcbiAgICAgIHJldHVybiBjbHVzdGVyO1xuICAgIH07XG4gICAgY2x1c3Rlci5ub2RlU2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG5vZGVTaXplID8gc2l6ZSA6IG51bGw7XG4gICAgICBub2RlU2l6ZSA9IChzaXplID0geCkgIT0gbnVsbDtcbiAgICAgIHJldHVybiBjbHVzdGVyO1xuICAgIH07XG4gICAgcmV0dXJuIGQzX2xheW91dF9oaWVyYXJjaHlSZWJpbmQoY2x1c3RlciwgaGllcmFyY2h5KTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2NsdXN0ZXJZKGNoaWxkcmVuKSB7XG4gICAgcmV0dXJuIDEgKyBkMy5tYXgoY2hpbGRyZW4sIGZ1bmN0aW9uKGNoaWxkKSB7XG4gICAgICByZXR1cm4gY2hpbGQueTtcbiAgICB9KTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfY2x1c3RlclgoY2hpbGRyZW4pIHtcbiAgICByZXR1cm4gY2hpbGRyZW4ucmVkdWNlKGZ1bmN0aW9uKHgsIGNoaWxkKSB7XG4gICAgICByZXR1cm4geCArIGNoaWxkLng7XG4gICAgfSwgMCkgLyBjaGlsZHJlbi5sZW5ndGg7XG4gIH1cbiAgZnVuY3Rpb24gZDNfbGF5b3V0X2NsdXN0ZXJMZWZ0KG5vZGUpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuO1xuICAgIHJldHVybiBjaGlsZHJlbiAmJiBjaGlsZHJlbi5sZW5ndGggPyBkM19sYXlvdXRfY2x1c3RlckxlZnQoY2hpbGRyZW5bMF0pIDogbm9kZTtcbiAgfVxuICBmdW5jdGlvbiBkM19sYXlvdXRfY2x1c3RlclJpZ2h0KG5vZGUpIHtcbiAgICB2YXIgY2hpbGRyZW4gPSBub2RlLmNoaWxkcmVuLCBuO1xuICAgIHJldHVybiBjaGlsZHJlbiAmJiAobiA9IGNoaWxkcmVuLmxlbmd0aCkgPyBkM19sYXlvdXRfY2x1c3RlclJpZ2h0KGNoaWxkcmVuW24gLSAxXSkgOiBub2RlO1xuICB9XG4gIGQzLmxheW91dC50cmVlbWFwID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGhpZXJhcmNoeSA9IGQzLmxheW91dC5oaWVyYXJjaHkoKSwgcm91bmQgPSBNYXRoLnJvdW5kLCBzaXplID0gWyAxLCAxIF0sIHBhZGRpbmcgPSBudWxsLCBwYWQgPSBkM19sYXlvdXRfdHJlZW1hcFBhZE51bGwsIHN0aWNreSA9IGZhbHNlLCBzdGlja2llcywgbW9kZSA9IFwic3F1YXJpZnlcIiwgcmF0aW8gPSAuNSAqICgxICsgTWF0aC5zcXJ0KDUpKTtcbiAgICBmdW5jdGlvbiBzY2FsZShjaGlsZHJlbiwgaykge1xuICAgICAgdmFyIGkgPSAtMSwgbiA9IGNoaWxkcmVuLmxlbmd0aCwgY2hpbGQsIGFyZWE7XG4gICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICBhcmVhID0gKGNoaWxkID0gY2hpbGRyZW5baV0pLnZhbHVlICogKGsgPCAwID8gMCA6IGspO1xuICAgICAgICBjaGlsZC5hcmVhID0gaXNOYU4oYXJlYSkgfHwgYXJlYSA8PSAwID8gMCA6IGFyZWE7XG4gICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNxdWFyaWZ5KG5vZGUpIHtcbiAgICAgIHZhciBjaGlsZHJlbiA9IG5vZGUuY2hpbGRyZW47XG4gICAgICBpZiAoY2hpbGRyZW4gJiYgY2hpbGRyZW4ubGVuZ3RoKSB7XG4gICAgICAgIHZhciByZWN0ID0gcGFkKG5vZGUpLCByb3cgPSBbXSwgcmVtYWluaW5nID0gY2hpbGRyZW4uc2xpY2UoKSwgY2hpbGQsIGJlc3QgPSBJbmZpbml0eSwgc2NvcmUsIHUgPSBtb2RlID09PSBcInNsaWNlXCIgPyByZWN0LmR4IDogbW9kZSA9PT0gXCJkaWNlXCIgPyByZWN0LmR5IDogbW9kZSA9PT0gXCJzbGljZS1kaWNlXCIgPyBub2RlLmRlcHRoICYgMSA/IHJlY3QuZHkgOiByZWN0LmR4IDogTWF0aC5taW4ocmVjdC5keCwgcmVjdC5keSksIG47XG4gICAgICAgIHNjYWxlKHJlbWFpbmluZywgcmVjdC5keCAqIHJlY3QuZHkgLyBub2RlLnZhbHVlKTtcbiAgICAgICAgcm93LmFyZWEgPSAwO1xuICAgICAgICB3aGlsZSAoKG4gPSByZW1haW5pbmcubGVuZ3RoKSA+IDApIHtcbiAgICAgICAgICByb3cucHVzaChjaGlsZCA9IHJlbWFpbmluZ1tuIC0gMV0pO1xuICAgICAgICAgIHJvdy5hcmVhICs9IGNoaWxkLmFyZWE7XG4gICAgICAgICAgaWYgKG1vZGUgIT09IFwic3F1YXJpZnlcIiB8fCAoc2NvcmUgPSB3b3JzdChyb3csIHUpKSA8PSBiZXN0KSB7XG4gICAgICAgICAgICByZW1haW5pbmcucG9wKCk7XG4gICAgICAgICAgICBiZXN0ID0gc2NvcmU7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJvdy5hcmVhIC09IHJvdy5wb3AoKS5hcmVhO1xuICAgICAgICAgICAgcG9zaXRpb24ocm93LCB1LCByZWN0LCBmYWxzZSk7XG4gICAgICAgICAgICB1ID0gTWF0aC5taW4ocmVjdC5keCwgcmVjdC5keSk7XG4gICAgICAgICAgICByb3cubGVuZ3RoID0gcm93LmFyZWEgPSAwO1xuICAgICAgICAgICAgYmVzdCA9IEluZmluaXR5O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAocm93Lmxlbmd0aCkge1xuICAgICAgICAgIHBvc2l0aW9uKHJvdywgdSwgcmVjdCwgdHJ1ZSk7XG4gICAgICAgICAgcm93Lmxlbmd0aCA9IHJvdy5hcmVhID0gMDtcbiAgICAgICAgfVxuICAgICAgICBjaGlsZHJlbi5mb3JFYWNoKHNxdWFyaWZ5KTtcbiAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gc3RpY2tpZnkobm9kZSkge1xuICAgICAgdmFyIGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbjtcbiAgICAgIGlmIChjaGlsZHJlbiAmJiBjaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgICAgdmFyIHJlY3QgPSBwYWQobm9kZSksIHJlbWFpbmluZyA9IGNoaWxkcmVuLnNsaWNlKCksIGNoaWxkLCByb3cgPSBbXTtcbiAgICAgICAgc2NhbGUocmVtYWluaW5nLCByZWN0LmR4ICogcmVjdC5keSAvIG5vZGUudmFsdWUpO1xuICAgICAgICByb3cuYXJlYSA9IDA7XG4gICAgICAgIHdoaWxlIChjaGlsZCA9IHJlbWFpbmluZy5wb3AoKSkge1xuICAgICAgICAgIHJvdy5wdXNoKGNoaWxkKTtcbiAgICAgICAgICByb3cuYXJlYSArPSBjaGlsZC5hcmVhO1xuICAgICAgICAgIGlmIChjaGlsZC56ICE9IG51bGwpIHtcbiAgICAgICAgICAgIHBvc2l0aW9uKHJvdywgY2hpbGQueiA/IHJlY3QuZHggOiByZWN0LmR5LCByZWN0LCAhcmVtYWluaW5nLmxlbmd0aCk7XG4gICAgICAgICAgICByb3cubGVuZ3RoID0gcm93LmFyZWEgPSAwO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjaGlsZHJlbi5mb3JFYWNoKHN0aWNraWZ5KTtcbiAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gd29yc3Qocm93LCB1KSB7XG4gICAgICB2YXIgcyA9IHJvdy5hcmVhLCByLCBybWF4ID0gMCwgcm1pbiA9IEluZmluaXR5LCBpID0gLTEsIG4gPSByb3cubGVuZ3RoO1xuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgaWYgKCEociA9IHJvd1tpXS5hcmVhKSkgY29udGludWU7XG4gICAgICAgIGlmIChyIDwgcm1pbikgcm1pbiA9IHI7XG4gICAgICAgIGlmIChyID4gcm1heCkgcm1heCA9IHI7XG4gICAgICB9XG4gICAgICBzICo9IHM7XG4gICAgICB1ICo9IHU7XG4gICAgICByZXR1cm4gcyA/IE1hdGgubWF4KHUgKiBybWF4ICogcmF0aW8gLyBzLCBzIC8gKHUgKiBybWluICogcmF0aW8pKSA6IEluZmluaXR5O1xuICAgIH1cbiAgICBmdW5jdGlvbiBwb3NpdGlvbihyb3csIHUsIHJlY3QsIGZsdXNoKSB7XG4gICAgICB2YXIgaSA9IC0xLCBuID0gcm93Lmxlbmd0aCwgeCA9IHJlY3QueCwgeSA9IHJlY3QueSwgdiA9IHUgPyByb3VuZChyb3cuYXJlYSAvIHUpIDogMCwgbztcbiAgICAgIGlmICh1ID09IHJlY3QuZHgpIHtcbiAgICAgICAgaWYgKGZsdXNoIHx8IHYgPiByZWN0LmR5KSB2ID0gcmVjdC5keTtcbiAgICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgICBvID0gcm93W2ldO1xuICAgICAgICAgIG8ueCA9IHg7XG4gICAgICAgICAgby55ID0geTtcbiAgICAgICAgICBvLmR5ID0gdjtcbiAgICAgICAgICB4ICs9IG8uZHggPSBNYXRoLm1pbihyZWN0LnggKyByZWN0LmR4IC0geCwgdiA/IHJvdW5kKG8uYXJlYSAvIHYpIDogMCk7XG4gICAgICAgIH1cbiAgICAgICAgby56ID0gdHJ1ZTtcbiAgICAgICAgby5keCArPSByZWN0LnggKyByZWN0LmR4IC0geDtcbiAgICAgICAgcmVjdC55ICs9IHY7XG4gICAgICAgIHJlY3QuZHkgLT0gdjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmIChmbHVzaCB8fCB2ID4gcmVjdC5keCkgdiA9IHJlY3QuZHg7XG4gICAgICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICAgICAgbyA9IHJvd1tpXTtcbiAgICAgICAgICBvLnggPSB4O1xuICAgICAgICAgIG8ueSA9IHk7XG4gICAgICAgICAgby5keCA9IHY7XG4gICAgICAgICAgeSArPSBvLmR5ID0gTWF0aC5taW4ocmVjdC55ICsgcmVjdC5keSAtIHksIHYgPyByb3VuZChvLmFyZWEgLyB2KSA6IDApO1xuICAgICAgICB9XG4gICAgICAgIG8ueiA9IGZhbHNlO1xuICAgICAgICBvLmR5ICs9IHJlY3QueSArIHJlY3QuZHkgLSB5O1xuICAgICAgICByZWN0LnggKz0gdjtcbiAgICAgICAgcmVjdC5keCAtPSB2O1xuICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiB0cmVlbWFwKGQpIHtcbiAgICAgIHZhciBub2RlcyA9IHN0aWNraWVzIHx8IGhpZXJhcmNoeShkKSwgcm9vdCA9IG5vZGVzWzBdO1xuICAgICAgcm9vdC54ID0gMDtcbiAgICAgIHJvb3QueSA9IDA7XG4gICAgICByb290LmR4ID0gc2l6ZVswXTtcbiAgICAgIHJvb3QuZHkgPSBzaXplWzFdO1xuICAgICAgaWYgKHN0aWNraWVzKSBoaWVyYXJjaHkucmV2YWx1ZShyb290KTtcbiAgICAgIHNjYWxlKFsgcm9vdCBdLCByb290LmR4ICogcm9vdC5keSAvIHJvb3QudmFsdWUpO1xuICAgICAgKHN0aWNraWVzID8gc3RpY2tpZnkgOiBzcXVhcmlmeSkocm9vdCk7XG4gICAgICBpZiAoc3RpY2t5KSBzdGlja2llcyA9IG5vZGVzO1xuICAgICAgcmV0dXJuIG5vZGVzO1xuICAgIH1cbiAgICB0cmVlbWFwLnNpemUgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzaXplO1xuICAgICAgc2l6ZSA9IHg7XG4gICAgICByZXR1cm4gdHJlZW1hcDtcbiAgICB9O1xuICAgIHRyZWVtYXAucGFkZGluZyA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHBhZGRpbmc7XG4gICAgICBmdW5jdGlvbiBwYWRGdW5jdGlvbihub2RlKSB7XG4gICAgICAgIHZhciBwID0geC5jYWxsKHRyZWVtYXAsIG5vZGUsIG5vZGUuZGVwdGgpO1xuICAgICAgICByZXR1cm4gcCA9PSBudWxsID8gZDNfbGF5b3V0X3RyZWVtYXBQYWROdWxsKG5vZGUpIDogZDNfbGF5b3V0X3RyZWVtYXBQYWQobm9kZSwgdHlwZW9mIHAgPT09IFwibnVtYmVyXCIgPyBbIHAsIHAsIHAsIHAgXSA6IHApO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gcGFkQ29uc3RhbnQobm9kZSkge1xuICAgICAgICByZXR1cm4gZDNfbGF5b3V0X3RyZWVtYXBQYWQobm9kZSwgeCk7XG4gICAgICB9XG4gICAgICB2YXIgdHlwZTtcbiAgICAgIHBhZCA9IChwYWRkaW5nID0geCkgPT0gbnVsbCA/IGQzX2xheW91dF90cmVlbWFwUGFkTnVsbCA6ICh0eXBlID0gdHlwZW9mIHgpID09PSBcImZ1bmN0aW9uXCIgPyBwYWRGdW5jdGlvbiA6IHR5cGUgPT09IFwibnVtYmVyXCIgPyAoeCA9IFsgeCwgeCwgeCwgeCBdLCBcbiAgICAgIHBhZENvbnN0YW50KSA6IHBhZENvbnN0YW50O1xuICAgICAgcmV0dXJuIHRyZWVtYXA7XG4gICAgfTtcbiAgICB0cmVlbWFwLnJvdW5kID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcm91bmQgIT0gTnVtYmVyO1xuICAgICAgcm91bmQgPSB4ID8gTWF0aC5yb3VuZCA6IE51bWJlcjtcbiAgICAgIHJldHVybiB0cmVlbWFwO1xuICAgIH07XG4gICAgdHJlZW1hcC5zdGlja3kgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBzdGlja3k7XG4gICAgICBzdGlja3kgPSB4O1xuICAgICAgc3RpY2tpZXMgPSBudWxsO1xuICAgICAgcmV0dXJuIHRyZWVtYXA7XG4gICAgfTtcbiAgICB0cmVlbWFwLnJhdGlvID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcmF0aW87XG4gICAgICByYXRpbyA9IHg7XG4gICAgICByZXR1cm4gdHJlZW1hcDtcbiAgICB9O1xuICAgIHRyZWVtYXAubW9kZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG1vZGU7XG4gICAgICBtb2RlID0geCArIFwiXCI7XG4gICAgICByZXR1cm4gdHJlZW1hcDtcbiAgICB9O1xuICAgIHJldHVybiBkM19sYXlvdXRfaGllcmFyY2h5UmViaW5kKHRyZWVtYXAsIGhpZXJhcmNoeSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2xheW91dF90cmVlbWFwUGFkTnVsbChub2RlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHg6IG5vZGUueCxcbiAgICAgIHk6IG5vZGUueSxcbiAgICAgIGR4OiBub2RlLmR4LFxuICAgICAgZHk6IG5vZGUuZHlcbiAgICB9O1xuICB9XG4gIGZ1bmN0aW9uIGQzX2xheW91dF90cmVlbWFwUGFkKG5vZGUsIHBhZGRpbmcpIHtcbiAgICB2YXIgeCA9IG5vZGUueCArIHBhZGRpbmdbM10sIHkgPSBub2RlLnkgKyBwYWRkaW5nWzBdLCBkeCA9IG5vZGUuZHggLSBwYWRkaW5nWzFdIC0gcGFkZGluZ1szXSwgZHkgPSBub2RlLmR5IC0gcGFkZGluZ1swXSAtIHBhZGRpbmdbMl07XG4gICAgaWYgKGR4IDwgMCkge1xuICAgICAgeCArPSBkeCAvIDI7XG4gICAgICBkeCA9IDA7XG4gICAgfVxuICAgIGlmIChkeSA8IDApIHtcbiAgICAgIHkgKz0gZHkgLyAyO1xuICAgICAgZHkgPSAwO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgeDogeCxcbiAgICAgIHk6IHksXG4gICAgICBkeDogZHgsXG4gICAgICBkeTogZHlcbiAgICB9O1xuICB9XG4gIGQzLnJhbmRvbSA9IHtcbiAgICBub3JtYWw6IGZ1bmN0aW9uKMK1LCDPgykge1xuICAgICAgdmFyIG4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgICAgaWYgKG4gPCAyKSDPgyA9IDE7XG4gICAgICBpZiAobiA8IDEpIMK1ID0gMDtcbiAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHgsIHksIHI7XG4gICAgICAgIGRvIHtcbiAgICAgICAgICB4ID0gTWF0aC5yYW5kb20oKSAqIDIgLSAxO1xuICAgICAgICAgIHkgPSBNYXRoLnJhbmRvbSgpICogMiAtIDE7XG4gICAgICAgICAgciA9IHggKiB4ICsgeSAqIHk7XG4gICAgICAgIH0gd2hpbGUgKCFyIHx8IHIgPiAxKTtcbiAgICAgICAgcmV0dXJuIMK1ICsgz4MgKiB4ICogTWF0aC5zcXJ0KC0yICogTWF0aC5sb2cocikgLyByKTtcbiAgICAgIH07XG4gICAgfSxcbiAgICBsb2dOb3JtYWw6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHJhbmRvbSA9IGQzLnJhbmRvbS5ub3JtYWwuYXBwbHkoZDMsIGFyZ3VtZW50cyk7XG4gICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBNYXRoLmV4cChyYW5kb20oKSk7XG4gICAgICB9O1xuICAgIH0sXG4gICAgYmF0ZXM6IGZ1bmN0aW9uKG0pIHtcbiAgICAgIHZhciByYW5kb20gPSBkMy5yYW5kb20uaXJ3aW5IYWxsKG0pO1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gcmFuZG9tKCkgLyBtO1xuICAgICAgfTtcbiAgICB9LFxuICAgIGlyd2luSGFsbDogZnVuY3Rpb24obSkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICBmb3IgKHZhciBzID0gMCwgaiA9IDA7IGogPCBtOyBqKyspIHMgKz0gTWF0aC5yYW5kb20oKTtcbiAgICAgICAgcmV0dXJuIHM7XG4gICAgICB9O1xuICAgIH1cbiAgfTtcbiAgZDMuc2NhbGUgPSB7fTtcbiAgZnVuY3Rpb24gZDNfc2NhbGVFeHRlbnQoZG9tYWluKSB7XG4gICAgdmFyIHN0YXJ0ID0gZG9tYWluWzBdLCBzdG9wID0gZG9tYWluW2RvbWFpbi5sZW5ndGggLSAxXTtcbiAgICByZXR1cm4gc3RhcnQgPCBzdG9wID8gWyBzdGFydCwgc3RvcCBdIDogWyBzdG9wLCBzdGFydCBdO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NjYWxlUmFuZ2Uoc2NhbGUpIHtcbiAgICByZXR1cm4gc2NhbGUucmFuZ2VFeHRlbnQgPyBzY2FsZS5yYW5nZUV4dGVudCgpIDogZDNfc2NhbGVFeHRlbnQoc2NhbGUucmFuZ2UoKSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2NhbGVfYmlsaW5lYXIoZG9tYWluLCByYW5nZSwgdW5pbnRlcnBvbGF0ZSwgaW50ZXJwb2xhdGUpIHtcbiAgICB2YXIgdSA9IHVuaW50ZXJwb2xhdGUoZG9tYWluWzBdLCBkb21haW5bMV0pLCBpID0gaW50ZXJwb2xhdGUocmFuZ2VbMF0sIHJhbmdlWzFdKTtcbiAgICByZXR1cm4gZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIGkodSh4KSk7XG4gICAgfTtcbiAgfVxuICBmdW5jdGlvbiBkM19zY2FsZV9uaWNlKGRvbWFpbiwgbmljZSkge1xuICAgIHZhciBpMCA9IDAsIGkxID0gZG9tYWluLmxlbmd0aCAtIDEsIHgwID0gZG9tYWluW2kwXSwgeDEgPSBkb21haW5baTFdLCBkeDtcbiAgICBpZiAoeDEgPCB4MCkge1xuICAgICAgZHggPSBpMCwgaTAgPSBpMSwgaTEgPSBkeDtcbiAgICAgIGR4ID0geDAsIHgwID0geDEsIHgxID0gZHg7XG4gICAgfVxuICAgIGRvbWFpbltpMF0gPSBuaWNlLmZsb29yKHgwKTtcbiAgICBkb21haW5baTFdID0gbmljZS5jZWlsKHgxKTtcbiAgICByZXR1cm4gZG9tYWluO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX25pY2VTdGVwKHN0ZXApIHtcbiAgICByZXR1cm4gc3RlcCA/IHtcbiAgICAgIGZsb29yOiBmdW5jdGlvbih4KSB7XG4gICAgICAgIHJldHVybiBNYXRoLmZsb29yKHggLyBzdGVwKSAqIHN0ZXA7XG4gICAgICB9LFxuICAgICAgY2VpbDogZnVuY3Rpb24oeCkge1xuICAgICAgICByZXR1cm4gTWF0aC5jZWlsKHggLyBzdGVwKSAqIHN0ZXA7XG4gICAgICB9XG4gICAgfSA6IGQzX3NjYWxlX25pY2VJZGVudGl0eTtcbiAgfVxuICB2YXIgZDNfc2NhbGVfbmljZUlkZW50aXR5ID0ge1xuICAgIGZsb29yOiBkM19pZGVudGl0eSxcbiAgICBjZWlsOiBkM19pZGVudGl0eVxuICB9O1xuICBmdW5jdGlvbiBkM19zY2FsZV9wb2x5bGluZWFyKGRvbWFpbiwgcmFuZ2UsIHVuaW50ZXJwb2xhdGUsIGludGVycG9sYXRlKSB7XG4gICAgdmFyIHUgPSBbXSwgaSA9IFtdLCBqID0gMCwgayA9IE1hdGgubWluKGRvbWFpbi5sZW5ndGgsIHJhbmdlLmxlbmd0aCkgLSAxO1xuICAgIGlmIChkb21haW5ba10gPCBkb21haW5bMF0pIHtcbiAgICAgIGRvbWFpbiA9IGRvbWFpbi5zbGljZSgpLnJldmVyc2UoKTtcbiAgICAgIHJhbmdlID0gcmFuZ2Uuc2xpY2UoKS5yZXZlcnNlKCk7XG4gICAgfVxuICAgIHdoaWxlICgrK2ogPD0gaykge1xuICAgICAgdS5wdXNoKHVuaW50ZXJwb2xhdGUoZG9tYWluW2ogLSAxXSwgZG9tYWluW2pdKSk7XG4gICAgICBpLnB1c2goaW50ZXJwb2xhdGUocmFuZ2VbaiAtIDFdLCByYW5nZVtqXSkpO1xuICAgIH1cbiAgICByZXR1cm4gZnVuY3Rpb24oeCkge1xuICAgICAgdmFyIGogPSBkMy5iaXNlY3QoZG9tYWluLCB4LCAxLCBrKSAtIDE7XG4gICAgICByZXR1cm4gaVtqXSh1W2pdKHgpKTtcbiAgICB9O1xuICB9XG4gIGQzLnNjYWxlLmxpbmVhciA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19zY2FsZV9saW5lYXIoWyAwLCAxIF0sIFsgMCwgMSBdLCBkM19pbnRlcnBvbGF0ZSwgZmFsc2UpO1xuICB9O1xuICBmdW5jdGlvbiBkM19zY2FsZV9saW5lYXIoZG9tYWluLCByYW5nZSwgaW50ZXJwb2xhdGUsIGNsYW1wKSB7XG4gICAgdmFyIG91dHB1dCwgaW5wdXQ7XG4gICAgZnVuY3Rpb24gcmVzY2FsZSgpIHtcbiAgICAgIHZhciBsaW5lYXIgPSBNYXRoLm1pbihkb21haW4ubGVuZ3RoLCByYW5nZS5sZW5ndGgpID4gMiA/IGQzX3NjYWxlX3BvbHlsaW5lYXIgOiBkM19zY2FsZV9iaWxpbmVhciwgdW5pbnRlcnBvbGF0ZSA9IGNsYW1wID8gZDNfdW5pbnRlcnBvbGF0ZUNsYW1wIDogZDNfdW5pbnRlcnBvbGF0ZU51bWJlcjtcbiAgICAgIG91dHB1dCA9IGxpbmVhcihkb21haW4sIHJhbmdlLCB1bmludGVycG9sYXRlLCBpbnRlcnBvbGF0ZSk7XG4gICAgICBpbnB1dCA9IGxpbmVhcihyYW5nZSwgZG9tYWluLCB1bmludGVycG9sYXRlLCBkM19pbnRlcnBvbGF0ZSk7XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICAgIHJldHVybiBvdXRwdXQoeCk7XG4gICAgfVxuICAgIHNjYWxlLmludmVydCA9IGZ1bmN0aW9uKHkpIHtcbiAgICAgIHJldHVybiBpbnB1dCh5KTtcbiAgICB9O1xuICAgIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGRvbWFpbjtcbiAgICAgIGRvbWFpbiA9IHgubWFwKE51bWJlcik7XG4gICAgICByZXR1cm4gcmVzY2FsZSgpO1xuICAgIH07XG4gICAgc2NhbGUucmFuZ2UgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiByYW5nZTtcbiAgICAgIHJhbmdlID0geDtcbiAgICAgIHJldHVybiByZXNjYWxlKCk7XG4gICAgfTtcbiAgICBzY2FsZS5yYW5nZVJvdW5kID0gZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIHNjYWxlLnJhbmdlKHgpLmludGVycG9sYXRlKGQzX2ludGVycG9sYXRlUm91bmQpO1xuICAgIH07XG4gICAgc2NhbGUuY2xhbXAgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBjbGFtcDtcbiAgICAgIGNsYW1wID0geDtcbiAgICAgIHJldHVybiByZXNjYWxlKCk7XG4gICAgfTtcbiAgICBzY2FsZS5pbnRlcnBvbGF0ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGludGVycG9sYXRlO1xuICAgICAgaW50ZXJwb2xhdGUgPSB4O1xuICAgICAgcmV0dXJuIHJlc2NhbGUoKTtcbiAgICB9O1xuICAgIHNjYWxlLnRpY2tzID0gZnVuY3Rpb24obSkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlX2xpbmVhclRpY2tzKGRvbWFpbiwgbSk7XG4gICAgfTtcbiAgICBzY2FsZS50aWNrRm9ybWF0ID0gZnVuY3Rpb24obSwgZm9ybWF0KSB7XG4gICAgICByZXR1cm4gZDNfc2NhbGVfbGluZWFyVGlja0Zvcm1hdChkb21haW4sIG0sIGZvcm1hdCk7XG4gICAgfTtcbiAgICBzY2FsZS5uaWNlID0gZnVuY3Rpb24obSkge1xuICAgICAgZDNfc2NhbGVfbGluZWFyTmljZShkb21haW4sIG0pO1xuICAgICAgcmV0dXJuIHJlc2NhbGUoKTtcbiAgICB9O1xuICAgIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19zY2FsZV9saW5lYXIoZG9tYWluLCByYW5nZSwgaW50ZXJwb2xhdGUsIGNsYW1wKTtcbiAgICB9O1xuICAgIHJldHVybiByZXNjYWxlKCk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2NhbGVfbGluZWFyUmViaW5kKHNjYWxlLCBsaW5lYXIpIHtcbiAgICByZXR1cm4gZDMucmViaW5kKHNjYWxlLCBsaW5lYXIsIFwicmFuZ2VcIiwgXCJyYW5nZVJvdW5kXCIsIFwiaW50ZXJwb2xhdGVcIiwgXCJjbGFtcFwiKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zY2FsZV9saW5lYXJOaWNlKGRvbWFpbiwgbSkge1xuICAgIHJldHVybiBkM19zY2FsZV9uaWNlKGRvbWFpbiwgZDNfc2NhbGVfbmljZVN0ZXAoZDNfc2NhbGVfbGluZWFyVGlja1JhbmdlKGRvbWFpbiwgbSlbMl0pKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zY2FsZV9saW5lYXJUaWNrUmFuZ2UoZG9tYWluLCBtKSB7XG4gICAgaWYgKG0gPT0gbnVsbCkgbSA9IDEwO1xuICAgIHZhciBleHRlbnQgPSBkM19zY2FsZUV4dGVudChkb21haW4pLCBzcGFuID0gZXh0ZW50WzFdIC0gZXh0ZW50WzBdLCBzdGVwID0gTWF0aC5wb3coMTAsIE1hdGguZmxvb3IoTWF0aC5sb2coc3BhbiAvIG0pIC8gTWF0aC5MTjEwKSksIGVyciA9IG0gLyBzcGFuICogc3RlcDtcbiAgICBpZiAoZXJyIDw9IC4xNSkgc3RlcCAqPSAxMDsgZWxzZSBpZiAoZXJyIDw9IC4zNSkgc3RlcCAqPSA1OyBlbHNlIGlmIChlcnIgPD0gLjc1KSBzdGVwICo9IDI7XG4gICAgZXh0ZW50WzBdID0gTWF0aC5jZWlsKGV4dGVudFswXSAvIHN0ZXApICogc3RlcDtcbiAgICBleHRlbnRbMV0gPSBNYXRoLmZsb29yKGV4dGVudFsxXSAvIHN0ZXApICogc3RlcCArIHN0ZXAgKiAuNTtcbiAgICBleHRlbnRbMl0gPSBzdGVwO1xuICAgIHJldHVybiBleHRlbnQ7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2NhbGVfbGluZWFyVGlja3MoZG9tYWluLCBtKSB7XG4gICAgcmV0dXJuIGQzLnJhbmdlLmFwcGx5KGQzLCBkM19zY2FsZV9saW5lYXJUaWNrUmFuZ2UoZG9tYWluLCBtKSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc2NhbGVfbGluZWFyVGlja0Zvcm1hdChkb21haW4sIG0sIGZvcm1hdCkge1xuICAgIHZhciByYW5nZSA9IGQzX3NjYWxlX2xpbmVhclRpY2tSYW5nZShkb21haW4sIG0pO1xuICAgIGlmIChmb3JtYXQpIHtcbiAgICAgIHZhciBtYXRjaCA9IGQzX2Zvcm1hdF9yZS5leGVjKGZvcm1hdCk7XG4gICAgICBtYXRjaC5zaGlmdCgpO1xuICAgICAgaWYgKG1hdGNoWzhdID09PSBcInNcIikge1xuICAgICAgICB2YXIgcHJlZml4ID0gZDMuZm9ybWF0UHJlZml4KE1hdGgubWF4KGFicyhyYW5nZVswXSksIGFicyhyYW5nZVsxXSkpKTtcbiAgICAgICAgaWYgKCFtYXRjaFs3XSkgbWF0Y2hbN10gPSBcIi5cIiArIGQzX3NjYWxlX2xpbmVhclByZWNpc2lvbihwcmVmaXguc2NhbGUocmFuZ2VbMl0pKTtcbiAgICAgICAgbWF0Y2hbOF0gPSBcImZcIjtcbiAgICAgICAgZm9ybWF0ID0gZDMuZm9ybWF0KG1hdGNoLmpvaW4oXCJcIikpO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24oZCkge1xuICAgICAgICAgIHJldHVybiBmb3JtYXQocHJlZml4LnNjYWxlKGQpKSArIHByZWZpeC5zeW1ib2w7XG4gICAgICAgIH07XG4gICAgICB9XG4gICAgICBpZiAoIW1hdGNoWzddKSBtYXRjaFs3XSA9IFwiLlwiICsgZDNfc2NhbGVfbGluZWFyRm9ybWF0UHJlY2lzaW9uKG1hdGNoWzhdLCByYW5nZSk7XG4gICAgICBmb3JtYXQgPSBtYXRjaC5qb2luKFwiXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICBmb3JtYXQgPSBcIiwuXCIgKyBkM19zY2FsZV9saW5lYXJQcmVjaXNpb24ocmFuZ2VbMl0pICsgXCJmXCI7XG4gICAgfVxuICAgIHJldHVybiBkMy5mb3JtYXQoZm9ybWF0KTtcbiAgfVxuICB2YXIgZDNfc2NhbGVfbGluZWFyRm9ybWF0U2lnbmlmaWNhbnQgPSB7XG4gICAgczogMSxcbiAgICBnOiAxLFxuICAgIHA6IDEsXG4gICAgcjogMSxcbiAgICBlOiAxXG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX2xpbmVhclByZWNpc2lvbih2YWx1ZSkge1xuICAgIHJldHVybiAtTWF0aC5mbG9vcihNYXRoLmxvZyh2YWx1ZSkgLyBNYXRoLkxOMTAgKyAuMDEpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX2xpbmVhckZvcm1hdFByZWNpc2lvbih0eXBlLCByYW5nZSkge1xuICAgIHZhciBwID0gZDNfc2NhbGVfbGluZWFyUHJlY2lzaW9uKHJhbmdlWzJdKTtcbiAgICByZXR1cm4gdHlwZSBpbiBkM19zY2FsZV9saW5lYXJGb3JtYXRTaWduaWZpY2FudCA/IE1hdGguYWJzKHAgLSBkM19zY2FsZV9saW5lYXJQcmVjaXNpb24oTWF0aC5tYXgoYWJzKHJhbmdlWzBdKSwgYWJzKHJhbmdlWzFdKSkpKSArICsodHlwZSAhPT0gXCJlXCIpIDogcCAtICh0eXBlID09PSBcIiVcIikgKiAyO1xuICB9XG4gIGQzLnNjYWxlLmxvZyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19zY2FsZV9sb2coZDMuc2NhbGUubGluZWFyKCkuZG9tYWluKFsgMCwgMSBdKSwgMTAsIHRydWUsIFsgMSwgMTAgXSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX2xvZyhsaW5lYXIsIGJhc2UsIHBvc2l0aXZlLCBkb21haW4pIHtcbiAgICBmdW5jdGlvbiBsb2coeCkge1xuICAgICAgcmV0dXJuIChwb3NpdGl2ZSA/IE1hdGgubG9nKHggPCAwID8gMCA6IHgpIDogLU1hdGgubG9nKHggPiAwID8gMCA6IC14KSkgLyBNYXRoLmxvZyhiYXNlKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gcG93KHgpIHtcbiAgICAgIHJldHVybiBwb3NpdGl2ZSA/IE1hdGgucG93KGJhc2UsIHgpIDogLU1hdGgucG93KGJhc2UsIC14KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gc2NhbGUoeCkge1xuICAgICAgcmV0dXJuIGxpbmVhcihsb2coeCkpO1xuICAgIH1cbiAgICBzY2FsZS5pbnZlcnQgPSBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4gcG93KGxpbmVhci5pbnZlcnQoeCkpO1xuICAgIH07XG4gICAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZG9tYWluO1xuICAgICAgcG9zaXRpdmUgPSB4WzBdID49IDA7XG4gICAgICBsaW5lYXIuZG9tYWluKChkb21haW4gPSB4Lm1hcChOdW1iZXIpKS5tYXAobG9nKSk7XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfTtcbiAgICBzY2FsZS5iYXNlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gYmFzZTtcbiAgICAgIGJhc2UgPSArXztcbiAgICAgIGxpbmVhci5kb21haW4oZG9tYWluLm1hcChsb2cpKTtcbiAgICAgIHJldHVybiBzY2FsZTtcbiAgICB9O1xuICAgIHNjYWxlLm5pY2UgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBuaWNlZCA9IGQzX3NjYWxlX25pY2UoZG9tYWluLm1hcChsb2cpLCBwb3NpdGl2ZSA/IE1hdGggOiBkM19zY2FsZV9sb2dOaWNlTmVnYXRpdmUpO1xuICAgICAgbGluZWFyLmRvbWFpbihuaWNlZCk7XG4gICAgICBkb21haW4gPSBuaWNlZC5tYXAocG93KTtcbiAgICAgIHJldHVybiBzY2FsZTtcbiAgICB9O1xuICAgIHNjYWxlLnRpY2tzID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgZXh0ZW50ID0gZDNfc2NhbGVFeHRlbnQoZG9tYWluKSwgdGlja3MgPSBbXSwgdSA9IGV4dGVudFswXSwgdiA9IGV4dGVudFsxXSwgaSA9IE1hdGguZmxvb3IobG9nKHUpKSwgaiA9IE1hdGguY2VpbChsb2codikpLCBuID0gYmFzZSAlIDEgPyAyIDogYmFzZTtcbiAgICAgIGlmIChpc0Zpbml0ZShqIC0gaSkpIHtcbiAgICAgICAgaWYgKHBvc2l0aXZlKSB7XG4gICAgICAgICAgZm9yICg7aSA8IGo7IGkrKykgZm9yICh2YXIgayA9IDE7IGsgPCBuOyBrKyspIHRpY2tzLnB1c2gocG93KGkpICogayk7XG4gICAgICAgICAgdGlja3MucHVzaChwb3coaSkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRpY2tzLnB1c2gocG93KGkpKTtcbiAgICAgICAgICBmb3IgKDtpKysgPCBqOyApIGZvciAodmFyIGsgPSBuIC0gMTsgayA+IDA7IGstLSkgdGlja3MucHVzaChwb3coaSkgKiBrKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGkgPSAwOyB0aWNrc1tpXSA8IHU7IGkrKykge31cbiAgICAgICAgZm9yIChqID0gdGlja3MubGVuZ3RoOyB0aWNrc1tqIC0gMV0gPiB2OyBqLS0pIHt9XG4gICAgICAgIHRpY2tzID0gdGlja3Muc2xpY2UoaSwgaik7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGlja3M7XG4gICAgfTtcbiAgICBzY2FsZS50aWNrRm9ybWF0ID0gZnVuY3Rpb24obiwgZm9ybWF0KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkM19zY2FsZV9sb2dGb3JtYXQ7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIGZvcm1hdCA9IGQzX3NjYWxlX2xvZ0Zvcm1hdDsgZWxzZSBpZiAodHlwZW9mIGZvcm1hdCAhPT0gXCJmdW5jdGlvblwiKSBmb3JtYXQgPSBkMy5mb3JtYXQoZm9ybWF0KTtcbiAgICAgIHZhciBrID0gTWF0aC5tYXgoLjEsIG4gLyBzY2FsZS50aWNrcygpLmxlbmd0aCksIGYgPSBwb3NpdGl2ZSA/IChlID0gMWUtMTIsIE1hdGguY2VpbCkgOiAoZSA9IC0xZS0xMiwgXG4gICAgICBNYXRoLmZsb29yKSwgZTtcbiAgICAgIHJldHVybiBmdW5jdGlvbihkKSB7XG4gICAgICAgIHJldHVybiBkIC8gcG93KGYobG9nKGQpICsgZSkpIDw9IGsgPyBmb3JtYXQoZCkgOiBcIlwiO1xuICAgICAgfTtcbiAgICB9O1xuICAgIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19zY2FsZV9sb2cobGluZWFyLmNvcHkoKSwgYmFzZSwgcG9zaXRpdmUsIGRvbWFpbik7XG4gICAgfTtcbiAgICByZXR1cm4gZDNfc2NhbGVfbGluZWFyUmViaW5kKHNjYWxlLCBsaW5lYXIpO1xuICB9XG4gIHZhciBkM19zY2FsZV9sb2dGb3JtYXQgPSBkMy5mb3JtYXQoXCIuMGVcIiksIGQzX3NjYWxlX2xvZ05pY2VOZWdhdGl2ZSA9IHtcbiAgICBmbG9vcjogZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIC1NYXRoLmNlaWwoLXgpO1xuICAgIH0sXG4gICAgY2VpbDogZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIC1NYXRoLmZsb29yKC14KTtcbiAgICB9XG4gIH07XG4gIGQzLnNjYWxlLnBvdyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19zY2FsZV9wb3coZDMuc2NhbGUubGluZWFyKCksIDEsIFsgMCwgMSBdKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2NhbGVfcG93KGxpbmVhciwgZXhwb25lbnQsIGRvbWFpbikge1xuICAgIHZhciBwb3dwID0gZDNfc2NhbGVfcG93UG93KGV4cG9uZW50KSwgcG93YiA9IGQzX3NjYWxlX3Bvd1BvdygxIC8gZXhwb25lbnQpO1xuICAgIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICAgIHJldHVybiBsaW5lYXIocG93cCh4KSk7XG4gICAgfVxuICAgIHNjYWxlLmludmVydCA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIHJldHVybiBwb3diKGxpbmVhci5pbnZlcnQoeCkpO1xuICAgIH07XG4gICAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZG9tYWluO1xuICAgICAgbGluZWFyLmRvbWFpbigoZG9tYWluID0geC5tYXAoTnVtYmVyKSkubWFwKHBvd3ApKTtcbiAgICAgIHJldHVybiBzY2FsZTtcbiAgICB9O1xuICAgIHNjYWxlLnRpY2tzID0gZnVuY3Rpb24obSkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlX2xpbmVhclRpY2tzKGRvbWFpbiwgbSk7XG4gICAgfTtcbiAgICBzY2FsZS50aWNrRm9ybWF0ID0gZnVuY3Rpb24obSwgZm9ybWF0KSB7XG4gICAgICByZXR1cm4gZDNfc2NhbGVfbGluZWFyVGlja0Zvcm1hdChkb21haW4sIG0sIGZvcm1hdCk7XG4gICAgfTtcbiAgICBzY2FsZS5uaWNlID0gZnVuY3Rpb24obSkge1xuICAgICAgcmV0dXJuIHNjYWxlLmRvbWFpbihkM19zY2FsZV9saW5lYXJOaWNlKGRvbWFpbiwgbSkpO1xuICAgIH07XG4gICAgc2NhbGUuZXhwb25lbnQgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBleHBvbmVudDtcbiAgICAgIHBvd3AgPSBkM19zY2FsZV9wb3dQb3coZXhwb25lbnQgPSB4KTtcbiAgICAgIHBvd2IgPSBkM19zY2FsZV9wb3dQb3coMSAvIGV4cG9uZW50KTtcbiAgICAgIGxpbmVhci5kb21haW4oZG9tYWluLm1hcChwb3dwKSk7XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfTtcbiAgICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfc2NhbGVfcG93KGxpbmVhci5jb3B5KCksIGV4cG9uZW50LCBkb21haW4pO1xuICAgIH07XG4gICAgcmV0dXJuIGQzX3NjYWxlX2xpbmVhclJlYmluZChzY2FsZSwgbGluZWFyKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zY2FsZV9wb3dQb3coZSkge1xuICAgIHJldHVybiBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4geCA8IDAgPyAtTWF0aC5wb3coLXgsIGUpIDogTWF0aC5wb3coeCwgZSk7XG4gICAgfTtcbiAgfVxuICBkMy5zY2FsZS5zcXJ0ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzLnNjYWxlLnBvdygpLmV4cG9uZW50KC41KTtcbiAgfTtcbiAgZDMuc2NhbGUub3JkaW5hbCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19zY2FsZV9vcmRpbmFsKFtdLCB7XG4gICAgICB0OiBcInJhbmdlXCIsXG4gICAgICBhOiBbIFtdIF1cbiAgICB9KTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc2NhbGVfb3JkaW5hbChkb21haW4sIHJhbmdlcikge1xuICAgIHZhciBpbmRleCwgcmFuZ2UsIHJhbmdlQmFuZDtcbiAgICBmdW5jdGlvbiBzY2FsZSh4KSB7XG4gICAgICByZXR1cm4gcmFuZ2VbKChpbmRleC5nZXQoeCkgfHwgKHJhbmdlci50ID09PSBcInJhbmdlXCIgPyBpbmRleC5zZXQoeCwgZG9tYWluLnB1c2goeCkpIDogTmFOKSkgLSAxKSAlIHJhbmdlLmxlbmd0aF07XG4gICAgfVxuICAgIGZ1bmN0aW9uIHN0ZXBzKHN0YXJ0LCBzdGVwKSB7XG4gICAgICByZXR1cm4gZDMucmFuZ2UoZG9tYWluLmxlbmd0aCkubWFwKGZ1bmN0aW9uKGkpIHtcbiAgICAgICAgcmV0dXJuIHN0YXJ0ICsgc3RlcCAqIGk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZG9tYWluO1xuICAgICAgZG9tYWluID0gW107XG4gICAgICBpbmRleCA9IG5ldyBkM19NYXAoKTtcbiAgICAgIHZhciBpID0gLTEsIG4gPSB4Lmxlbmd0aCwgeGk7XG4gICAgICB3aGlsZSAoKytpIDwgbikgaWYgKCFpbmRleC5oYXMoeGkgPSB4W2ldKSkgaW5kZXguc2V0KHhpLCBkb21haW4ucHVzaCh4aSkpO1xuICAgICAgcmV0dXJuIHNjYWxlW3Jhbmdlci50XS5hcHBseShzY2FsZSwgcmFuZ2VyLmEpO1xuICAgIH07XG4gICAgc2NhbGUucmFuZ2UgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiByYW5nZTtcbiAgICAgIHJhbmdlID0geDtcbiAgICAgIHJhbmdlQmFuZCA9IDA7XG4gICAgICByYW5nZXIgPSB7XG4gICAgICAgIHQ6IFwicmFuZ2VcIixcbiAgICAgICAgYTogYXJndW1lbnRzXG4gICAgICB9O1xuICAgICAgcmV0dXJuIHNjYWxlO1xuICAgIH07XG4gICAgc2NhbGUucmFuZ2VQb2ludHMgPSBmdW5jdGlvbih4LCBwYWRkaW5nKSB7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHBhZGRpbmcgPSAwO1xuICAgICAgdmFyIHN0YXJ0ID0geFswXSwgc3RvcCA9IHhbMV0sIHN0ZXAgPSAoc3RvcCAtIHN0YXJ0KSAvIChNYXRoLm1heCgxLCBkb21haW4ubGVuZ3RoIC0gMSkgKyBwYWRkaW5nKTtcbiAgICAgIHJhbmdlID0gc3RlcHMoZG9tYWluLmxlbmd0aCA8IDIgPyAoc3RhcnQgKyBzdG9wKSAvIDIgOiBzdGFydCArIHN0ZXAgKiBwYWRkaW5nIC8gMiwgc3RlcCk7XG4gICAgICByYW5nZUJhbmQgPSAwO1xuICAgICAgcmFuZ2VyID0ge1xuICAgICAgICB0OiBcInJhbmdlUG9pbnRzXCIsXG4gICAgICAgIGE6IGFyZ3VtZW50c1xuICAgICAgfTtcbiAgICAgIHJldHVybiBzY2FsZTtcbiAgICB9O1xuICAgIHNjYWxlLnJhbmdlQmFuZHMgPSBmdW5jdGlvbih4LCBwYWRkaW5nLCBvdXRlclBhZGRpbmcpIHtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMikgcGFkZGluZyA9IDA7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDMpIG91dGVyUGFkZGluZyA9IHBhZGRpbmc7XG4gICAgICB2YXIgcmV2ZXJzZSA9IHhbMV0gPCB4WzBdLCBzdGFydCA9IHhbcmV2ZXJzZSAtIDBdLCBzdG9wID0geFsxIC0gcmV2ZXJzZV0sIHN0ZXAgPSAoc3RvcCAtIHN0YXJ0KSAvIChkb21haW4ubGVuZ3RoIC0gcGFkZGluZyArIDIgKiBvdXRlclBhZGRpbmcpO1xuICAgICAgcmFuZ2UgPSBzdGVwcyhzdGFydCArIHN0ZXAgKiBvdXRlclBhZGRpbmcsIHN0ZXApO1xuICAgICAgaWYgKHJldmVyc2UpIHJhbmdlLnJldmVyc2UoKTtcbiAgICAgIHJhbmdlQmFuZCA9IHN0ZXAgKiAoMSAtIHBhZGRpbmcpO1xuICAgICAgcmFuZ2VyID0ge1xuICAgICAgICB0OiBcInJhbmdlQmFuZHNcIixcbiAgICAgICAgYTogYXJndW1lbnRzXG4gICAgICB9O1xuICAgICAgcmV0dXJuIHNjYWxlO1xuICAgIH07XG4gICAgc2NhbGUucmFuZ2VSb3VuZEJhbmRzID0gZnVuY3Rpb24oeCwgcGFkZGluZywgb3V0ZXJQYWRkaW5nKSB7XG4gICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHBhZGRpbmcgPSAwO1xuICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAzKSBvdXRlclBhZGRpbmcgPSBwYWRkaW5nO1xuICAgICAgdmFyIHJldmVyc2UgPSB4WzFdIDwgeFswXSwgc3RhcnQgPSB4W3JldmVyc2UgLSAwXSwgc3RvcCA9IHhbMSAtIHJldmVyc2VdLCBzdGVwID0gTWF0aC5mbG9vcigoc3RvcCAtIHN0YXJ0KSAvIChkb21haW4ubGVuZ3RoIC0gcGFkZGluZyArIDIgKiBvdXRlclBhZGRpbmcpKSwgZXJyb3IgPSBzdG9wIC0gc3RhcnQgLSAoZG9tYWluLmxlbmd0aCAtIHBhZGRpbmcpICogc3RlcDtcbiAgICAgIHJhbmdlID0gc3RlcHMoc3RhcnQgKyBNYXRoLnJvdW5kKGVycm9yIC8gMiksIHN0ZXApO1xuICAgICAgaWYgKHJldmVyc2UpIHJhbmdlLnJldmVyc2UoKTtcbiAgICAgIHJhbmdlQmFuZCA9IE1hdGgucm91bmQoc3RlcCAqICgxIC0gcGFkZGluZykpO1xuICAgICAgcmFuZ2VyID0ge1xuICAgICAgICB0OiBcInJhbmdlUm91bmRCYW5kc1wiLFxuICAgICAgICBhOiBhcmd1bWVudHNcbiAgICAgIH07XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfTtcbiAgICBzY2FsZS5yYW5nZUJhbmQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiByYW5nZUJhbmQ7XG4gICAgfTtcbiAgICBzY2FsZS5yYW5nZUV4dGVudCA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlRXh0ZW50KHJhbmdlci5hWzBdKTtcbiAgICB9O1xuICAgIHNjYWxlLmNvcHkgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBkM19zY2FsZV9vcmRpbmFsKGRvbWFpbiwgcmFuZ2VyKTtcbiAgICB9O1xuICAgIHJldHVybiBzY2FsZS5kb21haW4oZG9tYWluKTtcbiAgfVxuICBkMy5zY2FsZS5jYXRlZ29yeTEwID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzLnNjYWxlLm9yZGluYWwoKS5yYW5nZShkM19jYXRlZ29yeTEwKTtcbiAgfTtcbiAgZDMuc2NhbGUuY2F0ZWdvcnkyMCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkMy5zY2FsZS5vcmRpbmFsKCkucmFuZ2UoZDNfY2F0ZWdvcnkyMCk7XG4gIH07XG4gIGQzLnNjYWxlLmNhdGVnb3J5MjBiID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzLnNjYWxlLm9yZGluYWwoKS5yYW5nZShkM19jYXRlZ29yeTIwYik7XG4gIH07XG4gIGQzLnNjYWxlLmNhdGVnb3J5MjBjID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzLnNjYWxlLm9yZGluYWwoKS5yYW5nZShkM19jYXRlZ29yeTIwYyk7XG4gIH07XG4gIHZhciBkM19jYXRlZ29yeTEwID0gWyAyMDYyMjYwLCAxNjc0NDIwNiwgMjkyNDU4OCwgMTQwMzQ3MjgsIDk3MjU4ODUsIDkxOTcxMzEsIDE0OTA3MzMwLCA4MzU1NzExLCAxMjM2OTE4NiwgMTU1NjE3NSBdLm1hcChkM19yZ2JTdHJpbmcpO1xuICB2YXIgZDNfY2F0ZWdvcnkyMCA9IFsgMjA2MjI2MCwgMTE0NTQ0NDAsIDE2NzQ0MjA2LCAxNjc1OTY3MiwgMjkyNDU4OCwgMTAwMTg2OTgsIDE0MDM0NzI4LCAxNjc1MDc0MiwgOTcyNTg4NSwgMTI5NTU4NjEsIDkxOTcxMzEsIDEyODg1MTQwLCAxNDkwNzMzMCwgMTYyMzQxOTQsIDgzNTU3MTEsIDEzMDkyODA3LCAxMjM2OTE4NiwgMTQ0MDg1ODksIDE1NTYxNzUsIDEwNDEwNzI1IF0ubWFwKGQzX3JnYlN0cmluZyk7XG4gIHZhciBkM19jYXRlZ29yeTIwYiA9IFsgMzc1MDc3NywgNTM5NTYxOSwgNzA0MDcxOSwgMTAyNjQyODYsIDY1MTkwOTcsIDkyMTY1OTQsIDExOTE1MTE1LCAxMzU1NjYzNiwgOTIwMjk5MywgMTI0MjY4MDksIDE1MTg2NTE0LCAxNTE5MDkzMiwgODY2NjE2OSwgMTEzNTY0OTAsIDE0MDQ5NjQzLCAxNTE3NzM3MiwgODA3NzY4MywgMTA4MzQzMjQsIDEzNTI4NTA5LCAxNDU4OTY1NCBdLm1hcChkM19yZ2JTdHJpbmcpO1xuICB2YXIgZDNfY2F0ZWdvcnkyMGMgPSBbIDMyNDQ3MzMsIDcwNTcxMTAsIDEwNDA2NjI1LCAxMzAzMjQzMSwgMTUwOTUwNTMsIDE2NjE2NzY0LCAxNjYyNTI1OSwgMTY2MzQwMTgsIDMyNTMwNzYsIDc2NTI0NzAsIDEwNjA3MDAzLCAxMzEwMTUwNCwgNzY5NTI4MSwgMTAzOTQzMTIsIDEyMzY5MzcyLCAxNDM0Mjg5MSwgNjUxMzUwNywgOTg2ODk1MCwgMTI0MzQ4NzcsIDE0Mjc3MDgxIF0ubWFwKGQzX3JnYlN0cmluZyk7XG4gIGQzLnNjYWxlLnF1YW50aWxlID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX3NjYWxlX3F1YW50aWxlKFtdLCBbXSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX3F1YW50aWxlKGRvbWFpbiwgcmFuZ2UpIHtcbiAgICB2YXIgdGhyZXNob2xkcztcbiAgICBmdW5jdGlvbiByZXNjYWxlKCkge1xuICAgICAgdmFyIGsgPSAwLCBxID0gcmFuZ2UubGVuZ3RoO1xuICAgICAgdGhyZXNob2xkcyA9IFtdO1xuICAgICAgd2hpbGUgKCsrayA8IHEpIHRocmVzaG9sZHNbayAtIDFdID0gZDMucXVhbnRpbGUoZG9tYWluLCBrIC8gcSk7XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHNjYWxlKHgpIHtcbiAgICAgIGlmICghaXNOYU4oeCA9ICt4KSkgcmV0dXJuIHJhbmdlW2QzLmJpc2VjdCh0aHJlc2hvbGRzLCB4KV07XG4gICAgfVxuICAgIHNjYWxlLmRvbWFpbiA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGRvbWFpbjtcbiAgICAgIGRvbWFpbiA9IHguZmlsdGVyKGQzX251bWJlcikuc29ydChkM19hc2NlbmRpbmcpO1xuICAgICAgcmV0dXJuIHJlc2NhbGUoKTtcbiAgICB9O1xuICAgIHNjYWxlLnJhbmdlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcmFuZ2U7XG4gICAgICByYW5nZSA9IHg7XG4gICAgICByZXR1cm4gcmVzY2FsZSgpO1xuICAgIH07XG4gICAgc2NhbGUucXVhbnRpbGVzID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhyZXNob2xkcztcbiAgICB9O1xuICAgIHNjYWxlLmludmVydEV4dGVudCA9IGZ1bmN0aW9uKHkpIHtcbiAgICAgIHkgPSByYW5nZS5pbmRleE9mKHkpO1xuICAgICAgcmV0dXJuIHkgPCAwID8gWyBOYU4sIE5hTiBdIDogWyB5ID4gMCA/IHRocmVzaG9sZHNbeSAtIDFdIDogZG9tYWluWzBdLCB5IDwgdGhyZXNob2xkcy5sZW5ndGggPyB0aHJlc2hvbGRzW3ldIDogZG9tYWluW2RvbWFpbi5sZW5ndGggLSAxXSBdO1xuICAgIH07XG4gICAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlX3F1YW50aWxlKGRvbWFpbiwgcmFuZ2UpO1xuICAgIH07XG4gICAgcmV0dXJuIHJlc2NhbGUoKTtcbiAgfVxuICBkMy5zY2FsZS5xdWFudGl6ZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19zY2FsZV9xdWFudGl6ZSgwLCAxLCBbIDAsIDEgXSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX3F1YW50aXplKHgwLCB4MSwgcmFuZ2UpIHtcbiAgICB2YXIga3gsIGk7XG4gICAgZnVuY3Rpb24gc2NhbGUoeCkge1xuICAgICAgcmV0dXJuIHJhbmdlW01hdGgubWF4KDAsIE1hdGgubWluKGksIE1hdGguZmxvb3Ioa3ggKiAoeCAtIHgwKSkpKV07XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJlc2NhbGUoKSB7XG4gICAgICBreCA9IHJhbmdlLmxlbmd0aCAvICh4MSAtIHgwKTtcbiAgICAgIGkgPSByYW5nZS5sZW5ndGggLSAxO1xuICAgICAgcmV0dXJuIHNjYWxlO1xuICAgIH1cbiAgICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBbIHgwLCB4MSBdO1xuICAgICAgeDAgPSAreFswXTtcbiAgICAgIHgxID0gK3hbeC5sZW5ndGggLSAxXTtcbiAgICAgIHJldHVybiByZXNjYWxlKCk7XG4gICAgfTtcbiAgICBzY2FsZS5yYW5nZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHJhbmdlO1xuICAgICAgcmFuZ2UgPSB4O1xuICAgICAgcmV0dXJuIHJlc2NhbGUoKTtcbiAgICB9O1xuICAgIHNjYWxlLmludmVydEV4dGVudCA9IGZ1bmN0aW9uKHkpIHtcbiAgICAgIHkgPSByYW5nZS5pbmRleE9mKHkpO1xuICAgICAgeSA9IHkgPCAwID8gTmFOIDogeSAvIGt4ICsgeDA7XG4gICAgICByZXR1cm4gWyB5LCB5ICsgMSAvIGt4IF07XG4gICAgfTtcbiAgICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfc2NhbGVfcXVhbnRpemUoeDAsIHgxLCByYW5nZSk7XG4gICAgfTtcbiAgICByZXR1cm4gcmVzY2FsZSgpO1xuICB9XG4gIGQzLnNjYWxlLnRocmVzaG9sZCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19zY2FsZV90aHJlc2hvbGQoWyAuNSBdLCBbIDAsIDEgXSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX3RocmVzaG9sZChkb21haW4sIHJhbmdlKSB7XG4gICAgZnVuY3Rpb24gc2NhbGUoeCkge1xuICAgICAgaWYgKHggPD0geCkgcmV0dXJuIHJhbmdlW2QzLmJpc2VjdChkb21haW4sIHgpXTtcbiAgICB9XG4gICAgc2NhbGUuZG9tYWluID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZG9tYWluO1xuICAgICAgZG9tYWluID0gXztcbiAgICAgIHJldHVybiBzY2FsZTtcbiAgICB9O1xuICAgIHNjYWxlLnJhbmdlID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcmFuZ2U7XG4gICAgICByYW5nZSA9IF87XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfTtcbiAgICBzY2FsZS5pbnZlcnRFeHRlbnQgPSBmdW5jdGlvbih5KSB7XG4gICAgICB5ID0gcmFuZ2UuaW5kZXhPZih5KTtcbiAgICAgIHJldHVybiBbIGRvbWFpblt5IC0gMV0sIGRvbWFpblt5XSBdO1xuICAgIH07XG4gICAgc2NhbGUuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlX3RocmVzaG9sZChkb21haW4sIHJhbmdlKTtcbiAgICB9O1xuICAgIHJldHVybiBzY2FsZTtcbiAgfVxuICBkMy5zY2FsZS5pZGVudGl0eSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19zY2FsZV9pZGVudGl0eShbIDAsIDEgXSk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3NjYWxlX2lkZW50aXR5KGRvbWFpbikge1xuICAgIGZ1bmN0aW9uIGlkZW50aXR5KHgpIHtcbiAgICAgIHJldHVybiAreDtcbiAgICB9XG4gICAgaWRlbnRpdHkuaW52ZXJ0ID0gaWRlbnRpdHk7XG4gICAgaWRlbnRpdHkuZG9tYWluID0gaWRlbnRpdHkucmFuZ2UgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkb21haW47XG4gICAgICBkb21haW4gPSB4Lm1hcChpZGVudGl0eSk7XG4gICAgICByZXR1cm4gaWRlbnRpdHk7XG4gICAgfTtcbiAgICBpZGVudGl0eS50aWNrcyA9IGZ1bmN0aW9uKG0pIHtcbiAgICAgIHJldHVybiBkM19zY2FsZV9saW5lYXJUaWNrcyhkb21haW4sIG0pO1xuICAgIH07XG4gICAgaWRlbnRpdHkudGlja0Zvcm1hdCA9IGZ1bmN0aW9uKG0sIGZvcm1hdCkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlX2xpbmVhclRpY2tGb3JtYXQoZG9tYWluLCBtLCBmb3JtYXQpO1xuICAgIH07XG4gICAgaWRlbnRpdHkuY29weSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGQzX3NjYWxlX2lkZW50aXR5KGRvbWFpbik7XG4gICAgfTtcbiAgICByZXR1cm4gaWRlbnRpdHk7XG4gIH1cbiAgZDMuc3ZnID0ge307XG4gIGQzLnN2Zy5hcmMgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaW5uZXJSYWRpdXMgPSBkM19zdmdfYXJjSW5uZXJSYWRpdXMsIG91dGVyUmFkaXVzID0gZDNfc3ZnX2FyY091dGVyUmFkaXVzLCBzdGFydEFuZ2xlID0gZDNfc3ZnX2FyY1N0YXJ0QW5nbGUsIGVuZEFuZ2xlID0gZDNfc3ZnX2FyY0VuZEFuZ2xlO1xuICAgIGZ1bmN0aW9uIGFyYygpIHtcbiAgICAgIHZhciByMCA9IGlubmVyUmFkaXVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyksIHIxID0gb3V0ZXJSYWRpdXMuYXBwbHkodGhpcywgYXJndW1lbnRzKSwgYTAgPSBzdGFydEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgKyBkM19zdmdfYXJjT2Zmc2V0LCBhMSA9IGVuZEFuZ2xlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgKyBkM19zdmdfYXJjT2Zmc2V0LCBkYSA9IChhMSA8IGEwICYmIChkYSA9IGEwLCBcbiAgICAgIGEwID0gYTEsIGExID0gZGEpLCBhMSAtIGEwKSwgZGYgPSBkYSA8IM+AID8gXCIwXCIgOiBcIjFcIiwgYzAgPSBNYXRoLmNvcyhhMCksIHMwID0gTWF0aC5zaW4oYTApLCBjMSA9IE1hdGguY29zKGExKSwgczEgPSBNYXRoLnNpbihhMSk7XG4gICAgICByZXR1cm4gZGEgPj0gZDNfc3ZnX2FyY01heCA/IHIwID8gXCJNMCxcIiArIHIxICsgXCJBXCIgKyByMSArIFwiLFwiICsgcjEgKyBcIiAwIDEsMSAwLFwiICsgLXIxICsgXCJBXCIgKyByMSArIFwiLFwiICsgcjEgKyBcIiAwIDEsMSAwLFwiICsgcjEgKyBcIk0wLFwiICsgcjAgKyBcIkFcIiArIHIwICsgXCIsXCIgKyByMCArIFwiIDAgMSwwIDAsXCIgKyAtcjAgKyBcIkFcIiArIHIwICsgXCIsXCIgKyByMCArIFwiIDAgMSwwIDAsXCIgKyByMCArIFwiWlwiIDogXCJNMCxcIiArIHIxICsgXCJBXCIgKyByMSArIFwiLFwiICsgcjEgKyBcIiAwIDEsMSAwLFwiICsgLXIxICsgXCJBXCIgKyByMSArIFwiLFwiICsgcjEgKyBcIiAwIDEsMSAwLFwiICsgcjEgKyBcIlpcIiA6IHIwID8gXCJNXCIgKyByMSAqIGMwICsgXCIsXCIgKyByMSAqIHMwICsgXCJBXCIgKyByMSArIFwiLFwiICsgcjEgKyBcIiAwIFwiICsgZGYgKyBcIiwxIFwiICsgcjEgKiBjMSArIFwiLFwiICsgcjEgKiBzMSArIFwiTFwiICsgcjAgKiBjMSArIFwiLFwiICsgcjAgKiBzMSArIFwiQVwiICsgcjAgKyBcIixcIiArIHIwICsgXCIgMCBcIiArIGRmICsgXCIsMCBcIiArIHIwICogYzAgKyBcIixcIiArIHIwICogczAgKyBcIlpcIiA6IFwiTVwiICsgcjEgKiBjMCArIFwiLFwiICsgcjEgKiBzMCArIFwiQVwiICsgcjEgKyBcIixcIiArIHIxICsgXCIgMCBcIiArIGRmICsgXCIsMSBcIiArIHIxICogYzEgKyBcIixcIiArIHIxICogczEgKyBcIkwwLDBcIiArIFwiWlwiO1xuICAgIH1cbiAgICBhcmMuaW5uZXJSYWRpdXMgPSBmdW5jdGlvbih2KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBpbm5lclJhZGl1cztcbiAgICAgIGlubmVyUmFkaXVzID0gZDNfZnVuY3Rvcih2KTtcbiAgICAgIHJldHVybiBhcmM7XG4gICAgfTtcbiAgICBhcmMub3V0ZXJSYWRpdXMgPSBmdW5jdGlvbih2KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBvdXRlclJhZGl1cztcbiAgICAgIG91dGVyUmFkaXVzID0gZDNfZnVuY3Rvcih2KTtcbiAgICAgIHJldHVybiBhcmM7XG4gICAgfTtcbiAgICBhcmMuc3RhcnRBbmdsZSA9IGZ1bmN0aW9uKHYpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHN0YXJ0QW5nbGU7XG4gICAgICBzdGFydEFuZ2xlID0gZDNfZnVuY3Rvcih2KTtcbiAgICAgIHJldHVybiBhcmM7XG4gICAgfTtcbiAgICBhcmMuZW5kQW5nbGUgPSBmdW5jdGlvbih2KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBlbmRBbmdsZTtcbiAgICAgIGVuZEFuZ2xlID0gZDNfZnVuY3Rvcih2KTtcbiAgICAgIHJldHVybiBhcmM7XG4gICAgfTtcbiAgICBhcmMuY2VudHJvaWQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciByID0gKGlubmVyUmFkaXVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgKyBvdXRlclJhZGl1cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSAvIDIsIGEgPSAoc3RhcnRBbmdsZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpICsgZW5kQW5nbGUuYXBwbHkodGhpcywgYXJndW1lbnRzKSkgLyAyICsgZDNfc3ZnX2FyY09mZnNldDtcbiAgICAgIHJldHVybiBbIE1hdGguY29zKGEpICogciwgTWF0aC5zaW4oYSkgKiByIF07XG4gICAgfTtcbiAgICByZXR1cm4gYXJjO1xuICB9O1xuICB2YXIgZDNfc3ZnX2FyY09mZnNldCA9IC1oYWxmz4AsIGQzX3N2Z19hcmNNYXggPSDPhCAtIM61O1xuICBmdW5jdGlvbiBkM19zdmdfYXJjSW5uZXJSYWRpdXMoZCkge1xuICAgIHJldHVybiBkLmlubmVyUmFkaXVzO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19hcmNPdXRlclJhZGl1cyhkKSB7XG4gICAgcmV0dXJuIGQub3V0ZXJSYWRpdXM7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2FyY1N0YXJ0QW5nbGUoZCkge1xuICAgIHJldHVybiBkLnN0YXJ0QW5nbGU7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2FyY0VuZEFuZ2xlKGQpIHtcbiAgICByZXR1cm4gZC5lbmRBbmdsZTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZShwcm9qZWN0aW9uKSB7XG4gICAgdmFyIHggPSBkM19nZW9tX3BvaW50WCwgeSA9IGQzX2dlb21fcG9pbnRZLCBkZWZpbmVkID0gZDNfdHJ1ZSwgaW50ZXJwb2xhdGUgPSBkM19zdmdfbGluZUxpbmVhciwgaW50ZXJwb2xhdGVLZXkgPSBpbnRlcnBvbGF0ZS5rZXksIHRlbnNpb24gPSAuNztcbiAgICBmdW5jdGlvbiBsaW5lKGRhdGEpIHtcbiAgICAgIHZhciBzZWdtZW50cyA9IFtdLCBwb2ludHMgPSBbXSwgaSA9IC0xLCBuID0gZGF0YS5sZW5ndGgsIGQsIGZ4ID0gZDNfZnVuY3Rvcih4KSwgZnkgPSBkM19mdW5jdG9yKHkpO1xuICAgICAgZnVuY3Rpb24gc2VnbWVudCgpIHtcbiAgICAgICAgc2VnbWVudHMucHVzaChcIk1cIiwgaW50ZXJwb2xhdGUocHJvamVjdGlvbihwb2ludHMpLCB0ZW5zaW9uKSk7XG4gICAgICB9XG4gICAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgICBpZiAoZGVmaW5lZC5jYWxsKHRoaXMsIGQgPSBkYXRhW2ldLCBpKSkge1xuICAgICAgICAgIHBvaW50cy5wdXNoKFsgK2Z4LmNhbGwodGhpcywgZCwgaSksICtmeS5jYWxsKHRoaXMsIGQsIGkpIF0pO1xuICAgICAgICB9IGVsc2UgaWYgKHBvaW50cy5sZW5ndGgpIHtcbiAgICAgICAgICBzZWdtZW50KCk7XG4gICAgICAgICAgcG9pbnRzID0gW107XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChwb2ludHMubGVuZ3RoKSBzZWdtZW50KCk7XG4gICAgICByZXR1cm4gc2VnbWVudHMubGVuZ3RoID8gc2VnbWVudHMuam9pbihcIlwiKSA6IG51bGw7XG4gICAgfVxuICAgIGxpbmUueCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHg7XG4gICAgICB4ID0gXztcbiAgICAgIHJldHVybiBsaW5lO1xuICAgIH07XG4gICAgbGluZS55ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geTtcbiAgICAgIHkgPSBfO1xuICAgICAgcmV0dXJuIGxpbmU7XG4gICAgfTtcbiAgICBsaW5lLmRlZmluZWQgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkZWZpbmVkO1xuICAgICAgZGVmaW5lZCA9IF87XG4gICAgICByZXR1cm4gbGluZTtcbiAgICB9O1xuICAgIGxpbmUuaW50ZXJwb2xhdGUgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBpbnRlcnBvbGF0ZUtleTtcbiAgICAgIGlmICh0eXBlb2YgXyA9PT0gXCJmdW5jdGlvblwiKSBpbnRlcnBvbGF0ZUtleSA9IGludGVycG9sYXRlID0gXzsgZWxzZSBpbnRlcnBvbGF0ZUtleSA9IChpbnRlcnBvbGF0ZSA9IGQzX3N2Z19saW5lSW50ZXJwb2xhdG9ycy5nZXQoXykgfHwgZDNfc3ZnX2xpbmVMaW5lYXIpLmtleTtcbiAgICAgIHJldHVybiBsaW5lO1xuICAgIH07XG4gICAgbGluZS50ZW5zaW9uID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdGVuc2lvbjtcbiAgICAgIHRlbnNpb24gPSBfO1xuICAgICAgcmV0dXJuIGxpbmU7XG4gICAgfTtcbiAgICByZXR1cm4gbGluZTtcbiAgfVxuICBkMy5zdmcubGluZSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBkM19zdmdfbGluZShkM19pZGVudGl0eSk7XG4gIH07XG4gIHZhciBkM19zdmdfbGluZUludGVycG9sYXRvcnMgPSBkMy5tYXAoe1xuICAgIGxpbmVhcjogZDNfc3ZnX2xpbmVMaW5lYXIsXG4gICAgXCJsaW5lYXItY2xvc2VkXCI6IGQzX3N2Z19saW5lTGluZWFyQ2xvc2VkLFxuICAgIHN0ZXA6IGQzX3N2Z19saW5lU3RlcCxcbiAgICBcInN0ZXAtYmVmb3JlXCI6IGQzX3N2Z19saW5lU3RlcEJlZm9yZSxcbiAgICBcInN0ZXAtYWZ0ZXJcIjogZDNfc3ZnX2xpbmVTdGVwQWZ0ZXIsXG4gICAgYmFzaXM6IGQzX3N2Z19saW5lQmFzaXMsXG4gICAgXCJiYXNpcy1vcGVuXCI6IGQzX3N2Z19saW5lQmFzaXNPcGVuLFxuICAgIFwiYmFzaXMtY2xvc2VkXCI6IGQzX3N2Z19saW5lQmFzaXNDbG9zZWQsXG4gICAgYnVuZGxlOiBkM19zdmdfbGluZUJ1bmRsZSxcbiAgICBjYXJkaW5hbDogZDNfc3ZnX2xpbmVDYXJkaW5hbCxcbiAgICBcImNhcmRpbmFsLW9wZW5cIjogZDNfc3ZnX2xpbmVDYXJkaW5hbE9wZW4sXG4gICAgXCJjYXJkaW5hbC1jbG9zZWRcIjogZDNfc3ZnX2xpbmVDYXJkaW5hbENsb3NlZCxcbiAgICBtb25vdG9uZTogZDNfc3ZnX2xpbmVNb25vdG9uZVxuICB9KTtcbiAgZDNfc3ZnX2xpbmVJbnRlcnBvbGF0b3JzLmZvckVhY2goZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgIHZhbHVlLmtleSA9IGtleTtcbiAgICB2YWx1ZS5jbG9zZWQgPSAvLWNsb3NlZCQvLnRlc3Qoa2V5KTtcbiAgfSk7XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lTGluZWFyKHBvaW50cykge1xuICAgIHJldHVybiBwb2ludHMuam9pbihcIkxcIik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVMaW5lYXJDbG9zZWQocG9pbnRzKSB7XG4gICAgcmV0dXJuIGQzX3N2Z19saW5lTGluZWFyKHBvaW50cykgKyBcIlpcIjtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZVN0ZXAocG9pbnRzKSB7XG4gICAgdmFyIGkgPSAwLCBuID0gcG9pbnRzLmxlbmd0aCwgcCA9IHBvaW50c1swXSwgcGF0aCA9IFsgcFswXSwgXCIsXCIsIHBbMV0gXTtcbiAgICB3aGlsZSAoKytpIDwgbikgcGF0aC5wdXNoKFwiSFwiLCAocFswXSArIChwID0gcG9pbnRzW2ldKVswXSkgLyAyLCBcIlZcIiwgcFsxXSk7XG4gICAgaWYgKG4gPiAxKSBwYXRoLnB1c2goXCJIXCIsIHBbMF0pO1xuICAgIHJldHVybiBwYXRoLmpvaW4oXCJcIik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVTdGVwQmVmb3JlKHBvaW50cykge1xuICAgIHZhciBpID0gMCwgbiA9IHBvaW50cy5sZW5ndGgsIHAgPSBwb2ludHNbMF0sIHBhdGggPSBbIHBbMF0sIFwiLFwiLCBwWzFdIF07XG4gICAgd2hpbGUgKCsraSA8IG4pIHBhdGgucHVzaChcIlZcIiwgKHAgPSBwb2ludHNbaV0pWzFdLCBcIkhcIiwgcFswXSk7XG4gICAgcmV0dXJuIHBhdGguam9pbihcIlwiKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZVN0ZXBBZnRlcihwb2ludHMpIHtcbiAgICB2YXIgaSA9IDAsIG4gPSBwb2ludHMubGVuZ3RoLCBwID0gcG9pbnRzWzBdLCBwYXRoID0gWyBwWzBdLCBcIixcIiwgcFsxXSBdO1xuICAgIHdoaWxlICgrK2kgPCBuKSBwYXRoLnB1c2goXCJIXCIsIChwID0gcG9pbnRzW2ldKVswXSwgXCJWXCIsIHBbMV0pO1xuICAgIHJldHVybiBwYXRoLmpvaW4oXCJcIik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVDYXJkaW5hbE9wZW4ocG9pbnRzLCB0ZW5zaW9uKSB7XG4gICAgcmV0dXJuIHBvaW50cy5sZW5ndGggPCA0ID8gZDNfc3ZnX2xpbmVMaW5lYXIocG9pbnRzKSA6IHBvaW50c1sxXSArIGQzX3N2Z19saW5lSGVybWl0ZShwb2ludHMuc2xpY2UoMSwgcG9pbnRzLmxlbmd0aCAtIDEpLCBkM19zdmdfbGluZUNhcmRpbmFsVGFuZ2VudHMocG9pbnRzLCB0ZW5zaW9uKSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVDYXJkaW5hbENsb3NlZChwb2ludHMsIHRlbnNpb24pIHtcbiAgICByZXR1cm4gcG9pbnRzLmxlbmd0aCA8IDMgPyBkM19zdmdfbGluZUxpbmVhcihwb2ludHMpIDogcG9pbnRzWzBdICsgZDNfc3ZnX2xpbmVIZXJtaXRlKChwb2ludHMucHVzaChwb2ludHNbMF0pLCBcbiAgICBwb2ludHMpLCBkM19zdmdfbGluZUNhcmRpbmFsVGFuZ2VudHMoWyBwb2ludHNbcG9pbnRzLmxlbmd0aCAtIDJdIF0uY29uY2F0KHBvaW50cywgWyBwb2ludHNbMV0gXSksIHRlbnNpb24pKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZUNhcmRpbmFsKHBvaW50cywgdGVuc2lvbikge1xuICAgIHJldHVybiBwb2ludHMubGVuZ3RoIDwgMyA/IGQzX3N2Z19saW5lTGluZWFyKHBvaW50cykgOiBwb2ludHNbMF0gKyBkM19zdmdfbGluZUhlcm1pdGUocG9pbnRzLCBkM19zdmdfbGluZUNhcmRpbmFsVGFuZ2VudHMocG9pbnRzLCB0ZW5zaW9uKSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVIZXJtaXRlKHBvaW50cywgdGFuZ2VudHMpIHtcbiAgICBpZiAodGFuZ2VudHMubGVuZ3RoIDwgMSB8fCBwb2ludHMubGVuZ3RoICE9IHRhbmdlbnRzLmxlbmd0aCAmJiBwb2ludHMubGVuZ3RoICE9IHRhbmdlbnRzLmxlbmd0aCArIDIpIHtcbiAgICAgIHJldHVybiBkM19zdmdfbGluZUxpbmVhcihwb2ludHMpO1xuICAgIH1cbiAgICB2YXIgcXVhZCA9IHBvaW50cy5sZW5ndGggIT0gdGFuZ2VudHMubGVuZ3RoLCBwYXRoID0gXCJcIiwgcDAgPSBwb2ludHNbMF0sIHAgPSBwb2ludHNbMV0sIHQwID0gdGFuZ2VudHNbMF0sIHQgPSB0MCwgcGkgPSAxO1xuICAgIGlmIChxdWFkKSB7XG4gICAgICBwYXRoICs9IFwiUVwiICsgKHBbMF0gLSB0MFswXSAqIDIgLyAzKSArIFwiLFwiICsgKHBbMV0gLSB0MFsxXSAqIDIgLyAzKSArIFwiLFwiICsgcFswXSArIFwiLFwiICsgcFsxXTtcbiAgICAgIHAwID0gcG9pbnRzWzFdO1xuICAgICAgcGkgPSAyO1xuICAgIH1cbiAgICBpZiAodGFuZ2VudHMubGVuZ3RoID4gMSkge1xuICAgICAgdCA9IHRhbmdlbnRzWzFdO1xuICAgICAgcCA9IHBvaW50c1twaV07XG4gICAgICBwaSsrO1xuICAgICAgcGF0aCArPSBcIkNcIiArIChwMFswXSArIHQwWzBdKSArIFwiLFwiICsgKHAwWzFdICsgdDBbMV0pICsgXCIsXCIgKyAocFswXSAtIHRbMF0pICsgXCIsXCIgKyAocFsxXSAtIHRbMV0pICsgXCIsXCIgKyBwWzBdICsgXCIsXCIgKyBwWzFdO1xuICAgICAgZm9yICh2YXIgaSA9IDI7IGkgPCB0YW5nZW50cy5sZW5ndGg7IGkrKywgcGkrKykge1xuICAgICAgICBwID0gcG9pbnRzW3BpXTtcbiAgICAgICAgdCA9IHRhbmdlbnRzW2ldO1xuICAgICAgICBwYXRoICs9IFwiU1wiICsgKHBbMF0gLSB0WzBdKSArIFwiLFwiICsgKHBbMV0gLSB0WzFdKSArIFwiLFwiICsgcFswXSArIFwiLFwiICsgcFsxXTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHF1YWQpIHtcbiAgICAgIHZhciBscCA9IHBvaW50c1twaV07XG4gICAgICBwYXRoICs9IFwiUVwiICsgKHBbMF0gKyB0WzBdICogMiAvIDMpICsgXCIsXCIgKyAocFsxXSArIHRbMV0gKiAyIC8gMykgKyBcIixcIiArIGxwWzBdICsgXCIsXCIgKyBscFsxXTtcbiAgICB9XG4gICAgcmV0dXJuIHBhdGg7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVDYXJkaW5hbFRhbmdlbnRzKHBvaW50cywgdGVuc2lvbikge1xuICAgIHZhciB0YW5nZW50cyA9IFtdLCBhID0gKDEgLSB0ZW5zaW9uKSAvIDIsIHAwLCBwMSA9IHBvaW50c1swXSwgcDIgPSBwb2ludHNbMV0sIGkgPSAxLCBuID0gcG9pbnRzLmxlbmd0aDtcbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgcDAgPSBwMTtcbiAgICAgIHAxID0gcDI7XG4gICAgICBwMiA9IHBvaW50c1tpXTtcbiAgICAgIHRhbmdlbnRzLnB1c2goWyBhICogKHAyWzBdIC0gcDBbMF0pLCBhICogKHAyWzFdIC0gcDBbMV0pIF0pO1xuICAgIH1cbiAgICByZXR1cm4gdGFuZ2VudHM7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVCYXNpcyhwb2ludHMpIHtcbiAgICBpZiAocG9pbnRzLmxlbmd0aCA8IDMpIHJldHVybiBkM19zdmdfbGluZUxpbmVhcihwb2ludHMpO1xuICAgIHZhciBpID0gMSwgbiA9IHBvaW50cy5sZW5ndGgsIHBpID0gcG9pbnRzWzBdLCB4MCA9IHBpWzBdLCB5MCA9IHBpWzFdLCBweCA9IFsgeDAsIHgwLCB4MCwgKHBpID0gcG9pbnRzWzFdKVswXSBdLCBweSA9IFsgeTAsIHkwLCB5MCwgcGlbMV0gXSwgcGF0aCA9IFsgeDAsIFwiLFwiLCB5MCwgXCJMXCIsIGQzX3N2Z19saW5lRG90NChkM19zdmdfbGluZUJhc2lzQmV6aWVyMywgcHgpLCBcIixcIiwgZDNfc3ZnX2xpbmVEb3Q0KGQzX3N2Z19saW5lQmFzaXNCZXppZXIzLCBweSkgXTtcbiAgICBwb2ludHMucHVzaChwb2ludHNbbiAtIDFdKTtcbiAgICB3aGlsZSAoKytpIDw9IG4pIHtcbiAgICAgIHBpID0gcG9pbnRzW2ldO1xuICAgICAgcHguc2hpZnQoKTtcbiAgICAgIHB4LnB1c2gocGlbMF0pO1xuICAgICAgcHkuc2hpZnQoKTtcbiAgICAgIHB5LnB1c2gocGlbMV0pO1xuICAgICAgZDNfc3ZnX2xpbmVCYXNpc0JlemllcihwYXRoLCBweCwgcHkpO1xuICAgIH1cbiAgICBwb2ludHMucG9wKCk7XG4gICAgcGF0aC5wdXNoKFwiTFwiLCBwaSk7XG4gICAgcmV0dXJuIHBhdGguam9pbihcIlwiKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZUJhc2lzT3Blbihwb2ludHMpIHtcbiAgICBpZiAocG9pbnRzLmxlbmd0aCA8IDQpIHJldHVybiBkM19zdmdfbGluZUxpbmVhcihwb2ludHMpO1xuICAgIHZhciBwYXRoID0gW10sIGkgPSAtMSwgbiA9IHBvaW50cy5sZW5ndGgsIHBpLCBweCA9IFsgMCBdLCBweSA9IFsgMCBdO1xuICAgIHdoaWxlICgrK2kgPCAzKSB7XG4gICAgICBwaSA9IHBvaW50c1tpXTtcbiAgICAgIHB4LnB1c2gocGlbMF0pO1xuICAgICAgcHkucHVzaChwaVsxXSk7XG4gICAgfVxuICAgIHBhdGgucHVzaChkM19zdmdfbGluZURvdDQoZDNfc3ZnX2xpbmVCYXNpc0JlemllcjMsIHB4KSArIFwiLFwiICsgZDNfc3ZnX2xpbmVEb3Q0KGQzX3N2Z19saW5lQmFzaXNCZXppZXIzLCBweSkpO1xuICAgIC0taTtcbiAgICB3aGlsZSAoKytpIDwgbikge1xuICAgICAgcGkgPSBwb2ludHNbaV07XG4gICAgICBweC5zaGlmdCgpO1xuICAgICAgcHgucHVzaChwaVswXSk7XG4gICAgICBweS5zaGlmdCgpO1xuICAgICAgcHkucHVzaChwaVsxXSk7XG4gICAgICBkM19zdmdfbGluZUJhc2lzQmV6aWVyKHBhdGgsIHB4LCBweSk7XG4gICAgfVxuICAgIHJldHVybiBwYXRoLmpvaW4oXCJcIik7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVCYXNpc0Nsb3NlZChwb2ludHMpIHtcbiAgICB2YXIgcGF0aCwgaSA9IC0xLCBuID0gcG9pbnRzLmxlbmd0aCwgbSA9IG4gKyA0LCBwaSwgcHggPSBbXSwgcHkgPSBbXTtcbiAgICB3aGlsZSAoKytpIDwgNCkge1xuICAgICAgcGkgPSBwb2ludHNbaSAlIG5dO1xuICAgICAgcHgucHVzaChwaVswXSk7XG4gICAgICBweS5wdXNoKHBpWzFdKTtcbiAgICB9XG4gICAgcGF0aCA9IFsgZDNfc3ZnX2xpbmVEb3Q0KGQzX3N2Z19saW5lQmFzaXNCZXppZXIzLCBweCksIFwiLFwiLCBkM19zdmdfbGluZURvdDQoZDNfc3ZnX2xpbmVCYXNpc0JlemllcjMsIHB5KSBdO1xuICAgIC0taTtcbiAgICB3aGlsZSAoKytpIDwgbSkge1xuICAgICAgcGkgPSBwb2ludHNbaSAlIG5dO1xuICAgICAgcHguc2hpZnQoKTtcbiAgICAgIHB4LnB1c2gocGlbMF0pO1xuICAgICAgcHkuc2hpZnQoKTtcbiAgICAgIHB5LnB1c2gocGlbMV0pO1xuICAgICAgZDNfc3ZnX2xpbmVCYXNpc0JlemllcihwYXRoLCBweCwgcHkpO1xuICAgIH1cbiAgICByZXR1cm4gcGF0aC5qb2luKFwiXCIpO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lQnVuZGxlKHBvaW50cywgdGVuc2lvbikge1xuICAgIHZhciBuID0gcG9pbnRzLmxlbmd0aCAtIDE7XG4gICAgaWYgKG4pIHtcbiAgICAgIHZhciB4MCA9IHBvaW50c1swXVswXSwgeTAgPSBwb2ludHNbMF1bMV0sIGR4ID0gcG9pbnRzW25dWzBdIC0geDAsIGR5ID0gcG9pbnRzW25dWzFdIC0geTAsIGkgPSAtMSwgcCwgdDtcbiAgICAgIHdoaWxlICgrK2kgPD0gbikge1xuICAgICAgICBwID0gcG9pbnRzW2ldO1xuICAgICAgICB0ID0gaSAvIG47XG4gICAgICAgIHBbMF0gPSB0ZW5zaW9uICogcFswXSArICgxIC0gdGVuc2lvbikgKiAoeDAgKyB0ICogZHgpO1xuICAgICAgICBwWzFdID0gdGVuc2lvbiAqIHBbMV0gKyAoMSAtIHRlbnNpb24pICogKHkwICsgdCAqIGR5KTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGQzX3N2Z19saW5lQmFzaXMocG9pbnRzKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZURvdDQoYSwgYikge1xuICAgIHJldHVybiBhWzBdICogYlswXSArIGFbMV0gKiBiWzFdICsgYVsyXSAqIGJbMl0gKyBhWzNdICogYlszXTtcbiAgfVxuICB2YXIgZDNfc3ZnX2xpbmVCYXNpc0JlemllcjEgPSBbIDAsIDIgLyAzLCAxIC8gMywgMCBdLCBkM19zdmdfbGluZUJhc2lzQmV6aWVyMiA9IFsgMCwgMSAvIDMsIDIgLyAzLCAwIF0sIGQzX3N2Z19saW5lQmFzaXNCZXppZXIzID0gWyAwLCAxIC8gNiwgMiAvIDMsIDEgLyA2IF07XG4gIGZ1bmN0aW9uIGQzX3N2Z19saW5lQmFzaXNCZXppZXIocGF0aCwgeCwgeSkge1xuICAgIHBhdGgucHVzaChcIkNcIiwgZDNfc3ZnX2xpbmVEb3Q0KGQzX3N2Z19saW5lQmFzaXNCZXppZXIxLCB4KSwgXCIsXCIsIGQzX3N2Z19saW5lRG90NChkM19zdmdfbGluZUJhc2lzQmV6aWVyMSwgeSksIFwiLFwiLCBkM19zdmdfbGluZURvdDQoZDNfc3ZnX2xpbmVCYXNpc0JlemllcjIsIHgpLCBcIixcIiwgZDNfc3ZnX2xpbmVEb3Q0KGQzX3N2Z19saW5lQmFzaXNCZXppZXIyLCB5KSwgXCIsXCIsIGQzX3N2Z19saW5lRG90NChkM19zdmdfbGluZUJhc2lzQmV6aWVyMywgeCksIFwiLFwiLCBkM19zdmdfbGluZURvdDQoZDNfc3ZnX2xpbmVCYXNpc0JlemllcjMsIHkpKTtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZVNsb3BlKHAwLCBwMSkge1xuICAgIHJldHVybiAocDFbMV0gLSBwMFsxXSkgLyAocDFbMF0gLSBwMFswXSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVGaW5pdGVEaWZmZXJlbmNlcyhwb2ludHMpIHtcbiAgICB2YXIgaSA9IDAsIGogPSBwb2ludHMubGVuZ3RoIC0gMSwgbSA9IFtdLCBwMCA9IHBvaW50c1swXSwgcDEgPSBwb2ludHNbMV0sIGQgPSBtWzBdID0gZDNfc3ZnX2xpbmVTbG9wZShwMCwgcDEpO1xuICAgIHdoaWxlICgrK2kgPCBqKSB7XG4gICAgICBtW2ldID0gKGQgKyAoZCA9IGQzX3N2Z19saW5lU2xvcGUocDAgPSBwMSwgcDEgPSBwb2ludHNbaSArIDFdKSkpIC8gMjtcbiAgICB9XG4gICAgbVtpXSA9IGQ7XG4gICAgcmV0dXJuIG07XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVNb25vdG9uZVRhbmdlbnRzKHBvaW50cykge1xuICAgIHZhciB0YW5nZW50cyA9IFtdLCBkLCBhLCBiLCBzLCBtID0gZDNfc3ZnX2xpbmVGaW5pdGVEaWZmZXJlbmNlcyhwb2ludHMpLCBpID0gLTEsIGogPSBwb2ludHMubGVuZ3RoIC0gMTtcbiAgICB3aGlsZSAoKytpIDwgaikge1xuICAgICAgZCA9IGQzX3N2Z19saW5lU2xvcGUocG9pbnRzW2ldLCBwb2ludHNbaSArIDFdKTtcbiAgICAgIGlmIChhYnMoZCkgPCDOtSkge1xuICAgICAgICBtW2ldID0gbVtpICsgMV0gPSAwO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYSA9IG1baV0gLyBkO1xuICAgICAgICBiID0gbVtpICsgMV0gLyBkO1xuICAgICAgICBzID0gYSAqIGEgKyBiICogYjtcbiAgICAgICAgaWYgKHMgPiA5KSB7XG4gICAgICAgICAgcyA9IGQgKiAzIC8gTWF0aC5zcXJ0KHMpO1xuICAgICAgICAgIG1baV0gPSBzICogYTtcbiAgICAgICAgICBtW2kgKyAxXSA9IHMgKiBiO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGkgPSAtMTtcbiAgICB3aGlsZSAoKytpIDw9IGopIHtcbiAgICAgIHMgPSAocG9pbnRzW01hdGgubWluKGosIGkgKyAxKV1bMF0gLSBwb2ludHNbTWF0aC5tYXgoMCwgaSAtIDEpXVswXSkgLyAoNiAqICgxICsgbVtpXSAqIG1baV0pKTtcbiAgICAgIHRhbmdlbnRzLnB1c2goWyBzIHx8IDAsIG1baV0gKiBzIHx8IDAgXSk7XG4gICAgfVxuICAgIHJldHVybiB0YW5nZW50cztcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfbGluZU1vbm90b25lKHBvaW50cykge1xuICAgIHJldHVybiBwb2ludHMubGVuZ3RoIDwgMyA/IGQzX3N2Z19saW5lTGluZWFyKHBvaW50cykgOiBwb2ludHNbMF0gKyBkM19zdmdfbGluZUhlcm1pdGUocG9pbnRzLCBkM19zdmdfbGluZU1vbm90b25lVGFuZ2VudHMocG9pbnRzKSk7XG4gIH1cbiAgZDMuc3ZnLmxpbmUucmFkaWFsID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGxpbmUgPSBkM19zdmdfbGluZShkM19zdmdfbGluZVJhZGlhbCk7XG4gICAgbGluZS5yYWRpdXMgPSBsaW5lLngsIGRlbGV0ZSBsaW5lLng7XG4gICAgbGluZS5hbmdsZSA9IGxpbmUueSwgZGVsZXRlIGxpbmUueTtcbiAgICByZXR1cm4gbGluZTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfc3ZnX2xpbmVSYWRpYWwocG9pbnRzKSB7XG4gICAgdmFyIHBvaW50LCBpID0gLTEsIG4gPSBwb2ludHMubGVuZ3RoLCByLCBhO1xuICAgIHdoaWxlICgrK2kgPCBuKSB7XG4gICAgICBwb2ludCA9IHBvaW50c1tpXTtcbiAgICAgIHIgPSBwb2ludFswXTtcbiAgICAgIGEgPSBwb2ludFsxXSArIGQzX3N2Z19hcmNPZmZzZXQ7XG4gICAgICBwb2ludFswXSA9IHIgKiBNYXRoLmNvcyhhKTtcbiAgICAgIHBvaW50WzFdID0gciAqIE1hdGguc2luKGEpO1xuICAgIH1cbiAgICByZXR1cm4gcG9pbnRzO1xuICB9XG4gIGZ1bmN0aW9uIGQzX3N2Z19hcmVhKHByb2plY3Rpb24pIHtcbiAgICB2YXIgeDAgPSBkM19nZW9tX3BvaW50WCwgeDEgPSBkM19nZW9tX3BvaW50WCwgeTAgPSAwLCB5MSA9IGQzX2dlb21fcG9pbnRZLCBkZWZpbmVkID0gZDNfdHJ1ZSwgaW50ZXJwb2xhdGUgPSBkM19zdmdfbGluZUxpbmVhciwgaW50ZXJwb2xhdGVLZXkgPSBpbnRlcnBvbGF0ZS5rZXksIGludGVycG9sYXRlUmV2ZXJzZSA9IGludGVycG9sYXRlLCBMID0gXCJMXCIsIHRlbnNpb24gPSAuNztcbiAgICBmdW5jdGlvbiBhcmVhKGRhdGEpIHtcbiAgICAgIHZhciBzZWdtZW50cyA9IFtdLCBwb2ludHMwID0gW10sIHBvaW50czEgPSBbXSwgaSA9IC0xLCBuID0gZGF0YS5sZW5ndGgsIGQsIGZ4MCA9IGQzX2Z1bmN0b3IoeDApLCBmeTAgPSBkM19mdW5jdG9yKHkwKSwgZngxID0geDAgPT09IHgxID8gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB4O1xuICAgICAgfSA6IGQzX2Z1bmN0b3IoeDEpLCBmeTEgPSB5MCA9PT0geTEgPyBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHk7XG4gICAgICB9IDogZDNfZnVuY3Rvcih5MSksIHgsIHk7XG4gICAgICBmdW5jdGlvbiBzZWdtZW50KCkge1xuICAgICAgICBzZWdtZW50cy5wdXNoKFwiTVwiLCBpbnRlcnBvbGF0ZShwcm9qZWN0aW9uKHBvaW50czEpLCB0ZW5zaW9uKSwgTCwgaW50ZXJwb2xhdGVSZXZlcnNlKHByb2plY3Rpb24ocG9pbnRzMC5yZXZlcnNlKCkpLCB0ZW5zaW9uKSwgXCJaXCIpO1xuICAgICAgfVxuICAgICAgd2hpbGUgKCsraSA8IG4pIHtcbiAgICAgICAgaWYgKGRlZmluZWQuY2FsbCh0aGlzLCBkID0gZGF0YVtpXSwgaSkpIHtcbiAgICAgICAgICBwb2ludHMwLnB1c2goWyB4ID0gK2Z4MC5jYWxsKHRoaXMsIGQsIGkpLCB5ID0gK2Z5MC5jYWxsKHRoaXMsIGQsIGkpIF0pO1xuICAgICAgICAgIHBvaW50czEucHVzaChbICtmeDEuY2FsbCh0aGlzLCBkLCBpKSwgK2Z5MS5jYWxsKHRoaXMsIGQsIGkpIF0pO1xuICAgICAgICB9IGVsc2UgaWYgKHBvaW50czAubGVuZ3RoKSB7XG4gICAgICAgICAgc2VnbWVudCgpO1xuICAgICAgICAgIHBvaW50czAgPSBbXTtcbiAgICAgICAgICBwb2ludHMxID0gW107XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChwb2ludHMwLmxlbmd0aCkgc2VnbWVudCgpO1xuICAgICAgcmV0dXJuIHNlZ21lbnRzLmxlbmd0aCA/IHNlZ21lbnRzLmpvaW4oXCJcIikgOiBudWxsO1xuICAgIH1cbiAgICBhcmVhLnggPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB4MTtcbiAgICAgIHgwID0geDEgPSBfO1xuICAgICAgcmV0dXJuIGFyZWE7XG4gICAgfTtcbiAgICBhcmVhLngwID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geDA7XG4gICAgICB4MCA9IF87XG4gICAgICByZXR1cm4gYXJlYTtcbiAgICB9O1xuICAgIGFyZWEueDEgPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB4MTtcbiAgICAgIHgxID0gXztcbiAgICAgIHJldHVybiBhcmVhO1xuICAgIH07XG4gICAgYXJlYS55ID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geTE7XG4gICAgICB5MCA9IHkxID0gXztcbiAgICAgIHJldHVybiBhcmVhO1xuICAgIH07XG4gICAgYXJlYS55MCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHkwO1xuICAgICAgeTAgPSBfO1xuICAgICAgcmV0dXJuIGFyZWE7XG4gICAgfTtcbiAgICBhcmVhLnkxID0gZnVuY3Rpb24oXykge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4geTE7XG4gICAgICB5MSA9IF87XG4gICAgICByZXR1cm4gYXJlYTtcbiAgICB9O1xuICAgIGFyZWEuZGVmaW5lZCA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGRlZmluZWQ7XG4gICAgICBkZWZpbmVkID0gXztcbiAgICAgIHJldHVybiBhcmVhO1xuICAgIH07XG4gICAgYXJlYS5pbnRlcnBvbGF0ZSA9IGZ1bmN0aW9uKF8pIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGludGVycG9sYXRlS2V5O1xuICAgICAgaWYgKHR5cGVvZiBfID09PSBcImZ1bmN0aW9uXCIpIGludGVycG9sYXRlS2V5ID0gaW50ZXJwb2xhdGUgPSBfOyBlbHNlIGludGVycG9sYXRlS2V5ID0gKGludGVycG9sYXRlID0gZDNfc3ZnX2xpbmVJbnRlcnBvbGF0b3JzLmdldChfKSB8fCBkM19zdmdfbGluZUxpbmVhcikua2V5O1xuICAgICAgaW50ZXJwb2xhdGVSZXZlcnNlID0gaW50ZXJwb2xhdGUucmV2ZXJzZSB8fCBpbnRlcnBvbGF0ZTtcbiAgICAgIEwgPSBpbnRlcnBvbGF0ZS5jbG9zZWQgPyBcIk1cIiA6IFwiTFwiO1xuICAgICAgcmV0dXJuIGFyZWE7XG4gICAgfTtcbiAgICBhcmVhLnRlbnNpb24gPSBmdW5jdGlvbihfKSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB0ZW5zaW9uO1xuICAgICAgdGVuc2lvbiA9IF87XG4gICAgICByZXR1cm4gYXJlYTtcbiAgICB9O1xuICAgIHJldHVybiBhcmVhO1xuICB9XG4gIGQzX3N2Z19saW5lU3RlcEJlZm9yZS5yZXZlcnNlID0gZDNfc3ZnX2xpbmVTdGVwQWZ0ZXI7XG4gIGQzX3N2Z19saW5lU3RlcEFmdGVyLnJldmVyc2UgPSBkM19zdmdfbGluZVN0ZXBCZWZvcmU7XG4gIGQzLnN2Zy5hcmVhID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX3N2Z19hcmVhKGQzX2lkZW50aXR5KTtcbiAgfTtcbiAgZDMuc3ZnLmFyZWEucmFkaWFsID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIGFyZWEgPSBkM19zdmdfYXJlYShkM19zdmdfbGluZVJhZGlhbCk7XG4gICAgYXJlYS5yYWRpdXMgPSBhcmVhLngsIGRlbGV0ZSBhcmVhLng7XG4gICAgYXJlYS5pbm5lclJhZGl1cyA9IGFyZWEueDAsIGRlbGV0ZSBhcmVhLngwO1xuICAgIGFyZWEub3V0ZXJSYWRpdXMgPSBhcmVhLngxLCBkZWxldGUgYXJlYS54MTtcbiAgICBhcmVhLmFuZ2xlID0gYXJlYS55LCBkZWxldGUgYXJlYS55O1xuICAgIGFyZWEuc3RhcnRBbmdsZSA9IGFyZWEueTAsIGRlbGV0ZSBhcmVhLnkwO1xuICAgIGFyZWEuZW5kQW5nbGUgPSBhcmVhLnkxLCBkZWxldGUgYXJlYS55MTtcbiAgICByZXR1cm4gYXJlYTtcbiAgfTtcbiAgZDMuc3ZnLmNob3JkID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNvdXJjZSA9IGQzX3NvdXJjZSwgdGFyZ2V0ID0gZDNfdGFyZ2V0LCByYWRpdXMgPSBkM19zdmdfY2hvcmRSYWRpdXMsIHN0YXJ0QW5nbGUgPSBkM19zdmdfYXJjU3RhcnRBbmdsZSwgZW5kQW5nbGUgPSBkM19zdmdfYXJjRW5kQW5nbGU7XG4gICAgZnVuY3Rpb24gY2hvcmQoZCwgaSkge1xuICAgICAgdmFyIHMgPSBzdWJncm91cCh0aGlzLCBzb3VyY2UsIGQsIGkpLCB0ID0gc3ViZ3JvdXAodGhpcywgdGFyZ2V0LCBkLCBpKTtcbiAgICAgIHJldHVybiBcIk1cIiArIHMucDAgKyBhcmMocy5yLCBzLnAxLCBzLmExIC0gcy5hMCkgKyAoZXF1YWxzKHMsIHQpID8gY3VydmUocy5yLCBzLnAxLCBzLnIsIHMucDApIDogY3VydmUocy5yLCBzLnAxLCB0LnIsIHQucDApICsgYXJjKHQuciwgdC5wMSwgdC5hMSAtIHQuYTApICsgY3VydmUodC5yLCB0LnAxLCBzLnIsIHMucDApKSArIFwiWlwiO1xuICAgIH1cbiAgICBmdW5jdGlvbiBzdWJncm91cChzZWxmLCBmLCBkLCBpKSB7XG4gICAgICB2YXIgc3ViZ3JvdXAgPSBmLmNhbGwoc2VsZiwgZCwgaSksIHIgPSByYWRpdXMuY2FsbChzZWxmLCBzdWJncm91cCwgaSksIGEwID0gc3RhcnRBbmdsZS5jYWxsKHNlbGYsIHN1Ymdyb3VwLCBpKSArIGQzX3N2Z19hcmNPZmZzZXQsIGExID0gZW5kQW5nbGUuY2FsbChzZWxmLCBzdWJncm91cCwgaSkgKyBkM19zdmdfYXJjT2Zmc2V0O1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcjogcixcbiAgICAgICAgYTA6IGEwLFxuICAgICAgICBhMTogYTEsXG4gICAgICAgIHAwOiBbIHIgKiBNYXRoLmNvcyhhMCksIHIgKiBNYXRoLnNpbihhMCkgXSxcbiAgICAgICAgcDE6IFsgciAqIE1hdGguY29zKGExKSwgciAqIE1hdGguc2luKGExKSBdXG4gICAgICB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBlcXVhbHMoYSwgYikge1xuICAgICAgcmV0dXJuIGEuYTAgPT0gYi5hMCAmJiBhLmExID09IGIuYTE7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGFyYyhyLCBwLCBhKSB7XG4gICAgICByZXR1cm4gXCJBXCIgKyByICsgXCIsXCIgKyByICsgXCIgMCBcIiArICsoYSA+IM+AKSArIFwiLDEgXCIgKyBwO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjdXJ2ZShyMCwgcDAsIHIxLCBwMSkge1xuICAgICAgcmV0dXJuIFwiUSAwLDAgXCIgKyBwMTtcbiAgICB9XG4gICAgY2hvcmQucmFkaXVzID0gZnVuY3Rpb24odikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcmFkaXVzO1xuICAgICAgcmFkaXVzID0gZDNfZnVuY3Rvcih2KTtcbiAgICAgIHJldHVybiBjaG9yZDtcbiAgICB9O1xuICAgIGNob3JkLnNvdXJjZSA9IGZ1bmN0aW9uKHYpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHNvdXJjZTtcbiAgICAgIHNvdXJjZSA9IGQzX2Z1bmN0b3Iodik7XG4gICAgICByZXR1cm4gY2hvcmQ7XG4gICAgfTtcbiAgICBjaG9yZC50YXJnZXQgPSBmdW5jdGlvbih2KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB0YXJnZXQ7XG4gICAgICB0YXJnZXQgPSBkM19mdW5jdG9yKHYpO1xuICAgICAgcmV0dXJuIGNob3JkO1xuICAgIH07XG4gICAgY2hvcmQuc3RhcnRBbmdsZSA9IGZ1bmN0aW9uKHYpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHN0YXJ0QW5nbGU7XG4gICAgICBzdGFydEFuZ2xlID0gZDNfZnVuY3Rvcih2KTtcbiAgICAgIHJldHVybiBjaG9yZDtcbiAgICB9O1xuICAgIGNob3JkLmVuZEFuZ2xlID0gZnVuY3Rpb24odikge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gZW5kQW5nbGU7XG4gICAgICBlbmRBbmdsZSA9IGQzX2Z1bmN0b3Iodik7XG4gICAgICByZXR1cm4gY2hvcmQ7XG4gICAgfTtcbiAgICByZXR1cm4gY2hvcmQ7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3N2Z19jaG9yZFJhZGl1cyhkKSB7XG4gICAgcmV0dXJuIGQucmFkaXVzO1xuICB9XG4gIGQzLnN2Zy5kaWFnb25hbCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBzb3VyY2UgPSBkM19zb3VyY2UsIHRhcmdldCA9IGQzX3RhcmdldCwgcHJvamVjdGlvbiA9IGQzX3N2Z19kaWFnb25hbFByb2plY3Rpb247XG4gICAgZnVuY3Rpb24gZGlhZ29uYWwoZCwgaSkge1xuICAgICAgdmFyIHAwID0gc291cmNlLmNhbGwodGhpcywgZCwgaSksIHAzID0gdGFyZ2V0LmNhbGwodGhpcywgZCwgaSksIG0gPSAocDAueSArIHAzLnkpIC8gMiwgcCA9IFsgcDAsIHtcbiAgICAgICAgeDogcDAueCxcbiAgICAgICAgeTogbVxuICAgICAgfSwge1xuICAgICAgICB4OiBwMy54LFxuICAgICAgICB5OiBtXG4gICAgICB9LCBwMyBdO1xuICAgICAgcCA9IHAubWFwKHByb2plY3Rpb24pO1xuICAgICAgcmV0dXJuIFwiTVwiICsgcFswXSArIFwiQ1wiICsgcFsxXSArIFwiIFwiICsgcFsyXSArIFwiIFwiICsgcFszXTtcbiAgICB9XG4gICAgZGlhZ29uYWwuc291cmNlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc291cmNlO1xuICAgICAgc291cmNlID0gZDNfZnVuY3Rvcih4KTtcbiAgICAgIHJldHVybiBkaWFnb25hbDtcbiAgICB9O1xuICAgIGRpYWdvbmFsLnRhcmdldCA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHRhcmdldDtcbiAgICAgIHRhcmdldCA9IGQzX2Z1bmN0b3IoeCk7XG4gICAgICByZXR1cm4gZGlhZ29uYWw7XG4gICAgfTtcbiAgICBkaWFnb25hbC5wcm9qZWN0aW9uID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gcHJvamVjdGlvbjtcbiAgICAgIHByb2plY3Rpb24gPSB4O1xuICAgICAgcmV0dXJuIGRpYWdvbmFsO1xuICAgIH07XG4gICAgcmV0dXJuIGRpYWdvbmFsO1xuICB9O1xuICBmdW5jdGlvbiBkM19zdmdfZGlhZ29uYWxQcm9qZWN0aW9uKGQpIHtcbiAgICByZXR1cm4gWyBkLngsIGQueSBdO1xuICB9XG4gIGQzLnN2Zy5kaWFnb25hbC5yYWRpYWwgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgZGlhZ29uYWwgPSBkMy5zdmcuZGlhZ29uYWwoKSwgcHJvamVjdGlvbiA9IGQzX3N2Z19kaWFnb25hbFByb2plY3Rpb24sIHByb2plY3Rpb25fID0gZGlhZ29uYWwucHJvamVjdGlvbjtcbiAgICBkaWFnb25hbC5wcm9qZWN0aW9uID0gZnVuY3Rpb24oeCkge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyBwcm9qZWN0aW9uXyhkM19zdmdfZGlhZ29uYWxSYWRpYWxQcm9qZWN0aW9uKHByb2plY3Rpb24gPSB4KSkgOiBwcm9qZWN0aW9uO1xuICAgIH07XG4gICAgcmV0dXJuIGRpYWdvbmFsO1xuICB9O1xuICBmdW5jdGlvbiBkM19zdmdfZGlhZ29uYWxSYWRpYWxQcm9qZWN0aW9uKHByb2plY3Rpb24pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgZCA9IHByb2plY3Rpb24uYXBwbHkodGhpcywgYXJndW1lbnRzKSwgciA9IGRbMF0sIGEgPSBkWzFdICsgZDNfc3ZnX2FyY09mZnNldDtcbiAgICAgIHJldHVybiBbIHIgKiBNYXRoLmNvcyhhKSwgciAqIE1hdGguc2luKGEpIF07XG4gICAgfTtcbiAgfVxuICBkMy5zdmcuc3ltYm9sID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHR5cGUgPSBkM19zdmdfc3ltYm9sVHlwZSwgc2l6ZSA9IGQzX3N2Z19zeW1ib2xTaXplO1xuICAgIGZ1bmN0aW9uIHN5bWJvbChkLCBpKSB7XG4gICAgICByZXR1cm4gKGQzX3N2Z19zeW1ib2xzLmdldCh0eXBlLmNhbGwodGhpcywgZCwgaSkpIHx8IGQzX3N2Z19zeW1ib2xDaXJjbGUpKHNpemUuY2FsbCh0aGlzLCBkLCBpKSk7XG4gICAgfVxuICAgIHN5bWJvbC50eXBlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdHlwZTtcbiAgICAgIHR5cGUgPSBkM19mdW5jdG9yKHgpO1xuICAgICAgcmV0dXJuIHN5bWJvbDtcbiAgICB9O1xuICAgIHN5bWJvbC5zaXplID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc2l6ZTtcbiAgICAgIHNpemUgPSBkM19mdW5jdG9yKHgpO1xuICAgICAgcmV0dXJuIHN5bWJvbDtcbiAgICB9O1xuICAgIHJldHVybiBzeW1ib2w7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX3N2Z19zeW1ib2xTaXplKCkge1xuICAgIHJldHVybiA2NDtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfc3ltYm9sVHlwZSgpIHtcbiAgICByZXR1cm4gXCJjaXJjbGVcIjtcbiAgfVxuICBmdW5jdGlvbiBkM19zdmdfc3ltYm9sQ2lyY2xlKHNpemUpIHtcbiAgICB2YXIgciA9IE1hdGguc3FydChzaXplIC8gz4ApO1xuICAgIHJldHVybiBcIk0wLFwiICsgciArIFwiQVwiICsgciArIFwiLFwiICsgciArIFwiIDAgMSwxIDAsXCIgKyAtciArIFwiQVwiICsgciArIFwiLFwiICsgciArIFwiIDAgMSwxIDAsXCIgKyByICsgXCJaXCI7XG4gIH1cbiAgdmFyIGQzX3N2Z19zeW1ib2xzID0gZDMubWFwKHtcbiAgICBjaXJjbGU6IGQzX3N2Z19zeW1ib2xDaXJjbGUsXG4gICAgY3Jvc3M6IGZ1bmN0aW9uKHNpemUpIHtcbiAgICAgIHZhciByID0gTWF0aC5zcXJ0KHNpemUgLyA1KSAvIDI7XG4gICAgICByZXR1cm4gXCJNXCIgKyAtMyAqIHIgKyBcIixcIiArIC1yICsgXCJIXCIgKyAtciArIFwiVlwiICsgLTMgKiByICsgXCJIXCIgKyByICsgXCJWXCIgKyAtciArIFwiSFwiICsgMyAqIHIgKyBcIlZcIiArIHIgKyBcIkhcIiArIHIgKyBcIlZcIiArIDMgKiByICsgXCJIXCIgKyAtciArIFwiVlwiICsgciArIFwiSFwiICsgLTMgKiByICsgXCJaXCI7XG4gICAgfSxcbiAgICBkaWFtb25kOiBmdW5jdGlvbihzaXplKSB7XG4gICAgICB2YXIgcnkgPSBNYXRoLnNxcnQoc2l6ZSAvICgyICogZDNfc3ZnX3N5bWJvbFRhbjMwKSksIHJ4ID0gcnkgKiBkM19zdmdfc3ltYm9sVGFuMzA7XG4gICAgICByZXR1cm4gXCJNMCxcIiArIC1yeSArIFwiTFwiICsgcnggKyBcIiwwXCIgKyBcIiAwLFwiICsgcnkgKyBcIiBcIiArIC1yeCArIFwiLDBcIiArIFwiWlwiO1xuICAgIH0sXG4gICAgc3F1YXJlOiBmdW5jdGlvbihzaXplKSB7XG4gICAgICB2YXIgciA9IE1hdGguc3FydChzaXplKSAvIDI7XG4gICAgICByZXR1cm4gXCJNXCIgKyAtciArIFwiLFwiICsgLXIgKyBcIkxcIiArIHIgKyBcIixcIiArIC1yICsgXCIgXCIgKyByICsgXCIsXCIgKyByICsgXCIgXCIgKyAtciArIFwiLFwiICsgciArIFwiWlwiO1xuICAgIH0sXG4gICAgXCJ0cmlhbmdsZS1kb3duXCI6IGZ1bmN0aW9uKHNpemUpIHtcbiAgICAgIHZhciByeCA9IE1hdGguc3FydChzaXplIC8gZDNfc3ZnX3N5bWJvbFNxcnQzKSwgcnkgPSByeCAqIGQzX3N2Z19zeW1ib2xTcXJ0MyAvIDI7XG4gICAgICByZXR1cm4gXCJNMCxcIiArIHJ5ICsgXCJMXCIgKyByeCArIFwiLFwiICsgLXJ5ICsgXCIgXCIgKyAtcnggKyBcIixcIiArIC1yeSArIFwiWlwiO1xuICAgIH0sXG4gICAgXCJ0cmlhbmdsZS11cFwiOiBmdW5jdGlvbihzaXplKSB7XG4gICAgICB2YXIgcnggPSBNYXRoLnNxcnQoc2l6ZSAvIGQzX3N2Z19zeW1ib2xTcXJ0MyksIHJ5ID0gcnggKiBkM19zdmdfc3ltYm9sU3FydDMgLyAyO1xuICAgICAgcmV0dXJuIFwiTTAsXCIgKyAtcnkgKyBcIkxcIiArIHJ4ICsgXCIsXCIgKyByeSArIFwiIFwiICsgLXJ4ICsgXCIsXCIgKyByeSArIFwiWlwiO1xuICAgIH1cbiAgfSk7XG4gIGQzLnN2Zy5zeW1ib2xUeXBlcyA9IGQzX3N2Z19zeW1ib2xzLmtleXMoKTtcbiAgdmFyIGQzX3N2Z19zeW1ib2xTcXJ0MyA9IE1hdGguc3FydCgzKSwgZDNfc3ZnX3N5bWJvbFRhbjMwID0gTWF0aC50YW4oMzAgKiBkM19yYWRpYW5zKTtcbiAgZnVuY3Rpb24gZDNfdHJhbnNpdGlvbihncm91cHMsIGlkKSB7XG4gICAgZDNfc3ViY2xhc3MoZ3JvdXBzLCBkM190cmFuc2l0aW9uUHJvdG90eXBlKTtcbiAgICBncm91cHMuaWQgPSBpZDtcbiAgICByZXR1cm4gZ3JvdXBzO1xuICB9XG4gIHZhciBkM190cmFuc2l0aW9uUHJvdG90eXBlID0gW10sIGQzX3RyYW5zaXRpb25JZCA9IDAsIGQzX3RyYW5zaXRpb25Jbmhlcml0SWQsIGQzX3RyYW5zaXRpb25Jbmhlcml0O1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLmNhbGwgPSBkM19zZWxlY3Rpb25Qcm90b3R5cGUuY2FsbDtcbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS5lbXB0eSA9IGQzX3NlbGVjdGlvblByb3RvdHlwZS5lbXB0eTtcbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS5ub2RlID0gZDNfc2VsZWN0aW9uUHJvdG90eXBlLm5vZGU7XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUuc2l6ZSA9IGQzX3NlbGVjdGlvblByb3RvdHlwZS5zaXplO1xuICBkMy50cmFuc2l0aW9uID0gZnVuY3Rpb24oc2VsZWN0aW9uKSB7XG4gICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPyBkM190cmFuc2l0aW9uSW5oZXJpdElkID8gc2VsZWN0aW9uLnRyYW5zaXRpb24oKSA6IHNlbGVjdGlvbiA6IGQzX3NlbGVjdGlvblJvb3QudHJhbnNpdGlvbigpO1xuICB9O1xuICBkMy50cmFuc2l0aW9uLnByb3RvdHlwZSA9IGQzX3RyYW5zaXRpb25Qcm90b3R5cGU7XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUuc2VsZWN0ID0gZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgICB2YXIgaWQgPSB0aGlzLmlkLCBzdWJncm91cHMgPSBbXSwgc3ViZ3JvdXAsIHN1Ym5vZGUsIG5vZGU7XG4gICAgc2VsZWN0b3IgPSBkM19zZWxlY3Rpb25fc2VsZWN0b3Ioc2VsZWN0b3IpO1xuICAgIGZvciAodmFyIGogPSAtMSwgbSA9IHRoaXMubGVuZ3RoOyArK2ogPCBtOyApIHtcbiAgICAgIHN1Ymdyb3Vwcy5wdXNoKHN1Ymdyb3VwID0gW10pO1xuICAgICAgZm9yICh2YXIgZ3JvdXAgPSB0aGlzW2pdLCBpID0gLTEsIG4gPSBncm91cC5sZW5ndGg7ICsraSA8IG47ICkge1xuICAgICAgICBpZiAoKG5vZGUgPSBncm91cFtpXSkgJiYgKHN1Ym5vZGUgPSBzZWxlY3Rvci5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGopKSkge1xuICAgICAgICAgIGlmIChcIl9fZGF0YV9fXCIgaW4gbm9kZSkgc3Vibm9kZS5fX2RhdGFfXyA9IG5vZGUuX19kYXRhX187XG4gICAgICAgICAgZDNfdHJhbnNpdGlvbk5vZGUoc3Vibm9kZSwgaSwgaWQsIG5vZGUuX190cmFuc2l0aW9uX19baWRdKTtcbiAgICAgICAgICBzdWJncm91cC5wdXNoKHN1Ym5vZGUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHN1Ymdyb3VwLnB1c2gobnVsbCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGQzX3RyYW5zaXRpb24oc3ViZ3JvdXBzLCBpZCk7XG4gIH07XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUuc2VsZWN0QWxsID0gZnVuY3Rpb24oc2VsZWN0b3IpIHtcbiAgICB2YXIgaWQgPSB0aGlzLmlkLCBzdWJncm91cHMgPSBbXSwgc3ViZ3JvdXAsIHN1Ym5vZGVzLCBub2RlLCBzdWJub2RlLCB0cmFuc2l0aW9uO1xuICAgIHNlbGVjdG9yID0gZDNfc2VsZWN0aW9uX3NlbGVjdG9yQWxsKHNlbGVjdG9yKTtcbiAgICBmb3IgKHZhciBqID0gLTEsIG0gPSB0aGlzLmxlbmd0aDsgKytqIDwgbTsgKSB7XG4gICAgICBmb3IgKHZhciBncm91cCA9IHRoaXNbal0sIGkgPSAtMSwgbiA9IGdyb3VwLmxlbmd0aDsgKytpIDwgbjsgKSB7XG4gICAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgICB0cmFuc2l0aW9uID0gbm9kZS5fX3RyYW5zaXRpb25fX1tpZF07XG4gICAgICAgICAgc3Vibm9kZXMgPSBzZWxlY3Rvci5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGopO1xuICAgICAgICAgIHN1Ymdyb3Vwcy5wdXNoKHN1Ymdyb3VwID0gW10pO1xuICAgICAgICAgIGZvciAodmFyIGsgPSAtMSwgbyA9IHN1Ym5vZGVzLmxlbmd0aDsgKytrIDwgbzsgKSB7XG4gICAgICAgICAgICBpZiAoc3Vibm9kZSA9IHN1Ym5vZGVzW2tdKSBkM190cmFuc2l0aW9uTm9kZShzdWJub2RlLCBrLCBpZCwgdHJhbnNpdGlvbik7XG4gICAgICAgICAgICBzdWJncm91cC5wdXNoKHN1Ym5vZGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZDNfdHJhbnNpdGlvbihzdWJncm91cHMsIGlkKTtcbiAgfTtcbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS5maWx0ZXIgPSBmdW5jdGlvbihmaWx0ZXIpIHtcbiAgICB2YXIgc3ViZ3JvdXBzID0gW10sIHN1Ymdyb3VwLCBncm91cCwgbm9kZTtcbiAgICBpZiAodHlwZW9mIGZpbHRlciAhPT0gXCJmdW5jdGlvblwiKSBmaWx0ZXIgPSBkM19zZWxlY3Rpb25fZmlsdGVyKGZpbHRlcik7XG4gICAgZm9yICh2YXIgaiA9IDAsIG0gPSB0aGlzLmxlbmd0aDsgaiA8IG07IGorKykge1xuICAgICAgc3ViZ3JvdXBzLnB1c2goc3ViZ3JvdXAgPSBbXSk7XG4gICAgICBmb3IgKHZhciBncm91cCA9IHRoaXNbal0sIGkgPSAwLCBuID0gZ3JvdXAubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIGlmICgobm9kZSA9IGdyb3VwW2ldKSAmJiBmaWx0ZXIuY2FsbChub2RlLCBub2RlLl9fZGF0YV9fLCBpLCBqKSkge1xuICAgICAgICAgIHN1Ymdyb3VwLnB1c2gobm9kZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGQzX3RyYW5zaXRpb24oc3ViZ3JvdXBzLCB0aGlzLmlkKTtcbiAgfTtcbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS50d2VlbiA9IGZ1bmN0aW9uKG5hbWUsIHR3ZWVuKSB7XG4gICAgdmFyIGlkID0gdGhpcy5pZDtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpIHJldHVybiB0aGlzLm5vZGUoKS5fX3RyYW5zaXRpb25fX1tpZF0udHdlZW4uZ2V0KG5hbWUpO1xuICAgIHJldHVybiBkM19zZWxlY3Rpb25fZWFjaCh0aGlzLCB0d2VlbiA9PSBudWxsID8gZnVuY3Rpb24obm9kZSkge1xuICAgICAgbm9kZS5fX3RyYW5zaXRpb25fX1tpZF0udHdlZW4ucmVtb3ZlKG5hbWUpO1xuICAgIH0gOiBmdW5jdGlvbihub2RlKSB7XG4gICAgICBub2RlLl9fdHJhbnNpdGlvbl9fW2lkXS50d2Vlbi5zZXQobmFtZSwgdHdlZW4pO1xuICAgIH0pO1xuICB9O1xuICBmdW5jdGlvbiBkM190cmFuc2l0aW9uX3R3ZWVuKGdyb3VwcywgbmFtZSwgdmFsdWUsIHR3ZWVuKSB7XG4gICAgdmFyIGlkID0gZ3JvdXBzLmlkO1xuICAgIHJldHVybiBkM19zZWxlY3Rpb25fZWFjaChncm91cHMsIHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gZnVuY3Rpb24obm9kZSwgaSwgaikge1xuICAgICAgbm9kZS5fX3RyYW5zaXRpb25fX1tpZF0udHdlZW4uc2V0KG5hbWUsIHR3ZWVuKHZhbHVlLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgaikpKTtcbiAgICB9IDogKHZhbHVlID0gdHdlZW4odmFsdWUpLCBmdW5jdGlvbihub2RlKSB7XG4gICAgICBub2RlLl9fdHJhbnNpdGlvbl9fW2lkXS50d2Vlbi5zZXQobmFtZSwgdmFsdWUpO1xuICAgIH0pKTtcbiAgfVxuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLmF0dHIgPSBmdW5jdGlvbihuYW1lTlMsIHZhbHVlKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgICBmb3IgKHZhbHVlIGluIG5hbWVOUykgdGhpcy5hdHRyKHZhbHVlLCBuYW1lTlNbdmFsdWVdKTtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICB2YXIgaW50ZXJwb2xhdGUgPSBuYW1lTlMgPT0gXCJ0cmFuc2Zvcm1cIiA/IGQzX2ludGVycG9sYXRlVHJhbnNmb3JtIDogZDNfaW50ZXJwb2xhdGUsIG5hbWUgPSBkMy5ucy5xdWFsaWZ5KG5hbWVOUyk7XG4gICAgZnVuY3Rpb24gYXR0ck51bGwoKSB7XG4gICAgICB0aGlzLnJlbW92ZUF0dHJpYnV0ZShuYW1lKTtcbiAgICB9XG4gICAgZnVuY3Rpb24gYXR0ck51bGxOUygpIHtcbiAgICAgIHRoaXMucmVtb3ZlQXR0cmlidXRlTlMobmFtZS5zcGFjZSwgbmFtZS5sb2NhbCk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGF0dHJUd2VlbihiKSB7XG4gICAgICByZXR1cm4gYiA9PSBudWxsID8gYXR0ck51bGwgOiAoYiArPSBcIlwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGEgPSB0aGlzLmdldEF0dHJpYnV0ZShuYW1lKSwgaTtcbiAgICAgICAgcmV0dXJuIGEgIT09IGIgJiYgKGkgPSBpbnRlcnBvbGF0ZShhLCBiKSwgZnVuY3Rpb24odCkge1xuICAgICAgICAgIHRoaXMuc2V0QXR0cmlidXRlKG5hbWUsIGkodCkpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiBhdHRyVHdlZW5OUyhiKSB7XG4gICAgICByZXR1cm4gYiA9PSBudWxsID8gYXR0ck51bGxOUyA6IChiICs9IFwiXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgYSA9IHRoaXMuZ2V0QXR0cmlidXRlTlMobmFtZS5zcGFjZSwgbmFtZS5sb2NhbCksIGk7XG4gICAgICAgIHJldHVybiBhICE9PSBiICYmIChpID0gaW50ZXJwb2xhdGUoYSwgYiksIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgICB0aGlzLnNldEF0dHJpYnV0ZU5TKG5hbWUuc3BhY2UsIG5hbWUubG9jYWwsIGkodCkpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gZDNfdHJhbnNpdGlvbl90d2Vlbih0aGlzLCBcImF0dHIuXCIgKyBuYW1lTlMsIHZhbHVlLCBuYW1lLmxvY2FsID8gYXR0clR3ZWVuTlMgOiBhdHRyVHdlZW4pO1xuICB9O1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLmF0dHJUd2VlbiA9IGZ1bmN0aW9uKG5hbWVOUywgdHdlZW4pIHtcbiAgICB2YXIgbmFtZSA9IGQzLm5zLnF1YWxpZnkobmFtZU5TKTtcbiAgICBmdW5jdGlvbiBhdHRyVHdlZW4oZCwgaSkge1xuICAgICAgdmFyIGYgPSB0d2Vlbi5jYWxsKHRoaXMsIGQsIGksIHRoaXMuZ2V0QXR0cmlidXRlKG5hbWUpKTtcbiAgICAgIHJldHVybiBmICYmIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUobmFtZSwgZih0KSk7XG4gICAgICB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBhdHRyVHdlZW5OUyhkLCBpKSB7XG4gICAgICB2YXIgZiA9IHR3ZWVuLmNhbGwodGhpcywgZCwgaSwgdGhpcy5nZXRBdHRyaWJ1dGVOUyhuYW1lLnNwYWNlLCBuYW1lLmxvY2FsKSk7XG4gICAgICByZXR1cm4gZiAmJiBmdW5jdGlvbih0KSB7XG4gICAgICAgIHRoaXMuc2V0QXR0cmlidXRlTlMobmFtZS5zcGFjZSwgbmFtZS5sb2NhbCwgZih0KSk7XG4gICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy50d2VlbihcImF0dHIuXCIgKyBuYW1lTlMsIG5hbWUubG9jYWwgPyBhdHRyVHdlZW5OUyA6IGF0dHJUd2Vlbik7XG4gIH07XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUuc3R5bGUgPSBmdW5jdGlvbihuYW1lLCB2YWx1ZSwgcHJpb3JpdHkpIHtcbiAgICB2YXIgbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgaWYgKG4gPCAzKSB7XG4gICAgICBpZiAodHlwZW9mIG5hbWUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgaWYgKG4gPCAyKSB2YWx1ZSA9IFwiXCI7XG4gICAgICAgIGZvciAocHJpb3JpdHkgaW4gbmFtZSkgdGhpcy5zdHlsZShwcmlvcml0eSwgbmFtZVtwcmlvcml0eV0sIHZhbHVlKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICB9XG4gICAgICBwcmlvcml0eSA9IFwiXCI7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHN0eWxlTnVsbCgpIHtcbiAgICAgIHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkobmFtZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHN0eWxlU3RyaW5nKGIpIHtcbiAgICAgIHJldHVybiBiID09IG51bGwgPyBzdHlsZU51bGwgOiAoYiArPSBcIlwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGEgPSBkM193aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLCBudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKG5hbWUpLCBpO1xuICAgICAgICByZXR1cm4gYSAhPT0gYiAmJiAoaSA9IGQzX2ludGVycG9sYXRlKGEsIGIpLCBmdW5jdGlvbih0KSB7XG4gICAgICAgICAgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eShuYW1lLCBpKHQpLCBwcmlvcml0eSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBkM190cmFuc2l0aW9uX3R3ZWVuKHRoaXMsIFwic3R5bGUuXCIgKyBuYW1lLCB2YWx1ZSwgc3R5bGVTdHJpbmcpO1xuICB9O1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLnN0eWxlVHdlZW4gPSBmdW5jdGlvbihuYW1lLCB0d2VlbiwgcHJpb3JpdHkpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDMpIHByaW9yaXR5ID0gXCJcIjtcbiAgICBmdW5jdGlvbiBzdHlsZVR3ZWVuKGQsIGkpIHtcbiAgICAgIHZhciBmID0gdHdlZW4uY2FsbCh0aGlzLCBkLCBpLCBkM193aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzLCBudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKG5hbWUpKTtcbiAgICAgIHJldHVybiBmICYmIGZ1bmN0aW9uKHQpIHtcbiAgICAgICAgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eShuYW1lLCBmKHQpLCBwcmlvcml0eSk7XG4gICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy50d2VlbihcInN0eWxlLlwiICsgbmFtZSwgc3R5bGVUd2Vlbik7XG4gIH07XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUudGV4dCA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIGQzX3RyYW5zaXRpb25fdHdlZW4odGhpcywgXCJ0ZXh0XCIsIHZhbHVlLCBkM190cmFuc2l0aW9uX3RleHQpO1xuICB9O1xuICBmdW5jdGlvbiBkM190cmFuc2l0aW9uX3RleHQoYikge1xuICAgIGlmIChiID09IG51bGwpIGIgPSBcIlwiO1xuICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMudGV4dENvbnRlbnQgPSBiO1xuICAgIH07XG4gIH1cbiAgZDNfdHJhbnNpdGlvblByb3RvdHlwZS5yZW1vdmUgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy5lYWNoKFwiZW5kLnRyYW5zaXRpb25cIiwgZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgcDtcbiAgICAgIGlmICh0aGlzLl9fdHJhbnNpdGlvbl9fLmNvdW50IDwgMiAmJiAocCA9IHRoaXMucGFyZW50Tm9kZSkpIHAucmVtb3ZlQ2hpbGQodGhpcyk7XG4gICAgfSk7XG4gIH07XG4gIGQzX3RyYW5zaXRpb25Qcm90b3R5cGUuZWFzZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgdmFyIGlkID0gdGhpcy5pZDtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDEpIHJldHVybiB0aGlzLm5vZGUoKS5fX3RyYW5zaXRpb25fX1tpZF0uZWFzZTtcbiAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcImZ1bmN0aW9uXCIpIHZhbHVlID0gZDMuZWFzZS5hcHBseShkMywgYXJndW1lbnRzKTtcbiAgICByZXR1cm4gZDNfc2VsZWN0aW9uX2VhY2godGhpcywgZnVuY3Rpb24obm9kZSkge1xuICAgICAgbm9kZS5fX3RyYW5zaXRpb25fX1tpZF0uZWFzZSA9IHZhbHVlO1xuICAgIH0pO1xuICB9O1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLmRlbGF5ID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICB2YXIgaWQgPSB0aGlzLmlkO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMSkgcmV0dXJuIHRoaXMubm9kZSgpLl9fdHJhbnNpdGlvbl9fW2lkXS5kZWxheTtcbiAgICByZXR1cm4gZDNfc2VsZWN0aW9uX2VhY2godGhpcywgdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyBmdW5jdGlvbihub2RlLCBpLCBqKSB7XG4gICAgICBub2RlLl9fdHJhbnNpdGlvbl9fW2lkXS5kZWxheSA9ICt2YWx1ZS5jYWxsKG5vZGUsIG5vZGUuX19kYXRhX18sIGksIGopO1xuICAgIH0gOiAodmFsdWUgPSArdmFsdWUsIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgIG5vZGUuX190cmFuc2l0aW9uX19baWRdLmRlbGF5ID0gdmFsdWU7XG4gICAgfSkpO1xuICB9O1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLmR1cmF0aW9uID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICB2YXIgaWQgPSB0aGlzLmlkO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoIDwgMSkgcmV0dXJuIHRoaXMubm9kZSgpLl9fdHJhbnNpdGlvbl9fW2lkXS5kdXJhdGlvbjtcbiAgICByZXR1cm4gZDNfc2VsZWN0aW9uX2VhY2godGhpcywgdHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyBmdW5jdGlvbihub2RlLCBpLCBqKSB7XG4gICAgICBub2RlLl9fdHJhbnNpdGlvbl9fW2lkXS5kdXJhdGlvbiA9IE1hdGgubWF4KDEsIHZhbHVlLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgaikpO1xuICAgIH0gOiAodmFsdWUgPSBNYXRoLm1heCgxLCB2YWx1ZSksIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgIG5vZGUuX190cmFuc2l0aW9uX19baWRdLmR1cmF0aW9uID0gdmFsdWU7XG4gICAgfSkpO1xuICB9O1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLmVhY2ggPSBmdW5jdGlvbih0eXBlLCBsaXN0ZW5lcikge1xuICAgIHZhciBpZCA9IHRoaXMuaWQ7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKSB7XG4gICAgICB2YXIgaW5oZXJpdCA9IGQzX3RyYW5zaXRpb25Jbmhlcml0LCBpbmhlcml0SWQgPSBkM190cmFuc2l0aW9uSW5oZXJpdElkO1xuICAgICAgZDNfdHJhbnNpdGlvbkluaGVyaXRJZCA9IGlkO1xuICAgICAgZDNfc2VsZWN0aW9uX2VhY2godGhpcywgZnVuY3Rpb24obm9kZSwgaSwgaikge1xuICAgICAgICBkM190cmFuc2l0aW9uSW5oZXJpdCA9IG5vZGUuX190cmFuc2l0aW9uX19baWRdO1xuICAgICAgICB0eXBlLmNhbGwobm9kZSwgbm9kZS5fX2RhdGFfXywgaSwgaik7XG4gICAgICB9KTtcbiAgICAgIGQzX3RyYW5zaXRpb25Jbmhlcml0ID0gaW5oZXJpdDtcbiAgICAgIGQzX3RyYW5zaXRpb25Jbmhlcml0SWQgPSBpbmhlcml0SWQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIGQzX3NlbGVjdGlvbl9lYWNoKHRoaXMsIGZ1bmN0aW9uKG5vZGUpIHtcbiAgICAgICAgdmFyIHRyYW5zaXRpb24gPSBub2RlLl9fdHJhbnNpdGlvbl9fW2lkXTtcbiAgICAgICAgKHRyYW5zaXRpb24uZXZlbnQgfHwgKHRyYW5zaXRpb24uZXZlbnQgPSBkMy5kaXNwYXRjaChcInN0YXJ0XCIsIFwiZW5kXCIpKSkub24odHlwZSwgbGlzdGVuZXIpO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuICBkM190cmFuc2l0aW9uUHJvdG90eXBlLnRyYW5zaXRpb24gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaWQwID0gdGhpcy5pZCwgaWQxID0gKytkM190cmFuc2l0aW9uSWQsIHN1Ymdyb3VwcyA9IFtdLCBzdWJncm91cCwgZ3JvdXAsIG5vZGUsIHRyYW5zaXRpb247XG4gICAgZm9yICh2YXIgaiA9IDAsIG0gPSB0aGlzLmxlbmd0aDsgaiA8IG07IGorKykge1xuICAgICAgc3ViZ3JvdXBzLnB1c2goc3ViZ3JvdXAgPSBbXSk7XG4gICAgICBmb3IgKHZhciBncm91cCA9IHRoaXNbal0sIGkgPSAwLCBuID0gZ3JvdXAubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIGlmIChub2RlID0gZ3JvdXBbaV0pIHtcbiAgICAgICAgICB0cmFuc2l0aW9uID0gT2JqZWN0LmNyZWF0ZShub2RlLl9fdHJhbnNpdGlvbl9fW2lkMF0pO1xuICAgICAgICAgIHRyYW5zaXRpb24uZGVsYXkgKz0gdHJhbnNpdGlvbi5kdXJhdGlvbjtcbiAgICAgICAgICBkM190cmFuc2l0aW9uTm9kZShub2RlLCBpLCBpZDEsIHRyYW5zaXRpb24pO1xuICAgICAgICB9XG4gICAgICAgIHN1Ymdyb3VwLnB1c2gobm9kZSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkM190cmFuc2l0aW9uKHN1Ymdyb3VwcywgaWQxKTtcbiAgfTtcbiAgZnVuY3Rpb24gZDNfdHJhbnNpdGlvbk5vZGUobm9kZSwgaSwgaWQsIGluaGVyaXQpIHtcbiAgICB2YXIgbG9jayA9IG5vZGUuX190cmFuc2l0aW9uX18gfHwgKG5vZGUuX190cmFuc2l0aW9uX18gPSB7XG4gICAgICBhY3RpdmU6IDAsXG4gICAgICBjb3VudDogMFxuICAgIH0pLCB0cmFuc2l0aW9uID0gbG9ja1tpZF07XG4gICAgaWYgKCF0cmFuc2l0aW9uKSB7XG4gICAgICB2YXIgdGltZSA9IGluaGVyaXQudGltZTtcbiAgICAgIHRyYW5zaXRpb24gPSBsb2NrW2lkXSA9IHtcbiAgICAgICAgdHdlZW46IG5ldyBkM19NYXAoKSxcbiAgICAgICAgdGltZTogdGltZSxcbiAgICAgICAgZWFzZTogaW5oZXJpdC5lYXNlLFxuICAgICAgICBkZWxheTogaW5oZXJpdC5kZWxheSxcbiAgICAgICAgZHVyYXRpb246IGluaGVyaXQuZHVyYXRpb25cbiAgICAgIH07XG4gICAgICArK2xvY2suY291bnQ7XG4gICAgICBkMy50aW1lcihmdW5jdGlvbihlbGFwc2VkKSB7XG4gICAgICAgIHZhciBkID0gbm9kZS5fX2RhdGFfXywgZWFzZSA9IHRyYW5zaXRpb24uZWFzZSwgZGVsYXkgPSB0cmFuc2l0aW9uLmRlbGF5LCBkdXJhdGlvbiA9IHRyYW5zaXRpb24uZHVyYXRpb24sIHRpbWVyID0gZDNfdGltZXJfYWN0aXZlLCB0d2VlbmVkID0gW107XG4gICAgICAgIHRpbWVyLnQgPSBkZWxheSArIHRpbWU7XG4gICAgICAgIGlmIChkZWxheSA8PSBlbGFwc2VkKSByZXR1cm4gc3RhcnQoZWxhcHNlZCAtIGRlbGF5KTtcbiAgICAgICAgdGltZXIuYyA9IHN0YXJ0O1xuICAgICAgICBmdW5jdGlvbiBzdGFydChlbGFwc2VkKSB7XG4gICAgICAgICAgaWYgKGxvY2suYWN0aXZlID4gaWQpIHJldHVybiBzdG9wKCk7XG4gICAgICAgICAgbG9jay5hY3RpdmUgPSBpZDtcbiAgICAgICAgICB0cmFuc2l0aW9uLmV2ZW50ICYmIHRyYW5zaXRpb24uZXZlbnQuc3RhcnQuY2FsbChub2RlLCBkLCBpKTtcbiAgICAgICAgICB0cmFuc2l0aW9uLnR3ZWVuLmZvckVhY2goZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgICAgICAgICAgaWYgKHZhbHVlID0gdmFsdWUuY2FsbChub2RlLCBkLCBpKSkge1xuICAgICAgICAgICAgICB0d2VlbmVkLnB1c2godmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGQzLnRpbWVyKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdGltZXIuYyA9IHRpY2soZWxhcHNlZCB8fCAxKSA/IGQzX3RydWUgOiB0aWNrO1xuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgICAgfSwgMCwgdGltZSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gdGljayhlbGFwc2VkKSB7XG4gICAgICAgICAgaWYgKGxvY2suYWN0aXZlICE9PSBpZCkgcmV0dXJuIHN0b3AoKTtcbiAgICAgICAgICB2YXIgdCA9IGVsYXBzZWQgLyBkdXJhdGlvbiwgZSA9IGVhc2UodCksIG4gPSB0d2VlbmVkLmxlbmd0aDtcbiAgICAgICAgICB3aGlsZSAobiA+IDApIHtcbiAgICAgICAgICAgIHR3ZWVuZWRbLS1uXS5jYWxsKG5vZGUsIGUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAodCA+PSAxKSB7XG4gICAgICAgICAgICB0cmFuc2l0aW9uLmV2ZW50ICYmIHRyYW5zaXRpb24uZXZlbnQuZW5kLmNhbGwobm9kZSwgZCwgaSk7XG4gICAgICAgICAgICByZXR1cm4gc3RvcCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBzdG9wKCkge1xuICAgICAgICAgIGlmICgtLWxvY2suY291bnQpIGRlbGV0ZSBsb2NrW2lkXTsgZWxzZSBkZWxldGUgbm9kZS5fX3RyYW5zaXRpb25fXztcbiAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgfVxuICAgICAgfSwgMCwgdGltZSk7XG4gICAgfVxuICB9XG4gIGQzLnN2Zy5heGlzID0gZnVuY3Rpb24oKSB7XG4gICAgdmFyIHNjYWxlID0gZDMuc2NhbGUubGluZWFyKCksIG9yaWVudCA9IGQzX3N2Z19heGlzRGVmYXVsdE9yaWVudCwgaW5uZXJUaWNrU2l6ZSA9IDYsIG91dGVyVGlja1NpemUgPSA2LCB0aWNrUGFkZGluZyA9IDMsIHRpY2tBcmd1bWVudHNfID0gWyAxMCBdLCB0aWNrVmFsdWVzID0gbnVsbCwgdGlja0Zvcm1hdF87XG4gICAgZnVuY3Rpb24gYXhpcyhnKSB7XG4gICAgICBnLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBnID0gZDMuc2VsZWN0KHRoaXMpO1xuICAgICAgICB2YXIgc2NhbGUwID0gdGhpcy5fX2NoYXJ0X18gfHwgc2NhbGUsIHNjYWxlMSA9IHRoaXMuX19jaGFydF9fID0gc2NhbGUuY29weSgpO1xuICAgICAgICB2YXIgdGlja3MgPSB0aWNrVmFsdWVzID09IG51bGwgPyBzY2FsZTEudGlja3MgPyBzY2FsZTEudGlja3MuYXBwbHkoc2NhbGUxLCB0aWNrQXJndW1lbnRzXykgOiBzY2FsZTEuZG9tYWluKCkgOiB0aWNrVmFsdWVzLCB0aWNrRm9ybWF0ID0gdGlja0Zvcm1hdF8gPT0gbnVsbCA/IHNjYWxlMS50aWNrRm9ybWF0ID8gc2NhbGUxLnRpY2tGb3JtYXQuYXBwbHkoc2NhbGUxLCB0aWNrQXJndW1lbnRzXykgOiBkM19pZGVudGl0eSA6IHRpY2tGb3JtYXRfLCB0aWNrID0gZy5zZWxlY3RBbGwoXCIudGlja1wiKS5kYXRhKHRpY2tzLCBzY2FsZTEpLCB0aWNrRW50ZXIgPSB0aWNrLmVudGVyKCkuaW5zZXJ0KFwiZ1wiLCBcIi5kb21haW5cIikuYXR0cihcImNsYXNzXCIsIFwidGlja1wiKS5zdHlsZShcIm9wYWNpdHlcIiwgzrUpLCB0aWNrRXhpdCA9IGQzLnRyYW5zaXRpb24odGljay5leGl0KCkpLnN0eWxlKFwib3BhY2l0eVwiLCDOtSkucmVtb3ZlKCksIHRpY2tVcGRhdGUgPSBkMy50cmFuc2l0aW9uKHRpY2sub3JkZXIoKSkuc3R5bGUoXCJvcGFjaXR5XCIsIDEpLCB0aWNrVHJhbnNmb3JtO1xuICAgICAgICB2YXIgcmFuZ2UgPSBkM19zY2FsZVJhbmdlKHNjYWxlMSksIHBhdGggPSBnLnNlbGVjdEFsbChcIi5kb21haW5cIikuZGF0YShbIDAgXSksIHBhdGhVcGRhdGUgPSAocGF0aC5lbnRlcigpLmFwcGVuZChcInBhdGhcIikuYXR0cihcImNsYXNzXCIsIFwiZG9tYWluXCIpLCBcbiAgICAgICAgZDMudHJhbnNpdGlvbihwYXRoKSk7XG4gICAgICAgIHRpY2tFbnRlci5hcHBlbmQoXCJsaW5lXCIpO1xuICAgICAgICB0aWNrRW50ZXIuYXBwZW5kKFwidGV4dFwiKTtcbiAgICAgICAgdmFyIGxpbmVFbnRlciA9IHRpY2tFbnRlci5zZWxlY3QoXCJsaW5lXCIpLCBsaW5lVXBkYXRlID0gdGlja1VwZGF0ZS5zZWxlY3QoXCJsaW5lXCIpLCB0ZXh0ID0gdGljay5zZWxlY3QoXCJ0ZXh0XCIpLnRleHQodGlja0Zvcm1hdCksIHRleHRFbnRlciA9IHRpY2tFbnRlci5zZWxlY3QoXCJ0ZXh0XCIpLCB0ZXh0VXBkYXRlID0gdGlja1VwZGF0ZS5zZWxlY3QoXCJ0ZXh0XCIpO1xuICAgICAgICBzd2l0Y2ggKG9yaWVudCkge1xuICAgICAgICAgY2FzZSBcImJvdHRvbVwiOlxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRpY2tUcmFuc2Zvcm0gPSBkM19zdmdfYXhpc1g7XG4gICAgICAgICAgICBsaW5lRW50ZXIuYXR0cihcInkyXCIsIGlubmVyVGlja1NpemUpO1xuICAgICAgICAgICAgdGV4dEVudGVyLmF0dHIoXCJ5XCIsIE1hdGgubWF4KGlubmVyVGlja1NpemUsIDApICsgdGlja1BhZGRpbmcpO1xuICAgICAgICAgICAgbGluZVVwZGF0ZS5hdHRyKFwieDJcIiwgMCkuYXR0cihcInkyXCIsIGlubmVyVGlja1NpemUpO1xuICAgICAgICAgICAgdGV4dFVwZGF0ZS5hdHRyKFwieFwiLCAwKS5hdHRyKFwieVwiLCBNYXRoLm1heChpbm5lclRpY2tTaXplLCAwKSArIHRpY2tQYWRkaW5nKTtcbiAgICAgICAgICAgIHRleHQuYXR0cihcImR5XCIsIFwiLjcxZW1cIikuc3R5bGUoXCJ0ZXh0LWFuY2hvclwiLCBcIm1pZGRsZVwiKTtcbiAgICAgICAgICAgIHBhdGhVcGRhdGUuYXR0cihcImRcIiwgXCJNXCIgKyByYW5nZVswXSArIFwiLFwiICsgb3V0ZXJUaWNrU2l6ZSArIFwiVjBIXCIgKyByYW5nZVsxXSArIFwiVlwiICsgb3V0ZXJUaWNrU2l6ZSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG5cbiAgICAgICAgIGNhc2UgXCJ0b3BcIjpcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0aWNrVHJhbnNmb3JtID0gZDNfc3ZnX2F4aXNYO1xuICAgICAgICAgICAgbGluZUVudGVyLmF0dHIoXCJ5MlwiLCAtaW5uZXJUaWNrU2l6ZSk7XG4gICAgICAgICAgICB0ZXh0RW50ZXIuYXR0cihcInlcIiwgLShNYXRoLm1heChpbm5lclRpY2tTaXplLCAwKSArIHRpY2tQYWRkaW5nKSk7XG4gICAgICAgICAgICBsaW5lVXBkYXRlLmF0dHIoXCJ4MlwiLCAwKS5hdHRyKFwieTJcIiwgLWlubmVyVGlja1NpemUpO1xuICAgICAgICAgICAgdGV4dFVwZGF0ZS5hdHRyKFwieFwiLCAwKS5hdHRyKFwieVwiLCAtKE1hdGgubWF4KGlubmVyVGlja1NpemUsIDApICsgdGlja1BhZGRpbmcpKTtcbiAgICAgICAgICAgIHRleHQuYXR0cihcImR5XCIsIFwiMGVtXCIpLnN0eWxlKFwidGV4dC1hbmNob3JcIiwgXCJtaWRkbGVcIik7XG4gICAgICAgICAgICBwYXRoVXBkYXRlLmF0dHIoXCJkXCIsIFwiTVwiICsgcmFuZ2VbMF0gKyBcIixcIiArIC1vdXRlclRpY2tTaXplICsgXCJWMEhcIiArIHJhbmdlWzFdICsgXCJWXCIgKyAtb3V0ZXJUaWNrU2l6ZSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG5cbiAgICAgICAgIGNhc2UgXCJsZWZ0XCI6XG4gICAgICAgICAge1xuICAgICAgICAgICAgdGlja1RyYW5zZm9ybSA9IGQzX3N2Z19heGlzWTtcbiAgICAgICAgICAgIGxpbmVFbnRlci5hdHRyKFwieDJcIiwgLWlubmVyVGlja1NpemUpO1xuICAgICAgICAgICAgdGV4dEVudGVyLmF0dHIoXCJ4XCIsIC0oTWF0aC5tYXgoaW5uZXJUaWNrU2l6ZSwgMCkgKyB0aWNrUGFkZGluZykpO1xuICAgICAgICAgICAgbGluZVVwZGF0ZS5hdHRyKFwieDJcIiwgLWlubmVyVGlja1NpemUpLmF0dHIoXCJ5MlwiLCAwKTtcbiAgICAgICAgICAgIHRleHRVcGRhdGUuYXR0cihcInhcIiwgLShNYXRoLm1heChpbm5lclRpY2tTaXplLCAwKSArIHRpY2tQYWRkaW5nKSkuYXR0cihcInlcIiwgMCk7XG4gICAgICAgICAgICB0ZXh0LmF0dHIoXCJkeVwiLCBcIi4zMmVtXCIpLnN0eWxlKFwidGV4dC1hbmNob3JcIiwgXCJlbmRcIik7XG4gICAgICAgICAgICBwYXRoVXBkYXRlLmF0dHIoXCJkXCIsIFwiTVwiICsgLW91dGVyVGlja1NpemUgKyBcIixcIiArIHJhbmdlWzBdICsgXCJIMFZcIiArIHJhbmdlWzFdICsgXCJIXCIgKyAtb3V0ZXJUaWNrU2l6ZSk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG5cbiAgICAgICAgIGNhc2UgXCJyaWdodFwiOlxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHRpY2tUcmFuc2Zvcm0gPSBkM19zdmdfYXhpc1k7XG4gICAgICAgICAgICBsaW5lRW50ZXIuYXR0cihcIngyXCIsIGlubmVyVGlja1NpemUpO1xuICAgICAgICAgICAgdGV4dEVudGVyLmF0dHIoXCJ4XCIsIE1hdGgubWF4KGlubmVyVGlja1NpemUsIDApICsgdGlja1BhZGRpbmcpO1xuICAgICAgICAgICAgbGluZVVwZGF0ZS5hdHRyKFwieDJcIiwgaW5uZXJUaWNrU2l6ZSkuYXR0cihcInkyXCIsIDApO1xuICAgICAgICAgICAgdGV4dFVwZGF0ZS5hdHRyKFwieFwiLCBNYXRoLm1heChpbm5lclRpY2tTaXplLCAwKSArIHRpY2tQYWRkaW5nKS5hdHRyKFwieVwiLCAwKTtcbiAgICAgICAgICAgIHRleHQuYXR0cihcImR5XCIsIFwiLjMyZW1cIikuc3R5bGUoXCJ0ZXh0LWFuY2hvclwiLCBcInN0YXJ0XCIpO1xuICAgICAgICAgICAgcGF0aFVwZGF0ZS5hdHRyKFwiZFwiLCBcIk1cIiArIG91dGVyVGlja1NpemUgKyBcIixcIiArIHJhbmdlWzBdICsgXCJIMFZcIiArIHJhbmdlWzFdICsgXCJIXCIgKyBvdXRlclRpY2tTaXplKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoc2NhbGUxLnJhbmdlQmFuZCkge1xuICAgICAgICAgIHZhciB4ID0gc2NhbGUxLCBkeCA9IHgucmFuZ2VCYW5kKCkgLyAyO1xuICAgICAgICAgIHNjYWxlMCA9IHNjYWxlMSA9IGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgIHJldHVybiB4KGQpICsgZHg7XG4gICAgICAgICAgfTtcbiAgICAgICAgfSBlbHNlIGlmIChzY2FsZTAucmFuZ2VCYW5kKSB7XG4gICAgICAgICAgc2NhbGUwID0gc2NhbGUxO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRpY2tFeGl0LmNhbGwodGlja1RyYW5zZm9ybSwgc2NhbGUxKTtcbiAgICAgICAgfVxuICAgICAgICB0aWNrRW50ZXIuY2FsbCh0aWNrVHJhbnNmb3JtLCBzY2FsZTApO1xuICAgICAgICB0aWNrVXBkYXRlLmNhbGwodGlja1RyYW5zZm9ybSwgc2NhbGUxKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICBheGlzLnNjYWxlID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gc2NhbGU7XG4gICAgICBzY2FsZSA9IHg7XG4gICAgICByZXR1cm4gYXhpcztcbiAgICB9O1xuICAgIGF4aXMub3JpZW50ID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gb3JpZW50O1xuICAgICAgb3JpZW50ID0geCBpbiBkM19zdmdfYXhpc09yaWVudHMgPyB4ICsgXCJcIiA6IGQzX3N2Z19heGlzRGVmYXVsdE9yaWVudDtcbiAgICAgIHJldHVybiBheGlzO1xuICAgIH07XG4gICAgYXhpcy50aWNrcyA9IGZ1bmN0aW9uKCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdGlja0FyZ3VtZW50c187XG4gICAgICB0aWNrQXJndW1lbnRzXyA9IGFyZ3VtZW50cztcbiAgICAgIHJldHVybiBheGlzO1xuICAgIH07XG4gICAgYXhpcy50aWNrVmFsdWVzID0gZnVuY3Rpb24oeCkge1xuICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gdGlja1ZhbHVlcztcbiAgICAgIHRpY2tWYWx1ZXMgPSB4O1xuICAgICAgcmV0dXJuIGF4aXM7XG4gICAgfTtcbiAgICBheGlzLnRpY2tGb3JtYXQgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB0aWNrRm9ybWF0XztcbiAgICAgIHRpY2tGb3JtYXRfID0geDtcbiAgICAgIHJldHVybiBheGlzO1xuICAgIH07XG4gICAgYXhpcy50aWNrU2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIHZhciBuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgIGlmICghbikgcmV0dXJuIGlubmVyVGlja1NpemU7XG4gICAgICBpbm5lclRpY2tTaXplID0gK3g7XG4gICAgICBvdXRlclRpY2tTaXplID0gK2FyZ3VtZW50c1tuIC0gMV07XG4gICAgICByZXR1cm4gYXhpcztcbiAgICB9O1xuICAgIGF4aXMuaW5uZXJUaWNrU2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGlubmVyVGlja1NpemU7XG4gICAgICBpbm5lclRpY2tTaXplID0gK3g7XG4gICAgICByZXR1cm4gYXhpcztcbiAgICB9O1xuICAgIGF4aXMub3V0ZXJUaWNrU2l6ZSA9IGZ1bmN0aW9uKHgpIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIG91dGVyVGlja1NpemU7XG4gICAgICBvdXRlclRpY2tTaXplID0gK3g7XG4gICAgICByZXR1cm4gYXhpcztcbiAgICB9O1xuICAgIGF4aXMudGlja1BhZGRpbmcgPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB0aWNrUGFkZGluZztcbiAgICAgIHRpY2tQYWRkaW5nID0gK3g7XG4gICAgICByZXR1cm4gYXhpcztcbiAgICB9O1xuICAgIGF4aXMudGlja1N1YmRpdmlkZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggJiYgYXhpcztcbiAgICB9O1xuICAgIHJldHVybiBheGlzO1xuICB9O1xuICB2YXIgZDNfc3ZnX2F4aXNEZWZhdWx0T3JpZW50ID0gXCJib3R0b21cIiwgZDNfc3ZnX2F4aXNPcmllbnRzID0ge1xuICAgIHRvcDogMSxcbiAgICByaWdodDogMSxcbiAgICBib3R0b206IDEsXG4gICAgbGVmdDogMVxuICB9O1xuICBmdW5jdGlvbiBkM19zdmdfYXhpc1goc2VsZWN0aW9uLCB4KSB7XG4gICAgc2VsZWN0aW9uLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgZnVuY3Rpb24oZCkge1xuICAgICAgcmV0dXJuIFwidHJhbnNsYXRlKFwiICsgeChkKSArIFwiLDApXCI7XG4gICAgfSk7XG4gIH1cbiAgZnVuY3Rpb24gZDNfc3ZnX2F4aXNZKHNlbGVjdGlvbiwgeSkge1xuICAgIHNlbGVjdGlvbi5hdHRyKFwidHJhbnNmb3JtXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICAgIHJldHVybiBcInRyYW5zbGF0ZSgwLFwiICsgeShkKSArIFwiKVwiO1xuICAgIH0pO1xuICB9XG4gIGQzLnN2Zy5icnVzaCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBldmVudCA9IGQzX2V2ZW50RGlzcGF0Y2goYnJ1c2gsIFwiYnJ1c2hzdGFydFwiLCBcImJydXNoXCIsIFwiYnJ1c2hlbmRcIiksIHggPSBudWxsLCB5ID0gbnVsbCwgeEV4dGVudCA9IFsgMCwgMCBdLCB5RXh0ZW50ID0gWyAwLCAwIF0sIHhFeHRlbnREb21haW4sIHlFeHRlbnREb21haW4sIHhDbGFtcCA9IHRydWUsIHlDbGFtcCA9IHRydWUsIHJlc2l6ZXMgPSBkM19zdmdfYnJ1c2hSZXNpemVzWzBdO1xuICAgIGZ1bmN0aW9uIGJydXNoKGcpIHtcbiAgICAgIGcuZWFjaChmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIGcgPSBkMy5zZWxlY3QodGhpcykuc3R5bGUoXCJwb2ludGVyLWV2ZW50c1wiLCBcImFsbFwiKS5zdHlsZShcIi13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvclwiLCBcInJnYmEoMCwwLDAsMClcIikub24oXCJtb3VzZWRvd24uYnJ1c2hcIiwgYnJ1c2hzdGFydCkub24oXCJ0b3VjaHN0YXJ0LmJydXNoXCIsIGJydXNoc3RhcnQpO1xuICAgICAgICB2YXIgYmFja2dyb3VuZCA9IGcuc2VsZWN0QWxsKFwiLmJhY2tncm91bmRcIikuZGF0YShbIDAgXSk7XG4gICAgICAgIGJhY2tncm91bmQuZW50ZXIoKS5hcHBlbmQoXCJyZWN0XCIpLmF0dHIoXCJjbGFzc1wiLCBcImJhY2tncm91bmRcIikuc3R5bGUoXCJ2aXNpYmlsaXR5XCIsIFwiaGlkZGVuXCIpLnN0eWxlKFwiY3Vyc29yXCIsIFwiY3Jvc3NoYWlyXCIpO1xuICAgICAgICBnLnNlbGVjdEFsbChcIi5leHRlbnRcIikuZGF0YShbIDAgXSkuZW50ZXIoKS5hcHBlbmQoXCJyZWN0XCIpLmF0dHIoXCJjbGFzc1wiLCBcImV4dGVudFwiKS5zdHlsZShcImN1cnNvclwiLCBcIm1vdmVcIik7XG4gICAgICAgIHZhciByZXNpemUgPSBnLnNlbGVjdEFsbChcIi5yZXNpemVcIikuZGF0YShyZXNpemVzLCBkM19pZGVudGl0eSk7XG4gICAgICAgIHJlc2l6ZS5leGl0KCkucmVtb3ZlKCk7XG4gICAgICAgIHJlc2l6ZS5lbnRlcigpLmFwcGVuZChcImdcIikuYXR0cihcImNsYXNzXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICByZXR1cm4gXCJyZXNpemUgXCIgKyBkO1xuICAgICAgICB9KS5zdHlsZShcImN1cnNvclwiLCBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgcmV0dXJuIGQzX3N2Z19icnVzaEN1cnNvcltkXTtcbiAgICAgICAgfSkuYXBwZW5kKFwicmVjdFwiKS5hdHRyKFwieFwiLCBmdW5jdGlvbihkKSB7XG4gICAgICAgICAgcmV0dXJuIC9bZXddJC8udGVzdChkKSA/IC0zIDogbnVsbDtcbiAgICAgICAgfSkuYXR0cihcInlcIiwgZnVuY3Rpb24oZCkge1xuICAgICAgICAgIHJldHVybiAvXltuc10vLnRlc3QoZCkgPyAtMyA6IG51bGw7XG4gICAgICAgIH0pLmF0dHIoXCJ3aWR0aFwiLCA2KS5hdHRyKFwiaGVpZ2h0XCIsIDYpLnN0eWxlKFwidmlzaWJpbGl0eVwiLCBcImhpZGRlblwiKTtcbiAgICAgICAgcmVzaXplLnN0eWxlKFwiZGlzcGxheVwiLCBicnVzaC5lbXB0eSgpID8gXCJub25lXCIgOiBudWxsKTtcbiAgICAgICAgdmFyIGdVcGRhdGUgPSBkMy50cmFuc2l0aW9uKGcpLCBiYWNrZ3JvdW5kVXBkYXRlID0gZDMudHJhbnNpdGlvbihiYWNrZ3JvdW5kKSwgcmFuZ2U7XG4gICAgICAgIGlmICh4KSB7XG4gICAgICAgICAgcmFuZ2UgPSBkM19zY2FsZVJhbmdlKHgpO1xuICAgICAgICAgIGJhY2tncm91bmRVcGRhdGUuYXR0cihcInhcIiwgcmFuZ2VbMF0pLmF0dHIoXCJ3aWR0aFwiLCByYW5nZVsxXSAtIHJhbmdlWzBdKTtcbiAgICAgICAgICByZWRyYXdYKGdVcGRhdGUpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh5KSB7XG4gICAgICAgICAgcmFuZ2UgPSBkM19zY2FsZVJhbmdlKHkpO1xuICAgICAgICAgIGJhY2tncm91bmRVcGRhdGUuYXR0cihcInlcIiwgcmFuZ2VbMF0pLmF0dHIoXCJoZWlnaHRcIiwgcmFuZ2VbMV0gLSByYW5nZVswXSk7XG4gICAgICAgICAgcmVkcmF3WShnVXBkYXRlKTtcbiAgICAgICAgfVxuICAgICAgICByZWRyYXcoZ1VwZGF0ZSk7XG4gICAgICB9KTtcbiAgICB9XG4gICAgYnJ1c2guZXZlbnQgPSBmdW5jdGlvbihnKSB7XG4gICAgICBnLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBldmVudF8gPSBldmVudC5vZih0aGlzLCBhcmd1bWVudHMpLCBleHRlbnQxID0ge1xuICAgICAgICAgIHg6IHhFeHRlbnQsXG4gICAgICAgICAgeTogeUV4dGVudCxcbiAgICAgICAgICBpOiB4RXh0ZW50RG9tYWluLFxuICAgICAgICAgIGo6IHlFeHRlbnREb21haW5cbiAgICAgICAgfSwgZXh0ZW50MCA9IHRoaXMuX19jaGFydF9fIHx8IGV4dGVudDE7XG4gICAgICAgIHRoaXMuX19jaGFydF9fID0gZXh0ZW50MTtcbiAgICAgICAgaWYgKGQzX3RyYW5zaXRpb25Jbmhlcml0SWQpIHtcbiAgICAgICAgICBkMy5zZWxlY3QodGhpcykudHJhbnNpdGlvbigpLmVhY2goXCJzdGFydC5icnVzaFwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHhFeHRlbnREb21haW4gPSBleHRlbnQwLmk7XG4gICAgICAgICAgICB5RXh0ZW50RG9tYWluID0gZXh0ZW50MC5qO1xuICAgICAgICAgICAgeEV4dGVudCA9IGV4dGVudDAueDtcbiAgICAgICAgICAgIHlFeHRlbnQgPSBleHRlbnQwLnk7XG4gICAgICAgICAgICBldmVudF8oe1xuICAgICAgICAgICAgICB0eXBlOiBcImJydXNoc3RhcnRcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSkudHdlZW4oXCJicnVzaDpicnVzaFwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciB4aSA9IGQzX2ludGVycG9sYXRlQXJyYXkoeEV4dGVudCwgZXh0ZW50MS54KSwgeWkgPSBkM19pbnRlcnBvbGF0ZUFycmF5KHlFeHRlbnQsIGV4dGVudDEueSk7XG4gICAgICAgICAgICB4RXh0ZW50RG9tYWluID0geUV4dGVudERvbWFpbiA9IG51bGw7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24odCkge1xuICAgICAgICAgICAgICB4RXh0ZW50ID0gZXh0ZW50MS54ID0geGkodCk7XG4gICAgICAgICAgICAgIHlFeHRlbnQgPSBleHRlbnQxLnkgPSB5aSh0KTtcbiAgICAgICAgICAgICAgZXZlbnRfKHtcbiAgICAgICAgICAgICAgICB0eXBlOiBcImJydXNoXCIsXG4gICAgICAgICAgICAgICAgbW9kZTogXCJyZXNpemVcIlxuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfSkuZWFjaChcImVuZC5icnVzaFwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHhFeHRlbnREb21haW4gPSBleHRlbnQxLmk7XG4gICAgICAgICAgICB5RXh0ZW50RG9tYWluID0gZXh0ZW50MS5qO1xuICAgICAgICAgICAgZXZlbnRfKHtcbiAgICAgICAgICAgICAgdHlwZTogXCJicnVzaFwiLFxuICAgICAgICAgICAgICBtb2RlOiBcInJlc2l6ZVwiXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGV2ZW50Xyh7XG4gICAgICAgICAgICAgIHR5cGU6IFwiYnJ1c2hlbmRcIlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZXZlbnRfKHtcbiAgICAgICAgICAgIHR5cGU6IFwiYnJ1c2hzdGFydFwiXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgZXZlbnRfKHtcbiAgICAgICAgICAgIHR5cGU6IFwiYnJ1c2hcIixcbiAgICAgICAgICAgIG1vZGU6IFwicmVzaXplXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBldmVudF8oe1xuICAgICAgICAgICAgdHlwZTogXCJicnVzaGVuZFwiXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH07XG4gICAgZnVuY3Rpb24gcmVkcmF3KGcpIHtcbiAgICAgIGcuc2VsZWN0QWxsKFwiLnJlc2l6ZVwiKS5hdHRyKFwidHJhbnNmb3JtXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgcmV0dXJuIFwidHJhbnNsYXRlKFwiICsgeEV4dGVudFsrL2UkLy50ZXN0KGQpXSArIFwiLFwiICsgeUV4dGVudFsrL15zLy50ZXN0KGQpXSArIFwiKVwiO1xuICAgICAgfSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJlZHJhd1goZykge1xuICAgICAgZy5zZWxlY3QoXCIuZXh0ZW50XCIpLmF0dHIoXCJ4XCIsIHhFeHRlbnRbMF0pO1xuICAgICAgZy5zZWxlY3RBbGwoXCIuZXh0ZW50LC5uPnJlY3QsLnM+cmVjdFwiKS5hdHRyKFwid2lkdGhcIiwgeEV4dGVudFsxXSAtIHhFeHRlbnRbMF0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiByZWRyYXdZKGcpIHtcbiAgICAgIGcuc2VsZWN0KFwiLmV4dGVudFwiKS5hdHRyKFwieVwiLCB5RXh0ZW50WzBdKTtcbiAgICAgIGcuc2VsZWN0QWxsKFwiLmV4dGVudCwuZT5yZWN0LC53PnJlY3RcIikuYXR0cihcImhlaWdodFwiLCB5RXh0ZW50WzFdIC0geUV4dGVudFswXSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGJydXNoc3RhcnQoKSB7XG4gICAgICB2YXIgdGFyZ2V0ID0gdGhpcywgZXZlbnRUYXJnZXQgPSBkMy5zZWxlY3QoZDMuZXZlbnQudGFyZ2V0KSwgZXZlbnRfID0gZXZlbnQub2YodGFyZ2V0LCBhcmd1bWVudHMpLCBnID0gZDMuc2VsZWN0KHRhcmdldCksIHJlc2l6aW5nID0gZXZlbnRUYXJnZXQuZGF0dW0oKSwgcmVzaXppbmdYID0gIS9eKG58cykkLy50ZXN0KHJlc2l6aW5nKSAmJiB4LCByZXNpemluZ1kgPSAhL14oZXx3KSQvLnRlc3QocmVzaXppbmcpICYmIHksIGRyYWdnaW5nID0gZXZlbnRUYXJnZXQuY2xhc3NlZChcImV4dGVudFwiKSwgZHJhZ1Jlc3RvcmUgPSBkM19ldmVudF9kcmFnU3VwcHJlc3MoKSwgY2VudGVyLCBvcmlnaW4gPSBkMy5tb3VzZSh0YXJnZXQpLCBvZmZzZXQ7XG4gICAgICB2YXIgdyA9IGQzLnNlbGVjdChkM193aW5kb3cpLm9uKFwia2V5ZG93bi5icnVzaFwiLCBrZXlkb3duKS5vbihcImtleXVwLmJydXNoXCIsIGtleXVwKTtcbiAgICAgIGlmIChkMy5ldmVudC5jaGFuZ2VkVG91Y2hlcykge1xuICAgICAgICB3Lm9uKFwidG91Y2htb3ZlLmJydXNoXCIsIGJydXNobW92ZSkub24oXCJ0b3VjaGVuZC5icnVzaFwiLCBicnVzaGVuZCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3Lm9uKFwibW91c2Vtb3ZlLmJydXNoXCIsIGJydXNobW92ZSkub24oXCJtb3VzZXVwLmJydXNoXCIsIGJydXNoZW5kKTtcbiAgICAgIH1cbiAgICAgIGcuaW50ZXJydXB0KCkuc2VsZWN0QWxsKFwiKlwiKS5pbnRlcnJ1cHQoKTtcbiAgICAgIGlmIChkcmFnZ2luZykge1xuICAgICAgICBvcmlnaW5bMF0gPSB4RXh0ZW50WzBdIC0gb3JpZ2luWzBdO1xuICAgICAgICBvcmlnaW5bMV0gPSB5RXh0ZW50WzBdIC0gb3JpZ2luWzFdO1xuICAgICAgfSBlbHNlIGlmIChyZXNpemluZykge1xuICAgICAgICB2YXIgZXggPSArL3ckLy50ZXN0KHJlc2l6aW5nKSwgZXkgPSArL15uLy50ZXN0KHJlc2l6aW5nKTtcbiAgICAgICAgb2Zmc2V0ID0gWyB4RXh0ZW50WzEgLSBleF0gLSBvcmlnaW5bMF0sIHlFeHRlbnRbMSAtIGV5XSAtIG9yaWdpblsxXSBdO1xuICAgICAgICBvcmlnaW5bMF0gPSB4RXh0ZW50W2V4XTtcbiAgICAgICAgb3JpZ2luWzFdID0geUV4dGVudFtleV07XG4gICAgICB9IGVsc2UgaWYgKGQzLmV2ZW50LmFsdEtleSkgY2VudGVyID0gb3JpZ2luLnNsaWNlKCk7XG4gICAgICBnLnN0eWxlKFwicG9pbnRlci1ldmVudHNcIiwgXCJub25lXCIpLnNlbGVjdEFsbChcIi5yZXNpemVcIikuc3R5bGUoXCJkaXNwbGF5XCIsIG51bGwpO1xuICAgICAgZDMuc2VsZWN0KFwiYm9keVwiKS5zdHlsZShcImN1cnNvclwiLCBldmVudFRhcmdldC5zdHlsZShcImN1cnNvclwiKSk7XG4gICAgICBldmVudF8oe1xuICAgICAgICB0eXBlOiBcImJydXNoc3RhcnRcIlxuICAgICAgfSk7XG4gICAgICBicnVzaG1vdmUoKTtcbiAgICAgIGZ1bmN0aW9uIGtleWRvd24oKSB7XG4gICAgICAgIGlmIChkMy5ldmVudC5rZXlDb2RlID09IDMyKSB7XG4gICAgICAgICAgaWYgKCFkcmFnZ2luZykge1xuICAgICAgICAgICAgY2VudGVyID0gbnVsbDtcbiAgICAgICAgICAgIG9yaWdpblswXSAtPSB4RXh0ZW50WzFdO1xuICAgICAgICAgICAgb3JpZ2luWzFdIC09IHlFeHRlbnRbMV07XG4gICAgICAgICAgICBkcmFnZ2luZyA9IDI7XG4gICAgICAgICAgfVxuICAgICAgICAgIGQzX2V2ZW50UHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZnVuY3Rpb24ga2V5dXAoKSB7XG4gICAgICAgIGlmIChkMy5ldmVudC5rZXlDb2RlID09IDMyICYmIGRyYWdnaW5nID09IDIpIHtcbiAgICAgICAgICBvcmlnaW5bMF0gKz0geEV4dGVudFsxXTtcbiAgICAgICAgICBvcmlnaW5bMV0gKz0geUV4dGVudFsxXTtcbiAgICAgICAgICBkcmFnZ2luZyA9IDA7XG4gICAgICAgICAgZDNfZXZlbnRQcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBicnVzaG1vdmUoKSB7XG4gICAgICAgIHZhciBwb2ludCA9IGQzLm1vdXNlKHRhcmdldCksIG1vdmVkID0gZmFsc2U7XG4gICAgICAgIGlmIChvZmZzZXQpIHtcbiAgICAgICAgICBwb2ludFswXSArPSBvZmZzZXRbMF07XG4gICAgICAgICAgcG9pbnRbMV0gKz0gb2Zmc2V0WzFdO1xuICAgICAgICB9XG4gICAgICAgIGlmICghZHJhZ2dpbmcpIHtcbiAgICAgICAgICBpZiAoZDMuZXZlbnQuYWx0S2V5KSB7XG4gICAgICAgICAgICBpZiAoIWNlbnRlcikgY2VudGVyID0gWyAoeEV4dGVudFswXSArIHhFeHRlbnRbMV0pIC8gMiwgKHlFeHRlbnRbMF0gKyB5RXh0ZW50WzFdKSAvIDIgXTtcbiAgICAgICAgICAgIG9yaWdpblswXSA9IHhFeHRlbnRbKyhwb2ludFswXSA8IGNlbnRlclswXSldO1xuICAgICAgICAgICAgb3JpZ2luWzFdID0geUV4dGVudFsrKHBvaW50WzFdIDwgY2VudGVyWzFdKV07XG4gICAgICAgICAgfSBlbHNlIGNlbnRlciA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlc2l6aW5nWCAmJiBtb3ZlMShwb2ludCwgeCwgMCkpIHtcbiAgICAgICAgICByZWRyYXdYKGcpO1xuICAgICAgICAgIG1vdmVkID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocmVzaXppbmdZICYmIG1vdmUxKHBvaW50LCB5LCAxKSkge1xuICAgICAgICAgIHJlZHJhd1koZyk7XG4gICAgICAgICAgbW92ZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChtb3ZlZCkge1xuICAgICAgICAgIHJlZHJhdyhnKTtcbiAgICAgICAgICBldmVudF8oe1xuICAgICAgICAgICAgdHlwZTogXCJicnVzaFwiLFxuICAgICAgICAgICAgbW9kZTogZHJhZ2dpbmcgPyBcIm1vdmVcIiA6IFwicmVzaXplXCJcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZnVuY3Rpb24gbW92ZTEocG9pbnQsIHNjYWxlLCBpKSB7XG4gICAgICAgIHZhciByYW5nZSA9IGQzX3NjYWxlUmFuZ2Uoc2NhbGUpLCByMCA9IHJhbmdlWzBdLCByMSA9IHJhbmdlWzFdLCBwb3NpdGlvbiA9IG9yaWdpbltpXSwgZXh0ZW50ID0gaSA/IHlFeHRlbnQgOiB4RXh0ZW50LCBzaXplID0gZXh0ZW50WzFdIC0gZXh0ZW50WzBdLCBtaW4sIG1heDtcbiAgICAgICAgaWYgKGRyYWdnaW5nKSB7XG4gICAgICAgICAgcjAgLT0gcG9zaXRpb247XG4gICAgICAgICAgcjEgLT0gc2l6ZSArIHBvc2l0aW9uO1xuICAgICAgICB9XG4gICAgICAgIG1pbiA9IChpID8geUNsYW1wIDogeENsYW1wKSA/IE1hdGgubWF4KHIwLCBNYXRoLm1pbihyMSwgcG9pbnRbaV0pKSA6IHBvaW50W2ldO1xuICAgICAgICBpZiAoZHJhZ2dpbmcpIHtcbiAgICAgICAgICBtYXggPSAobWluICs9IHBvc2l0aW9uKSArIHNpemU7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaWYgKGNlbnRlcikgcG9zaXRpb24gPSBNYXRoLm1heChyMCwgTWF0aC5taW4ocjEsIDIgKiBjZW50ZXJbaV0gLSBtaW4pKTtcbiAgICAgICAgICBpZiAocG9zaXRpb24gPCBtaW4pIHtcbiAgICAgICAgICAgIG1heCA9IG1pbjtcbiAgICAgICAgICAgIG1pbiA9IHBvc2l0aW9uO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBtYXggPSBwb3NpdGlvbjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGV4dGVudFswXSAhPSBtaW4gfHwgZXh0ZW50WzFdICE9IG1heCkge1xuICAgICAgICAgIGlmIChpKSB5RXh0ZW50RG9tYWluID0gbnVsbDsgZWxzZSB4RXh0ZW50RG9tYWluID0gbnVsbDtcbiAgICAgICAgICBleHRlbnRbMF0gPSBtaW47XG4gICAgICAgICAgZXh0ZW50WzFdID0gbWF4O1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBicnVzaGVuZCgpIHtcbiAgICAgICAgYnJ1c2htb3ZlKCk7XG4gICAgICAgIGcuc3R5bGUoXCJwb2ludGVyLWV2ZW50c1wiLCBcImFsbFwiKS5zZWxlY3RBbGwoXCIucmVzaXplXCIpLnN0eWxlKFwiZGlzcGxheVwiLCBicnVzaC5lbXB0eSgpID8gXCJub25lXCIgOiBudWxsKTtcbiAgICAgICAgZDMuc2VsZWN0KFwiYm9keVwiKS5zdHlsZShcImN1cnNvclwiLCBudWxsKTtcbiAgICAgICAgdy5vbihcIm1vdXNlbW92ZS5icnVzaFwiLCBudWxsKS5vbihcIm1vdXNldXAuYnJ1c2hcIiwgbnVsbCkub24oXCJ0b3VjaG1vdmUuYnJ1c2hcIiwgbnVsbCkub24oXCJ0b3VjaGVuZC5icnVzaFwiLCBudWxsKS5vbihcImtleWRvd24uYnJ1c2hcIiwgbnVsbCkub24oXCJrZXl1cC5icnVzaFwiLCBudWxsKTtcbiAgICAgICAgZHJhZ1Jlc3RvcmUoKTtcbiAgICAgICAgZXZlbnRfKHtcbiAgICAgICAgICB0eXBlOiBcImJydXNoZW5kXCJcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICAgIGJydXNoLnggPSBmdW5jdGlvbih6KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiB4O1xuICAgICAgeCA9IHo7XG4gICAgICByZXNpemVzID0gZDNfc3ZnX2JydXNoUmVzaXplc1sheCA8PCAxIHwgIXldO1xuICAgICAgcmV0dXJuIGJydXNoO1xuICAgIH07XG4gICAgYnJ1c2gueSA9IGZ1bmN0aW9uKHopIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHk7XG4gICAgICB5ID0gejtcbiAgICAgIHJlc2l6ZXMgPSBkM19zdmdfYnJ1c2hSZXNpemVzWyF4IDw8IDEgfCAheV07XG4gICAgICByZXR1cm4gYnJ1c2g7XG4gICAgfTtcbiAgICBicnVzaC5jbGFtcCA9IGZ1bmN0aW9uKHopIHtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHggJiYgeSA/IFsgeENsYW1wLCB5Q2xhbXAgXSA6IHggPyB4Q2xhbXAgOiB5ID8geUNsYW1wIDogbnVsbDtcbiAgICAgIGlmICh4ICYmIHkpIHhDbGFtcCA9ICEhelswXSwgeUNsYW1wID0gISF6WzFdOyBlbHNlIGlmICh4KSB4Q2xhbXAgPSAhIXo7IGVsc2UgaWYgKHkpIHlDbGFtcCA9ICEhejtcbiAgICAgIHJldHVybiBicnVzaDtcbiAgICB9O1xuICAgIGJydXNoLmV4dGVudCA9IGZ1bmN0aW9uKHopIHtcbiAgICAgIHZhciB4MCwgeDEsIHkwLCB5MSwgdDtcbiAgICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkge1xuICAgICAgICBpZiAoeCkge1xuICAgICAgICAgIGlmICh4RXh0ZW50RG9tYWluKSB7XG4gICAgICAgICAgICB4MCA9IHhFeHRlbnREb21haW5bMF0sIHgxID0geEV4dGVudERvbWFpblsxXTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgeDAgPSB4RXh0ZW50WzBdLCB4MSA9IHhFeHRlbnRbMV07XG4gICAgICAgICAgICBpZiAoeC5pbnZlcnQpIHgwID0geC5pbnZlcnQoeDApLCB4MSA9IHguaW52ZXJ0KHgxKTtcbiAgICAgICAgICAgIGlmICh4MSA8IHgwKSB0ID0geDAsIHgwID0geDEsIHgxID0gdDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHkpIHtcbiAgICAgICAgICBpZiAoeUV4dGVudERvbWFpbikge1xuICAgICAgICAgICAgeTAgPSB5RXh0ZW50RG9tYWluWzBdLCB5MSA9IHlFeHRlbnREb21haW5bMV07XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHkwID0geUV4dGVudFswXSwgeTEgPSB5RXh0ZW50WzFdO1xuICAgICAgICAgICAgaWYgKHkuaW52ZXJ0KSB5MCA9IHkuaW52ZXJ0KHkwKSwgeTEgPSB5LmludmVydCh5MSk7XG4gICAgICAgICAgICBpZiAoeTEgPCB5MCkgdCA9IHkwLCB5MCA9IHkxLCB5MSA9IHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB4ICYmIHkgPyBbIFsgeDAsIHkwIF0sIFsgeDEsIHkxIF0gXSA6IHggPyBbIHgwLCB4MSBdIDogeSAmJiBbIHkwLCB5MSBdO1xuICAgICAgfVxuICAgICAgaWYgKHgpIHtcbiAgICAgICAgeDAgPSB6WzBdLCB4MSA9IHpbMV07XG4gICAgICAgIGlmICh5KSB4MCA9IHgwWzBdLCB4MSA9IHgxWzBdO1xuICAgICAgICB4RXh0ZW50RG9tYWluID0gWyB4MCwgeDEgXTtcbiAgICAgICAgaWYgKHguaW52ZXJ0KSB4MCA9IHgoeDApLCB4MSA9IHgoeDEpO1xuICAgICAgICBpZiAoeDEgPCB4MCkgdCA9IHgwLCB4MCA9IHgxLCB4MSA9IHQ7XG4gICAgICAgIGlmICh4MCAhPSB4RXh0ZW50WzBdIHx8IHgxICE9IHhFeHRlbnRbMV0pIHhFeHRlbnQgPSBbIHgwLCB4MSBdO1xuICAgICAgfVxuICAgICAgaWYgKHkpIHtcbiAgICAgICAgeTAgPSB6WzBdLCB5MSA9IHpbMV07XG4gICAgICAgIGlmICh4KSB5MCA9IHkwWzFdLCB5MSA9IHkxWzFdO1xuICAgICAgICB5RXh0ZW50RG9tYWluID0gWyB5MCwgeTEgXTtcbiAgICAgICAgaWYgKHkuaW52ZXJ0KSB5MCA9IHkoeTApLCB5MSA9IHkoeTEpO1xuICAgICAgICBpZiAoeTEgPCB5MCkgdCA9IHkwLCB5MCA9IHkxLCB5MSA9IHQ7XG4gICAgICAgIGlmICh5MCAhPSB5RXh0ZW50WzBdIHx8IHkxICE9IHlFeHRlbnRbMV0pIHlFeHRlbnQgPSBbIHkwLCB5MSBdO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGJydXNoO1xuICAgIH07XG4gICAgYnJ1c2guY2xlYXIgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmICghYnJ1c2guZW1wdHkoKSkge1xuICAgICAgICB4RXh0ZW50ID0gWyAwLCAwIF0sIHlFeHRlbnQgPSBbIDAsIDAgXTtcbiAgICAgICAgeEV4dGVudERvbWFpbiA9IHlFeHRlbnREb21haW4gPSBudWxsO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGJydXNoO1xuICAgIH07XG4gICAgYnJ1c2guZW1wdHkgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiAhIXggJiYgeEV4dGVudFswXSA9PSB4RXh0ZW50WzFdIHx8ICEheSAmJiB5RXh0ZW50WzBdID09IHlFeHRlbnRbMV07XG4gICAgfTtcbiAgICByZXR1cm4gZDMucmViaW5kKGJydXNoLCBldmVudCwgXCJvblwiKTtcbiAgfTtcbiAgdmFyIGQzX3N2Z19icnVzaEN1cnNvciA9IHtcbiAgICBuOiBcIm5zLXJlc2l6ZVwiLFxuICAgIGU6IFwiZXctcmVzaXplXCIsXG4gICAgczogXCJucy1yZXNpemVcIixcbiAgICB3OiBcImV3LXJlc2l6ZVwiLFxuICAgIG53OiBcIm53c2UtcmVzaXplXCIsXG4gICAgbmU6IFwibmVzdy1yZXNpemVcIixcbiAgICBzZTogXCJud3NlLXJlc2l6ZVwiLFxuICAgIHN3OiBcIm5lc3ctcmVzaXplXCJcbiAgfTtcbiAgdmFyIGQzX3N2Z19icnVzaFJlc2l6ZXMgPSBbIFsgXCJuXCIsIFwiZVwiLCBcInNcIiwgXCJ3XCIsIFwibndcIiwgXCJuZVwiLCBcInNlXCIsIFwic3dcIiBdLCBbIFwiZVwiLCBcIndcIiBdLCBbIFwiblwiLCBcInNcIiBdLCBbXSBdO1xuICB2YXIgZDNfdGltZV9mb3JtYXQgPSBkM190aW1lLmZvcm1hdCA9IGQzX2xvY2FsZV9lblVTLnRpbWVGb3JtYXQ7XG4gIHZhciBkM190aW1lX2Zvcm1hdFV0YyA9IGQzX3RpbWVfZm9ybWF0LnV0YztcbiAgdmFyIGQzX3RpbWVfZm9ybWF0SXNvID0gZDNfdGltZV9mb3JtYXRVdGMoXCIlWS0lbS0lZFQlSDolTTolUy4lTFpcIik7XG4gIGQzX3RpbWVfZm9ybWF0LmlzbyA9IERhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nICYmICtuZXcgRGF0ZShcIjIwMDAtMDEtMDFUMDA6MDA6MDAuMDAwWlwiKSA/IGQzX3RpbWVfZm9ybWF0SXNvTmF0aXZlIDogZDNfdGltZV9mb3JtYXRJc287XG4gIGZ1bmN0aW9uIGQzX3RpbWVfZm9ybWF0SXNvTmF0aXZlKGRhdGUpIHtcbiAgICByZXR1cm4gZGF0ZS50b0lTT1N0cmluZygpO1xuICB9XG4gIGQzX3RpbWVfZm9ybWF0SXNvTmF0aXZlLnBhcnNlID0gZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgdmFyIGRhdGUgPSBuZXcgRGF0ZShzdHJpbmcpO1xuICAgIHJldHVybiBpc05hTihkYXRlKSA/IG51bGwgOiBkYXRlO1xuICB9O1xuICBkM190aW1lX2Zvcm1hdElzb05hdGl2ZS50b1N0cmluZyA9IGQzX3RpbWVfZm9ybWF0SXNvLnRvU3RyaW5nO1xuICBkM190aW1lLnNlY29uZCA9IGQzX3RpbWVfaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgIHJldHVybiBuZXcgZDNfZGF0ZShNYXRoLmZsb29yKGRhdGUgLyAxZTMpICogMWUzKTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSwgb2Zmc2V0KSB7XG4gICAgZGF0ZS5zZXRUaW1lKGRhdGUuZ2V0VGltZSgpICsgTWF0aC5mbG9vcihvZmZzZXQpICogMWUzKTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSkge1xuICAgIHJldHVybiBkYXRlLmdldFNlY29uZHMoKTtcbiAgfSk7XG4gIGQzX3RpbWUuc2Vjb25kcyA9IGQzX3RpbWUuc2Vjb25kLnJhbmdlO1xuICBkM190aW1lLnNlY29uZHMudXRjID0gZDNfdGltZS5zZWNvbmQudXRjLnJhbmdlO1xuICBkM190aW1lLm1pbnV0ZSA9IGQzX3RpbWVfaW50ZXJ2YWwoZnVuY3Rpb24oZGF0ZSkge1xuICAgIHJldHVybiBuZXcgZDNfZGF0ZShNYXRoLmZsb29yKGRhdGUgLyA2ZTQpICogNmU0KTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSwgb2Zmc2V0KSB7XG4gICAgZGF0ZS5zZXRUaW1lKGRhdGUuZ2V0VGltZSgpICsgTWF0aC5mbG9vcihvZmZzZXQpICogNmU0KTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSkge1xuICAgIHJldHVybiBkYXRlLmdldE1pbnV0ZXMoKTtcbiAgfSk7XG4gIGQzX3RpbWUubWludXRlcyA9IGQzX3RpbWUubWludXRlLnJhbmdlO1xuICBkM190aW1lLm1pbnV0ZXMudXRjID0gZDNfdGltZS5taW51dGUudXRjLnJhbmdlO1xuICBkM190aW1lLmhvdXIgPSBkM190aW1lX2ludGVydmFsKGZ1bmN0aW9uKGRhdGUpIHtcbiAgICB2YXIgdGltZXpvbmUgPSBkYXRlLmdldFRpbWV6b25lT2Zmc2V0KCkgLyA2MDtcbiAgICByZXR1cm4gbmV3IGQzX2RhdGUoKE1hdGguZmxvb3IoZGF0ZSAvIDM2ZTUgLSB0aW1lem9uZSkgKyB0aW1lem9uZSkgKiAzNmU1KTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSwgb2Zmc2V0KSB7XG4gICAgZGF0ZS5zZXRUaW1lKGRhdGUuZ2V0VGltZSgpICsgTWF0aC5mbG9vcihvZmZzZXQpICogMzZlNSk7XG4gIH0sIGZ1bmN0aW9uKGRhdGUpIHtcbiAgICByZXR1cm4gZGF0ZS5nZXRIb3VycygpO1xuICB9KTtcbiAgZDNfdGltZS5ob3VycyA9IGQzX3RpbWUuaG91ci5yYW5nZTtcbiAgZDNfdGltZS5ob3Vycy51dGMgPSBkM190aW1lLmhvdXIudXRjLnJhbmdlO1xuICBkM190aW1lLm1vbnRoID0gZDNfdGltZV9pbnRlcnZhbChmdW5jdGlvbihkYXRlKSB7XG4gICAgZGF0ZSA9IGQzX3RpbWUuZGF5KGRhdGUpO1xuICAgIGRhdGUuc2V0RGF0ZSgxKTtcbiAgICByZXR1cm4gZGF0ZTtcbiAgfSwgZnVuY3Rpb24oZGF0ZSwgb2Zmc2V0KSB7XG4gICAgZGF0ZS5zZXRNb250aChkYXRlLmdldE1vbnRoKCkgKyBvZmZzZXQpO1xuICB9LCBmdW5jdGlvbihkYXRlKSB7XG4gICAgcmV0dXJuIGRhdGUuZ2V0TW9udGgoKTtcbiAgfSk7XG4gIGQzX3RpbWUubW9udGhzID0gZDNfdGltZS5tb250aC5yYW5nZTtcbiAgZDNfdGltZS5tb250aHMudXRjID0gZDNfdGltZS5tb250aC51dGMucmFuZ2U7XG4gIGZ1bmN0aW9uIGQzX3RpbWVfc2NhbGUobGluZWFyLCBtZXRob2RzLCBmb3JtYXQpIHtcbiAgICBmdW5jdGlvbiBzY2FsZSh4KSB7XG4gICAgICByZXR1cm4gbGluZWFyKHgpO1xuICAgIH1cbiAgICBzY2FsZS5pbnZlcnQgPSBmdW5jdGlvbih4KSB7XG4gICAgICByZXR1cm4gZDNfdGltZV9zY2FsZURhdGUobGluZWFyLmludmVydCh4KSk7XG4gICAgfTtcbiAgICBzY2FsZS5kb21haW4gPSBmdW5jdGlvbih4KSB7XG4gICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBsaW5lYXIuZG9tYWluKCkubWFwKGQzX3RpbWVfc2NhbGVEYXRlKTtcbiAgICAgIGxpbmVhci5kb21haW4oeCk7XG4gICAgICByZXR1cm4gc2NhbGU7XG4gICAgfTtcbiAgICBmdW5jdGlvbiB0aWNrTWV0aG9kKGV4dGVudCwgY291bnQpIHtcbiAgICAgIHZhciBzcGFuID0gZXh0ZW50WzFdIC0gZXh0ZW50WzBdLCB0YXJnZXQgPSBzcGFuIC8gY291bnQsIGkgPSBkMy5iaXNlY3QoZDNfdGltZV9zY2FsZVN0ZXBzLCB0YXJnZXQpO1xuICAgICAgcmV0dXJuIGkgPT0gZDNfdGltZV9zY2FsZVN0ZXBzLmxlbmd0aCA/IFsgbWV0aG9kcy55ZWFyLCBkM19zY2FsZV9saW5lYXJUaWNrUmFuZ2UoZXh0ZW50Lm1hcChmdW5jdGlvbihkKSB7XG4gICAgICAgIHJldHVybiBkIC8gMzE1MzZlNjtcbiAgICAgIH0pLCBjb3VudClbMl0gXSA6ICFpID8gWyBkM190aW1lX3NjYWxlTWlsbGlzZWNvbmRzLCBkM19zY2FsZV9saW5lYXJUaWNrUmFuZ2UoZXh0ZW50LCBjb3VudClbMl0gXSA6IG1ldGhvZHNbdGFyZ2V0IC8gZDNfdGltZV9zY2FsZVN0ZXBzW2kgLSAxXSA8IGQzX3RpbWVfc2NhbGVTdGVwc1tpXSAvIHRhcmdldCA/IGkgLSAxIDogaV07XG4gICAgfVxuICAgIHNjYWxlLm5pY2UgPSBmdW5jdGlvbihpbnRlcnZhbCwgc2tpcCkge1xuICAgICAgdmFyIGRvbWFpbiA9IHNjYWxlLmRvbWFpbigpLCBleHRlbnQgPSBkM19zY2FsZUV4dGVudChkb21haW4pLCBtZXRob2QgPSBpbnRlcnZhbCA9PSBudWxsID8gdGlja01ldGhvZChleHRlbnQsIDEwKSA6IHR5cGVvZiBpbnRlcnZhbCA9PT0gXCJudW1iZXJcIiAmJiB0aWNrTWV0aG9kKGV4dGVudCwgaW50ZXJ2YWwpO1xuICAgICAgaWYgKG1ldGhvZCkgaW50ZXJ2YWwgPSBtZXRob2RbMF0sIHNraXAgPSBtZXRob2RbMV07XG4gICAgICBmdW5jdGlvbiBza2lwcGVkKGRhdGUpIHtcbiAgICAgICAgcmV0dXJuICFpc05hTihkYXRlKSAmJiAhaW50ZXJ2YWwucmFuZ2UoZGF0ZSwgZDNfdGltZV9zY2FsZURhdGUoK2RhdGUgKyAxKSwgc2tpcCkubGVuZ3RoO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHNjYWxlLmRvbWFpbihkM19zY2FsZV9uaWNlKGRvbWFpbiwgc2tpcCA+IDEgPyB7XG4gICAgICAgIGZsb29yOiBmdW5jdGlvbihkYXRlKSB7XG4gICAgICAgICAgd2hpbGUgKHNraXBwZWQoZGF0ZSA9IGludGVydmFsLmZsb29yKGRhdGUpKSkgZGF0ZSA9IGQzX3RpbWVfc2NhbGVEYXRlKGRhdGUgLSAxKTtcbiAgICAgICAgICByZXR1cm4gZGF0ZTtcbiAgICAgICAgfSxcbiAgICAgICAgY2VpbDogZnVuY3Rpb24oZGF0ZSkge1xuICAgICAgICAgIHdoaWxlIChza2lwcGVkKGRhdGUgPSBpbnRlcnZhbC5jZWlsKGRhdGUpKSkgZGF0ZSA9IGQzX3RpbWVfc2NhbGVEYXRlKCtkYXRlICsgMSk7XG4gICAgICAgICAgcmV0dXJuIGRhdGU7XG4gICAgICAgIH1cbiAgICAgIH0gOiBpbnRlcnZhbCkpO1xuICAgIH07XG4gICAgc2NhbGUudGlja3MgPSBmdW5jdGlvbihpbnRlcnZhbCwgc2tpcCkge1xuICAgICAgdmFyIGV4dGVudCA9IGQzX3NjYWxlRXh0ZW50KHNjYWxlLmRvbWFpbigpKSwgbWV0aG9kID0gaW50ZXJ2YWwgPT0gbnVsbCA/IHRpY2tNZXRob2QoZXh0ZW50LCAxMCkgOiB0eXBlb2YgaW50ZXJ2YWwgPT09IFwibnVtYmVyXCIgPyB0aWNrTWV0aG9kKGV4dGVudCwgaW50ZXJ2YWwpIDogIWludGVydmFsLnJhbmdlICYmIFsge1xuICAgICAgICByYW5nZTogaW50ZXJ2YWxcbiAgICAgIH0sIHNraXAgXTtcbiAgICAgIGlmIChtZXRob2QpIGludGVydmFsID0gbWV0aG9kWzBdLCBza2lwID0gbWV0aG9kWzFdO1xuICAgICAgcmV0dXJuIGludGVydmFsLnJhbmdlKGV4dGVudFswXSwgZDNfdGltZV9zY2FsZURhdGUoK2V4dGVudFsxXSArIDEpLCBza2lwIDwgMSA/IDEgOiBza2lwKTtcbiAgICB9O1xuICAgIHNjYWxlLnRpY2tGb3JtYXQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBmb3JtYXQ7XG4gICAgfTtcbiAgICBzY2FsZS5jb3B5ID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gZDNfdGltZV9zY2FsZShsaW5lYXIuY29weSgpLCBtZXRob2RzLCBmb3JtYXQpO1xuICAgIH07XG4gICAgcmV0dXJuIGQzX3NjYWxlX2xpbmVhclJlYmluZChzY2FsZSwgbGluZWFyKTtcbiAgfVxuICBmdW5jdGlvbiBkM190aW1lX3NjYWxlRGF0ZSh0KSB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKHQpO1xuICB9XG4gIHZhciBkM190aW1lX3NjYWxlU3RlcHMgPSBbIDFlMywgNWUzLCAxNWUzLCAzZTQsIDZlNCwgM2U1LCA5ZTUsIDE4ZTUsIDM2ZTUsIDEwOGU1LCAyMTZlNSwgNDMyZTUsIDg2NGU1LCAxNzI4ZTUsIDYwNDhlNSwgMjU5MmU2LCA3Nzc2ZTYsIDMxNTM2ZTYgXTtcbiAgdmFyIGQzX3RpbWVfc2NhbGVMb2NhbE1ldGhvZHMgPSBbIFsgZDNfdGltZS5zZWNvbmQsIDEgXSwgWyBkM190aW1lLnNlY29uZCwgNSBdLCBbIGQzX3RpbWUuc2Vjb25kLCAxNSBdLCBbIGQzX3RpbWUuc2Vjb25kLCAzMCBdLCBbIGQzX3RpbWUubWludXRlLCAxIF0sIFsgZDNfdGltZS5taW51dGUsIDUgXSwgWyBkM190aW1lLm1pbnV0ZSwgMTUgXSwgWyBkM190aW1lLm1pbnV0ZSwgMzAgXSwgWyBkM190aW1lLmhvdXIsIDEgXSwgWyBkM190aW1lLmhvdXIsIDMgXSwgWyBkM190aW1lLmhvdXIsIDYgXSwgWyBkM190aW1lLmhvdXIsIDEyIF0sIFsgZDNfdGltZS5kYXksIDEgXSwgWyBkM190aW1lLmRheSwgMiBdLCBbIGQzX3RpbWUud2VlaywgMSBdLCBbIGQzX3RpbWUubW9udGgsIDEgXSwgWyBkM190aW1lLm1vbnRoLCAzIF0sIFsgZDNfdGltZS55ZWFyLCAxIF0gXTtcbiAgdmFyIGQzX3RpbWVfc2NhbGVMb2NhbEZvcm1hdCA9IGQzX3RpbWVfZm9ybWF0Lm11bHRpKFsgWyBcIi4lTFwiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0TWlsbGlzZWNvbmRzKCk7XG4gIH0gXSwgWyBcIjolU1wiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0U2Vjb25kcygpO1xuICB9IF0sIFsgXCIlSTolTVwiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0TWludXRlcygpO1xuICB9IF0sIFsgXCIlSSAlcFwiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0SG91cnMoKTtcbiAgfSBdLCBbIFwiJWEgJWRcIiwgZnVuY3Rpb24oZCkge1xuICAgIHJldHVybiBkLmdldERheSgpICYmIGQuZ2V0RGF0ZSgpICE9IDE7XG4gIH0gXSwgWyBcIiViICVkXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gZC5nZXREYXRlKCkgIT0gMTtcbiAgfSBdLCBbIFwiJUJcIiwgZnVuY3Rpb24oZCkge1xuICAgIHJldHVybiBkLmdldE1vbnRoKCk7XG4gIH0gXSwgWyBcIiVZXCIsIGQzX3RydWUgXSBdKTtcbiAgdmFyIGQzX3RpbWVfc2NhbGVNaWxsaXNlY29uZHMgPSB7XG4gICAgcmFuZ2U6IGZ1bmN0aW9uKHN0YXJ0LCBzdG9wLCBzdGVwKSB7XG4gICAgICByZXR1cm4gZDMucmFuZ2UoTWF0aC5jZWlsKHN0YXJ0IC8gc3RlcCkgKiBzdGVwLCArc3RvcCwgc3RlcCkubWFwKGQzX3RpbWVfc2NhbGVEYXRlKTtcbiAgICB9LFxuICAgIGZsb29yOiBkM19pZGVudGl0eSxcbiAgICBjZWlsOiBkM19pZGVudGl0eVxuICB9O1xuICBkM190aW1lX3NjYWxlTG9jYWxNZXRob2RzLnllYXIgPSBkM190aW1lLnllYXI7XG4gIGQzX3RpbWUuc2NhbGUgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZDNfdGltZV9zY2FsZShkMy5zY2FsZS5saW5lYXIoKSwgZDNfdGltZV9zY2FsZUxvY2FsTWV0aG9kcywgZDNfdGltZV9zY2FsZUxvY2FsRm9ybWF0KTtcbiAgfTtcbiAgdmFyIGQzX3RpbWVfc2NhbGVVdGNNZXRob2RzID0gZDNfdGltZV9zY2FsZUxvY2FsTWV0aG9kcy5tYXAoZnVuY3Rpb24obSkge1xuICAgIHJldHVybiBbIG1bMF0udXRjLCBtWzFdIF07XG4gIH0pO1xuICB2YXIgZDNfdGltZV9zY2FsZVV0Y0Zvcm1hdCA9IGQzX3RpbWVfZm9ybWF0VXRjLm11bHRpKFsgWyBcIi4lTFwiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0VVRDTWlsbGlzZWNvbmRzKCk7XG4gIH0gXSwgWyBcIjolU1wiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0VVRDU2Vjb25kcygpO1xuICB9IF0sIFsgXCIlSTolTVwiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0VVRDTWludXRlcygpO1xuICB9IF0sIFsgXCIlSSAlcFwiLCBmdW5jdGlvbihkKSB7XG4gICAgcmV0dXJuIGQuZ2V0VVRDSG91cnMoKTtcbiAgfSBdLCBbIFwiJWEgJWRcIiwgZnVuY3Rpb24oZCkge1xuICAgIHJldHVybiBkLmdldFVUQ0RheSgpICYmIGQuZ2V0VVRDRGF0ZSgpICE9IDE7XG4gIH0gXSwgWyBcIiViICVkXCIsIGZ1bmN0aW9uKGQpIHtcbiAgICByZXR1cm4gZC5nZXRVVENEYXRlKCkgIT0gMTtcbiAgfSBdLCBbIFwiJUJcIiwgZnVuY3Rpb24oZCkge1xuICAgIHJldHVybiBkLmdldFVUQ01vbnRoKCk7XG4gIH0gXSwgWyBcIiVZXCIsIGQzX3RydWUgXSBdKTtcbiAgZDNfdGltZV9zY2FsZVV0Y01ldGhvZHMueWVhciA9IGQzX3RpbWUueWVhci51dGM7XG4gIGQzX3RpbWUuc2NhbGUudXRjID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGQzX3RpbWVfc2NhbGUoZDMuc2NhbGUubGluZWFyKCksIGQzX3RpbWVfc2NhbGVVdGNNZXRob2RzLCBkM190aW1lX3NjYWxlVXRjRm9ybWF0KTtcbiAgfTtcbiAgZDMudGV4dCA9IGQzX3hoclR5cGUoZnVuY3Rpb24ocmVxdWVzdCkge1xuICAgIHJldHVybiByZXF1ZXN0LnJlc3BvbnNlVGV4dDtcbiAgfSk7XG4gIGQzLmpzb24gPSBmdW5jdGlvbih1cmwsIGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIGQzX3hocih1cmwsIFwiYXBwbGljYXRpb24vanNvblwiLCBkM19qc29uLCBjYWxsYmFjayk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2pzb24ocmVxdWVzdCkge1xuICAgIHJldHVybiBKU09OLnBhcnNlKHJlcXVlc3QucmVzcG9uc2VUZXh0KTtcbiAgfVxuICBkMy5odG1sID0gZnVuY3Rpb24odXJsLCBjYWxsYmFjaykge1xuICAgIHJldHVybiBkM194aHIodXJsLCBcInRleHQvaHRtbFwiLCBkM19odG1sLCBjYWxsYmFjayk7XG4gIH07XG4gIGZ1bmN0aW9uIGQzX2h0bWwocmVxdWVzdCkge1xuICAgIHZhciByYW5nZSA9IGQzX2RvY3VtZW50LmNyZWF0ZVJhbmdlKCk7XG4gICAgcmFuZ2Uuc2VsZWN0Tm9kZShkM19kb2N1bWVudC5ib2R5KTtcbiAgICByZXR1cm4gcmFuZ2UuY3JlYXRlQ29udGV4dHVhbEZyYWdtZW50KHJlcXVlc3QucmVzcG9uc2VUZXh0KTtcbiAgfVxuICBkMy54bWwgPSBkM194aHJUeXBlKGZ1bmN0aW9uKHJlcXVlc3QpIHtcbiAgICByZXR1cm4gcmVxdWVzdC5yZXNwb25zZVhNTDtcbiAgfSk7XG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCkge1xuICAgIGRlZmluZShkMyk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIG1vZHVsZSA9PT0gXCJvYmplY3RcIiAmJiBtb2R1bGUuZXhwb3J0cykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gZDM7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5kMyA9IGQzO1xuICB9XG59KCk7IiwibW9kdWxlLmV4cG9ydHMgPSBbXHJcbiAgICB7XHJcbiAgICAgICAgXCJpZFwiOiBcImdhcGlScGNcIixcclxuICAgICAgICBcInJlc3VsdFwiOiB7XHJcbiAgICAgICAgICAgIFwia2luZFwiOiBcImFuYWx5dGljcyNnYURhdGFcIixcclxuICAgICAgICAgICAgXCJpZFwiOiBcImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2FuYWx5dGljcy92My9kYXRhL2dhP2lkcz1nYTo3MDY3MDQzMCZkaW1lbnNpb25zPWdhOmRhdGVIb3VyLGdhOmZ1bGxSZWZlcnJlcixnYTpzb3VyY2VNZWRpdW0sZ2E6YnJvd3NlcixnYTpjb3VudHJ5LGdhOnNvY2lhbE5ldHdvcmssZ2E6cGFnZVBhdGgmbWV0cmljcz1nYTp2aXNpdG9ycyxnYTp0aW1lT25TaXRlJnN0YXJ0LWRhdGU9MjAxNC0wMy0wMSZlbmQtZGF0ZT0yMDE0LTAzLTMwXCIsXHJcbiAgICAgICAgICAgIFwicXVlcnlcIjoge1xyXG4gICAgICAgICAgICAgICAgXCJzdGFydC1kYXRlXCI6IFwiMjAxNC0wMy0wMVwiLFxyXG4gICAgICAgICAgICAgICAgXCJlbmQtZGF0ZVwiOiBcIjIwMTQtMDMtMzBcIixcclxuICAgICAgICAgICAgICAgIFwiaWRzXCI6IFwiZ2E6NzA2NzA0MzBcIixcclxuICAgICAgICAgICAgICAgIFwiZGltZW5zaW9uc1wiOiBcImdhOmRhdGVIb3VyLGdhOmZ1bGxSZWZlcnJlcixnYTpzb3VyY2VNZWRpdW0sZ2E6YnJvd3NlcixnYTpjb3VudHJ5LGdhOnNvY2lhbE5ldHdvcmssZ2E6cGFnZVBhdGhcIixcclxuICAgICAgICAgICAgICAgIFwibWV0cmljc1wiOiBbXCJnYTp2aXNpdG9yc1wiLCBcImdhOnRpbWVPblNpdGVcIl0sXHJcbiAgICAgICAgICAgICAgICBcInN0YXJ0LWluZGV4XCI6IDEsXHJcbiAgICAgICAgICAgICAgICBcIm1heC1yZXN1bHRzXCI6IDEwMDBcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgXCJpdGVtc1BlclBhZ2VcIjogMTAwMCxcclxuICAgICAgICAgICAgXCJ0b3RhbFJlc3VsdHNcIjogMTA0OTAsXHJcbiAgICAgICAgICAgIFwic2VsZkxpbmtcIjogXCJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hbmFseXRpY3MvdjMvZGF0YS9nYT9pZHM9Z2E6NzA2NzA0MzAmZGltZW5zaW9ucz1nYTpkYXRlSG91cixnYTpmdWxsUmVmZXJyZXIsZ2E6c291cmNlTWVkaXVtLGdhOmJyb3dzZXIsZ2E6Y291bnRyeSxnYTpzb2NpYWxOZXR3b3JrLGdhOnBhZ2VQYXRoJm1ldHJpY3M9Z2E6dmlzaXRvcnMsZ2E6dGltZU9uU2l0ZSZzdGFydC1kYXRlPTIwMTQtMDMtMDEmZW5kLWRhdGU9MjAxNC0wMy0zMFwiLFxyXG4gICAgICAgICAgICBcIm5leHRMaW5rXCI6IFwiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vYW5hbHl0aWNzL3YzL2RhdGEvZ2E/aWRzPWdhOjcwNjcwNDMwJmRpbWVuc2lvbnM9Z2E6ZGF0ZUhvdXIsZ2E6ZnVsbFJlZmVycmVyLGdhOnNvdXJjZU1lZGl1bSxnYTpicm93c2VyLGdhOmNvdW50cnksZ2E6c29jaWFsTmV0d29yayxnYTpwYWdlUGF0aCZtZXRyaWNzPWdhOnZpc2l0b3JzLGdhOnRpbWVPblNpdGUmc3RhcnQtZGF0ZT0yMDE0LTAzLTAxJmVuZC1kYXRlPTIwMTQtMDMtMzAmc3RhcnQtaW5kZXg9MTAwMSZtYXgtcmVzdWx0cz0xMDAwXCIsXHJcbiAgICAgICAgICAgIFwicHJvZmlsZUluZm9cIjoge1xyXG4gICAgICAgICAgICAgICAgXCJwcm9maWxlSWRcIjogXCI3MDY3MDQzMFwiLFxyXG4gICAgICAgICAgICAgICAgXCJhY2NvdW50SWRcIjogXCIyODM0MzI5NVwiLFxyXG4gICAgICAgICAgICAgICAgXCJ3ZWJQcm9wZXJ0eUlkXCI6IFwiVUEtMjgzNDMyOTUtN1wiLFxyXG4gICAgICAgICAgICAgICAgXCJpbnRlcm5hbFdlYlByb3BlcnR5SWRcIjogXCI2ODYxMTg5M1wiLFxyXG4gICAgICAgICAgICAgICAgXCJwcm9maWxlTmFtZVwiOiBcIkdpdEh1YiBWaXN1YWxpemVyXCIsXHJcbiAgICAgICAgICAgICAgICBcInRhYmxlSWRcIjogXCJnYTo3MDY3MDQzMFwiXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIFwiY29udGFpbnNTYW1wbGVkRGF0YVwiOiBmYWxzZSxcclxuICAgICAgICAgICAgXCJjb2x1bW5IZWFkZXJzXCI6IFtcclxuICAgICAgICAgICAgICAgIHtcIm5hbWVcIjogXCJnYTpkYXRlSG91clwiLCBcImNvbHVtblR5cGVcIjogXCJESU1FTlNJT05cIiwgXCJkYXRhVHlwZVwiOiBcIlNUUklOR1wifSxcclxuICAgICAgICAgICAgICAgIHtcIm5hbWVcIjogXCJnYTpmdWxsUmVmZXJyZXJcIiwgXCJjb2x1bW5UeXBlXCI6IFwiRElNRU5TSU9OXCIsIFwiZGF0YVR5cGVcIjogXCJTVFJJTkdcIn0sXHJcbiAgICAgICAgICAgICAgICB7XCJuYW1lXCI6IFwiZ2E6c291cmNlTWVkaXVtXCIsIFwiY29sdW1uVHlwZVwiOiBcIkRJTUVOU0lPTlwiLCBcImRhdGFUeXBlXCI6IFwiU1RSSU5HXCJ9LFxyXG4gICAgICAgICAgICAgICAge1wibmFtZVwiOiBcImdhOmJyb3dzZXJcIiwgXCJjb2x1bW5UeXBlXCI6IFwiRElNRU5TSU9OXCIsIFwiZGF0YVR5cGVcIjogXCJTVFJJTkdcIn0sXHJcbiAgICAgICAgICAgICAgICB7XCJuYW1lXCI6IFwiZ2E6Y291bnRyeVwiLCBcImNvbHVtblR5cGVcIjogXCJESU1FTlNJT05cIiwgXCJkYXRhVHlwZVwiOiBcIlNUUklOR1wifSxcclxuICAgICAgICAgICAgICAgIHtcIm5hbWVcIjogXCJnYTpzb2NpYWxOZXR3b3JrXCIsIFwiY29sdW1uVHlwZVwiOiBcIkRJTUVOU0lPTlwiLCBcImRhdGFUeXBlXCI6IFwiU1RSSU5HXCJ9LFxyXG4gICAgICAgICAgICAgICAge1wibmFtZVwiOiBcImdhOnBhZ2VQYXRoXCIsIFwiY29sdW1uVHlwZVwiOiBcIkRJTUVOU0lPTlwiLCBcImRhdGFUeXBlXCI6IFwiU1RSSU5HXCJ9LFxyXG4gICAgICAgICAgICAgICAge1wibmFtZVwiOiBcImdhOnZpc2l0b3JzXCIsIFwiY29sdW1uVHlwZVwiOiBcIk1FVFJJQ1wiLCBcImRhdGFUeXBlXCI6IFwiSU5URUdFUlwifSxcclxuICAgICAgICAgICAgICAgIHtcIm5hbWVcIjogXCJnYTp0aW1lT25TaXRlXCIsIFwiY29sdW1uVHlwZVwiOiBcIk1FVFJJQ1wiLCBcImRhdGFUeXBlXCI6IFwiVElNRVwifVxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICBcInRvdGFsc0ZvckFsbFJlc3VsdHNcIjoge1wiZ2E6dmlzaXRvcnNcIjogXCIxMjMzN1wiLCBcImdhOnRpbWVPblNpdGVcIjogXCI2MzkzODguMFwifSxcclxuICAgICAgICAgICAgXCJyb3dzXCI6IFtcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDBcIiwgXCIoZGlyZWN0KVwiLCBcIihkaXJlY3QpIC8gKG5vbmUpXCIsIFwiQ2hyb21lXCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCIxMDQuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDBcIiwgXCIoZGlyZWN0KVwiLCBcIihkaXJlY3QpIC8gKG5vbmUpXCIsIFwiQ2hyb21lXCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAwXCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMlwiLCBcIjEyNy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwMFwiLCBcIihkaXJlY3QpXCIsIFwiKGRpcmVjdCkgLyAobm9uZSlcIiwgXCJTYWZhcmlcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQnJhemlsXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjJcIiwgXCIxNDkuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2FuYWRhXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCI4LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkZyYW5jZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIyXCIsIFwiMzQ5LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkdlcm1hbnlcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSmFwYW5cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMlwiLCBcIjczLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkphcGFuXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPW1hcmtvdi5qcyZjbGltaXQ9MTAwJnVzZXI9aWtyN1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkphcGFuXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWlrcjdcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJSdXNzaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89Q00zMjAyLUZvdXJzcXVhcmVNYXBFeGFtcGxlJmNsaW1pdD0xMDAmdXNlcj1tYXJ0aW5qY1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI2My4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1tYXJ0aW5qY1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvXCIsIFwiMVwiLCBcIjIxLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiNFwiLCBcIjIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89bWMmY2xpbWl0PTEwMCZ1c2VyPU1pZG5pZ2h0Q29tbWFuZGVyXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1tb29kbGVcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiQnJhemlsXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI0LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMjEuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjEuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiTmV0aGVybGFuZHNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiU2xvdmVuaWFcIiwgXCIobm90IHNldClcIiwgXCIvXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvXCIsIFwiMVwiLCBcIjcxLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPUNTVElCLUVjaG8mY2xpbWl0PTEwMCZ1c2VyPXBldGFydi1cIiwgXCIxXCIsIFwiMjUxLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPVBldGFyVi1cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAxXCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjI1Mi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwMVwiLCBcIihkaXJlY3QpXCIsIFwiKGRpcmVjdCkgLyAobm9uZSlcIiwgXCJTYWZhcmlcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWFyZHVwaWxvdCZjbGltaXQ9MTAwJnVzZXI9ZGl5ZHJvbmVzXCIsIFwiMVwiLCBcIjE4OC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPUNvZGVpZ25pdGVyLVR1cmJvJmNsaW1pdD0xMDAmdXNlcj13YXJyaWNraGlsbFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPVBIUF90b19qUXVlcnlVSSZjbGltaXQ9MTAwJnVzZXI9d2Fycmlja2hpbGxcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1WaXN1YWxTZWRpbWVudGF0aW9uJmNsaW1pdD0xMDAmdXNlcj13YXJyaWNraGlsbFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjNcIiwgXCIzMTMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPXdhcnJpY2toaWxsXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZXN0aW1hdG9yLWNsYXNzJmNsaW1pdD0xMDAmdXNlcj13YXJyaWNraGlsbFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPXdhcnJpY2toaWxsXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1jc3YyZ2VvanNvbiZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjNcIiwgXCIxNTIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlNwYWluXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjJcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlN3aXR6ZXJsYW5kXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPUNTVElCLUVjaG8mY2xpbWl0PTMyNCZ1c2VyPXBldGFydi1cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1QZXRhclYtXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1HaXRIdWJWaXN1YWxpemVyJmNsaW1pdD0xMDAmdXNlcj1hcnR6dWJcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWFyLXN0dWRlbnQtc2NoZW1hJmNsaW1pdD0xMDAmdXNlcj1jaHJpc3NjaGVyZXJcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI0NS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWNocmlzc2NoZXJlclwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAyXCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDJcIiwgXCIoZGlyZWN0KVwiLCBcIihkaXJlY3QpIC8gKG5vbmUpXCIsIFwiU2FmYXJpXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1HaXRIdWJWaXN1YWxpemVyJmNsaW1pdD0xMDAmdXNlcj1hcnR6dWJcIiwgXCIxXCIsIFwiMTYuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDJcIiwgXCIoZGlyZWN0KVwiLCBcIihkaXJlY3QpIC8gKG5vbmUpXCIsIFwiU2FmYXJpXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1jYXZlbGxpc1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkFyZ2VudGluYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMTU0LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkZyYW5jZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJJdGFseVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89R2l0SHViVmlzdWFsaXplciZjbGltaXQ9MTAwJnVzZXI9YXJ0enViXCIsIFwiMVwiLCBcIjYxNC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjNcIiwgXCI1NDguMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1naXQtc3RhdGljJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89dXMtYXRsYXMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1DbGlja2VyTW9ua2V5XCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1jYXZlbGxpc1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9bWVsa3liZWVcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiQ2FuYWRhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjM5LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAzXCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkZpcmVmb3hcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCIxOC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwM1wiLCBcIihkaXJlY3QpXCIsIFwiKGRpcmVjdCkgLyAobm9uZSlcIiwgXCJGaXJlZm94XCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1qcXVlcnkmY2xpbWl0PTEwMCZ1c2VyPWpxdWVyeVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkNhbmFkYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMjYuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ29sb21iaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiR2VybWFueVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMjYxLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkdlcm1hbnlcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89cGx1Z2lucyZjbGltaXQ9MTAwJnVzZXI9dmlydHVhbG9wXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiR2VybWFueVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz12aXJ0dWFsb3Bfd2ViYXBwJmNsaW1pdD0xMDAmdXNlcj12aXJ0dWFsb3BcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJHZXJtYW55XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPXZpcnR1YWxvcFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIk5ldGhlcmxhbmRzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPUdpdEh1YlZpc3VhbGl6ZXImY2xpbWl0PTEwMCZ1c2VyPWFydHp1YlwiLCBcIjFcIiwgXCIxLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlBvbGFuZFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPTJjaC1BUEkmY2xpbWl0PTEwMCZ1c2VyPWQxZmZ1ejByXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCI3XCIsIFwiNDE2LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9Y2xlYmxhbmM4N1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9ZDFmZnV6MHJcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWpvZW1lYWRlXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1rcmlzdGlhbmRlbGF5XCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1taWxsaWNvcnBcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiQ2FuYWRhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJQb3J0dWdhbFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiU2F1ZGkgQXJhYmlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTAzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJJbnRlcm5ldCBFeHBsb3JlclwiLCBcIlNvdXRoIEFmcmljYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJHZXJtYW55XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPUdpdEh1YlZpc3VhbGl6ZXImY2xpbWl0PTEwMCZ1c2VyPWFydHp1YlwiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTA0XCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkNocm9tZVwiLCBcIkJyYXppbFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJCZWxhcnVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyNzUuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQmVsYXJ1c1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1tYyZjbGltaXQ9MTAwJnVzZXI9TWlkbmlnaHRDb21tYW5kZXJcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJCcmF6aWxcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMlwiLCBcIjk1LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTA0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkNhbmFkYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9aXZhbnl1ZW5cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDb2xvbWJpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMzguMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCI1XCIsIFwiMTM3My4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWJvb3RzdHJhcFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTA0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9cmFwaGFlbC5qc1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTA0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjJcIiwgXCIxMDguMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9c3dhcmVkZXZcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJJbnRlcm5ldCBFeHBsb3JlclwiLCBcIlNvdXRoIEFmcmljYVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJJbnRlcm5ldCBFeHBsb3JlclwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI2Ny4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTA1XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkNhbmFkYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJJbmRpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCI4NS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjJcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTA1XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9YW1wbGlmaWVyXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1qdWRoYXJyaXNcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiR2VybWFueVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiTmV0aGVybGFuZHNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIwNC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiTmV0aGVybGFuZHNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89cmViYXImY2xpbWl0PTEwMCZ1c2VyPXJlYmFyXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIk5ldGhlcmxhbmRzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWFsYXZyaWtcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiTmV0aGVybGFuZHNcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9ZW9uYmxhc3RcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiTmV0aGVybGFuZHNcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9amxvdWlzXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIk5ldGhlcmxhbmRzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPW1vdGllanVzXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIk5ldGhlcmxhbmRzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPXJlYmFyXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIk5ldGhlcmxhbmRzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPXlmeWZcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiU3BhaW5cIiwgXCIobm90IHNldClcIiwgXCIvXCIsIFwiMVwiLCBcIjUuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiSW50ZXJuZXQgRXhwbG9yZXJcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTA1XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTA1XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDZcIiwgXCIoZGlyZWN0KVwiLCBcIihkaXJlY3QpIC8gKG5vbmUpXCIsIFwiSW50ZXJuZXQgRXhwbG9yZXJcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCIxLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTA2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkJlbGdpdW1cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2FuYWRhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI0NS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSHVuZ2FyeVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJNZXhpY29cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjYxLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTA2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlBvbGFuZFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVa3JhaW5lXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyNTUuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVWtyYWluZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1qc29uLXdyaXRlJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTA2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMlwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89YnVpbGQmY2xpbWl0PTEwMCZ1c2VyPXBob25lZ2FwXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMlwiLCBcIjEzNy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1waG9uZWdhcC1kb2NzJmNsaW1pdD0xMDAmdXNlcj1waG9uZWdhcFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTA2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPXBob25lZ2FwXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTA2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP2NsaW1pdD0xMDAmdXNlcj1TaGFmZmVyXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/Y2xpbWl0PTEwMCZ1c2VyPWp1bnlhbmdjaGVuXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9SnVueWFuZ2NoZW5cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjJcIiwgXCIyODQyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTA3XCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkludGVybmV0IEV4cGxvcmVyXCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTA3XCIsIFwiZGl5ZHJvbmVzLmNvbS9wcm9maWxlcy9ibG9ncy92aXN1YWxpc2luZy1jb250cmlidXRpb25zLXRvLWRpeWRyb25lcy1jb2RlYmFzZVwiLCBcImRpeWRyb25lcy5jb20gLyByZWZlcnJhbFwiLCBcIkludGVybmV0IEV4cGxvcmVyXCIsIFwiSXNyYWVsXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWFyZHVwaWxvdCZjbGltaXQ9MTAwJnVzZXI9ZGl5ZHJvbmVzXCIsIFwiMVwiLCBcIjcuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDdcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2FuYWRhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjJcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTA3XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkZyYW5jZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIyXCIsIFwiNC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjdcIiwgXCIzNi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTA4XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkNhbmFkYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNTguMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDhcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTA4XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJUdXJrZXlcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiNjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1HaXRIdWJDb2RlU3dhcm0mYW1wO2NsaW1pdD0xMDAmYW1wO3VzZXI9YXJ0enViXCIsIFwiMVwiLCBcIjM1Ny4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTA5XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMtcGx1Z2lucyZjbGltaXQ9MTAwJnVzZXI9ZDNcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWpxdWVyeSZjbGltaXQ9MTAwJnVzZXI9anF1ZXJ5XCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1zb25nLW9mLWdpdGh1YiZjbGltaXQ9MTAwJnVzZXI9YWphY2tzaWZpZWRcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWQzXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMlwiLCBcIjQ5LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTA5XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlNvdXRoIEtvcmVhXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCIxMTQuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiU291dGggS29yZWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExMFwiLCBcIihkaXJlY3QpXCIsIFwiKGRpcmVjdCkgLyAobm9uZSlcIiwgXCJDaHJvbWVcIiwgXCJTb3V0aCBLb3JlYVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMTcuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2FuYWRhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjJcIiwgXCIxMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTaW5nYXBvcmVcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiU291dGggS29yZWFcIiwgXCIobm90IHNldClcIiwgXCIvXCIsIFwiMVwiLCBcIjE4My4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTb3V0aCBLb3JlYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTb3V0aCBLb3JlYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1qcXVlcnkmY2xpbWl0PTEwMCZ1c2VyPWpxdWVyeVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTEwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvXCIsIFwiMVwiLCBcIjUyNS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjVcIiwgXCI4LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTEwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJTcGFpblwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIyXCIsIFwiNTQuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2hpbmFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjUuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiSW5kaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTJcIiwgXCIoZGlyZWN0KVwiLCBcIihkaXJlY3QpIC8gKG5vbmUpXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMTc4LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTEyXCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTJcIiwgXCIoZGlyZWN0KVwiLCBcIihkaXJlY3QpIC8gKG5vbmUpXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1tYyZjbGltaXQ9MTAwJnVzZXI9TWlkbmlnaHRDb21tYW5kZXJcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExMlwiLCBcIihkaXJlY3QpXCIsIFwiKGRpcmVjdCkgLyAobm9uZSlcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPXNjYWxhLXN3aW5nJmNsaW1pdD0xMDAmdXNlcj1zY2FsYVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTEyXCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9a3J1Y2tlbmJcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExMlwiLCBcIihkaXJlY3QpXCIsIFwiKGRpcmVjdCkgLyAobm9uZSlcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPXNjYWxhXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTJcIiwgXCIoZGlyZWN0KVwiLCBcIihkaXJlY3QpIC8gKG5vbmUpXCIsIFwiU2FmYXJpXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1mcmVlbmFzJmNsaW1pdD0xMDAmdXNlcj1mcmVlbmFzXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2hpbmFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjExNS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTb3V0aCBLb3JlYVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWNob3NlbiZjbGltaXQ9MTAwJnVzZXI9Z3V5YmVkZm9yZFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTEyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjEyMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWd1eWJlZGZvcmRcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1Da3JvdGNvdlwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTEyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjU1LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTEzXCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkNocm9tZVwiLCBcIlNvdXRoIEtvcmVhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTEzXCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPUNTVElCLUVjaG8mY2xpbWl0PTEwMCZ1c2VyPXBldGFydi1cIiwgXCIxXCIsIFwiMjYuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTNcIiwgXCIoZGlyZWN0KVwiLCBcIihkaXJlY3QpIC8gKG5vbmUpXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPUNTVElCLUVjaG8mY2xpbWl0PTEwMCZ1c2VyPXBldGFydi1cIiwgXCIxXCIsIFwiMS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExM1wiLCBcImRpeWRyb25lcy5jb20vcHJvZmlsZXMvYmxvZ3MvdmlzdWFsaXNpbmctY29udHJpYnV0aW9ucy10by1kaXlkcm9uZXMtY29kZWJhc2VcIiwgXCJkaXlkcm9uZXMuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJQYWtpc3RhblwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1hcG1fcGxhbm5lciZjbGltaXQ9MTAwJnVzZXI9ZGl5ZHJvbmVzXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTNcIiwgXCJkaXlkcm9uZXMuY29tL3Byb2ZpbGVzL2Jsb2dzL3Zpc3VhbGlzaW5nLWNvbnRyaWJ1dGlvbnMtdG8tZGl5ZHJvbmVzLWNvZGViYXNlXCIsIFwiZGl5ZHJvbmVzLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiUGFraXN0YW5cIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9ZGl5ZHJvbmVzXCIsIFwiMVwiLCBcIjM0LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTEzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjU4LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTEzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJJbmRpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIyXCIsIFwiNjQuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiSmFwYW5cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjY4LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTEzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCIxNTkuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89Q1NUSUItRWNobyZjbGltaXQ9MTAwJnVzZXI9cGV0YXJ2LVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTEzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWpxdWVyeSZjbGltaXQ9MTAwJnVzZXI9anF1ZXJ5XCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9UGV0YXJWLVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTEzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjEuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIyXCIsIFwiMzMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlBha2lzdGFuXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCIyOTYuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlBha2lzdGFuXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPXJhaWxzJmNsaW1pdD0xMDAmdXNlcj1yYWlsc1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTE0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJQYWtpc3RhblwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1zb25nLW9mLWdpdGh1YiZjbGltaXQ9MTAwJnVzZXI9YWphY2tzaWZpZWRcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiUGFraXN0YW5cIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9S3VsZGVlcFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTE1XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkluZGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTE1XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlNvdXRoIEtvcmVhXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCIxMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTb3V0aCBLb3JlYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIyXCIsIFwiMjguMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiOTAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1AamViZWNrXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1qZWJlY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJHZXJtYW55XCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTE1XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIkdlcm1hbnlcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9SmVua2luc2NpXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjczLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTE2XCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkZpcmVmb3hcIiwgXCJTcGFpblwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDYW5hZGFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89R2l0SHViQ29kZVN3YXJtJmFtcDtjbGltaXQ9MTAwJmFtcDt1c2VyPWFydHp1YlwiLCBcIjFcIiwgXCI3LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTE2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkNhbmFkYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDaGluYVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMTI5LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTE2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkNoaW5hXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWpxdWVyeSZjbGltaXQ9MTAwJnVzZXI9bW9qb21ib1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTE2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkNoaW5hXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPW1vam9tYm9cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSmFwYW5cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiSG9uZyBLb25nXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTE2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaSAoaW4tYXBwKVwiLCBcIlJ1c3NpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDaGluYVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMjI2Mi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDaGluYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiR2VybWFueVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMTYwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTE3XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJHZXJtYW55XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWRyYWhuclwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTE3XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJUdXJrZXlcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMThcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2hpbmFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjEzOC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDaGluYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1tYyZjbGltaXQ9MTAwJnVzZXI9TWlkbmlnaHRDb21tYW5kZXJcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDaGluYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1yYWlscyZjbGltaXQ9MTAwJnVzZXI9cmFpbHNcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJJbmRpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIyXCIsIFwiMzEwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTE4XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkl0YWx5XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI0LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTE4XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlJ1c3NpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMTgxLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTE4XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJHZXJtYW55XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPUdpdEh1YkNvZGVTd2FybSZhbXA7Y2xpbWl0PTEwMCZhbXA7dXNlcj1hcnR6dWJcIiwgXCIxXCIsIFwiOC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiR2VybWFueVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDaGluYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1yYWlscyZjbGltaXQ9MTAwJnVzZXI9cmFpbHNcIiwgXCIxXCIsIFwiMTEuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSW5kb25lc2lhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI1LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTE5XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkl0YWx5XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTE5XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlJ1c3NpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDExOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJUaGFpbGFuZFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNzMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMTlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMjBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQmVsZ2l1bVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEyMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJSdXNzaWFcIiwgXCIobm90IHNldClcIiwgXCIvXCIsIFwiMVwiLCBcIjcuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMjBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiU291dGggS29yZWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjU2LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTIwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlN3ZWRlblwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMTA1LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTIwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVrcmFpbmVcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjYzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTIwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTIwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89R2l0SHViVmlzdWFsaXplciZjbGltaXQ9MTAwJnVzZXI9YXJ0enViXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMjBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIk5ldGhlcmxhbmRzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTIwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIkdlcm1hbnlcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMjBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiVHVya2V5XCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTIxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIihub3Qgc2V0KVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEyMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJIdW5nYXJ5XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTIxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkluZGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPUdpdEh1YlZpc3VhbGl6ZXImY2xpbWl0PTEwMCZ1c2VyPWFydHp1YlwiLCBcIjFcIiwgXCI3MS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEyMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJKYXBhblwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIyXCIsIFwiNy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEyMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJSdXNzaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMjFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVGFpd2FuXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI3Mi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEyMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiR2VybWFueVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEyMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJJbnRlcm5ldCBFeHBsb3JlclwiLCBcIk5vcndheVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNDkuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMjFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEyMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDw7R0ZSBk4oCZSXZvaXJlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxMS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEyMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJJbmRpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEyMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiVGFpd2FuXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTIzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkFyZ2VudGluYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMTEzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTIzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkFyZ2VudGluYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1LSVRPUFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTIzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkF1c3RyYWxpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/Y2xpbWl0PTEwMCZ1c2VyPWhvbmd5bWFnaWNcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEyM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJBdXN0cmFsaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjEyNS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEyM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJBdXN0cmFsaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89aGlkZS1nb29nbGUtcGx1cy1ub3RpZmljYXRpb24mY2xpbWl0PTEwMCZ1c2VyPW1jaGluZ1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTIzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkJyYXppbFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiODMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMjNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMjNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIkZyYW5jZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1iYXJlbWV0YWxPUyZjbGltaXQ9MTAwJnVzZXI9Zmxhc2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEyM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWJhcmVtZXRhbE9TJmNsaW1pdD0xMDAmdXNlcj1uZW9rZWxkXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMjNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIkZyYW5jZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMTgwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTIzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9bGludXNcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEyM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPW5lb2tlbGRcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDEyM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiU3dpdHplcmxhbmRcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjEwMjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMjNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlN3aXR6ZXJsYW5kXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWVnbGF0elwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTIzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMTIzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIkF1c3RyaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAxMjNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiVHVya2V5XCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCI0LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjAwXCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkNocm9tZVwiLCBcIlN3aXR6ZXJsYW5kXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCI4MC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwMFwiLCBcIihkaXJlY3QpXCIsIFwiKGRpcmVjdCkgLyAobm9uZSlcIiwgXCJDaHJvbWVcIiwgXCJTd2l0emVybGFuZFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1jb25maWcmY2xpbWl0PTEwMCZ1c2VyPW1oYWxkZXJcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwMFwiLCBcIihkaXJlY3QpXCIsIFwiKGRpcmVjdCkgLyAobm9uZSlcIiwgXCJDaHJvbWVcIiwgXCJTd2l0emVybGFuZFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwMFwiLCBcIihkaXJlY3QpXCIsIFwiKGRpcmVjdCkgLyAobm9uZSlcIiwgXCJDaHJvbWVcIiwgXCJTd2l0emVybGFuZFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1taGFsZGVyXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQmVsZ2l1bVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNTAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQnJhemlsXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzNi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDemVjaCBSZXB1YmxpY1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiOTEuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ3plY2ggUmVwdWJsaWNcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9Z3V5XCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ3plY2ggUmVwdWJsaWNcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9cHJpaG9kYVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkl0YWx5XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyNDguMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSXRhbHlcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9Z3NtYWdhemluZVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkl0YWx5XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPW1hcmNvc2xpblwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkphcGFuXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlBvbGFuZFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJUdXJrZXlcIiwgXCIobm90IHNldClcIiwgXCIvXCIsIFwiMVwiLCBcIjQuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiQ2hpbmFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjY5LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJHZXJtYW55XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJSb21hbmlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI4NC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiU3dpdHplcmxhbmRcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDFcIiwgXCIoZGlyZWN0KVwiLCBcIihkaXJlY3QpIC8gKG5vbmUpXCIsIFwiQ2hyb21lXCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjAxXCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkNocm9tZVwiLCBcIkZyYW5jZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1IVE1MNS1GdXR1cmUmY2xpbWl0PTEwMCZ1c2VyPXN5bHZhaW53XCIsIFwiMVwiLCBcIjQ4LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjAxXCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkNocm9tZVwiLCBcIkZyYW5jZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj13ZWxjb21hdHRpY1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjAxXCIsIFwiYXJ0enViLmNvbS9cIiwgXCJhcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMjkuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDFcIiwgXCJhcnR6dWIuY29tL1wiLCBcImFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkZyYW5jZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJHZXJtYW55XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlJ1c3NpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIyXCIsIFwiMTA2LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlJ1c3NpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1vY2tzLm9yZyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTbG92YWtpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVa3JhaW5lXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPUdpdEh1YlZpc3VhbGl6ZXImY2xpbWl0PTEwMCZ1c2VyPWFydHp1YlwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiNFwiLCBcIjE4Mi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tZXRhbGF1cmVhdGVcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj12aXJ0dWFsc3RhdGljdm9pZFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJTd2l0emVybGFuZFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjAyXCIsIFwiYXJ0enViLmNvbS9naHYvXCIsIFwiYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJJdGFseVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTb3V0aCBLb3JlYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCI5MC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjAyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89anF1ZXJ5JmNsaW1pdD0xMDAmdXNlcj1qcXVlcnlcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiUG9sYW5kXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjAzXCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkZpcmVmb3hcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPXBhcGFyYXp6aSZjbGltaXQ9MjAwJnVzZXI9cGFwYXJhenppXCIsIFwiMVwiLCBcIjE3OC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwM1wiLCBcIihkaXJlY3QpXCIsIFwiKGRpcmVjdCkgLyAobm9uZSlcIiwgXCJPcGVyYVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvXCIsIFwiMVwiLCBcIjEuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDNcIiwgXCIoZGlyZWN0KVwiLCBcIihkaXJlY3QpIC8gKG5vbmUpXCIsIFwiU2FmYXJpXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1wYXBhcmF6emkmY2xpbWl0PTIwMCZ1c2VyPXBhcGFyYXp6aVwiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjAzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkNoaW5hXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI0LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjAzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkluZGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxMzQuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSW5kaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89cXVldWUmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiUGVydVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTcGFpblwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiOTI5LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjAzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlR1cmtleVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJQb2xhbmRcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjg2LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlBvbGFuZFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1ub2RlJmNsaW1pdD0xMDAmdXNlcj1tZXRlb3JcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJQb2xhbmRcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9bWV0ZW9yXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiU3BhaW5cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiUG9sYW5kXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxNjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlBvbGFuZFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1zaW1wbGVjaGF0Y2xpZW50JmNsaW1pdD0xMDAmdXNlcj1zaW1wbGVjaGF0Y2xpZW50XCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlBvbGFuZFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1QaW90ckx1Y3prb1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJQb2xhbmRcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9c2ltcGxlY2hhdGNsaWVudFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJCcmF6aWxcIiwgXCIobm90IHNldClcIiwgXCIvXCIsIFwiMVwiLCBcIjM0LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA1XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkJyYXppbFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1qcXVlcnkmY2xpbWl0PTEwMCZ1c2VyPWpxdWVyeVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA1XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkNhbmFkYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJHZXJtYW55XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxNzguMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiR2VybWFueVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1qd3JvYmxld3NraVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA1XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVrcmFpbmVcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA1XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJIdW5nYXJ5XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA1XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIk9wZXJhXCIsIFwiUnVzc2lhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA1XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIk9wZXJhXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJEZW5tYXJrXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA2XCIsIFwiYXJ0enViLmNvbS9naHYvXCIsIFwiYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQXVzdHJpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiNjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQXVzdHJpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1qcXVlcnkmY2xpbWl0PTEwMCZ1c2VyPWpxdWVyeVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkNhbmFkYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiUGVydVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMzUzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPUV2ZW50ZnVsRW5naW5lJmNsaW1pdD0xMDAmdXNlcj1jYWxsdW1sYXdzb25cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1TcGFjZUNoaXBzJmNsaW1pdD0xMDAmdXNlcj1jYWxsdW1sYXdzb25cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1oaWRlLWdvb2dsZS1wbHVzLW5vdGlmaWNhdGlvbiZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1jYWxsdW1sYXdzb25cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjRcIiwgXCI1LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJKYXBhblwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNzAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89R2l0SHViQ29kZVN3YXJtJmFtcDtjbGltaXQ9MTAwJmFtcDt1c2VyPWFydHp1YlwiLCBcIjFcIiwgXCIyMS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWpxdWVyeSZjbGltaXQ9MTAwJnVzZXI9anF1ZXJ5XCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDdcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQXVzdHJhbGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA3XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkN6ZWNoIFJlcHVibGljXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPUdpdEh1YlZpc3VhbGl6ZXImY2xpbWl0PTEwMCZ1c2VyPWFydHp1YlwiLCBcIjFcIiwgXCI0LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA3XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkZyYW5jZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjNcIiwgXCI3LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA3XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIkF1c3RyYWxpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPUdpdEh1YkNvZGVTd2FybSZhbXA7Y2xpbWl0PTEwMCZhbXA7dXNlcj1hcnR6dWJcIiwgXCIxXCIsIFwiMTA2LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA3XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9c2NqbnNuXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDhcIiwgXCJhcnR6dWIuY29tL2dodi9cIiwgXCJhcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA4XCIsIFwiYXJ0enViLmNvbS9naHYvXCIsIFwiYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9OTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNjA4LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA4XCIsIFwiYXJ0enViLmNvbS9naHYvXCIsIFwiYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1naXN0dXAmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDhcIiwgXCJhcnR6dWIuY29tL2dodi9cIiwgXCJhcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWpzZG9tJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA4XCIsIFwiYXJ0enViLmNvbS9naHYvXCIsIFwiYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz10b3BvanNvbiZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTcGFpblwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCIxLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA4XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA4XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9c2NqbnNuXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMDhcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1zY290dEBtb3Rpdm9zaXR5LmNvbVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA5XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkphcGFuXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjA5XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMlwiLCBcIjQ5MS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIzXCIsIFwiNy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCIxLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjEwXCIsIFwiYXJ0enViLmNvbS9naHYvXCIsIFwiYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQXVzdHJhbGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPXpmc1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjEwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkphcGFuXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjEwXCIsIFwidXMuc2VhcmNoLnlhaG9vLmNvbS9zZWFyY2hcIiwgXCJ1cy5zZWFyY2gueWFob28uY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiTm9yd2F5XCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjExXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkF1c3RyYWxpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1HaXRIdWJWaXN1YWxpemVyJmNsaW1pdD0xMDAmdXNlcj1hcnR6dWJcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIxMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJLb3Nvdm9cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjEzMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIxMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJSdXNzaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMTFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVGFpd2FuXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI0LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjExXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMTFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlJ1c3NpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNDguMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMTFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiQ2FuYWRhXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCI2LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjEyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkNhbmFkYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIxMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJOZXBhbFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMTIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMTJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIxMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJWZW5lenVlbGFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMTJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMTNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIxM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIyXCIsIFwiMjE5LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjEzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPW9zdS1wdWJsaWMmY2xpbWl0PTEwMCZ1c2VyPXBlcHB5XCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMTNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9cGVwcHlcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIxNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiSmFwYW5cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMTRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiSW50ZXJuZXQgRXhwbG9yZXJcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNjkuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMTRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiQXVzdHJhbGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI1OS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIxNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDYW5hZGFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjE1XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMlwiLCBcIjQuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMTVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIk5ldGhlcmxhbmRzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzODUuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMTVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIk5ldGhlcmxhbmRzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPXNvbHV0aW9ucy1nZW9wcm9jZXNzaW5nLXRvb2xib3gmY2xpbWl0PTEwMCZ1c2VyPWVzcmlcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIxNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiTmV0aGVybGFuZHNcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9ZXNyaVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjE1XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIkF1c3RyYWxpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIxNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJBdXN0cmFsaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMTZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiU3dpdHplcmxhbmRcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMTZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIxNlwiLCBcImdvb2dsZVwiLCBcImdvb2dsZSAvIG9yZ2FuaWNcIiwgXCJTYWZhcmlcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjE3XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkNyb2F0aWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMTdcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiU3BhaW5cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMTdcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjExMjQuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMTdcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPXRvbXZkdlwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjE4XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkNoaW5hXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI0LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjE4XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIk1vbmdvbGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI5LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjE4XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlBhbGVzdGluZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIxOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJSdXNzaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMThcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjQuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMThcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxMTcuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMThcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWdyZWdzZXh0b25cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIxOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJJbnRlcm5ldCBFeHBsb3JlclwiLCBcIkNoaW5hXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI3NS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIxOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJJcmFuXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxMS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIxOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPW5lb2tlbGRcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIxOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiSmFwYW5cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMTlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiTm9yd2F5XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjIwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkF1c3RyYWxpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIyMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjExMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIyMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJJcmVsYW5kXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI0MC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIyMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJJcmVsYW5kXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWpvc3BjbVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjIwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVrcmFpbmVcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89SElERSZjbGltaXQ9MTAwJnVzZXI9bWlzdGVycGFoXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMjBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVWtyYWluZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMTgyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjIwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVrcmFpbmVcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9YXMzYm95YW5cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIyMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVa3JhaW5lXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPW1pc3RlcnBhaFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjIwXCIsIFwiaGFicmFoYWJyLnJ1L3Bvc3QvMTc0Mzc1L1wiLCBcImhhYnJhaGFici5ydSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlR1cmtleVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiODguMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMjFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQnJhemlsXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzNy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIyMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJHZXJtYW55XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI4OC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIyMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJHZXJtYW55XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWdyb2NrJmNsaW1pdD0xMDAmdXNlcj1raWxsZXJjdXBcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIyMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJHZXJtYW55XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWtpbGxlcmN1cFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjIxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIklzcmFlbFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIyMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJKYXBhblwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIyMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTb3V0aCBLb3JlYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMTE1My4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIyMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIyMlwiLCBcIihkaXJlY3QpXCIsIFwiKGRpcmVjdCkgLyAobm9uZSlcIiwgXCJDaHJvbWVcIiwgXCJDaGluYVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiNjYyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjIyXCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkNocm9tZVwiLCBcIkNoaW5hXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjIyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkZyYW5jZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMTAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMjJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWdpZXJzY2h2XCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMjJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiR2VybWFueVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIyMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIyMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjIyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJJbmRpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMjJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlR1cmtleVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIyMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiVW5pdGVkIEFyYWIgRW1pcmF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjQuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMjJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiSW50ZXJuZXQgRXhwbG9yZXJcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMjJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiQXVzdHJpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMzAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAyMjNcIiwgXCIoZGlyZWN0KVwiLCBcIihkaXJlY3QpIC8gKG5vbmUpXCIsIFwiQ2hyb21lXCIsIFwiQ2hpbmFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjUwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjIzXCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkNocm9tZVwiLCBcIkNoaW5hXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWdpc3R1cCZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDIyM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJIdW5nYXJ5XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjIzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlN3aXR6ZXJsYW5kXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMjIzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMlwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2FuYWRhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkl0YWx5XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzNi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJJdGFseVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1uLnNhbml0YXRlQGdtYWlsLmNvbVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlB1ZXJ0byBSaWNvXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCI1MC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJQdWVydG8gUmljb1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1SZXBvcnRhbG8mY2xpbWl0PTEwMCZ1c2VyPWNvbW1vbndlYWx0aC1vZi1wdWVydG8tcmljb1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlB1ZXJ0byBSaWNvXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWNyaW1lLXNwb3R0ZXImY2xpbWl0PTEwMCZ1c2VyPWNvbW1vbndlYWx0aC1vZi1wdWVydG8tcmljb1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlB1ZXJ0byBSaWNvXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWxlYW4mY2xpbWl0PTEwMCZ1c2VyPWNvbW1vbndlYWx0aC1vZi1wdWVydG8tcmljb1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlB1ZXJ0byBSaWNvXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWNvbW1vbndlYWx0aC1vZi1wdWVydG8tcmljb1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89R2l0SHViQ29kZVN3YXJtJmFtcDtjbGltaXQ9MTAwJmFtcDt1c2VyPWFydHp1YlwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjEuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI4ODkuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWZzaGFyayZjbGltaXQ9MTAwJnVzZXI9eG9yZzYyXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPW9wZW5mbG93LXR1dG9yaWFsJmNsaW1pdD0xMDAmdXNlcj1taW5pbmV0XCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPXZpbS1nb2NvZGUmY2xpbWl0PTEwMCZ1c2VyPXNwZjEzXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPXdtZnMmY2xpbWl0PTEwMCZ1c2VyPXhvcmc2MlwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkZyYW5jZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1taW5pbmV0XCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPXJvdXRlZmxvd1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkZyYW5jZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1zcGYxM1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkZyYW5jZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj12aW1cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9eG9yZzYyXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPXhvcmc2Mi93bWZzXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiR2VybWFueVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTeXJpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1HaXRIdWJDb2RlU3dhcm0mYW1wO2NsaW1pdD0xMDAmYW1wO3VzZXI9YXJ0enViXCIsIFwiMVwiLCBcIjc5LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlN5cmlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWpxdWVyeSZjbGltaXQ9MTAwJnVzZXI9anF1ZXJ5XCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiU3dlZGVuXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIkZyYW5jZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDYW5hZGFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjUzOC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjEyNS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9b3BlbnRzZGJcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9dHN1bmFcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVa3JhaW5lXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxNDUuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVWtyYWluZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1zb2x5b255XCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVWtyYWluZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj12YW5jbGlzdFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzAyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxOTIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9Y2hyaXNmZXlcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1tbWphY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1zaGFya29mbWlya3dvb2RcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxMDQuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzAyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlRoYWlsYW5kXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwM1wiLCBcIihkaXJlY3QpXCIsIFwiKGRpcmVjdCkgLyAobm9uZSlcIiwgXCJDaHJvbWVcIiwgXCJNZXhpY29cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89U0lTT1BSRUdBJmNsaW1pdD0xMDAmdXNlcj1kaWVnby10b3JyZXNcIiwgXCIxXCIsIFwiNC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJQb2xhbmRcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiU3dpdHplcmxhbmRcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiSXRhbHlcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIk1leGljb1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1TSVNPUFJFR0EmY2xpbWl0PTEwMCZ1c2VyPWRpZWdvLXRvcnJlc1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzAzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJNZXhpY29cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89YmRkZSZjbGltaXQ9MTAwJnVzZXI9YWxhbi1kZWxyaW9cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiTWV4aWNvXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWJkZGUmY2xpbWl0PTEwMCZ1c2VyPWRpZWdvLXRvcnJlc1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzAzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJNZXhpY29cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjE1NC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiTWV4aWNvXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWFsYW4tZGVscmlvXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlNwYWluXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI2NC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiU3BhaW5cIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9dmV0b3JpdXNcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMjM0LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzAzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWFycmJlZVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzAzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWxpYmdpdDJcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJGaW5sYW5kXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkZpbmxhbmRcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiR2VybWFueVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJIdW5nYXJ5XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyNzYuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSXJhblwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJKYXBhblwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNDYxLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkphcGFuXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPXJhaWxzJmNsaW1pdD0xMDAmdXNlcj1yYWlsc1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkphcGFuXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPXJhaWxzXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiTWV4aWNvXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIk5ldGhlcmxhbmRzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI0NDYuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiTmV0aGVybGFuZHNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89dGlyZS1ib3VjaG9uJmNsaW1pdD0xMDAmdXNlcj1tM2toXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiTmV0aGVybGFuZHNcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9bTNraFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlJ1c3NpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1iYnRhc2tzJmNsaW1pdD0xMDAmdXNlcj1zYW1vc2FkXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiUnVzc2lhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyMjEuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiUnVzc2lhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWxpc3QuanMmY2xpbWl0PTEwMCZ1c2VyPXNhbW9zYWRcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJSdXNzaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89eC1wbG9zaW9uX3Rlc3QmY2xpbWl0PTEwMCZ1c2VyPXNhbW9zYWRcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJSdXNzaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9c2Ftb3NhZFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiM1wiLCBcIjk0LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89bm9kZXVuaXQmY2xpbWl0PTEwMCZ1c2VyPWppbXRsYVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA1XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlNwYWluXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA1XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA2XCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkNocm9tZVwiLCBcIkF1c3RyYWxpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1HaXRIdWJDb2RlU3dhcm0mY2xpbWl0PTEwMCZ1c2VyPWFydHp1YlwiLCBcIjFcIiwgXCIxMTUzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA2XCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkNocm9tZVwiLCBcIkF1c3RyYWxpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJBcmdlbnRpbmFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIzNi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJBcmdlbnRpbmFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89bWFudGEtdGhvdGgmY2xpbWl0PTEwMCZ1c2VyPWpveWVudFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkFyZ2VudGluYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1ocnVzY2l0dGlcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJBcmdlbnRpbmFcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9am9zaXR1eFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkFyZ2VudGluYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1qb3llbnRcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJBcmdlbnRpbmFcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9anF1ZXJ5XCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQXVzdHJhbGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPUdpdEh1YkNvZGVTd2FybSZhbXA7Y2xpbWl0PTEwMCZhbXA7dXNlcj1hcnR6dWJcIiwgXCIxXCIsIFwiMjYuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQXVzdHJhbGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPW1jJmNsaW1pdD0xMDAmdXNlcj1NaWRuaWdodENvbW1hbmRlclwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlBvbGFuZFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNTguMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDdcIiwgXCIoZGlyZWN0KVwiLCBcIihkaXJlY3QpIC8gKG5vbmUpXCIsIFwiQ2hyb21lXCIsIFwiQXVzdHJhbGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA3XCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkNocm9tZVwiLCBcIkF1c3RyYWxpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1yYWlscyZjbGltaXQ9MTAwJnVzZXI9cmFpbHNcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJCcmF6aWxcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDdcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiR2VybWFueVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiNDUwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA3XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkdlcm1hbnlcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89Ym9vdHN0cmFwJmNsaW1pdD0xMDAmdXNlcj10d2JzXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDdcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiR2VybWFueVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1mM19zbmlwcGV0cyZjbGltaXQ9MTAwJnVzZXI9b2xpdmVyaGVybWFubmlcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJHZXJtYW55XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWphdmFzY3JpcHQmY2xpbWl0PTEwMCZ1c2VyPW9saXZlcmhlcm1hbm5pXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDdcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiR2VybWFueVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1tYyZjbGltaXQ9MTAwJnVzZXI9TWlkbmlnaHRDb21tYW5kZXJcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJHZXJtYW55XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPW1jJmNsaW1pdD0xMDAmdXNlcj1iaXpjYWRlbXlcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJHZXJtYW55XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPXNvbmctb2YtZ2l0aHViJmNsaW1pdD0xMDAmdXNlcj1hamFja3NpZmllZFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA3XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkdlcm1hbnlcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9b2xpdmVyaGVybWFubmlcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiODUuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDdcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89dW51c2VkLWNzcyZjbGltaXQ9MTAwJnVzZXI9Y2hyaXN0ZW1wbGVcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1jaHJpc3RlbXBsZVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA3XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvXCIsIFwiMVwiLCBcIjIwMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI3NS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWJyZW50dlwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA3XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9cmdhd2R6aWtcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJDb2xvbWJpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNzEuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDdcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiQ29sb21iaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9YWYuYXJlbmFzXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDhcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQXVzdHJhbGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxNjUuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDhcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyNDcuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDhcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPW5ldGNhbGwmY2xpbWl0PTEwMCZ1c2VyPWFnbHl6b3ZcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89emVyb21xNC14JmNsaW1pdD0xMDAmdXNlcj16ZXJvbXFcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9YWdseXpvdlwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA4XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkZyYW5jZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj16ZXJvbXFcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJSdXNzaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDhcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjNcIiwgXCIxOTcuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDhcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1jb25maWRlbnRpYWwxMDFcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPW11c2ljb3BoaWxpYWNcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPW5ndml0b3ZpdGNoQGdtYWlsLmNvbVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA4XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkludGVybmV0IEV4cGxvcmVyXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMTcuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDhcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDlcIiwgXCIoZGlyZWN0KVwiLCBcIihkaXJlY3QpIC8gKG5vbmUpXCIsIFwiRmlyZWZveFwiLCBcIkluZG9uZXNpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMTguMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSW5kb25lc2lhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9jbGltaXQ9MTAwJnVzZXI9YWhtYWRAcnVtYWguY29tXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSW5kb25lc2lhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWJvb3RzdHJhcC1leHBvJmNsaW1pdD0xMDAmdXNlcj10d2JzXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSW5kb25lc2lhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyNTQuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSW5kb25lc2lhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1zYXRpcmlydW1haGNvbVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA5XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkluZG9uZXNpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1ib290c3RyYXBcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJJbmRvbmVzaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9ZW5keW11aGFyZGluXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSW5kb25lc2lhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWphc29uXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSW5kb25lc2lhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPXN5bWZvbnkyXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSW5kb25lc2lhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPXR3YnNcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJJbmRvbmVzaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9dHdpdHRlci9ib290c3RyYXBcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJOZXRoZXJsYW5kc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjJcIiwgXCIyMzguMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1wYXVsdHdvXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1waGxpcHBlclwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzA5XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzEwXCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkZpcmVmb3hcIiwgXCJJbmRvbmVzaWFcIiwgXCIobm90IHNldClcIiwgXCIvXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTBcIiwgXCIoZGlyZWN0KVwiLCBcIihkaXJlY3QpIC8gKG5vbmUpXCIsIFwiRmlyZWZveFwiLCBcIkluZG9uZXNpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxMFwiLCBcIihkaXJlY3QpXCIsIFwiKGRpcmVjdCkgLyAobm9uZSlcIiwgXCJGaXJlZm94XCIsIFwiSW5kb25lc2lhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWphdmFcIiwgXCIxXCIsIFwiNDkuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2hpbmFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMlwiLCBcIjEwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzEwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkVjdWFkb3JcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIyXCIsIFwiNS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiU2luZ2Fwb3JlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI0LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzExXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkF1c3RyYWxpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIyXCIsIFwiMTMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2hpbmFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjEyMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJKYXBhblwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTb3V0aCBLb3JlYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjhcIiwgXCIxNjcuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIkNoaW5hXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyNC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI0LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzEyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkNhbmFkYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1HaXRIdWJWaXN1YWxpemVyJmNsaW1pdD0xMDAmdXNlcj1hcnR6dWJcIiwgXCIxXCIsIFwiMTg2LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzEyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkluZGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI0LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzEyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlJ1c3NpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJSdXNzaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89YXJkdXBpbG90JmNsaW1pdD0xMDAmdXNlcj1kaXlkcm9uZXNcIiwgXCIxXCIsIFwiMzg0OC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJSdXNzaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9ZGl5ZHJvbmVzXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMTUuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxM1wiLCBcIihkaXJlY3QpXCIsIFwiKGRpcmVjdCkgLyAobm9uZSlcIiwgXCJDaHJvbWVcIiwgXCJBdXN0cmFsaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89cmFpbHMmY2xpbWl0PTEwMCZ1c2VyPXJhaWxzXCIsIFwiMVwiLCBcIjEyNC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxM1wiLCBcIihkaXJlY3QpXCIsIFwiKGRpcmVjdCkgLyAobm9uZSlcIiwgXCJDaHJvbWVcIiwgXCJBdXN0cmFsaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89cmFpbHMuZ2l0aHViLmNvbSZjbGltaXQ9MTAwJnVzZXI9cmFpbHNcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxM1wiLCBcIihkaXJlY3QpXCIsIFwiKGRpcmVjdCkgLyAobm9uZSlcIiwgXCJDaHJvbWVcIiwgXCJTcmkgTGFua2FcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89cmFpbHMmY2xpbWl0PTEwMCZ1c2VyPXJhaWxzXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQXVzdHJhbGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzNDcuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2hpbmFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSmFwYW5cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiUnVzc2lhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPUdpdEh1YlZpc3VhbGl6ZXImY2xpbWl0PTEwMCZ1c2VyPWFydHp1YlwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzEzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlJ1c3NpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kcm9pZHBsYW5uZXImY2xpbWl0PTEwMDAwJnVzZXI9ZHJvaWRwbGFubmVyXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiU291dGggS29yZWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVHVya2V5XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzEzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIzXCIsIFwiMzYzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzEzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89c29uZy1vZi1naXRodWImY2xpbWl0PTEwMCZ1c2VyPWFqYWNrc2lmaWVkXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIkF1c3RyYWxpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiUG9ydHVnYWxcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzEzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI1LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzEzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjEuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTNcIiwgXCJ0LmNvL3J1Zng2bmlTZVJcIiwgXCJ0LmNvIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiVHdpdHRlclwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxNFwiLCBcIihkaXJlY3QpXCIsIFwiKGRpcmVjdCkgLyAobm9uZSlcIiwgXCJDaHJvbWVcIiwgXCJBdXN0cmFsaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89cmFpbHMmY2xpbWl0PTEwMCZ1c2VyPXJhaWxzXCIsIFwiMVwiLCBcIjE0MS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCIobm90IHNldClcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSW5kaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMlwiLCBcIjY3LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkphcGFuXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjJcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlJ1c3NpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTaW5nYXBvcmVcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjQuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiSW5kb25lc2lhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIk1heHRob25cIiwgXCJDaGluYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2hpbmFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMlwiLCBcIjgzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE1XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkNoaW5hXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPXBvbGx5LWItZ29uZSZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJJbmRpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNTQuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSmFwYW5cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjEzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE1XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlBvbGFuZFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTb3V0aCBLb3JlYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTd2VkZW5cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjQuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIyXCIsIFwiMS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiRmlubGFuZFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMjc2LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkF1c3RyYWxpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJEZW5tYXJrXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJJbmRpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJPbWFuXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlJ1c3NpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTb3V0aCBLb3JlYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNTk3LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlNvdXRoIEtvcmVhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWlvZG9jcyZjbGltaXQ9MTAwJnVzZXI9b3V0c2lkZXJpc1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlNvdXRoIEtvcmVhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPXBvcHVsYXJjb252ZW50aW9uJmNsaW1pdD0xMDAmdXNlcj1vdXRzaWRlcmlzXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiU291dGggS29yZWFcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9b3V0c2lkZXJcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTb3V0aCBLb3JlYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1vdXRzaWRlcmlzXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIkF1c3RyaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIkdlcm1hbnlcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89Tm9UcmljayZjbGltaXQ9MTAwJnVzZXI9ZmVzdHN0ZWxsdGFzdGVcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiR2VybWFueVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1haW00MiZjbGltaXQ9MTAwJnVzZXI9YWltNDJcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiR2VybWFueVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNTMyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJHZXJtYW55XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWFpbTQyXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIkdlcm1hbnlcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9ZmVzdHN0ZWxsdGFzdGVcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiTmV0aGVybGFuZHNcIiwgXCIobm90IHNldClcIiwgXCIvXCIsIFwiMVwiLCBcIjQuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlJvbWFuaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiSW50ZXJuZXQgRXhwbG9yZXJcIiwgXCJDaGluYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMjQxLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkludGVybmV0IEV4cGxvcmVyXCIsIFwiQ2hpbmFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89cG9tZWxvJmNsaW1pdD0xMDAmdXNlcj1ibWd5XCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiSW50ZXJuZXQgRXhwbG9yZXJcIiwgXCJDaGluYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1zYWlscyZjbGltaXQ9MTAwJnVzZXI9Ym1neVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkludGVybmV0IEV4cGxvcmVyXCIsIFwiQ2hpbmFcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9Ym1neVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkludGVybmV0IEV4cGxvcmVyXCIsIFwiSW5kaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiSmFwYW5cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiVW5pdGVkIEFyYWIgRW1pcmF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIwNi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCIobm90IHNldClcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTdcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2hpbmFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTdcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiR2VybWFueVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIyXCIsIFwiMTAzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE3XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkdlcm1hbnlcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9aHVkc29uXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTdcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSXJlbGFuZFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJJdGFseVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTcGFpblwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzNC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWp3ZXNvclwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE3XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjE0Ni4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiR2VybWFueVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIyXCIsIFwiNC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89R2l0SHViVmlzdWFsaXplciZjbGltaXQ9MTAwJnVzZXI9YXJ0enViXCIsIFwiMVwiLCBcIjQ5LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE4XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkZyYW5jZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1UaW1lbGluZUpTJmNsaW1pdD0xMDAmdXNlcj1hcnR6dWJcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMThcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSW5kaWFcIiwgXCIobm90IHNldClcIiwgXCIvXCIsIFwiMVwiLCBcIjcuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMThcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSW5kaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMlwiLCBcIjQ2OC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJJcmVsYW5kXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE4XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkphcGFuXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzNzEuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMThcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSmFwYW5cIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9Zmx5YWtpdGVcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJOZXRoZXJsYW5kc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz0zRFZJVEEmY2xpbWl0PTEwMCZ1c2VyPXJjanVycmlhYW5zXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMThcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiTmV0aGVybGFuZHNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89Q29kZUN1bHQmY2xpbWl0PTEwMCZ1c2VyPXJjanVycmlhYW5zXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMThcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiTmV0aGVybGFuZHNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMlwiLCBcIjE3OC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJOZXRoZXJsYW5kc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1SQ0p1cnJpYWFuc1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE4XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlBvcnR1Z2FsXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE4XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlNvdXRoIEtvcmVhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE4XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlN3aXR6ZXJsYW5kXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE4XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE4XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjcuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMThcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIkdlcm1hbnlcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMThcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIkluZGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI2NjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMThcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiSW50ZXJuZXQgRXhwbG9yZXJcIiwgXCJJbmRpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiOTUuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMThcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiUG9ydHVnYWxcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMThcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiU291dGggS29yZWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPWhvbmdtaW5oZWVcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJTb3V0aCBLb3JlYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNTMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQXVzdHJhbGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDaGluYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJJbmRpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJJbmRpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJJbmRpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1wcmFtb2RwZXJzaVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE5XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkl0YWx5XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxNy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJKYXBhblwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNTkuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIkluZGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjJcIiwgXCI2LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE5XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJNb25hY29cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIk5vcndheVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMTcwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE5XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJOb3J3YXlcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89Z2NhbG5vc2Nyb2xsLnNhZmFyaWV4dGVuc2lvbiZjbGltaXQ9MTAwJnVzZXI9cnlhbmRcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiTm9yd2F5XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPXBocC1tYXJrZG93biZjbGltaXQ9MTAwJnVzZXI9cnlhbmRcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiTm9yd2F5XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPW5vZGVqc1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzE5XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJOb3J3YXlcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9cnlhbmRcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjEzNTYuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWpkYWx0b25cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9a2xvdmFzXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPW1jY2xhZGVcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMxOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9bWRvXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMTlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPXRvcnZhbGRzXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjBcIiwgXCIoZGlyZWN0KVwiLCBcIihkaXJlY3QpIC8gKG5vbmUpXCIsIFwiRmlyZWZveFwiLCBcIkluZGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI1LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIwXCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkZpcmVmb3hcIiwgXCJKYXBhblwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyMFwiLCBcIihkaXJlY3QpXCIsIFwiKGRpcmVjdCkgLyAobm9uZSlcIiwgXCJGaXJlZm94XCIsIFwiSmFwYW5cIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9c29oYVwiLCBcIjFcIiwgXCIxNzUuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjBcIiwgXCIoZGlyZWN0KVwiLCBcIihkaXJlY3QpIC8gKG5vbmUpXCIsIFwiRmlyZWZveFwiLCBcIkphcGFuXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPXRhcnVtaW51c1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIihub3Qgc2V0KVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9YW50aXJlelxcdTIwMGVcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCIobm90IHNldClcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjE1NS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCIobm90IHNldClcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW5lZWRpbVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkJyYXppbFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1hbmRlbmdpbmUtcGxhdGZvcm0tZ2FtZSZjbGltaXQ9MTAwJnVzZXI9bWFybG9uY2FydmFsaG9cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJCcmF6aWxcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjE5OS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJCcmF6aWxcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9amhvbnlzdGVpblwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkJyYXppbFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1tYXJsb25jYXJ2YWxob1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkJyYXppbFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1tY2FydmFsaG9cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJJbmRpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSW5kaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjg1LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkluZGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPW5vdnVzXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSW5kaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9cGF2aXRhcmR1YVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkluZGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPXB1bGtpdDIxXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSXNyYWVsXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkl0YWx5XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkphcGFuXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIk5ldGhlcmxhbmRzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlJ1c3NpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMzYuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiU291dGggQWZyaWNhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI0LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlRhaXdhblwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiOS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiQXVzdHJhbGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiQ2hpbmFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjc5OS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiQ2hpbmFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89Z2VvanNvbndnLmdpdGh1Yi5pbyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiSmFwYW5cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjI1Ny4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiSmFwYW5cIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9c29oYVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJJbnRlcm5ldCBFeHBsb3JlclwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI2MC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDaGluYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMTI3LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkZyYW5jZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1ib290c3RyYXAmY2xpbWl0PTEwMCZ1c2VyPXR3YnNcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89Ym9vdHN0cmFwJmNsaW1pdD0xMDAwJnVzZXI9dHdic1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkZyYW5jZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIyXCIsIFwiMTU2LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkZyYW5jZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kYW5kZWxpb24mY2xpbWl0PTEwMCZ1c2VyPWRhbmRlbGlvblwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkZyYW5jZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kYW5kZWxpb24tZGF0YXRhYmxlcyZjbGltaXQ9MTAwJnVzZXI9ZGFuZGVsaW9uXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWRhbmRlbGlvblwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkZyYW5jZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj10d2JzXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiR2VybWFueVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJOZXRoZXJsYW5kc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJQYWtpc3RhblwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMzcuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiUG9sYW5kXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxMTQuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiU291dGggQWZyaWNhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxNC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjJcIiwgXCI1LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJHZXJtYW55XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjJcIiwgXCIyMTkuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI1MS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyMVwiLCBcInBsdXMudXJsLmdvb2dsZS5jb20vdXJsXCIsIFwicGx1cy51cmwuZ29vZ2xlLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQnJhemlsXCIsIFwiR29vZ2xlK1wiLCBcIi8/cmVwbz1kcm9pZHBsYW5uZXImY2xpbWl0PTEwMDAwJnVzZXI9ZHJvaWRwbGFubmVyXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjJcIiwgXCIoZGlyZWN0KVwiLCBcIihkaXJlY3QpIC8gKG5vbmUpXCIsIFwiQ2hyb21lXCIsIFwiUG9sYW5kXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPVBFQSZjbGltaXQ9MTAwJnVzZXI9cGlvdHJnaWVkeml1blwiLCBcIjFcIiwgXCIxMzUuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjJcIiwgXCIoZGlyZWN0KVwiLCBcIihkaXJlY3QpIC8gKG5vbmUpXCIsIFwiQ2hyb21lXCIsIFwiUG9sYW5kXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPVBFQSZjbGltaXQ9MTAwMCZ1c2VyPXBpb3RyZ2llZHppdW5cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDYW5hZGFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjEuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2hpbmFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI4LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkdlcm1hbnlcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSW5kaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiUG9ydHVnYWxcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiU3dlZGVuXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIkN6ZWNoIFJlcHVibGljXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJHZXJtYW55XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJJbmRpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIyXCIsIFwiNjUuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiT3BlcmFcIiwgXCJJdGFseVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIzXCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkZpcmVmb3hcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMjEuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQmVsZ2l1bVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDaGlsZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1HaXRIdWJWaXN1YWxpemVyJmNsaW1pdD0xMDAmdXNlcj1hcnR6dWJcIiwgXCIxXCIsIFwiNC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDaGluYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1iZWRyb2NrJmNsaW1pdD0xMDAmdXNlcj1tb3ppbGxhXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2hpbmFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjI2NS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDb2xvbWJpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJGaW5sYW5kXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkluZGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIk1leGljb1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJOZXRoZXJsYW5kc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJQb2xhbmRcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMlwiLCBcIjQuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1TZW1pQXV0b0ZpbG1tYWtpbmcmY2xpbWl0PTEwMCZ1c2VyPWRwZWV0XCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIzXCIsIFwiMzU0LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwMzIzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9ZHBlZXRcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiR2VybWFueVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIyXCIsIFwiNi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89R2l0SHViVmlzdWFsaXplciZjbGltaXQ9MTAwJnVzZXI9YXJ0enViXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzAzMjNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiSW50ZXJuZXQgRXhwbG9yZXJcIiwgXCJJbmRpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiNi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJJbnRlcm5ldCBFeHBsb3JlclwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI0MC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDMyM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJJbnRlcm5ldCBFeHBsb3JlclwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDAwXCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjc3LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkRlbm1hcmtcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSXRhbHlcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlJ1c3NpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIyXCIsIFwiMzguMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9bWZtYmFyYmVyXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDBcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIzXCIsIFwiNC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwMFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDAwXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJHZXJtYW55XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkF1c3RyaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDFcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiRnJhbmNlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTcGFpblwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwMVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjNcIiwgXCI2LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjgwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJHZXJtYW55XCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDAxXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDAxXCIsIFwicGx1cy51cmwuZ29vZ2xlLmNvbS91cmxcIiwgXCJwbHVzLnVybC5nb29nbGUuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJCcmF6aWxcIiwgXCJHb29nbGUrXCIsIFwiL1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDAxXCIsIFwicGx1cy51cmwuZ29vZ2xlLmNvbS91cmxcIiwgXCJwbHVzLnVybC5nb29nbGUuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJCcmF6aWxcIiwgXCJHb29nbGUrXCIsIFwiLz9yZXBvPWRyb2lkcGxhbm5lciZjbGltaXQ9MTAwJnVzZXI9ZHJvaWRwbGFubmVyXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDFcIiwgXCJwbHVzLnVybC5nb29nbGUuY29tL3VybFwiLCBcInBsdXMudXJsLmdvb2dsZS5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkJyYXppbFwiLCBcIkdvb2dsZStcIiwgXCIvP3JlcG89ZHJvaWRwbGFubmVyJmNsaW1pdD0xMDAwMCZ1c2VyPWRyb2lkcGxhbm5lclwiLCBcIjFcIiwgXCIyMDcuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2hpbGVcIiwgXCIobm90IHNldClcIiwgXCIvXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2hpbGVcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjQzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDAyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlBvcnR1Z2FsXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDAyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDAyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89R2l0SHViQ29kZVN3YXJtJmFtcDtjbGltaXQ9MTAwJmFtcDt1c2VyPWFydHp1YlwiLCBcIjJcIiwgXCIzODUuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1ib290c3RyYXAmY2xpbWl0PTEwMCZ1c2VyPXR3YnNcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWNydXpyciZjbGltaXQ9MTAwJnVzZXI9YWJsYWtlbHlcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjdcIiwgXCI0MjguMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1qcXVlcnkmY2xpbWl0PTEwMCZ1c2VyPWpxdWVyeVwiLCBcIjJcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDAyXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89bm9kZS1hci1kcm9uZSZjbGltaXQ9MTAwJnVzZXI9YWJsYWtlbHlcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPW5vZGUtd2VlZGZzJmNsaW1pdD0xMDAmdXNlcj1jcnV6cnJcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWFibGFrZWx5XCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1jcnV6cnJcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiUG9sYW5kXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzODQuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDJcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlB1ZXJ0byBSaWNvXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWNvbW1vbndlYWx0aC1vZi1wdWVydG8tcmljb1wiLCBcIjFcIiwgXCI4OS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwMlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDYW5hZGFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjEuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCI0XCIsIFwiNDAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1uaWxlc2hrXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDNcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlBvcnR1Z2FsXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDAzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkludGVybmV0IEV4cGxvcmVyXCIsIFwiQ2FuYWRhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPUR1cmFuZGFsJmNsaW1pdD0xMDAmdXNlcj1yd2hlcGJ1cm5cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwM1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJJbnRlcm5ldCBFeHBsb3JlclwiLCBcIkNhbmFkYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMTI5LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDAzXCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkludGVybmV0IEV4cGxvcmVyXCIsIFwiQ2FuYWRhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPXJ3aGVwYnVyblwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkJlbGFydXNcIiwgXCIobm90IHNldClcIiwgXCIvXCIsIFwiMVwiLCBcIjcuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2FuYWRhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjRcIiwgXCIzMS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDemVjaCBSZXB1YmxpY1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTd2l0emVybGFuZFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIzXCIsIFwiNi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1Fc3NlbnRpYWxzJmNsaW1pdD0xMDAmdXNlcj1lc3NlbnRpYWxzXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89RXNzZW50aWFscyZjbGltaXQ9NTAwMCZ1c2VyPWVzc2VudGlhbHNcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1Tb2NpYWxDaXJjbGUmY2xpbWl0PTEwMCZ1c2VyPWhvcmFjZWxpXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMlwiLCBcIjIxNS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwNFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1ob3JhY2VsaS5naXRodWIuaW8mY2xpbWl0PTEwMCZ1c2VyPWhvcmFjZWxpXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIEtpbmdkb21cIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9RXNzZW50aWFsc1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBLaW5nZG9tXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWhvcmFjZWxpXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCI3XCIsIFwiOTc4LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9ZGZvcmVzbWFuXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDRcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1pc2hhaWtvdnNreVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJJcmVsYW5kXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA0XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2FuYWRhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI0OC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJGcmFuY2VcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiTWV4aWNvXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIzLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA1XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlB1ZXJ0byBSaWNvXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA1XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlNwYWluXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI5NS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTcGFpblwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz10b3BvanNvbiZjbGltaXQ9MTUzJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPUdpdEh1YkNvZGVTd2FybSZhbXA7Y2xpbWl0PTEwMCZhbXA7dXNlcj1hcnR6dWJcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjRcIiwgXCIzMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiQXVzdHJpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiSHVuZ2FyeVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwNVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIyXCIsIFwiMzAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDVcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiR2VybWFueVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJCcmF6aWxcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89Y29mZmVlLXNjcmlwdCZjbGltaXQ9MTAwJnVzZXI9dGhpYWdvbWF0YVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkJyYXppbFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMjIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkJyYXppbFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj10aGlhZ29tYXRhXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2FuYWRhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIyLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkluZGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCIzNTMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSW5kaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89YmZWaXN1YWwmY2xpbWl0PTEwMCZ1c2VyPWJpZ29tZWdhXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSW5kaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZGFuYm8mY2xpbWl0PTEwMCZ1c2VyPWJpZ29tZWdhXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSW5kaWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89amFydmlzJmNsaW1pdD0xMDAmdXNlcj1iaWdvbWVnYVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkluZGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPW9wZW5mYXV4LWNsaWVudCZjbGltaXQ9MTAwJnVzZXI9Ymlnb21lZ2FcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJJbmRpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz10cm9uJmNsaW1pdD0xMDAmdXNlcj1iaWdvbWVnYVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkluZGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWJpZ29tZWdhXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiSmFwYW5cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiU291dGggS29yZWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjQ5LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89R2l0SHViQ29kZVN3YXJtJmFtcDtjbGltaXQ9MTAwJmFtcDt1c2VyPWFydHp1YlwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJDYW5hZGFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjU4LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA2XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkZpcmVmb3hcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiL1wiLCBcIjFcIiwgXCIyOTEuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89QmFkU2NpZW5jZSZjbGltaXQ9MTAwJnVzZXI9anVuZ2xlY2F0c29mdHdhcmVcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCI1XCIsIFwiMTcuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTIwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9SnVuZ2xlQ2F0U29mdHdhcmVcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwNlwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/dXNlcj1icnd5YXR0XCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDZcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9ZHRpbnRlcmFjdGl2ZVwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA2XCIsIFwicGx1cy51cmwuZ29vZ2xlLmNvbS91cmxcIiwgXCJwbHVzLnVybC5nb29nbGUuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJCcmF6aWxcIiwgXCJHb29nbGUrXCIsIFwiLz9yZXBvPWRyb2lkcGxhbm5lciZjbGltaXQ9MTAwMDAmdXNlcj1kcm9pZHBsYW5uZXJcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDYW5hZGFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDdcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiRXN0b25pYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJOZXRoZXJsYW5kc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgS2luZ2RvbVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjNcIiwgXCI2Ny4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJCcmF6aWxcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDdcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiSXNyYWVsXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9jbGltaXQ9MTAwJnVzZXI9YmluYXJ5dGhvclwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA3XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIlNhZmFyaVwiLCBcIklzcmFlbFwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1FeGlsZWNvaW4mY2xpbWl0PTEwMCZ1c2VyPWJpbmFyeXRob3JcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJJc3JhZWxcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPUJpbmFyeVRob3JcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwN1wiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJTYWZhcmlcIiwgXCJJc3JhZWxcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjUxLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA4XCIsIFwiKGRpcmVjdClcIiwgXCIoZGlyZWN0KSAvIChub25lKVwiLCBcIkNocm9tZVwiLCBcIkF1c3RyYWxpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1yYWlscyZjbGltaXQ9MTAwJnVzZXI9cmFpbHNcIiwgXCIxXCIsIFwiNTQuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDhcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQXVzdHJhbGlhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCIxNi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJJdGFseVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMjguMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDhcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiU291dGggS29yZWFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjQxLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA4XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMlwiLCBcIjMuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDhcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiRmlyZWZveFwiLCBcIkF1c3RyYWxpYVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJGaXJlZm94XCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwOFwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJJbnRlcm5ldCBFeHBsb3JlclwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjEuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDhcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiU2FmYXJpXCIsIFwiSmFwYW5cIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQmVsZ2l1bVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiMi4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJCcmF6aWxcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMlwiLCBcIjI3LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA5XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkNhbmFkYVwiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJDYW5hZGFcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89Ym9vdHN0cmFwJmNsaW1pdD0xMDAmdXNlcj10d2JzXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2FuYWRhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjFcIiwgXCI0NjEuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiQ2FuYWRhXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPW1jJmNsaW1pdD0xMDAmdXNlcj1NaWRuaWdodENvbW1hbmRlclwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA5XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIkdyZWVjZVwiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1kMyZjbGltaXQ9MTAwJnVzZXI9bWJvc3RvY2tcIiwgXCIxXCIsIFwiOC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJIb25nIEtvbmdcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMlwiLCBcIjE0MS4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTaW5nYXBvcmVcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89RXhwZW5zZSZjbGltaXQ9MTAwJnVzZXI9emFidWRpcGFyXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiU2luZ2Fwb3JlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWFuZ3VsYXIuanMmY2xpbWl0PTEwMCZ1c2VyPWFuZ3VsYXJcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTaW5nYXBvcmVcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZDMmY2xpbWl0PTEwMCZ1c2VyPW1ib3N0b2NrXCIsIFwiMVwiLCBcIjIwMy4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTaW5nYXBvcmVcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZGVtbzFjcnVkJmNsaW1pdD0xMDAmdXNlcj1hbmd1bGFyanNcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTaW5nYXBvcmVcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9QW5ndWxhcmpzXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiU2luZ2Fwb3JlXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz91c2VyPWFuZ3VsYXJcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJTaW5nYXBvcmVcIiwgXCIobm90IHNldClcIiwgXCIvP3VzZXI9emFidWRpcGFyXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi9cIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPUZpbmNoZXMtMjAxMSZjbGltaXQ9MTAwJnVzZXI9cHJvZzY5NFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA5XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89R2l0SHViVmlzdWFsaXplciZjbGltaXQ9MTAwJnVzZXI9YXJ0enViXCIsIFwiMlwiLCBcIjIuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1jczM5OHZsJmNsaW1pdD0xMDAmdXNlcj1rZXZpbndhbmdcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWQzJmNsaW1pdD0xMDAmdXNlcj1tYm9zdG9ja1wiLCBcIjRcIiwgXCIxNTM0LjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA5XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZGVzaXJlZSZjbGltaXQ9MTAwJnVzZXI9cHJvZzY5NFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA5XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZGVzbW9uZCZjbGltaXQ9MTAwJnVzZXI9cHJvZzY5NFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA5XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89ZG9ybS1hdXRvbWF0aW9uJmNsaW1pdD0xMDAmdXNlcj1rZXZpbndhbmdcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWZyYyZjbGltaXQ9MTAwJnVzZXI9cHJvZzY5NFwiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA5XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89am9lYm90JmNsaW1pdD0xMDAmdXNlcj1wcm9nNjk0XCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1saW51eCZjbGltaXQ9MTAwJnVzZXI9dG9ydmFsZHNcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWxpbnV4JmNsaW1pdD0xMDAwJnVzZXI9dG9ydmFsZHNcIiwgXCIxXCIsIFwiMC4wXCJdLFxyXG4gICAgICAgICAgICAgICAgW1wiMjAxNDAzMDQwOVwiLCBcImdodi5hcnR6dWIuY29tL1wiLCBcImdodi5hcnR6dWIuY29tIC8gcmVmZXJyYWxcIiwgXCJDaHJvbWVcIiwgXCJVbml0ZWQgU3RhdGVzXCIsIFwiKG5vdCBzZXQpXCIsIFwiLz9yZXBvPWxpbnV4JmNsaW1pdD0xMDAwMCZ1c2VyPXRvcnZhbGRzXCIsIFwiMVwiLCBcIjAuMFwiXSxcclxuICAgICAgICAgICAgICAgIFtcIjIwMTQwMzA0MDlcIiwgXCJnaHYuYXJ0enViLmNvbS9cIiwgXCJnaHYuYXJ0enViLmNvbSAvIHJlZmVycmFsXCIsIFwiQ2hyb21lXCIsIFwiVW5pdGVkIFN0YXRlc1wiLCBcIihub3Qgc2V0KVwiLCBcIi8/cmVwbz1taW5lY2FyZnQmY2xpbWl0PTEwMCZ1c2VyPWtldmlud2FuZ1wiLCBcIjFcIiwgXCIwLjBcIl0sXHJcbiAgICAgICAgICAgICAgICBbXCIyMDE0MDMwNDA5XCIsIFwiZ2h2LmFydHp1Yi5jb20vXCIsIFwiZ2h2LmFydHp1Yi5jb20gLyByZWZlcnJhbFwiLCBcIkNocm9tZVwiLCBcIlVuaXRlZCBTdGF0ZXNcIiwgXCIobm90IHNldClcIiwgXCIvP3JlcG89cHJvZzY5NC5naXRodWIuY29tJmNsaW1pdD0xMDAmdXNlcj1wcm9nNjk0XCIsIFwiMVwiLCBcIjAuMFwiXVxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5dOyIsInZhciBkMyA9IHJlcXVpcmUoJ2QzJylcbiAgICAsIGdhYXBpID0gcmVxdWlyZSgnLi9nYWFwaScpXG4gICAgLCBwcm9jZXNzb3IgPSByZXF1aXJlKCcuL3Byb2Nlc3NvcicpXG4gICAgLCBwaHlzaWNzID0gcmVxdWlyZSgnLi9waHlzaWNzJylcbiAgICAsIGdyYXBoaWMgPSByZXF1aXJlKCcuL2dyYXBoaWMnKVxuICAgIDtcblxuZnVuY3Rpb24gbG9nKGxhYmVsLCBkYXRhKSB7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPCAyKVxuICAgICAgICBjb25zb2xlLmxvZyhsYWJlbCk7XG4gICAgZWxzZVxuICAgICAgICBjb25zb2xlLmxvZyhsYWJlbCwgZGF0YSk7XG59XG5cbmZ1bmN0aW9uIGxvZ0Vycm9yKGVycm9yKSB7XG4gICAgbG9nKFwiZXJyb3JcIiwgZXJyb3IpO1xufVxuXG52YXIgdWkgPSB7XG4gICAgICAgIGFjY291bnRzIDogZDMuc2VsZWN0KCcjYWNjb3VudHMnKSxcbiAgICAgICAgd2ViUHJvcGVydGllcyA6IGQzLnNlbGVjdChcIiN3ZWJQcm9wZXJ0aWVzXCIpLFxuICAgICAgICBwcm9maWxlcyA6IGQzLnNlbGVjdChcIiNwcm9maWxlc1wiKSxcbiAgICAgICAgZnJvbSA6IGQzLnNlbGVjdChcIiNmcm9tXCIpLFxuICAgICAgICB0byA6IGQzLnNlbGVjdChcIiN0b1wiKSxcbiAgICAgICAgYnV0dG9ucyA6IHtcbiAgICAgICAgICAgIHJ1biA6IGQzLnNlbGVjdChcIiNydW5cIilcbiAgICAgICAgfVxuICAgIH1cbiAgICAsIHVpU2VsZWN0ZWQgPSB7XG4gICAgICAgIGFjY291bnQgOiBudWxsLFxuICAgICAgICB3ZWJQcm9wZXJ0eSA6IG51bGwsXG4gICAgICAgIHByb2ZpbGUgOiBudWxsXG4gICAgfVxuICAgICwgc2l6ZSA9IFtcbiAgICAgICAgd2luZG93LmlubmVyV2lkdGgsXG4gICAgICAgIHdpbmRvdy5pbm5lckhlaWdodFxuICAgIF1cbiAgICA7XG5cbnZhciBwcm92aWRlcjtcblxuZnVuY3Rpb24gc2luZ0luKHByZCkge1xuICAgIHByb3ZpZGVyID0gcHJkO1xuICAgIGlmICghcHJvdmlkZXIpXG4gICAgICAgIHJldHVybjtcbiAgICBwcm92aWRlci5vbignc2lnbkluJywgaGFuZGxlU2lnbkluKTtcbiAgICAvL3Byb3ZpZGVyLnNpZ25JbigpXG4gICAgdWkuYnV0dG9ucy5ydW4ub24oJ2NsaWNrJykoKTtcbiAgICByZXNpemUoKTtcbn1cblxuZnVuY3Rpb24ga2V5SXRlbShkKSB7XG4gICAgcmV0dXJuIGQuaWQ7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZShzZWxfcHJvcCwgdWlfcHJvcCwgY3NzX2NsYXNzLCBjbGlja19mbikge1xuICAgIHJldHVybiBmdW5jdGlvbihlcnIsIGRhdGEpIHtcbiAgICAgICAgaWYoZXJyKSB7XG4gICAgICAgICAgICB1aVNlbGVjdGVkW3NlbF9wcm9wXSA9IG51bGw7XG4gICAgICAgICAgICBsb2dFcnJvcihlcnIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHByb3AgPSB1aVNlbGVjdGVkW3NlbF9wcm9wXSA9IGRhdGFbMF07XG4gICAgICAgIHZhciBpdGVtcyA9IHVpW3VpX3Byb3BdLnNlbGVjdEFsbChjc3NfY2xhc3MpXG4gICAgICAgICAgICAuZGF0YShkYXRhLCBrZXlJdGVtKTtcbiAgICAgICAgaXRlbXMuZW50ZXIoKVxuICAgICAgICAgICAgLmFwcGVuZCgnbGknKVxuICAgICAgICAgICAgLmF0dHIoJ2NsYXNzJywgY3NzX2NsYXNzLnN1YnN0cigxKSlcbiAgICAgICAgICAgIC50ZXh0KGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZC5uYW1lO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5vbignY2xpY2snLCBjbGlja19mbilcbiAgICAgICAgICAgIC5lYWNoKGZ1bmN0aW9uKGQpIHtcbiAgICAgICAgICAgICAgICBwcm9wXG4gICAgICAgICAgICAgICAgJiYgcHJvcC5pZCA9PSBkLmlkXG4gICAgICAgICAgICAgICAgJiYgY2xpY2tfZm4uY2FsbCh0aGlzLCBwcm9wKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBpdGVtcy5leGl0KCkucmVtb3ZlKCk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBjbGlja1RvcE1lbnUoY2xpY2tfZm4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24oZCkge1xuICAgICAgICBkMy5zZWxlY3QodGhpcy5wYXJlbnROb2RlKVxuICAgICAgICAgICAgLnNlbGVjdEFsbCgnbGknKVxuICAgICAgICAgICAgLmNsYXNzZWQoJ3VpU2VsZWN0ZWQnLCBmYWxzZSk7XG4gICAgICAgIGQzLnNlbGVjdCh0aGlzLnBhcmVudE5vZGUucGFyZW50Tm9kZSlcbiAgICAgICAgICAgIC5zZWxlY3QoJ3NwYW4nKS50ZXh0KGQubmFtZSk7XG4gICAgICAgIGQzLnNlbGVjdCh0aGlzKVxuICAgICAgICAgICAgLmNsYXNzZWQoJ3VpU2VsZWN0ZWQnLCB0cnVlKTtcblxuICAgICAgICBjbGlja19mbiAmJlxuICAgICAgICBjbGlja19mbihkKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVNpZ25JbihlcnIpIHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICAgIGxvZ0Vycm9yKGVycik7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBwcm92aWRlci5hY2NvdW50cy5saXN0KGhhbmRsZShcbiAgICAgICAgJ2FjY291bnQnLFxuICAgICAgICAnYWNjb3VudHMnLFxuICAgICAgICAnLmFjY291bnQnLFxuICAgICAgICBjbGlja1RvcE1lbnUoY2xpY2tBY2NvdW50KVxuICAgICkpO1xufVxuXG5mdW5jdGlvbiBjbGlja0FjY291bnQoZCkge1xuICAgIHVpU2VsZWN0ZWQuYWNjb3VudCA9IGQ7XG4gICAgdWlTZWxlY3RlZC5hY2NvdW50ICYmXG4gICAgcHJvdmlkZXIud2VicHJvcGVydGllcy5saXN0KFxuICAgICAgICB1aVNlbGVjdGVkLmFjY291bnQuaWQsXG4gICAgICAgIGhhbmRsZShcbiAgICAgICAgICAgICd3ZWJQcm9wZXJ0eScsXG4gICAgICAgICAgICAnd2ViUHJvcGVydGllcycsXG4gICAgICAgICAgICAnLndlYlByb3BlcnR5JyxcbiAgICAgICAgICAgIGNsaWNrVG9wTWVudShjbGlja1dlYlByb3BlcnR5KVxuICAgICAgICApXG4gICAgKTtcbn1cblxuZnVuY3Rpb24gY2xpY2tXZWJQcm9wZXJ0eShkKSB7XG4gICAgdWlTZWxlY3RlZC53ZWJQcm9wZXJ0eSA9IGQ7XG4gICAgdWlTZWxlY3RlZC5hY2NvdW50ICYmIHVpU2VsZWN0ZWQud2ViUHJvcGVydHkgJiZcbiAgICBwcm92aWRlci5wcm9maWxlcy5saXN0KFxuICAgICAgICB1aVNlbGVjdGVkLmFjY291bnQuaWQsXG4gICAgICAgIHVpU2VsZWN0ZWQud2ViUHJvcGVydHkuaWQsXG4gICAgICAgIGhhbmRsZShcbiAgICAgICAgICAgICdwcm9maWxlJyxcbiAgICAgICAgICAgICdwcm9maWxlcycsXG4gICAgICAgICAgICAnLnByb2ZpbGUnLFxuICAgICAgICAgICAgY2xpY2tUb3BNZW51KGNsaWNrUHJvZmlsZSlcbiAgICAgICAgKVxuICAgICk7XG59XG5cbnZhciBzdGF0ZSA9IHtcbiAgICBoYXNoRnJvbSA6IGQzLm1hcCh7fSlcbiAgICAsIGhhc2hUbyA6IGQzLm1hcCh7fSlcbiAgICAsIHNpemVzIDogIGQzLnNjYWxlLmxpbmVhcigpLnJhbmdlKFsxLCA0MF0pLmRvbWFpbihbMCwgMV0pXG4gICAgLCBjb2xvcnMgOiBkMy5zY2FsZS5jYXRlZ29yeTIwKClcbn07XG5cbmZ1bmN0aW9uIG9mU2l6ZShkKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdmFsdWVPZiA6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIDE2Oy8vc3RhdGUuc2l6ZXMoZC53ZWlnaHQpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5mdW5jdGlvbiBpbml0Tm9kZShkKSB7XG4gICAgZC5maXhlZCA9IHRydWU7XG4gICAgc3RhdGUuc2l6ZXMuZG9tYWluKFtzdGF0ZS5zaXplcy5kb21haW4oKVswXSwgc3RhdGUuc2l6ZXMuZG9tYWluKClbMV0gPCBkLndlaWdodCA/IGQud2VpZ2h0IDogc3RhdGUuc2l6ZXMuZG9tYWluKClbMV1dKTtcbiAgICBkLnNpemUgPSBvZlNpemUoZCk7XG4gICAgZC5jb2xvciA9IGQzLnJnYihzdGF0ZS5jb2xvcnMoZC50by5wYWdlUGF0aC5uYW1lKSk7XG4gICAgaWYgKCFzdGF0ZS5oYXNoRnJvbS5oYXMoZC5mcm9tLnNvY2lhbE5ldHdvcmsubmFtZSkpIHtcbiAgICAgICAgZC5mcm9tLnNvY2lhbE5ldHdvcmsueCA9IDA7XG4gICAgICAgIGQuZnJvbS5zb2NpYWxOZXR3b3JrLnkgPSBNYXRoLnJhbmRvbSgpICogc2l6ZVsxXTtcbiAgICAgICAgc3RhdGUuaGFzaEZyb20uc2V0KGQuZnJvbS5zb2NpYWxOZXR3b3JrLm5hbWUsIGQuZnJvbS5zb2NpYWxOZXR3b3JrKTtcbiAgICB9XG4gICAgaWYgKCFzdGF0ZS5oYXNoVG8uaGFzKGQudG8ucGFnZVBhdGgubmFtZSkpIHtcbiAgICAgICAgZC50by5wYWdlUGF0aC54ID0gc2l6ZVswXTtcbiAgICAgICAgZC50by5wYWdlUGF0aC55ID0gTWF0aC5yYW5kb20oKSAqIHNpemVbMV07XG4gICAgICAgIHN0YXRlLmhhc2hUby5zZXQoZC50by5wYWdlUGF0aC5uYW1lLCBkLnRvLnBhZ2VQYXRoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGtleUhhc2goZCkge1xuICAgIHJldHVybiBkLmtleTtcbn1cblxuZnVuY3Rpb24gbGlYbChsaSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHZhbHVlT2YgOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciByZWN0ID0gbGkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgICByZXR1cm4gcmVjdC5yaWdodDtcbiAgICAgICAgfVxuICAgIH07XG59XG5cbmZ1bmN0aW9uIGxpWHIobGkpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB2YWx1ZU9mIDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgcmVjdCA9IGxpLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICAgICAgcmV0dXJuIHJlY3QubGVmdCAtIDE1O1xuICAgICAgICB9XG4gICAgfTtcbn1cblxuZnVuY3Rpb24gbGlZKGxpKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdmFsdWVPZiA6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgLy9saS5vZmZzZXRUb3AgKyBsaS5wYXJlbnROb2RlLm9mZnNldFRvcCArIGxpXG4gICAgICAgICAgICB2YXIgcmVjdCA9IGxpLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICAgICAgcmV0dXJuIChyZWN0LnRvcCArIHJlY3QuaGVpZ2h0KSAvIDI7XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG5mdW5jdGlvbiB1cGRhdGVQYXJlbnQodWksIGhhc2gpIHtcbiAgICB2YXIgbGlzID0gdWkuc2VsZWN0QWxsKCdsaScpXG4gICAgICAgIC5kYXRhKGhhc2guZW50cmllcygpLCBrZXlIYXNoKTtcblxuICAgIGxpcy5lbnRlcigpLmFwcGVuZCgnbGknKVxuICAgICAgICAudGV4dChrZXlIYXNoKVxuICAgICAgICAuZWFjaChmdW5jdGlvbihkKSB7XG4gICAgICAgICAgICBkID0gZC52YWx1ZTtcbiAgICAgICAgICAgIGQueCA9IGhhc2ggPT09IHN0YXRlLmhhc2hGcm9tID8gbGlYbCh0aGlzKSA6IGxpWHIodGhpcyk7XG4gICAgICAgICAgICBkLnkgPSBsaVkodGhpcyk7XG4gICAgICAgIH0pO1xufVxuXG5mdW5jdGlvbiByZWZyZXNoKGRhdGEpIHtcbiAgICBpZiAoIWRhdGEgfHwgIWRhdGEubGVuZ3RoKVxuICAgICAgICByZXR1cm47XG5cbiAgICB2YXIgbGIgPSBwcm9jZXNzb3IuYm91bmRzKClbMF0gfHwgZGF0YVswXS5kYXRlXG4gICAgICAgICwgcmIgPSBkYXRhLmxlbmd0aCA+IDEgPyBkYXRhLnNsaWNlKC0xKS5wb3AoKS5kYXRlIDogbGJcbiAgICAgICAgO1xuXG4gICAgZGF0YS5mb3JFYWNoKGluaXROb2RlKTtcblxuICAgIHBoeXNpY3Muc2l6ZShzaXplKTtcblxuICAgIHN0YXRlLmRhdGEgPSBzdGF0ZS5kYXRhIHx8IFtdLmNvbmNhdChkYXRhKTtcblxuICAgIHByb2Nlc3Nvci5ib3VuZHMoW2xiLCByYl0pO1xuXG4gICAgIXByb2Nlc3Nvci5Jc1J1bigpICYmIHByb2Nlc3Nvci5zdGFydCgpO1xuXG59XG5cbnVpLmJ1dHRvbnMucnVuLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgIHByb3ZpZGVyLnJlcG9ydHMuc29jaWFsKC8qdWlTZWxlY3RlZC5wcm9maWxlLmlkKi8nMTExJywgJzIwMTQtMDMtMDEnLCAnMjAxNC0wMy0zMCcsIGZ1bmN0aW9uKGVyciwgZGF0YSkge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICBsb2dFcnJvcihlcnIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVmcmVzaChkYXRhKTtcbiAgICB9KTtcbn0pO1xuXG5mdW5jdGlvbiBjbGlja1Byb2ZpbGUoZCkge1xuICAgIHVpU2VsZWN0ZWQucHJvZmlsZSA9IGQ7XG59XG5cbnByb2Nlc3Nvci5vbignc3RhcnQnLCBmdW5jdGlvbigpIHtcbiAgICBpZiAoIXJxSWQpIHJlbmRpbmcoKTtcbiAgICByZXNpemUoKTtcbn0pO1xuXG5wcm9jZXNzb3Iub24oJ3N0b3AnLCBmdW5jdGlvbigpIHtcblxufSk7XG5cbnByb2Nlc3Nvci5vbignZmluaXNoJywgZnVuY3Rpb24oKSB7XG5cbn0pO1xuXG5wcm9jZXNzb3Iub24oJ3RpY2snLCBmdW5jdGlvbihpdGVtcywgbCwgcikge1xuICAgIHVwZGF0ZVBhcmVudCh1aS5mcm9tLCBzdGF0ZS5oYXNoRnJvbSk7XG4gICAgdXBkYXRlUGFyZW50KHVpLnRvLCBzdGF0ZS5oYXNoVG8pO1xufSk7XG5cbnByb2Nlc3Nvci5vbignY2FsYycsIGZ1bmN0aW9uIChkKSB7XG4gICAgaWYgKCFwcm9jZXNzb3IuSXNSdW4oKSlcbiAgICAgICAgcmV0dXJuO1xuXG4gICAgcCA9IGQuZnJvbS5zb2NpYWxOZXR3b3JrO1xuXG4gICAgaWYgKGQuZml4ZWQpIHtcbiAgICAgICAgZC54ID0gK3AueDtcbiAgICAgICAgZC55ID0gK3AueTtcbiAgICB9XG5cbiAgICBkLmZpeGVkID0gZmFsc2U7XG5cbiAgICBkLnBhcmVudCA9IGQudG8ucGFnZVBhdGg7XG5cbiAgICBkLnZpc2libGUgPSBnZXRWaXNpYmxlKGQpO1xuXG4gICAgcGh5c2ljcyAmJiBwaHlzaWNzLm5vZGVzKHN0YXRlLmRhdGEuZmlsdGVyKGZpbHRlckNoaWxkKSkuc3RhcnQoKTtcbn0pO1xuXG5wcm9jZXNzb3Iub24oJ2NhbGNyaWdodGJvdW5kJywgZnVuY3Rpb24obCkge1xuICAgIHByb2Nlc3Nvci5sZWZ0Qm91bmQrKztcbn0pO1xuXG5wcm9jZXNzb3Iub24oJ2ZpbHRlcicsIGZ1bmN0aW9uKGwsIHIpIHtcbiAgICBwcm9jZXNzb3IuaXRlbXMgPSBzdGF0ZS5kYXRhLmZpbHRlcihmdW5jdGlvbihkKSB7XG4gICAgICAgIHJldHVybiBkLmRhdGUgPj0gbCAmJiBkLmRhdGUgPCByO1xuICAgIH0pO1xufSk7XG5cbmZ1bmN0aW9uIGdldFZpc2libGUoZCkge1xuICAgIHJldHVybiB0cnVlO1xufVxuXG5mdW5jdGlvbiBmaWx0ZXJDaGlsZChkKSB7XG4gICAgcmV0dXJuIGQudmlzaWJsZTtcbn1cblxuLyoqXG4gKiByQUYgJiBjQUZcbiAqL1xuKGZ1bmN0aW9uKCkge1xuICAgIHZhciBsYXN0VGltZSA9IDA7XG4gICAgdmFyIHZlbmRvcnMgPSBbJ21zJywgJ21veicsICd3ZWJraXQnLCAnbyddO1xuICAgIGZvcih2YXIgeCA9IDA7IHggPCB2ZW5kb3JzLmxlbmd0aCAmJiAhd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZTsgKyt4KSB7XG4gICAgICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgPSB3aW5kb3dbdmVuZG9yc1t4XSsnUmVxdWVzdEFuaW1hdGlvbkZyYW1lJ107XG4gICAgICAgIHdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZSA9XG4gICAgICAgICAgICB3aW5kb3dbdmVuZG9yc1t4XSsnQ2FuY2VsQW5pbWF0aW9uRnJhbWUnXSB8fCB3aW5kb3dbdmVuZG9yc1t4XSsnQ2FuY2VsUmVxdWVzdEFuaW1hdGlvbkZyYW1lJ107XG4gICAgfVxuXG4gICAgaWYgKCF3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKVxuICAgICAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lID0gZnVuY3Rpb24oY2FsbGJhY2svKiwgZWxlbWVudCovKSB7XG4gICAgICAgICAgICB2YXIgY3VyclRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICAgICAgICAgIHZhciB0aW1lVG9DYWxsID0gTWF0aC5tYXgoMCwgMTYgLSAoY3VyclRpbWUgLSBsYXN0VGltZSkpO1xuICAgICAgICAgICAgdmFyIGlkID0gd2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24oKSB7IGNhbGxiYWNrKGN1cnJUaW1lICsgdGltZVRvQ2FsbCk7IH0sXG4gICAgICAgICAgICAgICAgdGltZVRvQ2FsbCk7XG4gICAgICAgICAgICBsYXN0VGltZSA9IGN1cnJUaW1lICsgdGltZVRvQ2FsbDtcbiAgICAgICAgICAgIHJldHVybiBpZDtcbiAgICAgICAgfTtcblxuICAgIGlmICghd2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lKVxuICAgICAgICB3aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWUgPSBmdW5jdGlvbihpZCkge1xuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KGlkKTtcbiAgICAgICAgfTtcbn0pKCk7XG5cbnZhciB2YWxpZCA9IGZhbHNlXG4gICAgLCBycUlkXG4gICAgLCBjYW52YXMgPSBkMy5zZWxlY3QoXCIjY2FudmFzXCIpLmFwcGVuZCgnY2FudmFzJylcbiAgICAgICAgLnRleHQoXCJUaGlzIGJyb3dzZXIgZG9uJ3Qgc3VwcG9ydCBlbGVtZW50IHR5cGUgb2YgQ2FudmFzLlwiKVxuICAgICAgICAuYXR0cihcIndpZHRoXCIsIHNpemVbMF0pXG4gICAgICAgIC5hdHRyKFwiaGVpZ2h0XCIsIHNpemVbMV0pXG4gICAgICAgIC8vLmNhbGwoem9vbSlcbiAgICAgICAgLy8ub24oJ21vdXNlbW92ZS50b29sdGlwJywgbW92ZU1vdXNlKVxuICAgICAgICAubm9kZSgpXG4gICAgLCBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKVxuICAgIDtcblxuZnVuY3Rpb24gcmVuZGluZygpIHtcblxuICAgIHJxSWQgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUocmVuZGluZywgdW5kZWZpbmVkKTtcblxuICAgIHZhciBuID0gcGh5c2ljcy5ub2RlcygpO1xuXG4gICAgaWYgKCFjdHggfHwgdmFsaWQgfHwgIW4gfHwgIW4ubGVuZ3RoKVxuICAgICAgICByZXR1cm47XG5cbiAgICB2YWxpZCA9IHRydWU7XG5cbiAgICBjdHguc2F2ZSgpO1xuICAgIGN0eC5jbGVhclJlY3QoMCwgMCwgc2l6ZVswXSwgc2l6ZVsxXSk7XG5cbiAgICBjdHguZHJhd0ltYWdlKGdyYXBoaWMuZHJhdyhuKSwgMCwgMCk7XG4gICAgY3R4LnJlc3RvcmUoKTtcblxuICAgIHZhbGlkID0gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIHJlc2l6ZSgpIHtcbiAgICBzaXplID0gW1xuICAgICAgICB3aW5kb3cuaW5uZXJXaWR0aCxcbiAgICAgICAgd2luZG93LmlubmVySGVpZ2h0XG4gICAgXTtcblxuICAgIGNhbnZhcy53aWR0aCA9IHNpemVbMF07XG4gICAgY2FudmFzLmhlaWdodCA9IHNpemVbMV07XG5cbiAgICBncmFwaGljLnNpemUgPSBzaXplO1xuICAgIHBoeXNpY3Muc2l6ZShzaXplKTtcblxuICAgIHVpLmZyb20uc3R5bGUoJ2hlaWdodCcsIHNpemVbMV0pO1xuICAgIHVpLnRvLnN0eWxlKCdoZWlnaHQnLCBzaXplWzFdKTtcblxuICAgIHVwZGF0ZVBhcmVudCh1aS5mcm9tLCBzdGF0ZS5oYXNoRnJvbSk7XG4gICAgdXBkYXRlUGFyZW50KHVpLnRvLCBzdGF0ZS5oYXNoVG8pO1xufVxuXG5kMy5zZWxlY3Qod2luZG93KS5vbigncmVzaXplJywgcmVzaXplKTtcblxuXG5nYWFwaShzaW5nSW4pOyIsIi8qKlxyXG4gKiBGdW5jdGlvbiBtYWtlcyBhIG5vZGVcclxuICogQHBhcmFtIHRoYXRcclxuICogQHBhcmFtIG5hbWVcclxuICogQHBhcmFtIGRcclxuICogQHJldHVybnMge3t0eXBlOiAqLCBuYW1lOiAqLCBub2RlVmFsdWU6ICp9fVxyXG4gKiBAY29uc3RydWN0b3JcclxuICovXHJcbmZ1bmN0aW9uIE5vZGUodGhhdCwgbmFtZSwgZCkge1xyXG4gICAgdGhhdC5uYW1lID0gbmFtZTtcclxuICAgIHRoYXQubm9kZVZhbHVlID0gZDtcclxufVxyXG5cclxuZnVuY3Rpb24gRnJvbU5vZGUobmFtZSwgZCkge1xyXG4gICAgTm9kZSh0aGlzLCBuYW1lLCBkKTtcclxufVxyXG5cclxuZnVuY3Rpb24gVG9Ob2RlKG5hbWUsIGQpIHtcclxuICAgIE5vZGUodGhpcywgbmFtZSwgZCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIElQcm92aWRlcigpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgc2lnbkluIDogZnVuY3Rpb24oKSB7XHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICAsIHNpZ25PdXQgOiBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICAsIGdldEFjY291bnQgOiBmdW5jdGlvbiAoKSB7XHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICAsIGdldFByb3BlcnR5IDogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICB9XHJcbiAgICAgICAgLCBnZXRWaWV3IDogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICB9XHJcbiAgICAgICAgLCBwYXJzZSA6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gW107XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG5cclxudmFyIENMSUVOVF9JRCA9ICcxMjU4Njc2MzkyMjgtNTVzdnAwNm50YWZlOGIydWYyN203bGx2azJlcm5rM3MuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20nXHJcbiAgICAsIFNDT1BFUyA9ICdodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2FuYWx5dGljcy5yZWFkb25seSdcclxuICAgICwgTWF4UmVzdWx0cyA9IDEwMDAwMDAwMDBcclxuICAgIDtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oY2FsbGJhY2spIHtcclxuICAgIHZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcclxuICAgIHdpbmRvdy5MT0FERVJBUEkgPSBoYW5kbGVDbGllbnRMb2FkO1xyXG4gICAgc2NyaXB0LnNyYyA9IFwiaHR0cHM6Ly9hcGlzLmdvb2dsZS5jb20vanMvY2xpZW50LmpzP29ubG9hZD1MT0FERVJBUElcIjtcclxuICAgIHNjcmlwdC5vbmVycm9yID0gY29uc29sZS5sb2cuYmluZChjb25zb2xlLCAnZXJyb3InKTtcclxuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcclxuXHJcbiAgICBmdW5jdGlvbiBoYW5kbGVDbGllbnRMb2FkKCkge1xyXG4gICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKG5ldyBHQUNsaWVudChDTElFTlRfSUQpKTtcclxuICAgIH1cclxufTtcclxuXHJcbnZhciBHQUNsaWVudCA9IGZ1bmN0aW9uKGtleSkge1xyXG4gICAgR0FDbGllbnQuQ2xpZW50SWQgPSBrZXk7XHJcbn07XHJcblxyXG4oZnVuY3Rpb24ocHJvdG8pIHtcclxuICAgIHZhciBhY3Rpb25zID0ge31cclxuICAgICAgICA7XHJcblxyXG4gICAgZnVuY3Rpb24gaXNGbihhcmcpIHtcclxuICAgICAgICByZXR1cm4gYXJnICYmIHR5cGVvZiBhcmcgPT09ICdmdW5jdGlvbic7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZGlzcGF0Y2goYWN0aW9uKSB7XHJcbiAgICAgICAgaWYgKGFjdGlvbiA9PSAnJylcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIHZhciBhY3QgPSBhY3Rpb24udG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpO1xyXG4gICAgICAgIGlzRm4oYWN0aW9uc1thY3RdKSAmJlxyXG4gICAgICAgICAgICBhY3Rpb25zW2FjdF0uYXBwbHkoR0FDbGllbnQsIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSkpO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGVycm9yKG1zZykge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIG1lc3NhZ2UgOiBtc2dcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGhhbmRsZShhY3Rpb24sIHByb3ApIHtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgICAgICAgICB2YXIgZXJyID0gbnVsbDtcclxuICAgICAgICAgICAgaWYgKCFkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICBlcnIgPSBlcnJvcignZGF0YSBub3QgZm91bmQnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmIChkYXRhLmNvZGUpIHtcclxuICAgICAgICAgICAgICAgIGVyciA9IHtjb2RlOiBkYXRhLmNvZGUsIG1lc3NhZ2U6IGRhdGEubWVzc2FnZX07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAocHJvcCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKGRhdGFbcHJvcF0gJiYgZGF0YVtwcm9wXS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICAgICBkYXRhID0gZGF0YVtwcm9wXTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGVyciA9IGVycm9yKCdkYXRhIG5vdCBmb3VuZCcpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGRpc3BhdGNoKGFjdGlvbiwgZXJyLCBkYXRhKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gcmVwb3J0KGRpbSwgcHJvZmlsZUlkLCBkYXRlYmVnaW4sIGRhdGVlbmQsIGNhbGxiYWNrKSB7XHJcbiAgICAgICAgZ2FwaS5jbGllbnQuYW5hbHl0aWNzLmRhdGEuZ2EuZ2V0KHtcclxuICAgICAgICAgICAgaWRzOiAnZ2E6JyArIHByb2ZpbGVJZCxcclxuICAgICAgICAgICAgJ3N0YXJ0LWRhdGUnOiBkYXRlYmVnaW4sXHJcbiAgICAgICAgICAgICdlbmQtZGF0ZSc6IGRhdGVlbmQsXHJcbiAgICAgICAgICAgIG1ldHJpY3M6ICdnYTp2aXNpdG9ycyxnYTp0aW1lT25TaXRlJyxcclxuICAgICAgICAgICAgZGltZW5zaW9uczogZGltXHJcbiAgICAgICAgfSkuZXhlY3V0ZShjYWxsYmFjayk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdG8ub24gPSBmdW5jdGlvbihhY3Rpb24sIGNhbGxiYWNrKSB7XHJcbiAgICAgICAgaWYgKGFjdGlvbiA9PSAnJylcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIHZhciBhY3QgPSBhY3Rpb24udG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpO1xyXG5cclxuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA8IDIpXHJcbiAgICAgICAgICAgIHJldHVybiBhY3Rpb25zW2FjdF07XHJcbiAgICAgICAgYWN0aW9uc1thY3RdID0gY2FsbGJhY2s7XHJcbiAgICB9O1xyXG5cclxuICAgIHByb3RvLnNpZ25JbiA9IGZ1bmN0aW9uKGtleSkge1xyXG4gICAgICAgIGtleSA9IGtleSB8fCBHQUNsaWVudC5DbGllbnRJZDtcclxuICAgICAgICBpZiAoa2V5LmVycm9yKSB7XHJcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKFwiZ2EtYWNjZXNzX3Rva2VuXCIpO1xyXG4gICAgICAgICAgICBkaXNwYXRjaCgnc2lnbkluJywga2V5LmVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoa2V5LmFjY2Vzc190b2tlbikge1xyXG4gICAgICAgICAgICB2YXIgbm93ID0gRGF0ZS5ub3coKTtcclxuICAgICAgICAgICAgdmFyIG1zVG9BZGQgPSAocGFyc2VJbnQoa2V5LmV4cGlyZXNfaW4pIC0gMTAwKSAqIDEwMDA7XHJcbiAgICAgICAgICAgIGF0ID0ge307XHJcbiAgICAgICAgICAgIGF0LmV4cGlyYXRpb24gPSBub3cgKyBtc1RvQWRkO1xyXG4gICAgICAgICAgICBhdC5hY2Nlc3NfdG9rZW4gPSBrZXkuYWNjZXNzX3Rva2VuO1xyXG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImdhLWFjY2Vzc190b2tlblwiLCBhdCk7XHJcbiAgICAgICAgICAgIGRpc3BhdGNoKCdzaWduSW4nLCBudWxsKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGF0ID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJnYS1hY2Nlc3NfdG9rZW5cIik7XHJcblxyXG4gICAgICAgICAgICBnYXBpICYmIGdhcGkuYXV0aC5hdXRob3JpemUoe1xyXG4gICAgICAgICAgICAgICAgY2xpZW50X2lkOiBrZXksXHJcbiAgICAgICAgICAgICAgICBzY29wZTogU0NPUEVTLFxyXG4gICAgICAgICAgICAgICAgaW1tZWRpYXRlOiBhdCAmJiBhdC5leHBpcmF0aW9uID4gRGF0ZS5ub3coKVxyXG4gICAgICAgICAgICB9LCBwcm90by5zaWduSW4pO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgcHJvdG8uc2lnbk91dCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKFwiZ2EtYWNjZXNzX3Rva2VuXCIpO1xyXG4gICAgICAgIGRpc3BhdGNoKCdzaWdub3V0Jyk7XHJcbiAgICB9O1xyXG5cclxuICAgIHByb3RvLmFjY291bnRzID0ge1xyXG4gICAgICAgIGxpc3QgOiBmdW5jdGlvbihjYWxsYmFjaykge1xyXG4gICAgICAgICAgICB2YXIgYWN0ID0gJ2FjY291bnRzLmxpc3QnO1xyXG4gICAgICAgICAgICBwcm90by5vbihhY3QsIGNhbGxiYWNrKTtcclxuXHJcbiAgICAgICAgICAgIGdhcGkuY2xpZW50LmxvYWQoJ2FuYWx5dGljcycsICd2MycsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgZ2FwaS5jbGllbnQuYW5hbHl0aWNzXHJcbiAgICAgICAgICAgICAgICAgICAgLm1hbmFnZW1lbnRcclxuICAgICAgICAgICAgICAgICAgICAuYWNjb3VudHNcclxuICAgICAgICAgICAgICAgICAgICAubGlzdCgpXHJcbiAgICAgICAgICAgICAgICAgICAgLmV4ZWN1dGUoaGFuZGxlKGFjdCwgJ2l0ZW1zJykpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIHByb3RvLndlYnByb3BlcnRpZXMgPSB7XHJcbiAgICAgICAgbGlzdCA6IGZ1bmN0aW9uKGFjY291bnRJZCwgY2FsbGJhY2spIHtcclxuICAgICAgICAgICAgdmFyIGFjdCA9ICd3ZWJwcm9wZXJ0aWVzLmxpc3QnO1xyXG4gICAgICAgICAgICBwcm90by5vbihhY3QsIGNhbGxiYWNrKTtcclxuICAgICAgICAgICAgZ2FwaS5jbGllbnQuYW5hbHl0aWNzXHJcbiAgICAgICAgICAgICAgICAubWFuYWdlbWVudFxyXG4gICAgICAgICAgICAgICAgLndlYnByb3BlcnRpZXNcclxuICAgICAgICAgICAgICAgIC5saXN0KHsnYWNjb3VudElkJzogYWNjb3VudElkfSlcclxuICAgICAgICAgICAgICAgIC5leGVjdXRlKGhhbmRsZShhY3QsICdpdGVtcycpKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIHByb3RvLnByb2ZpbGVzID0ge1xyXG4gICAgICAgIGxpc3QgOiBmdW5jdGlvbihhY2NvdW50SWQsIHdlYlByb3BlcnR5SWQsIGNhbGxiYWNrKSB7XHJcbiAgICAgICAgICAgIHZhciBhY3QgPSAncHJvZmlsZXMubGlzdCc7XHJcbiAgICAgICAgICAgIHByb3RvLm9uKGFjdCwgY2FsbGJhY2spO1xyXG4gICAgICAgICAgICBnYXBpLmNsaWVudC5hbmFseXRpY3NcclxuICAgICAgICAgICAgICAgIC5tYW5hZ2VtZW50XHJcbiAgICAgICAgICAgICAgICAucHJvZmlsZXNcclxuICAgICAgICAgICAgICAgIC5saXN0KHtcclxuICAgICAgICAgICAgICAgICAgICBhY2NvdW50SWQ6IGFjY291bnRJZCxcclxuICAgICAgICAgICAgICAgICAgICB3ZWJQcm9wZXJ0eUlkOiB3ZWJQcm9wZXJ0eUlkXHJcbiAgICAgICAgICAgICAgICB9KS5leGVjdXRlKGhhbmRsZShhY3QsICdpdGVtcycpKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIHByb3RvLnJlcG9ydHMgPSB7XHJcbiAgICAgICAgc29jaWFsIDogZnVuY3Rpb24ocHJvZmlsZUlkLCBkYXRlYmVnaW4sIGRhdGVlbmQsIGNhbGxiYWNrKSB7XHJcbiAgICAgICAgICAgIHZhciBhY3QgPSAncmVwb3J0cy5zb2NpYWwnO1xyXG4gICAgICAgICAgICAvL3Byb3RvLm9uKGFjdCwgd3JhcHBlclBhcnNlcihwYXJzZXJTb2NpYWwsIGNhbGxiYWNrKSk7XHJcblxyXG4gICAgICAgICAgICB3cmFwcGVyUGFyc2VyKHBhcnNlclNvY2lhbCwgY2FsbGJhY2spKG51bGwsIHJlcXVpcmUoJy4vZGF0YScpKTtcclxuICAgICAgICAgICAgLypyZXBvcnQoJ2dhOmRhdGVIb3VyLGdhOmZ1bGxSZWZlcnJlcixnYTpzb3VyY2VNZWRpdW0sZ2E6YnJvd3NlcixnYTpjb3VudHJ5LGdhOnNvY2lhbE5ldHdvcmssZ2E6cGFnZVBhdGgnLFxyXG4gICAgICAgICAgICAgICAgcHJvZmlsZUlkLFxyXG4gICAgICAgICAgICAgICAgZGF0ZWJlZ2luLFxyXG4gICAgICAgICAgICAgICAgZGF0ZWVuZCxcclxuICAgICAgICAgICAgICAgIGhhbmRsZShhY3QpXHJcbiAgICAgICAgICAgICk7Ki9cclxuICAgICAgICB9LFxyXG4gICAgICAgIGdlbyA6IGZ1bmN0aW9uKGRhdGViZWdpbiwgZGF0ZWVuZCwgY2FsbGJhY2spIHtcclxuICAgICAgICAgICAgdmFyIGFjdCA9ICdyZXBvcnRzLmdlbyc7XHJcbiAgICAgICAgICAgIHByb3RvLm9uKGFjdCwgd3JhcHBlclBhcnNlcihwYXJzZXJTb2NpYWwsIGNhbGxiYWNrKSk7XHJcbiAgICAgICAgICAgIHJlcG9ydCgnZ2E6ZGF0ZUhvdXIsZ2E6ZnVsbFJlZmVycmVyLGdhOmNvdW50cnksZ2E6cGFnZVBhdGgsZ2E6Y2l0eSxnYTpsYXRpdHVkZSxnYTpsb25naXR1ZGUnLFxyXG4gICAgICAgICAgICAgICAgcHJvZmlsZUlkLFxyXG4gICAgICAgICAgICAgICAgZGF0ZWJlZ2luLFxyXG4gICAgICAgICAgICAgICAgZGF0ZWVuZCxcclxuICAgICAgICAgICAgICAgIGhhbmRsZShhY3QpXHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBmdW5jdGlvbiB3cmFwcGVyUGFyc2VyKHBhcnNlciwgY2FsbGJhY2spIHtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGVyciwgZGF0YSkge1xyXG4gICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhlcnIsIHBhcnNlcihkYXRhKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIHBhcnNlclNvY2lhbChkYXRhKSB7XHJcbiAgICAgICAgaWYgKCFkYXRhIHx8ICFkYXRhWzBdIHx8ICEoZGF0YSA9IGRhdGFbMF0ucmVzdWx0KSB8fCAhZGF0YS5yb3dzKVxyXG4gICAgICAgICAgICByZXR1cm4gW107XHJcblxyXG4gICAgICAgIHZhciByb3dzID0gZGF0YS5yb3dzXHJcbiAgICAgICAgICAgICwgbCA9IHJvd3MubGVuZ3RoXHJcbiAgICAgICAgICAgICwgZFxyXG4gICAgICAgICAgICAsIHJlcyA9IFtdXHJcbiAgICAgICAgICAgICwgZnJvbSA9IHt9XHJcbiAgICAgICAgICAgICwgdG8gPSB7fVxyXG4gICAgICAgICAgICA7XHJcblxyXG4gICAgICAgIHZhciBmciwgc20sIGIsIGMsIHNuO1xyXG5cclxuICAgICAgICB3aGlsZSgtLWwgPiAtMSkge1xyXG4gICAgICAgICAgICBkID0gcm93c1tsXTtcclxuICAgICAgICAgICAgZnIgPSBkWzFdO1xyXG4gICAgICAgICAgICBzbSA9IGRbMl07XHJcbiAgICAgICAgICAgIGIgPSBkWzNdO1xyXG4gICAgICAgICAgICBjID0gZFs0XTtcclxuICAgICAgICAgICAgc24gPSBkWzVdO1xyXG4gICAgICAgICAgICByZXMucHVzaCh7XHJcbiAgICAgICAgICAgICAgICBkYXRlIDogcGFyc2VJbnQoZFswXSlcclxuICAgICAgICAgICAgICAgICwgZnJvbSA6IHtcclxuICAgICAgICAgICAgICAgICAgICBmdWxsUmVmZXJyZXIgOiBmcm9tW2ZyXSB8fCAoZnJvbVtmcl0gPSBuZXcgRnJvbU5vZGUoZnIsIGZyKSlcclxuICAgICAgICAgICAgICAgICAgICAsIHNvdXJjZU1lZGl1bSAgOiBmcm9tW3NtXSB8fCAoZnJvbVtzbV0gPSBuZXcgRnJvbU5vZGUoc20sIHNtKSlcclxuICAgICAgICAgICAgICAgICAgICAsIGJyb3dzZXIgIDogZnJvbVtiXSB8fCAoZnJvbVtiXSA9IG5ldyBGcm9tTm9kZShiLCBiKSlcclxuICAgICAgICAgICAgICAgICAgICAsIGNvdW50cnkgIDogZnJvbVtjXSB8fCAoZnJvbVtjXSA9IG5ldyBGcm9tTm9kZShjLCBjKSlcclxuICAgICAgICAgICAgICAgICAgICAsIHNvY2lhbE5ldHdvcmsgIDogZnJvbVtzbl0gfHwgKGZyb21bc25dID0gbmV3IEZyb21Ob2RlKHNuLCBzbikpXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAsIHRvIDoge1xyXG4gICAgICAgICAgICAgICAgICAgIHBhZ2VQYXRoIDogdG9bZFs2XV0gfHwgKHRvW2RbNl1dID0gbmV3IFRvTm9kZShkWzZdLCBkWzZdKSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICwgYW1vdW50IDogcGFyc2VJbnQoZFs3XSlcclxuICAgICAgICAgICAgICAgICwgd2VpZ2h0IDogcGFyc2VGbG9hdChkWzhdKVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiByZXMucmV2ZXJzZSgpO1xyXG4gICAgfVxyXG59KShHQUNsaWVudC5wcm90b3R5cGUpO1xyXG4iLCJ2YXIgZDMgPSByZXF1aXJlKCdkMycpO1xyXG5cclxudmFyIG5lb25CYWxsQ2FjaGUgPSBkMy5tYXAoe30pO1xyXG5cclxudmFyIHJlbmRlciA9IHtcclxuICAgIHNpemUgOiBbNTAwLCA1MDBdXHJcbn07XHJcblxyXG52YXIgdHJhY2tDYW52YXNcclxuICAgICwgdHJhY2tDdHhcclxuICAgICwgYnVmQ2FudmFzXHJcbiAgICAsIGJ1ZkN0eFxyXG4gICAgO1xyXG5cclxucmVuZGVyLnJlc2V0ID0gZnVuY3Rpb24oKSB7XHJcbiAgICB0cmFja0NhbnZhcyA9XHJcbiAgICAgICAgdHJhY2tDdHggPVxyXG4gICAgICAgICAgICBidWZDYW52YXMgPVxyXG4gICAgICAgICAgICAgICAgYnVmQ3R4ID0gbnVsbFxyXG59O1xyXG5cclxuZnVuY3Rpb24gc29ydEJ5Q29sb3IoYSwgYikge1xyXG4gICAgcmV0dXJuIGQzLmFzY2VuZGluZyhiLmNvbG9yLCBhLmNvbG9yKTtcclxufVxyXG5cclxuZnVuY3Rpb24gc29ydEJ5T3BhY2l0eShhLCBiKSB7XHJcbiAgICByZXR1cm4gZDMuYXNjZW5kaW5nKGIub3BhY2l0eSwgYS5vcGFjaXR5KTtcclxufVxyXG5cclxuLyoqXHJcbiAqIERyYXcgdHJhY2tzIG9mIHBhcnRpY2xlc1xyXG4gKiBAcGFyYW0gbm9kZXNcclxuICogQHBhcmFtIGxhc3RFdmVudFxyXG4gKiBAcmV0dXJucyB7SFRNTENhbnZhc0VsZW1lbnR8bnVsbH1cclxuICovXHJcbmZ1bmN0aW9uIGRyYXdUcmFjayhub2RlcywgbGFzdEV2ZW50KSB7XHJcbiAgICBpZighbm9kZXMgfHwgIW5vZGVzLmxlbmd0aClcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuXHJcbiAgICBpZiAoIXRyYWNrQ3R4KSB7XHJcbiAgICAgICAgdHJhY2tDYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiY2FudmFzXCIpO1xyXG4gICAgICAgIHRyYWNrQ2FudmFzLndpZHRoID0gcmVuZGVyLnNpemVbMF07XHJcbiAgICAgICAgdHJhY2tDYW52YXMuaGVpZ2h0ID0gcmVuZGVyLnNpemVbMV07XHJcblxyXG4gICAgICAgIHRyYWNrQ3R4ID0gdHJhY2tDYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcclxuICAgICAgICB0cmFja0N0eC5saW5lSm9pbiA9IFwicm91bmRcIjtcclxuICAgICAgICB0cmFja0N0eC5saW5lV2lkdGggPSAxOy8vKHJhZGl1cyhucihkKSkgLyA0KSAgfHwgMTtcclxuICAgIH1cclxuXHJcbiAgICB0cmFja0N0eC5zYXZlKCk7XHJcblxyXG4gICAgdHJhY2tDdHguZ2xvYmFsQ29tcG9zaXRlT3BlcmF0aW9uID0gXCJkZXN0aW5hdGlvbi1vdXRcIjtcclxuXHJcbiAgICB0cmFja0N0eC5maWxsU3R5bGUgPSBcInJnYmEoMCwgMCwgMCwgLjIpXCI7XHJcbiAgICB0cmFja0N0eC5maWxsUmVjdCgwLCAwLCByZW5kZXIuc2l6ZVswXSwgcmVuZGVyLnNpemVbMV0pO1xyXG5cclxuICAgIHRyYWNrQ3R4Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbiA9ICdzb3VyY2Utb3Zlcic7XHJcblxyXG4gICAgdHJhY2tDdHgudHJhbnNsYXRlKGxhc3RFdmVudC50cmFuc2xhdGVbMF0sIGxhc3RFdmVudC50cmFuc2xhdGVbMV0pO1xyXG4gICAgdHJhY2tDdHguc2NhbGUobGFzdEV2ZW50LnNjYWxlLCBsYXN0RXZlbnQuc2NhbGUpO1xyXG5cclxuICAgIHZhciBkLCBsID0gbm9kZXMubGVuZ3RoLCBjdXJDb2xvciwgYyA9IG51bGw7XHJcblxyXG4gICAgdHJhY2tDdHguZmlsbFN0eWxlID0gXCJub25lXCI7XHJcblxyXG4gICAgd2hpbGUoLS1sID4gLTEpIHtcclxuICAgICAgICBkID0gbm9kZXNbbF07XHJcblxyXG4gICAgICAgIGN1ckNvbG9yID0gZ2V0U2VsZWN0ZWRDb2xvcihkKTtcclxuICAgICAgICBpZiAoIWMgfHwgY29tcGVyZUNvbG9yKGMsIGN1ckNvbG9yKSkge1xyXG4gICAgICAgICAgICBjID0gY3VyQ29sb3I7XHJcbiAgICAgICAgICAgIHRyYWNrQ3R4LnN0cm9rZVN0eWxlID0gYy50b1N0cmluZygpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKCFkLnBhdGhzKVxyXG4gICAgICAgICAgICBjb250aW51ZTtcclxuXHJcbiAgICAgICAgdHJhY2tDdHguYmVnaW5QYXRoKCk7XHJcblxyXG4gICAgICAgIHZhciBycyA9IGQucGF0aHMuc2xpY2UoMCkucmV2ZXJzZSgpXHJcbiAgICAgICAgICAgICwgcFxyXG4gICAgICAgICAgICA7XHJcblxyXG4gICAgICAgIGlmICghZC5mbGFzaCAmJiBkLnBhdGhzLmxlbmd0aCA8IHJlbmRlci5zZXR0aW5nLmxlbmd0aFRyYWNrKVxyXG4gICAgICAgICAgICBkLnBhdGhzID0gW107XHJcblxyXG4gICAgICAgIGlmIChkLnBhdGhzLmxlbmd0aCA+IHJlbmRlci5zZXR0aW5nLmxlbmd0aFRyYWNrKVxyXG4gICAgICAgICAgICBkLnBhdGhzLnNwbGljZSgwLCBkLmZsYXNoID8gcmVuZGVyLnNldHRpbmcubGVuZ3RoVHJhY2sgOiByZW5kZXIuc2V0dGluZy5sZW5ndGhUcmFjayArIDEpO1xyXG5cclxuICAgICAgICB0cmFja0N0eC5tb3ZlVG8oTWF0aC5mbG9vcihkLngpLCBNYXRoLmZsb29yKGQueSkpO1xyXG4gICAgICAgIGZvciAocCBpbiBycykge1xyXG4gICAgICAgICAgICBpZiAoIXJzLmhhc093blByb3BlcnR5KHApKVxyXG4gICAgICAgICAgICAgICAgY29udGludWU7XHJcblxyXG4gICAgICAgICAgICB0cmFja0N0eC5saW5lVG8oXHJcbiAgICAgICAgICAgICAgICBNYXRoLmZsb29yKHJzW3BdLngpLFxyXG4gICAgICAgICAgICAgICAgTWF0aC5mbG9vcihyc1twXS55KVxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0cmFja0N0eC5zdHJva2UoKTtcclxuXHJcbiAgICAgICAgZC5hbGl2ZSAmJiBkLnBhcmVudCAmJiAoZC5mbGFzaCB8fCBkLnBhdGhzLmxlbmd0aCA+IDEpICYmIGQucGF0aHMucHVzaCh7XHJcbiAgICAgICAgICAgIHggOiBkLngsXHJcbiAgICAgICAgICAgIHkgOiBkLnlcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICB0cmFja0N0eC5yZXN0b3JlKCk7XHJcbiAgICByZXR1cm4gdHJhY2tDYW52YXM7XHJcbn1cclxuXHJcbnJlbmRlci5kcmF3ID0gZnVuY3Rpb24obm9kZXMpIHtcclxuXHJcbiAgICBpZiAoIWJ1ZkN0eCkge1xyXG4gICAgICAgIGJ1ZkNhbnZhcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIik7XHJcblxyXG4gICAgICAgIGJ1ZkN0eCA9IGJ1ZkNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XHJcbiAgICAgICAgYnVmQ3R4Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbiA9ICdsaWdodGVyJztcclxuXHJcbiAgICAgICAgYnVmQ3R4LnRleHRBbGlnbiA9IFwiY2VudGVyXCI7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGJ1ZkNhbnZhcy53aWR0aCAhPT0gcmVuZGVyLnNpemVbMF0gfHwgYnVmQ2FudmFzLmhlaWdodCAhPT0gcmVuZGVyLnNpemVbMV0pIHtcclxuICAgICAgICBidWZDYW52YXMud2lkdGggPSByZW5kZXIuc2l6ZVswXTtcclxuICAgICAgICBidWZDYW52YXMuaGVpZ2h0ID0gcmVuZGVyLnNpemVbMV07XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIG5cclxuICAgICAgICAsIGNuXHJcbiAgICAgICAgLCBsXHJcbiAgICAgICAgLCBpXHJcbiAgICAgICAgLCBpbWdcclxuICAgICAgICAsIGRcclxuICAgICAgICAsIGNcclxuICAgICAgICAsIHhcclxuICAgICAgICAsIHlcclxuICAgICAgICAsIHNcclxuICAgICAgICAsIGN1cnJlbnRDYWNoZVxyXG4gICAgICAgICwgdHJhY2tzSW1nXHJcbiAgICAgICAgO1xyXG5cclxuICAgIGJ1ZkN0eC5zYXZlKCk7XHJcbiAgICBidWZDdHguY2xlYXJSZWN0KDAsIDAsIHJlbmRlci5zaXplWzBdLCByZW5kZXIuc2l6ZVsxXSk7XHJcblxyXG4gICAgLypjbiA9IChub2RlcyB8fCBbXSlcclxuICAgICAgICAuc29ydChzb3J0QnlPcGFjaXR5KVxyXG4gICAgICAgIC5zb3J0KHNvcnRCeUNvbG9yKTtcclxuXHJcbiAgICB0cmFja3NJbWcgPSBkcmF3VHJhY2soY24sIGxhc3RFdmVudCk7XHJcbiAgICB0cmFja3NJbWcgJiZcclxuICAgICAgICBidWZDdHguZHJhd0ltYWdlKHRyYWNrc0ltZywgMCwgMCwgcmVuZGVyLnNpemVbMF0sIHJlbmRlci5zaXplWzFdKTsqL1xyXG5cclxuICAgIC8qYnVmQ3R4LnRyYW5zbGF0ZShsYXN0RXZlbnQudHJhbnNsYXRlWzBdLCBsYXN0RXZlbnQudHJhbnNsYXRlWzFdKTtcclxuICAgIGJ1ZkN0eC5zY2FsZShsYXN0RXZlbnQuc2NhbGUsIGxhc3RFdmVudC5zY2FsZSk7Ki9cclxuXHJcbiAgICAvL2J1ZkN0eC5nbG9iYWxDb21wb3NpdGVPcGVyYXRpb24gPSAnc291cmNlLW92ZXInO1xyXG5cclxuICAgIGNuID0gY24gfHwgKG5vZGVzIHx8IFtdKVxyXG4gICAgICAgIC5zb3J0KHNvcnRCeU9wYWNpdHkpXHJcbiAgICAgICAgLnNvcnQoc29ydEJ5Q29sb3IpO1xyXG5cclxuICAgIGN1cnJlbnRDYWNoZSA9IG5lb25CYWxsQ2FjaGU7XHJcblxyXG4gICAgLyppZiAocmVuZGVyLnNldHRpbmcuY29tcG9zaXRlT3BlcmF0aW9uXHJcbiAgICAgICAgJiYgYnVmQ3R4Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbiAhPSByZW5kZXIuc2V0dGluZy5jb21wb3NpdGVPcGVyYXRpb24pXHJcbiAgICAgICAgYnVmQ3R4Lmdsb2JhbENvbXBvc2l0ZU9wZXJhdGlvbiA9IHJlbmRlci5zZXR0aW5nLmNvbXBvc2l0ZU9wZXJhdGlvbjsqL1xyXG5cclxuICAgIGwgPSBjbi5sZW5ndGg7XHJcbiAgICBjID0gbnVsbDtcclxuICAgIGkgPSAxMDA7XHJcblxyXG4gICAgYnVmQ3R4LnN0cm9rZVN0eWxlID0gJ25vbmUnO1xyXG4gICAgYnVmQ3R4Lmdsb2JhbEFscGhhID0gaSAqIC4wMTtcclxuXHJcbiAgICB3aGlsZSgtLWwgPiAtMSkge1xyXG4gICAgICAgIGQgPSBjbltsXTtcclxuXHJcbiAgICAgICAgaWYgKGkgIT0gZC5vcGFjaXR5KSB7XHJcbiAgICAgICAgICAgIGkgPSBkLm9wYWNpdHk7XHJcbiAgICAgICAgICAgIGJ1ZkN0eC5nbG9iYWxBbHBoYSA9IGkgKiAuMDE7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoIWMgfHwgZC5jb2xvci5yICE9IGMuciB8fCBkLmNvbG9yLmIgIT0gYy5iIHx8IGQuY29sb3IuZyAhPSBjLmcpIHtcclxuICAgICAgICAgICAgYyA9IGQuY29sb3I7XHJcblxyXG4gICAgICAgICAgICBidWZDdHguc3Ryb2tlU3R5bGUgPSBjLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgICAgIGltZyA9IGN1cnJlbnRDYWNoZS5nZXQoYnVmQ3R4LnN0cm9rZVN0eWxlKTtcclxuICAgICAgICAgICAgaWYgKCFpbWcpIHtcclxuICAgICAgICAgICAgICAgIGltZyA9IGdlbmVyYXRlTmVvbkJhbGwoNjQsIDY0LCBjLnIsIGMuZywgYy5iLCAxKTtcclxuICAgICAgICAgICAgICAgIGN1cnJlbnRDYWNoZS5zZXQoYnVmQ3R4LnN0cm9rZVN0eWxlLCBpbWcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB4ID0gTWF0aC5mbG9vcihkLngpO1xyXG4gICAgICAgIHkgPSBNYXRoLmZsb29yKGQueSk7XHJcbiAgICAgICAgcyA9IE1hdGguc3FydCgrZC5zaXplKSAqIDg7XHJcblxyXG4gICAgICAgIGJ1ZkN0eC5kcmF3SW1hZ2UoaW1nLCB4IC0gcyAvIDIsIHkgLSBzIC8gMiwgcywgcyk7XHJcbiAgICB9XHJcblxyXG4gICAgYnVmQ3R4LnJlc3RvcmUoKTtcclxuXHJcbiAgICByZXR1cm4gYnVmQ2FudmFzO1xyXG59O1xyXG5cclxuXHJcbnJlbmRlci5yZXNpemUgPSBmdW5jdGlvbihhcmcpIHtcclxuICAgIGlmKCFhcmd1bWVudHMubGVuZ3RoKVxyXG4gICAgICAgIHJldHVybiByZW5kZXIuc2l6ZTtcclxuICAgIHJlbmRlci5zaXplID0gYXJnO1xyXG5cclxuICAgIGlmIChidWZDYW52YXMpIHtcclxuICAgICAgICBidWZDYW52YXMud2lkdGggPSBhcmdbMF07XHJcbiAgICAgICAgYnVmQ2FudmFzLmhlaWdodCA9IGFyZ1sxXTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodHJhY2tDYW52YXMpIHtcclxuICAgICAgICB0cmFja0NhbnZhcy53aWR0aCA9IGFyZ1swXTtcclxuICAgICAgICB0cmFja0NhbnZhcy5oZWlnaHQgPSBhcmdbMV07XHJcbiAgICB9XHJcbn07XHJcblxyXG4vKipcclxuICogR2VuZXJhdGUgYSBuZW9uIGJhbGxcclxuICogQHBhcmFtIHtOdW1iZXJ9IHcgd2lkdGhcclxuICogQHBhcmFtIHtOdW1iZXJ9IGggaGVpZ2h0XHJcbiAqIEBwYXJhbSB7TnVtYmVyfSByIHJlZFxyXG4gKiBAcGFyYW0ge051bWJlcn0gZyBncmVlblxyXG4gKiBAcGFyYW0ge051bWJlcn0gYiBibHVlXHJcbiAqIEBwYXJhbSB7TnVtYmVyfSBhIGFscGhhXHJcbiAqIEByZXR1cm5zIHtIVE1MQ2FudmFzRWxlbWVudH1cclxuICovXHJcbmZ1bmN0aW9uIGdlbmVyYXRlTmVvbkJhbGwodywgaCwgciwgZywgYiwgYSkge1xyXG5cclxuICAgIHZhciB0ZW1wQ2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKTtcclxuXHJcbiAgICB0ZW1wQ2FudmFzLndpZHRoID0gdztcclxuICAgIHRlbXBDYW52YXMuaGVpZ2h0ID0gaDtcclxuXHJcbiAgICB2YXIgaW1nQ3R4ID0gdGVtcENhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XHJcbiAgICB2YXIgZ3JhZGllbnQgPSBpbWdDdHguY3JlYXRlUmFkaWFsR3JhZGllbnQoIHcvMiwgaC8yLCAwLCB3LzIsIGgvMiwgdy8yICk7XHJcblxyXG4gICAgZ3JhZGllbnQuYWRkQ29sb3JTdG9wKCAwLCAncmdiYSgyNTUsMjU1LDI1NSwnICsgYSArICcpJyApO1xyXG4gICAgZ3JhZGllbnQuYWRkQ29sb3JTdG9wKCAwLjMsICdyZ2JhKCcgKyBbciwgZywgYiwgYSAqIC41XSArICcpJyApO1xyXG4gICAgZ3JhZGllbnQuYWRkQ29sb3JTdG9wKCAxLCAncmdiYSgnICsgW3IsIGcsIGIsIDBdICsgJyknICk7IC8vMCwwLDY0XHJcblxyXG4gICAgaW1nQ3R4LmZpbGxTdHlsZSA9IGdyYWRpZW50O1xyXG4gICAgaW1nQ3R4LmZpbGxSZWN0KCAwLCAwLCB3LCBoKTtcclxuXHJcbiAgICByZXR1cm4gdGVtcENhbnZhcztcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByZW5kZXI7IiwidmFyIGQzID0gcmVxdWlyZSgnZDMnKTtcclxuXHJcbnZhciBzaXplID0gWzEwMCwgMTAwXVxyXG4gICAgLCBmb3JjZUNoaWxkID0gZDMubGF5b3V0LmZvcmNlKClcclxuICAgICAgICAuc3RvcCgpXHJcbiAgICAgICAgLnNpemUoc2l6ZSlcclxuICAgICAgICAuZnJpY3Rpb24oLjc1KVxyXG4gICAgICAgIC5ncmF2aXR5KDApXHJcbiAgICAgICAgLmNoYXJnZShmdW5jdGlvbihkKSB7IHJldHVybiAtZC5zaXplICogLjA2NDsgfSlcclxuICAgICAgICAub24oXCJ0aWNrXCIsIHRpY2spXHJcbiAgICAgICAgLm5vZGVzKFtdKVxyXG4gICAgO1xyXG5cclxuZnVuY3Rpb24gdGljaygpIHtcclxuICAgIGlmIChmb3JjZUNoaWxkLm5vZGVzKCkpIHtcclxuICAgICAgICBmb3JjZUNoaWxkLm5vZGVzKClcclxuICAgICAgICAgICAgLmZvckVhY2goY2x1c3RlcigwLjAyNSkpO1xyXG4gICAgfVxyXG4gICAgZm9yY2VDaGlsZC5yZXN1bWUoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gY2x1c3RlcihhbHBoYSkge1xyXG5cclxuICAgIHJldHVybiBmdW5jdGlvbihkKSB7XHJcbiAgICAgICAgaWYgKCFkLnBhcmVudCB8fCAhZC52aXNpYmxlKVxyXG4gICAgICAgICAgICByZXR1cm47XHJcblxyXG4gICAgICAgIHZhciBub2RlID0gZC5wYXJlbnRcclxuICAgICAgICAgICAgLCBsXHJcbiAgICAgICAgICAgICwgclxyXG4gICAgICAgICAgICAsIHhcclxuICAgICAgICAgICAgLCB5XHJcbiAgICAgICAgICAgIDtcclxuXHJcbiAgICAgICAgaWYgKG5vZGUgPT0gZCkgcmV0dXJuO1xyXG5cclxuICAgICAgICB4ID0gZC54IC0gbm9kZS54O1xyXG4gICAgICAgIHkgPSBkLnkgLSBub2RlLnk7XHJcbiAgICAgICAgbCA9IE1hdGguc3FydCh4ICogeCArIHkgKiB5KTtcclxuICAgICAgICByID0gK2Quc2l6ZSAqIC4wNjQ7XHJcbiAgICAgICAgaWYgKGwgIT0gcikge1xyXG4gICAgICAgICAgICBsID0gKGwgLSByKSAvIChsIHx8IDEpICogKGFscGhhIHx8IDEpO1xyXG4gICAgICAgICAgICB4ICo9IGw7XHJcbiAgICAgICAgICAgIHkgKj0gbDtcclxuXHJcbiAgICAgICAgICAgIGQueCAtPSB4O1xyXG4gICAgICAgICAgICBkLnkgLT0geTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGZvcmNlQ2hpbGQ7XHJcblxyXG4iLCJ2YXIgZDMgPSByZXF1aXJlKCdkMycpO1xyXG5jb25zdCBkZWxheSA9IDEwMDA7XHJcblxyXG5mdW5jdGlvbiBhc3luY0ZvckVhY2goaXRlbXMsIGZuLCB0aW1lKSB7XHJcbiAgICBpZiAoIShpdGVtcyBpbnN0YW5jZW9mIEFycmF5KSlcclxuICAgICAgICByZXR1cm47XHJcblxyXG4gICAgdmFyIHdvcmtBcnIgPSBpdGVtcy5jb25jYXQoKTtcclxuXHJcbiAgICAoZnVuY3Rpb24gbG9vcCgpIHtcclxuICAgICAgICBpZiAod29ya0Fyci5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIGZuKHdvcmtBcnIucG9wKCksIHdvcmtBcnIpO1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KGxvb3AsIHRpbWUgfHwgMTApO1xyXG4gICAgICAgIH1cclxuICAgIH0pKCk7XHJcbn1cclxuXHJcbnZhciBwYXVzZVxyXG4gICAgLCBzdG9wXHJcbiAgICAsIHdvcmtlclxyXG4gICAgLCB0ZW1wVGltZW91dFxyXG4gICAgO1xyXG5cclxudmFyIHByb2Nlc3NvciA9IHtcclxuICAgIGtpbGxXb3JrZXIgOiBraWxsV29ya2VyXHJcbn07XHJcblxyXG52YXIgZGlzcGF0Y2ggPSBkMy5kaXNwYXRjaChcInN0YXJ0XCIsICdzdG9wJywgJ2ZpbmlzaCcsICd0aWNrJywgJ2NhbGMnLCAnZXJyb3InLCAnZmlsdGVyJywgJ2NhbGNyaWdodGJvdW5kJyk7XHJcblxyXG5mdW5jdGlvbiBraWxsV29ya2VyKCkge1xyXG4gICAgaWYgKHdvcmtlcikge1xyXG4gICAgICAgIGNsZWFySW50ZXJ2YWwod29ya2VyKTtcclxuICAgICAgICB3b3JrZXIgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICh0ZW1wVGltZW91dCkge1xyXG4gICAgICAgIGNsZWFyVGltZW91dCh0ZW1wVGltZW91dCk7XHJcbiAgICAgICAgdGVtcFRpbWVvdXQgPSBudWxsO1xyXG4gICAgfVxyXG59XHJcblxyXG52YXIgYm91bmRSYW5nZSA9IFswLCAwXTtcclxucHJvY2Vzc29yLmJvdW5kcyA9IGZ1bmN0aW9uKGJvdW5kcykge1xyXG4gICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoIHx8ICEoYm91bmRzIGluc3RhbmNlb2YgQXJyYXkpKVxyXG4gICAgICAgIHJldHVybiBib3VuZFJhbmdlO1xyXG4gICAgYm91bmRSYW5nZSA9IGJvdW5kcztcclxuICAgIHJldHVybiBwcm9jZXNzb3I7XHJcbn07XHJcblxyXG5mdW5jdGlvbiBsb29wKCkge1xyXG5cclxuICAgIGlmICh0ZW1wVGltZW91dCkge1xyXG4gICAgICAgIGNsZWFyVGltZW91dCh0ZW1wVGltZW91dCk7XHJcbiAgICAgICAgdGVtcFRpbWVvdXQgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChzdG9wKSB7XHJcbiAgICAgICAga2lsbFdvcmtlcigpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBpZiAocGF1c2UpXHJcbiAgICAgICAgcmV0dXJuO1xyXG5cclxuICAgIHZhciBkbCwgZHI7XHJcblxyXG4gICAgZGwgPSBwcm9jZXNzb3IubGVmdEJvdW5kID0gYm91bmRSYW5nZVswXTtcclxuICAgIGRpc3BhdGNoLmNhbGNyaWdodGJvdW5kLmNhbGwocHJvY2Vzc29yLCBkbCk7XHJcbiAgICBkciA9IGJvdW5kUmFuZ2VbMF0gPSBwcm9jZXNzb3IubGVmdEJvdW5kO1xyXG5cclxuICAgIGRpc3BhdGNoLmZpbHRlci5jYWxsKHByb2Nlc3NvciwgZGwsIGRyKTtcclxuXHJcbiAgICB2YXIgdmlzVHVybiA9IHByb2Nlc3Nvci5pdGVtcztcclxuXHJcbiAgICB2aXNUdXJuICYmIHZpc1R1cm4ubGVuZ3RoICYmIGFzeW5jRm9yRWFjaCh2aXNUdXJuLCBkaXNwYXRjaC5jYWxjLCBkZWxheSAvICh2aXNUdXJuLmxlbmd0aCB8fCBkZWxheSkpO1xyXG5cclxuICAgIGRpc3BhdGNoLnRpY2suY2FsbChwcm9jZXNzb3IsIHZpc1R1cm4sIGRsLCBkcik7XHJcblxyXG4gICAgaWYgKGRsID4gYm91bmRSYW5nZVsxXSkge1xyXG4gICAgICAgIGtpbGxXb3JrZXIoKTtcclxuICAgICAgICBkaXNwYXRjaC5maW5pc2guY2FsbChwcm9jZXNzb3IsIGRsLCBkcik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGlmICghdmlzVHVybiB8fCAhdmlzVHVybi5sZW5ndGgpIHtcclxuICAgICAgICAgICAgLy9sb29wKCk7XHJcbiAgICAgICAgICAgIHRlbXBUaW1lb3V0ID0gc2V0VGltZW91dChsb29wLCAxKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbnByb2Nlc3Nvci5zdGFydCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgc3RvcCA9IHBhdXNlID0gZmFsc2U7XHJcbiAgICBraWxsV29ya2VyKCk7XHJcblxyXG4gICAgZGlzcGF0Y2guc3RhcnQuY2FsbChwcm9jZXNzb3IpO1xyXG5cclxuICAgIHdvcmtlciA9IHNldEludGVydmFsKGxvb3AsIGRlbGF5KTtcclxuICAgIHJldHVybiBwcm9jZXNzb3I7XHJcbn07XHJcblxyXG5wcm9jZXNzb3IucGF1c2UgPSBmdW5jdGlvbigpIHtcclxuICAgIHBhdXNlID0gdHJ1ZTtcclxuICAgIHJldHVybiBwcm9jZXNzb3I7XHJcbn07XHJcblxyXG5wcm9jZXNzb3Iuc3RvcCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgc3RvcCA9IHRydWU7XHJcbiAgICBraWxsV29ya2VyKCk7XHJcbiAgICBkaXNwYXRjaC5zdG9wLmNhbGwocHJvY2Vzc29yKTtcclxuICAgIHJldHVybiBwcm9jZXNzb3I7XHJcbn07XHJcblxyXG5wcm9jZXNzb3IucmVzdW1lID0gZnVuY3Rpb24oKSB7XHJcbiAgICBwYXVzZSA9IGZhbHNlO1xyXG4gICAgcmV0dXJuIHByb2Nlc3NvcjtcclxufTtcclxuXHJcbi8qKlxyXG4gKiBDaGVjayB0aGF0IHByb2Nlc3MgaXMgcGF1c2VkXHJcbiAqIEByZXR1cm5zIHtib29sZWFufVxyXG4gKi9cclxucHJvY2Vzc29yLklzUGF1c2VkID0gZnVuY3Rpb24oKSB7XHJcbiAgICByZXR1cm4gd29ya2VyICYmIHBhdXNlICYmICFzdG9wO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIENoZWNrIHRoYXQgcHJvY2VzcyBpcyBydW5uaW5nXHJcbiAqIEByZXR1cm5zIHtib29sZWFufVxyXG4gKi9cclxucHJvY2Vzc29yLklzUnVuID0gZnVuY3Rpb24oKSB7XHJcbiAgICByZXR1cm4gISF3b3JrZXI7XHJcbn07XHJcblxyXG5kMy5yZWJpbmQocHJvY2Vzc29yLCBkaXNwYXRjaCwgJ29uJyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHByb2Nlc3NvcjtcclxuIl19
